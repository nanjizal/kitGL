<!-- This file can be parsed by haxe.rtti.XmlParser -->
<haxe>
	<abstract path="Any" params="" file="/usr/local/lib/haxe/std/Any.hx">
		<from><icast field="__cast"><c path="__cast.T"/></icast></from>
		<this><d/></this>
		<to><icast field="__promote"><c path="__promote.T"/></icast></to>
		<haxe_doc>`Any` is a type that is compatible with any other in both ways.

	This means that a value of any type can be assigned to `Any`, and
	vice-versa, a value of `Any` type can be assigned to any other type.

	It's a more type-safe alternative to `Dynamic`, because it doesn't
	support field access or operators and it's bound to monomorphs. So,
	to work with the actual value, it needs to be explicitly promoted
	to another type.</haxe_doc>
		<impl><class path="_Any.Any_Impl_" params="" file="/usr/local/lib/haxe/std/Any.hx" private="1" module="Any" final="1">
	<__promote params="T" get="inline" set="null" line="35" static="1">
		<f a="this">
			<d/>
			<c path="__promote.T"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":to"/>
		</meta>
	</__promote>
	<__cast params="T" get="inline" set="null" line="38" static="1">
		<f a="value">
			<c path="__cast.T"/>
			<x path="Any"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":from"/>
		</meta>
	</__cast>
	<toString get="inline" set="null" line="41" static="1">
		<f a="this">
			<d/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</toString>
	<meta><m n=":keep"/></meta>
</class></impl>
	</abstract>
	<class path="_Any.Any_Impl_" params="" file="/usr/local/lib/haxe/std/Any.hx" private="1" module="Any" final="1">
		<__promote params="T" get="inline" set="null" line="35" static="1">
			<f a="this">
				<d/>
				<c path="__promote.T"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":to"/>
			</meta>
		</__promote>
		<__cast params="T" get="inline" set="null" line="38" static="1">
			<f a="value">
				<c path="__cast.T"/>
				<x path="Any"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":from"/>
			</meta>
		</__cast>
		<toString get="inline" set="null" line="41" static="1">
			<f a="this">
				<d/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</toString>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="Array" params="T" file="/usr/local/lib/haxe/std/Array.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` Array.</haxe_doc>
		</length>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns a new Array by appending the elements of `a` to the elements of
		`this` Array.

		This operation does not modify `this` Array.

		If `a` is the empty Array `[]`, a copy of `this` Array is returned.

		The length of the returned Array is equal to the sum of `this.length`
		and `a.length`.

		If `a` is `null`, the result is unspecified.</haxe_doc>
		</concat>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string representation of `this` Array, with `sep` separating
		each element.

		The result of this operation is equal to `Std.string(this[0]) + sep +
		Std.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`

		If `this` is the empty Array `[]`, the result is the empty String `""`.
		If `this` has exactly one element, the result is equal to a call to
		`Std.string(this[0])`.

		If `sep` is null, the result is unspecified.</haxe_doc>
		</join>
		<pop public="1" set="method">
			<f a=""><x path="Null"><c path="Array.T"/></x></f>
			<haxe_doc>Removes the last element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this.length` will decrease by 1.

		If `this` is the empty Array `[]`, null is returned and the length
		remains 0.</haxe_doc>
		</pop>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Adds the element `x` at the end of `this` Array and returns the new
		length of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<reverse public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[Reverse the order of elements of `this` Array.

		This operation modifies `this` Array in place.

		If `this.length < 2`, `this` remains unchanged.]]></haxe_doc>
		</reverse>
		<shift public="1" set="method">
			<f a=""><x path="Null"><c path="Array.T"/></x></f>
			<haxe_doc>Removes the first element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this`.length and the index of each
		remaining element is decreased by 1.

		If `this` is the empty Array `[]`, `null` is returned and the length
		remains 0.</haxe_doc>
		</shift>
		<slice public="1" set="method">
			<f a="pos:?end">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Creates a shallow copy of the range of `this` Array, starting at and
		including `pos`, up to but not including `end`.

		This operation does not modify `this` Array.

		The elements are not copied and retain their identity.

		If `end` is omitted or exceeds `this.length`, it defaults to the end of
		`this` Array.

		If `pos` or `end` are negative, their offsets are calculated from the
		end of `this` Array by `this.length + pos` and `this.length + end`
		respectively. If this yields a negative value, 0 is used instead.

		If `pos` exceeds `this.length` or if `end` is less than or equals
		`pos`, the result is `[]`.</haxe_doc>
		</slice>
		<sort public="1" set="method">
			<f a="f">
				<f a=":">
					<c path="Array.T"/>
					<c path="Array.T"/>
					<x path="Int"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[Sorts `this` Array according to the comparison function `f`, where
		`f(x,y)` returns 0 if x == y, a positive Int if x > y and a
		negative Int if x < y.

		This operation modifies `this` Array in place.

		The sort operation is not guaranteed to be stable, which means that the
		order of equal elements may not be retained. For a stable Array sorting
		algorithm, `haxe.ds.ArraySort.sort()` can be used instead.

		If `f` is null, the result is unspecified.]]></haxe_doc>
		</sort>
		<splice public="1" set="method">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc><![CDATA[Removes `len` elements from `this` Array, starting at and including
		`pos`, an returns them.

		This operation modifies `this` Array in place.

		If `len` is < 0 or `pos` exceeds `this`.length, an empty Array [] is
		returned and `this` Array is unchanged.

		If `pos` is negative, its value is calculated from the end	of `this`
		Array by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the sum of the resulting values for `len` and `pos` exceed
		`this.length`, this operation will affect the elements from `pos` to the
		end of `this` Array.

		The length of the returned Array is equal to the new length of `this`
		Array subtracted from the original length of `this` Array. In other
		words, each element of the original `this` Array either remains in
		`this` Array or becomes an element of the returned Array.]]></haxe_doc>
		</splice>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Array.

		The result will include the individual elements' String representations
		separated by comma. The enclosing [ ] may be missing on some platforms,
		use `Std.string()` to get a String representation that is consistent
		across platforms.</haxe_doc>
		</toString>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds the element `x` at the start of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` and the index of each Array element increases by 1.</haxe_doc>
		</unshift>
		<insert public="1" set="method">
			<f a="pos:x">
				<x path="Int"/>
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Inserts the element `x` at the position `pos`.

		This operation modifies `this` Array in place.

		The offset is calculated like so:

		- If `pos` exceeds `this.length`, the offset is `this.length`.
		- If `pos` is negative, the offset is calculated from the end of `this`
		  Array, i.e. `this.length + pos`. If this yields a negative value, the
		  offset is 0.
		- Otherwise, the offset is `pos`.

		If the resulting offset does not exceed `this.length`, all elements from
		and including that offset to the end of `this` Array are moved one index
		ahead.</haxe_doc>
		</insert>
		<remove public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the first occurrence of `x` in `this` Array.

		This operation modifies `this` Array in place.

		If `x` is found by checking standard equality, it is removed from `this`
		Array and all following elements are reindexed accordingly. The function
		then returns true.

		If `x` is not found, `this` Array is not changed and the function
		returns false.</haxe_doc>
		</remove>
		<contains public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether `this` Array contains `x`.

		If `x` is found by checking standard equality, the function returns `true`, otherwise
		the function returns `false`.</haxe_doc>
		</contains>
		<indexOf public="1" set="method">
			<f a="x:?fromIndex">
				<c path="Array.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns position of the first occurrence of `x` in `this` Array, searching front to back.

		If `x` is found by checking standard equality, the function returns its index.

		If `x` is not found, the function returns -1.

		If `fromIndex` is specified, it will be used as the starting index to search from,
		otherwise search starts with zero index. If it is negative, it will be taken as the
		offset from the end of `this` Array to compute the starting index. If given or computed
		starting index is less than 0, the whole array will be searched, if it is greater than
		or equal to the length of `this` Array, the function returns -1.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="x:?fromIndex">
				<c path="Array.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns position of the last occurrence of `x` in `this` Array, searching back to front.

		If `x` is found by checking standard equality, the function returns its index.

		If `x` is not found, the function returns -1.

		If `fromIndex` is specified, it will be used as the starting index to search from,
		otherwise search starts with the last element index. If it is negative, it will be
		taken as the offset from the end of `this` Array to compute the starting index. If
		given or computed starting index is greater than or equal to the length of `this` Array,
		the whole array will be searched, if it is less than 0, the function returns -1.</haxe_doc>
		</lastIndexOf>
		<copy public="1" set="method">
			<f a=""><c path="Array"><c path="Array.T"/></c></f>
			<haxe_doc>Returns a shallow copy of `this` Array.

		The elements are not copied and retain their identity, so
		`a[i] == a.copy()[i]` is true for any valid `i`. However,
		`a == a.copy()` is always false.</haxe_doc>
		</copy>
		<iterator public="1" get="inline" set="null" line="280">
			<f a=""><c path="haxe.iterators.ArrayIterator"><c path="Array.T"/></c></f>
			<meta><m n=":runtime"/></meta>
			<haxe_doc>Returns an iterator of the Array values.</haxe_doc>
		</iterator>
		<keyValueIterator public="1" get="inline" set="null" line="287">
			<f a=""><c path="haxe.iterators.ArrayKeyValueIterator"><c path="Array.T"/></c></f>
			<meta><m n=":runtime"/></meta>
			<haxe_doc>Returns an iterator of the Array indices and values.</haxe_doc>
		</keyValueIterator>
		<map public="1" params="S" get="inline" set="null" line="298">
			<f a="f">
				<f a="">
					<c path="Array.T"/>
					<c path="map.S"/>
				</f>
				<c path="Array"><c path="map.S"/></c>
			</f>
			<meta><m n=":runtime"/></meta>
			<haxe_doc>Creates a new Array by applying function `f` to all elements of `this`.

		The order of elements is preserved.

		If `f` is null, the result is unspecified.</haxe_doc>
		</map>
		<filter public="1" get="inline" set="null" line="316">
			<f a="f">
				<f a="">
					<c path="Array.T"/>
					<x path="Bool"/>
				</f>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<meta><m n=":runtime"/></meta>
			<haxe_doc>Returns an Array containing those elements of `this` for which `f`
		returned true.

		The individual elements are not duplicated and retain their identity.

		If `f` is null, the result is unspecified.</haxe_doc>
		</filter>
		<resize public="1" set="method">
			<f a="len">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Set the length of the Array.

		If `len` is shorter than the array's current size, the last
		`length - len` elements will be removed. If `len` is longer, the Array
		will be extended, with new elements set to a target-specific default
		value:

		- always null on dynamic targets
		- 0, 0.0 or false for Int, Float and Bool respectively on static targets
		- null for other types on static targets</haxe_doc>
		</resize>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Array.</haxe_doc>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="Class" params="T" file="/usr/local/lib/haxe/std/Class.hx">
		<this><x path="Class"><c path="Class.T"/></x></this>
		<haxe_doc>An abstract type that represents a Class.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-class-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="Date" params="" file="/usr/local/lib/haxe/std/cpp/_std/Date.hx">
		<fromTime public="1" set="method" line="105" static="1">
			<f a="t">
				<x path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Creates a Date from the timestamp (in milliseconds) `t`.</haxe_doc>
		</fromTime>
		<fromString public="1" set="method" line="111" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Creates a Date from the formatted string `s`. The following formats are
		accepted by the function:

		- `"YYYY-MM-DD hh:mm:ss"`
		- `"YYYY-MM-DD"`
		- `"hh:mm:ss"`

		The first two formats expressed a date in local time. The third is a time
		relative to the UTC epoch.</haxe_doc>
		</fromString>
		<mSeconds><x path="Float"/></mSeconds>
		<getTime public="1" set="method" line="29">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the timestamp (in milliseconds) of `this` date.
		On cpp and neko, this function only has a second resolution, so the
		result will always be a multiple of `1000.0`, e.g. `1454698271000.0`.
		To obtain the current timestamp with better precision on cpp and neko,
		see the `Sys.time` API.

		For measuring time differences with millisecond accuracy on
		all platforms, see `haxe.Timer.stamp`.</haxe_doc>
		</getTime>
		<toString public="1" set="method" line="93">
			<f a=""><c path="String"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a string representation of `this` Date in the local timezone
		using the standard format `YYYY-MM-DD HH:MM:SS`. See `DateTools.format` for
		other formatting rules.</haxe_doc>
		</toString>
		<new public="1" set="method" line="25">
			<f a="year:month:day:hour:min:sec">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates a new date object from the given arguments.

		The behaviour of a Date instance is only consistent across platforms if
		the the arguments describe a valid date.

		- month: 0 to 11 (note that this is zero-based)
		- day: 1 to 31
		- hour: 0 to 23
		- min: 0 to 59
		- sec: 0 to 59</haxe_doc>
		</new>
		<haxe_doc>The Date class provides a basic structure for date and time related
	information. Date instances can be created by

	- `new Date()` for a specific date,
	- `Date.now()` to obtain information about the current time,
	- `Date.fromTime()` with a given timestamp or
	- `Date.fromString()` by parsing from a String.

	There are some extra functions available in the `DateTools` class.

	In the context of Haxe dates, a timestamp is defined as the number of
	milliseconds elapsed since 1st January 1970 UTC.

	## Supported range

	Due to platform limitations, only dates in the range 1970 through 2038 are
	supported consistently. Some targets may support dates outside this range,
	depending on the OS at runtime. The `Date.fromTime` method will not work with
	timestamps outside the range on any target.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="EReg" params="" file="/usr/local/lib/haxe/std/cpp/_std/EReg.hx">
		<_hx_regexp_new_options set="method" static="1">
			<f a="s:options">
				<c path="String"/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_regexp_new_options"</e></m></meta>
		</_hx_regexp_new_options>
		<_hx_regexp_match set="method" static="1">
			<f a="handler:string:pos:len">
				<d/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_regexp_match"</e></m></meta>
		</_hx_regexp_match>
		<_hx_regexp_matched set="method" static="1">
			<f a="handle:pos">
				<d/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_regexp_matched"</e></m></meta>
		</_hx_regexp_matched>
		<_hx_regexp_matched_pos set="method" static="1">
			<f a="handle:match">
				<d/>
				<x path="Int"/>
				<a>
					<pos><x path="Int"/></pos>
					<len><x path="Int"/></len>
				</a>
			</f>
			<meta><m n=":native"><e>"_hx_regexp_matched_pos"</e></m></meta>
		</_hx_regexp_matched_pos>
		<r><d/></r>
		<last><c path="String"/></last>
		<global><x path="Bool"/></global>
		<match public="1" set="method" line="36">
			<f a="s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `this` regular expression matches String `s`.

		This method modifies the internal state.

		If `s` is `null`, the result is unspecified.</haxe_doc>
		</match>
		<matched public="1" set="method" line="45">
			<f a="n">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the matched sub-group `n` of `this` EReg.

		This method should only be called after `this.match` or
		`this.matchSub`, and then operates on the String of that operation.

		The index `n` corresponds to the n-th set of parentheses in the pattern
		of `this` EReg. If no such sub-group exists, the result is unspecified.

		If `n` equals 0, the whole matched substring is returned.</haxe_doc>
		</matched>
		<new public="1" set="method" line="28">
			<f a="r:opt">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new regular expression with pattern `r` and modifiers `opt`.

		This is equivalent to the shorthand syntax `~/r/opt`

		If `r` or `opt` are null, the result is unspecified.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The EReg class represents regular expressions.

	While basic usage and patterns consistently work across platforms, some more
	complex operations may yield different results. This is a necessary trade-
	off to retain a certain level of performance.

	EReg instances can be created by calling the constructor, or with the
	special syntax `~/pattern/modifier`

	EReg instances maintain an internal state, which is affected by several of
	its methods.

	A detailed explanation of the supported operations is available at
	<https://haxe.org/manual/std-regex.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":buildXml"><e><![CDATA["<include name=\"${HXCPP}/src/hx/libs/regexp/Build.xml\"/>"]]></e></m>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Enum" params="T" file="/usr/local/lib/haxe/std/Enum.hx">
		<this><x path="Enum"><c path="Enum.T"/></x></this>
		<haxe_doc>An abstract type that represents an Enum type.

	The corresponding enum instance type is `EnumValue`.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="EnumValue" params="" file="/usr/local/lib/haxe/std/EnumValue.hx">
		<this><x path="EnumValue"/></this>
		<haxe_doc>An abstract type that represents any enum value.
	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
		<impl><class path="_EnumValue.EnumValue_Impl_" params="" file="/usr/local/lib/haxe/std/EnumValue.hx" private="1" module="EnumValue" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<typedef path="List" params="T" file="/usr/local/lib/haxe/std/List.hx"><c path="haxe.ds.List"><c path="List.T"/></c></typedef>
	<typedef path="Map" params="K:V" file="/usr/local/lib/haxe/std/Map.hx"><x path="haxe.ds.Map">
	<c path="Map.K"/>
	<c path="Map.V"/>
</x></typedef>
	<typedef path="IMap" params="K:V" file="/usr/local/lib/haxe/std/Map.hx" module="Map">
		<c path="haxe.IMap">
			<c path="IMap.K"/>
			<c path="IMap.V"/>
		</c>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":deprecated"/>
		</meta>
	</typedef>
	<class path="Math" params="" file="/usr/local/lib/haxe/std/Math.hx" extern="1">
		<PI public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>Represents the ratio of the circumference of a circle to its diameter,
		specified by the constant, π. `PI` is approximately `3.141592653589793`.</haxe_doc>
		</PI>
		<NEGATIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special `Float` constant which denotes negative infinity.

		For example, this is the result of `-1.0 / 0.0`.

		Operations with `NEGATIVE_INFINITY` as an operand may result in
		`NEGATIVE_INFINITY`, `POSITIVE_INFINITY` or `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.</haxe_doc>
		</NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special `Float` constant which denotes positive infinity.

		For example, this is the result of `1.0 / 0.0`.

		Operations with `POSITIVE_INFINITY` as an operand may result in
		`NEGATIVE_INFINITY`, `POSITIVE_INFINITY` or `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.</haxe_doc>
		</POSITIVE_INFINITY>
		<NaN public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special `Float` constant which denotes an invalid number.

		`NaN` stands for "Not a Number". It occurs when a mathematically incorrect
		operation is executed, such as taking the square root of a negative
		number: `Math.sqrt(-1)`.

		All further operations with `NaN` as an operand will result in `NaN`.

		If this constant is converted to an `Int`, e.g. through `Std.int()`, the
		result is unspecified.

		In order to test if a value is `NaN`, you should use `Math.isNaN()` function.</haxe_doc>
		</NaN>
		<abs public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the absolute value of `v`.

		- If `v` is positive or `0`, the result is unchanged. Otherwise the result is `-v`.
		- If `v` is `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		- If `v` is `NaN`, the result is `NaN`.</haxe_doc>
		</abs>
		<min public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smaller of values `a` and `b`.

		- If `a` or `b` are `NaN`, the result is `NaN`.
		- If `a` or `b` are `NEGATIVE_INFINITY`, the result is `NEGATIVE_INFINITY`.
		- If `a` and `b` are `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.</haxe_doc>
		</min>
		<max public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the greater of values `a` and `b`.

		- If `a` or `b` are `NaN`, the result is `NaN`.
		- If `a` or `b` are `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		- If `a` and `b` are `NEGATIVE_INFINITY`, the result is `NEGATIVE_INFINITY`.</haxe_doc>
		</max>
		<sin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric sine of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</sin>
		<cos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric cosine of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</cos>
		<tan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric tangent of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</tan>
		<asin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc of the specified angle `v`, in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</asin>
		<acos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc cosine of the specified angle `v`,
		in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</acos>
		<atan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent of the specified angle `v`,
		in radians.

		If `v` is `NaN` or infinite, the result is `NaN`.</haxe_doc>
		</atan>
		<atan2 public="1" set="method" static="1">
			<f a="y:x">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent whose tangent is the quotient of
		two specified numbers, in radians.

		If parameter `x` or `y`  is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is `NaN`.</haxe_doc>
		</atan2>
		<exp public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns Euler's number, raised to the power of `v`.

		`exp(1.0)` is approximately `2.718281828459`.

		- If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		- If `v` is `NEGATIVE_INFINITY`, the result is `0.0`.
		- If `v` is `NaN`, the result is `NaN`.</haxe_doc>
		</exp>
		<log public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the natural logarithm of `v`.

		This is the mathematical inverse operation of exp,
		i.e. `log(exp(v)) == v` always holds.

		- If `v` is negative (including `NEGATIVE_INFINITY`) or `NaN`, the result is `NaN`.
		- If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		- If `v` is `0.0`, the result is `NEGATIVE_INFINITY`.</haxe_doc>
		</log>
		<pow public="1" set="method" static="1">
			<f a="v:exp">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns a specified base `v` raised to the specified power `exp`.</haxe_doc>
		</pow>
		<sqrt public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the square root of `v`.

		- If `v` is negative (including `NEGATIVE_INFINITY`) or `NaN`, the result is `NaN`.
		- If `v` is `POSITIVE_INFINITY`, the result is `POSITIVE_INFINITY`.
		- If `v` is `0.0`, the result is `0.0`.</haxe_doc>
		</sqrt>
		<round public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Rounds `v` to the nearest integer value.

		Ties are rounded up, so that `0.5` becomes `1` and `-0.5` becomes `0`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</round>
		<floor public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the largest integer value that is not greater than `v`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</floor>
		<ceil public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the smallest integer value that is not less than `v`.

		If `v` is outside of the signed `Int32` range, or is `NaN`, `NEGATIVE_INFINITY`
		or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</ceil>
		<random public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a pseudo-random number which is greater than or equal to `0.0`,
		and less than `1.0`.</haxe_doc>
		</random>
		<ffloor public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the largest integer value that is not greater than `v`, as a `Float`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</ffloor>
		<fceil public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smallest integer value that is not less than `v`, as a `Float`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</fceil>
		<fround public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Rounds `v` to the nearest integer value, as a Float.

		Ties are rounded up, so that `0.5` becomes `1` and `-0.5` becomes `0`.

		If `v` is is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`,
		the result is unspecified.</haxe_doc>
		</fround>
		<isFinite public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is a finite number.

		If `f` is `POSITIVE_INFINITY`, `NEGATIVE_INFINITY` or `NaN`, the result
		is `false`, otherwise the result is `true`.</haxe_doc>
		</isFinite>
		<isNaN public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is not a valid number.

		If `f` is `NaN`, the result is `true`, otherwise the result is `false`.
		In particular, both `POSITIVE_INFINITY` and `NEGATIVE_INFINITY` are
		not considered `NaN`.</haxe_doc>
		</isNaN>
		<haxe_doc>This class defines mathematical functions and constants.

	@see https://haxe.org/manual/std-math.html</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":include"><e>"hxMath.h"</e></m>
		</meta>
	</class>
	<class path="Reflect" params="" file="/usr/local/lib/haxe/std/cpp/_std/Reflect.hx">
		<hasField public="1" set="method" line="28" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Tells if structure `o` has a field named `field`.

		This is only guaranteed to work for anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</hasField>
		<field public="1" set="method" line="33" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the value of the field named `field` on object `o`.

		If `o` is not an object or has no field named `field`, the result is
		null.

		If the field is defined as a property, its accessors are ignored. Refer
		to `Reflect.getProperty` for a function supporting property accessors.

		If `field` is null, the result is unspecified.</haxe_doc>
		</field>
		<setField public="1" set="method" line="38" static="1">
			<f a="o:field:value">
				<d/>
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Sets the field named `field` of object `o` to value `value`.

		If `o` has no field named `field`, this function is only guaranteed to
		work for anonymous structures.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</setField>
		<fields public="1" set="method" line="66" static="1">
			<f a="o">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the fields of structure `o`.

		This method is only guaranteed to work on anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` is null, the result is unspecified.</haxe_doc>
		</fields>
		<isFunction public="1" set="method" line="75" static="1">
			<f a="f">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns true if `f` is a function, false otherwise.

		If `f` is null, the result is false.</haxe_doc>
		</isFunction>
		<compareMethods public="1" set="method" line="84" static="1">
			<f a="f1:f2">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Compares the functions `f1` and `f2`.

		If `f1` or `f2` are null, the result is false.
		If `f1` or `f2` are not functions, the result is unspecified.

		Otherwise the result is true if `f1` and the `f2` are physically equal,
		false otherwise.

		If `f1` or `f2` are member method closures, the result is true if they
		are closures of the same method on the same object value, false otherwise.</haxe_doc>
		</compareMethods>
		<isObject public="1" set="method" line="92" static="1">
			<f a="v">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc><![CDATA[Tells if `v` is an object.

		The result is true if `v` is one of the following:

		- class instance
		- structure
		- `Class<T>`
		- `Enum<T>`

		Otherwise, including if `v` is null, the result is false.]]></haxe_doc>
		</isObject>
		<makeVarArgs public="1" set="method" line="126" static="1">
			<f a="f">
				<f a="">
					<c path="Array"><d/></c>
					<d/>
				</f>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Transform a function taking an array of arguments into a function that can
		be called with any number of arguments.</haxe_doc>
			<overloads><makeVarArgs public="1" set="method"><f a="f">
	<f a="">
		<c path="Array"><d/></c>
		<x path="Void"/>
	</f>
	<d/>
</f></makeVarArgs></overloads>
		</makeVarArgs>
		<haxe_doc>The Reflect API is a way to manipulate values dynamically through an
	abstract interface in an untyped manner. Use with care.

	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
			<m n=":analyzer"><e>ignore</e></m>
		</meta>
	</class>
	<class path="Std" params="" file="/usr/local/lib/haxe/std/cpp/_std/Std.hx">
		<is public="1" get="inline" set="null" line="25" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":deprecated"><e>"Std.is is deprecated. Use Std.isOfType instead."</e></m>
				<m n=":keep"/>
			</meta>
			<haxe_doc>DEPRECATED. Use `Std.isOfType(v, t)` instead.

		Tells if a value `v` is of the type `t`. Returns `false` if `v` or `t` are null.

		If `t` is a class or interface with `@:generic` meta, the result is `false`.</haxe_doc>
		</is>
		<isOfType public="1" set="method" line="29" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Tells if a value `v` is of the type `t`. Returns `false` if `v` or `t` are null.

		If `t` is a class or interface with `@:generic` meta, the result is `false`.</haxe_doc>
		</isOfType>
		<downcast public="1" params="T:S" set="method" line="33" static="1">
			<f a="value:c">
				<c path="downcast.T"/>
				<x path="Class"><c path="downcast.S"/></x>
				<c path="downcast.S"/>
			</f>
			<meta><m n=":keep"/></meta>
			<haxe_doc>Checks if object `value` is an instance of class or interface `c`.

		Compiles only if the type specified by `c` can be assigned to the type
		of `value`.

		This method checks if a downcast is possible. That is, if the runtime
		type of `value` is assignable to the type specified by `c`, `value` is
		returned. Otherwise null is returned.

		This method is not guaranteed to work with core types such as `String`,
		`Array` and `Date`.

		If `value` is null, the result is null. If `c` is null, the result is
		unspecified.</haxe_doc>
		</downcast>
		<instance public="1" params="T:S" set="method" line="38" static="1">
			<f a="value:c">
				<c path="instance.T"/>
				<x path="Class"><c path="instance.S"/></x>
				<c path="instance.S"/>
			</f>
			<meta>
				<m n=":deprecated"><e>"Std.instance() is deprecated. Use Std.downcast() instead."</e></m>
				<m n=":keep"/>
			</meta>
		</instance>
		<string public="1" set="method" line="42" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":keep"/>
			</meta>
			<haxe_doc>Converts any value to a String.

		If `s` is of `String`, `Int`, `Float` or `Bool`, its value is returned.

		If `s` is an instance of a class and that class or one of its parent classes has
		a `toString` method, that method is called. If no such method is present, the result
		is unspecified.

		If `s` is an enum constructor without argument, the constructor's name is returned. If
		arguments exists, the constructor's name followed by the String representations of
		the arguments is returned.

		If `s` is a structure, the field names along with their values are returned. The field order
		and the operator separating field names and values are unspecified.

		If s is null, "null" is returned.</haxe_doc>
		</string>
		<int public="1" set="method" line="46" static="1">
			<f a="x">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":keep"/>
			</meta>
			<haxe_doc>Converts a `Float` to an `Int`, rounded towards 0.

		If `x` is outside of the signed Int32 range, or is `NaN`, `NEGATIVE_INFINITY` or `POSITIVE_INFINITY`, the result is unspecified.</haxe_doc>
		</int>
		<parseInt public="1" set="method" line="50" static="1">
			<f a="x">
				<c path="String"/>
				<x path="Null"><x path="Int"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":keep"/>
			</meta>
			<haxe_doc>Converts a `String` to an `Int`.

		Leading whitespaces are ignored.

		If `x` starts with 0x or 0X, hexadecimal notation is recognized where the following digits may
		contain 0-9 and A-F.

		Otherwise `x` is read as decimal number with 0-9 being allowed characters. `x` may also start with
		a - to denote a negative value.

		In decimal mode, parsing continues until an invalid character is detected, in which case the
		result up to that point is returned. For hexadecimal notation, the effect of invalid characters
		is unspecified.

		Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal
		notation is not supported.

		If `x` is null, the result is unspecified.
		If `x` cannot be parsed as integer, the result is `null`.</haxe_doc>
		</parseInt>
		<parseFloat public="1" set="method" line="54" static="1">
			<f a="x">
				<c path="String"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":keep"/>
			</meta>
			<haxe_doc>Converts a `String` to a `Float`.

		The parsing rules for `parseInt` apply here as well, with the exception of invalid input
		resulting in a `NaN` value instead of null.

		Additionally, decimal notation may contain a single `.` to denote the start of the fractions.</haxe_doc>
		</parseFloat>
		<random public="1" set="method" line="58" static="1">
			<f a="x">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":keep"/>
			</meta>
			<haxe_doc><![CDATA[Return a random integer between 0 included and `x` excluded.

		If `x <= 1`, the result is always 0.]]></haxe_doc>
		</random>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":headerClassCode"><e><![CDATA["\t\tstatic inline String string(String &s) { return s; }"]]></e></m>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Void" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Void"/></this>
		<haxe_doc>The standard `Void` type. Only `null` values can be of the type `Void`.

	@see https://haxe.org/manual/types-void.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<abstract path="Float" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Float"/></this>
		<haxe_doc><![CDATA[The standard `Float` type, this is a double-precision IEEE 64bit float.

	On static targets, `null` cannot be assigned to Float. If this is necessary,
	`Null<Float>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseFloat` converts a `String` to a `Float`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Int" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Int"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc><![CDATA[The standard `Int` type. Its precision depends on the platform.

	On static targets, `null` cannot be assigned to `Int`. If this is necessary,
	`Null<Int>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseInt` converts a `String` to an `Int`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/std-math-integer-math.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Single" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<from><icast><x path="Float"/></icast></from>
		<this><x path="Single"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc>Single-precision IEEE 32bit float (4-byte).</haxe_doc>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Null" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<from><icast><c path="Null.T"/></icast></from>
		<this><x path="Null"><c path="Null.T"/></x></this>
		<to><icast><c path="Null.T"/></icast></to>
		<haxe_doc><![CDATA[`Null<T>` is a wrapper that can be used to make the basic types `Int`,
	`Float` and `Bool` nullable on static targets.

	If null safety is enabled, only types wrapped in `Null<T>` are nullable.

	Otherwise, it has no effect on non-basic-types, but it can be useful as a way to document
	that `null` is an acceptable value for a method argument, return value or variable.

	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":forward"/>
			<m n=":coreType"/>
		</meta>
	</abstract>
	<abstract path="Bool" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Bool"/></this>
		<haxe_doc><![CDATA[The standard Boolean type, which can either be `true` or `false`.

	On static targets, `null` cannot be assigned to `Bool`. If this is necessary,
	`Null<Bool>` can be used instead.

	@see https://haxe.org/manual/types-bool.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Dynamic" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Dynamic"><c path="Dynamic.T"/></x></this>
		<haxe_doc>`Dynamic` is a special type which is compatible with all other types.

	Use of `Dynamic` should be minimized as it prevents several compiler
	checks and optimizations. See `Any` type for a safer alternative for
	representing values of any type.

	@see https://haxe.org/manual/types-dynamic.html</haxe_doc>
		<meta>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Iterator" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method">
				<f a=""><c path="Iterator.T"/></f>
				<haxe_doc>Returns the current item of the `Iterator` and advances to the next one.

		This method is not required to check `hasNext()` first. A call to this
		method while `hasNext()` is `false` yields unspecified behavior.

		On the other hand, iterators should not require a call to `hasNext()`
		before the first call to `next()` if an element is available.</haxe_doc>
			</next>
			<hasNext set="method">
				<f a=""><x path="Bool"/></f>
				<haxe_doc>Returns `false` if the iteration is complete, `true` otherwise.

		Usually iteration is considered to be complete if all elements of the
		underlying data structure were handled through calls to `next()`. However,
		in custom iterators any logic may be used to determine the completion
		state.</haxe_doc>
			</hasNext>
		</a>
		<haxe_doc>An `Iterator` is a structure that permits iteration over elements of type `T`.

	Any class with matching `hasNext()` and `next()` fields is considered an `Iterator`
	and can then be used e.g. in `for`-loops. This makes it easy to implement
	custom iterators.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An `Iterable` is a data structure which has an `iterator()` method.
	See `Lambda` for generic functions on iterable structures.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<typedef path="KeyValueIterator" params="K:V" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<t path="Iterator"><a>
	<value><c path="KeyValueIterator.V"/></value>
	<key><c path="KeyValueIterator.K"/></key>
</a></t>
		<haxe_doc>A `KeyValueIterator` is an `Iterator` that has a key and a value.</haxe_doc>
	</typedef>
	<typedef path="KeyValueIterable" params="K:V" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a><keyValueIterator set="method"><f a=""><t path="KeyValueIterator">
	<c path="KeyValueIterable.K"/>
	<c path="KeyValueIterable.V"/>
</t></f></keyValueIterator></a>
		<haxe_doc>A `KeyValueIterable` is a data structure which has a `keyValueIterator()`
	method to iterate over key-value-pairs.</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>`ArrayAccess` is used to indicate a class that can be accessed using brackets.
	The type parameter represents the type of the elements stored.

	This interface should be used for externs only. Haxe does not support custom
	array access on classes. However, array access can be implemented for
	abstract types.

	@see https://haxe.org/manual/types-abstract-array-access.html</haxe_doc></class>
	<class path="String" params="" file="/usr/local/lib/haxe/std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String `""`
		is returned.</haxe_doc>
		</charAt>
		<charCodeAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Null"><x path="Int"/></x>
			</f>
			<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, `null` is returned.

		To obtain the character code of a single character, `"x".code` can be
		used instead to inline the character code at compile time. Note that
		this only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the leftmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`.

		If `startIndex` exceeds `this.length`, -1 is returned.

		If `startIndex` is negative, the result is unspecifed.

		Otherwise the search is performed within `this` String. In either case,
		the returned position is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex + str.length`. Otherwise the search
		is performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `startIndex` is negative, the result is unspecifed.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits `this` String at each occurrence of `delimiter`.

		If `this` String is the empty String `""`, the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String `""`, `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurrence of
		`delimiter`. If `this` String starts (or ends) with `delimiter`, the
		result `Array` contains a leading (or trailing) empty String `""` element.
		Two subsequent delimiters also result in an empty String `""` element.</haxe_doc>
		</split>
		<substr public="1" set="method">
			<f a="pos:?len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of `this` String from `startIndex` to but not including `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String `""` is returned.</haxe_doc>
		</substring>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.

	A Haxe String is immutable, it is not possible to modify individual
	characters. No method of this class changes the state of `this` String.

	Strings can be constructed using the String literal syntax `"string value"`.

	String can be concatenated by using the `+` operator. If an operand is not a
	String, it is passed through `Std.string()` first.

	@see https://haxe.org/manual/std-String.html</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="StringBuf" params="" file="/usr/local/lib/haxe/std/cpp/_std/StringBuf.hx">
		<b><c path="Array"><c path="String"/></c></b>
		<length public="1" get="accessor" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` StringBuf in characters.</haxe_doc>
		</length>
		<charBuf><c path="Array"><x path="cpp.Char"/></c></charBuf>
		<charBufAsString set="method" line="37"><f a=""><c path="String"/></f></charBufAsString>
		<flush set="method" line="43"><f a=""><x path="Void"/></f></flush>
		<get_length set="method" line="51"><f a=""><x path="Int"/></f></get_length>
		<toString public="1" set="method" line="92">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the content of `this` StringBuf as String.

		The buffer is not emptied by this operation.</haxe_doc>
		</toString>
		<new public="1" set="method" line="35">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringBuf instance.

		This may involve initialization of the internal buffer.</haxe_doc>
		</new>
		<haxe_doc>A String buffer is an efficient way to build a big string by appending small
	elements together.

	Unlike String, an instance of StringBuf is not immutable in the sense that
	it can be passed as argument to functions which modify it by appending more
	values.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="StringTools" params="" file="/usr/local/lib/haxe/std/StringTools.hx">
		<urlEncode public="1" set="method" line="42" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Encode an URL by using the standard format.</haxe_doc>
		</urlEncode>
		<urlDecode public="1" set="method" line="110" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Decode an URL using the standard format.</haxe_doc>
		</urlDecode>
		<startsWith public="1" set="method" line="222" static="1">
			<f a="s:start">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` starts with the string `start`.

		If `start` is `null`, the result is unspecified.

		If `start` is the empty String `""`, the result is true.</haxe_doc>
		</startsWith>
		<endsWith public="1" set="method" line="243" static="1">
			<f a="s:end">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` ends with the string `end`.

		If `end` is `null`, the result is unspecified.

		If `end` is the empty String `""`, the result is true.</haxe_doc>
		</endsWith>
		<isSpace public="1" set="method" line="270" static="1">
			<f a="s:pos">
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the character in the string `s` at position `pos` is a space.

		A character is considered to be a space character if its character code
		is 9,10,11,12,13 or 32.

		If `s` is the empty String `""`, or if pos is not a valid position within
		`s`, the result is false.</haxe_doc>
		</isSpace>
		<ltrim public="1" set="method" line="288" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes leading space characters of `s`.

		This function internally calls `isSpace()` to decide which characters to
		remove.

		If `s` is the empty String `""` or consists only of space characters, the
		result is the empty String `""`.</haxe_doc>
		</ltrim>
		<rtrim public="1" set="method" line="313" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes trailing space characters of `s`.

		This function internally calls `isSpace()` to decide which characters to
		remove.

		If `s` is the empty String `""` or consists only of space characters, the
		result is the empty String `""`.</haxe_doc>
		</rtrim>
		<trim public="1" set="method" line="335" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes leading and trailing space characters of `s`.

		This is a convenience function for `ltrim(rtrim(s))`.</haxe_doc>
		</trim>
		<lpad public="1" set="method" line="357" static="1">
			<f a="s:c:l">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Concatenates `c` to `s` until `s.length` is at least `l`.

		If `c` is the empty String `""` or if `l` does not exceed `s.length`,
		`s` is returned unchanged.

		If `c.length` is 1, the resulting String length is exactly `l`.

		Otherwise the length may exceed `l`.

		If `c` is null, the result is unspecified.</haxe_doc>
		</lpad>
		<replace public="1" set="method" line="404" static="1">
			<f a="s:sub:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replace all occurrences of the String `sub` in the String `s` by the
		String `by`.

		If `sub` is the empty String `""`, `by` is inserted after each character
		of `s` except the last one. If `by` is also the empty String `""`, `s`
		remains unchanged.

		If `sub` or `by` are null, the result is unspecified.</haxe_doc>
		</replace>
		<haxe_doc>This class provides advanced methods on Strings. It is ideally used with
	`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)
	to the `String` class.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="Sys" params="" file="/usr/local/lib/haxe/std/cpp/_std/Sys.hx">
		<print public="1" set="method" line="27" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Prints any value to the standard output.</haxe_doc>
		</print>
		<println public="1" set="method" line="31" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Prints any value to the standard output, followed by a newline.
		On Windows, this function outputs a CRLF newline.
		LF newlines are printed on all other platforms.</haxe_doc>
		</println>
		<args public="1" set="method" line="54" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns all the arguments that were passed in the command line.
		This does not include the interpreter or the name of the program file.

		(java)(eval) On Windows, non-ASCII Unicode arguments will not work correctly.

		(cs) Non-ASCII Unicode arguments will not work correctly.</haxe_doc>
		</args>
		<sleep public="1" set="method" line="70" static="1">
			<f a="seconds">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Suspends execution for the given length of time (in seconds).</haxe_doc>
		</sleep>
		<exit public="1" set="method" line="108" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Exits the current process with the given exit code.

		(macro)(eval) Being invoked in a macro or eval context (e.g. with `-x` or `--run`) immediately terminates
		the compilation process, which also prevents the execution of any `--next` sections of compilation arguments.</haxe_doc>
		</exit>
		<haxe_doc>This class provides access to various base functions of system platforms.
	Look in the `sys` package for more system APIs.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<enum path="ValueType" params="" file="/usr/local/lib/haxe/std/cpp/_std/Type.hx" module="Type">
		<TNull/>
		<TInt/>
		<TFloat/>
		<TBool/>
		<TObject/>
		<TFunction/>
		<TClass a="c"><x path="Class"><d/></x></TClass>
		<TEnum a="e"><x path="Enum"><d/></x></TEnum>
		<TUnknown/>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="Type" params="" file="/usr/local/lib/haxe/std/cpp/_std/Type.hx">
		<getClass public="1" params="T" set="method" line="35" static="1">
			<f a="o">
				<c path="getClass.T"/>
				<x path="Class"><c path="getClass.T"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the class of `o`, if `o` is a class instance.

		If `o` is null or of a different type, null is returned.

		In general, type parameter information cannot be obtained at runtime.</haxe_doc>
		</getClass>
		<getClassName public="1" set="method" line="61" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the name of class `c`, including its path.

		If `c` is inside a package, the package structure is returned dot-
		separated, with another dot separating the class name:
		`pack1.pack2.(...).packN.ClassName`
		If `c` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `c` has no package, the class name is returned.

		If `c` is null, the result is unspecified.

		The class name does not include any type parameters.</haxe_doc>
		</getClassName>
		<getEnumName public="1" set="method" line="67" static="1">
			<f a="e">
				<x path="Enum"><d/></x>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
		`pack1.pack2.(...).packN.EnumName`
		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is null, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getEnumName>
		<resolveClass public="1" set="method" line="71" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Class"><d/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Resolves a class by name.

		If `name` is the path of an existing class, that class is returned.

		Otherwise null is returned.

		If `name` is null or the path to a different type, the result is
		unspecified.

		The class name must not include any type parameters.</haxe_doc>
		</resolveClass>
		<resolveEnum public="1" set="method" line="79" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Enum"><d/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Resolves an enum by name.

		If `name` is the path of an existing enum, that enum is returned.

		Otherwise null is returned.

		If `name` is null the result is unspecified.

		If `name` is the path to a different type, null is returned.

		The enum name must not include any type parameters.</haxe_doc>
		</resolveEnum>
		<createInstance public="1" params="T" set="method" line="87" static="1">
			<f a="cl:args">
				<x path="Class"><c path="createInstance.T"/></x>
				<c path="Array"><d/></c>
				<c path="createInstance.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of class `cl`, using `args` as arguments to the
		class constructor.

		This function guarantees that the class constructor is called.

		Default values of constructors arguments are not guaranteed to be
		taken into account.

		If `cl` or `args` are null, or if the number of elements in `args` does
		not match the expected number of constructor arguments, or if any
		argument has an invalid type,  or if `cl` has no own constructor, the
		result is unspecified.

		In particular, default values of constructor arguments are not
		guaranteed to be taken into account.</haxe_doc>
		</createInstance>
		<createEmptyInstance public="1" params="T" set="method" line="94" static="1">
			<f a="cl">
				<x path="Class"><c path="createEmptyInstance.T"/></x>
				<c path="createEmptyInstance.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of class `cl`.

		This function guarantees that the class constructor is not called.

		If `cl` is null, the result is unspecified.</haxe_doc>
		</createEmptyInstance>
		<createEnum public="1" params="T" set="method" line="99" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createEnum.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createEnum.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createEnum>
		<getInstanceFields public="1" set="method" line="110" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a list of the instance fields of class `c`, including
		inherited fields.

		This only includes fields which are known at compile-time. In
		particular, using `getInstanceFields(getClass(obj))` will not include
		any fields which were added to `obj` at runtime.

		The order of the fields in the returned Array is unspecified.

		If `c` is null, the result is unspecified.</haxe_doc>
		</getInstanceFields>
		<getEnumConstructs public="1" set="method" line="118" static="1">
			<f a="e">
				<x path="Enum"><d/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `e` is null, the result is unspecified.</haxe_doc>
		</getEnumConstructs>
		<typeof public="1" set="method" line="123" static="1">
			<f a="v">
				<d/>
				<e path="ValueType"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the runtime type of value `v`.

		The result corresponds to the type `v` has at runtime, which may vary
		per platform. Assumptions regarding this should be minimized to avoid
		surprises.</haxe_doc>
		</typeof>
		<nativeEnumEq set="method" static="1">
			<f a="a:b">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_enum_eq"</e></m></meta>
		</nativeEnumEq>
		<getEnumValueIndex set="method" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_getEnumValueIndex"</e></m></meta>
		</getEnumValueIndex>
		<haxe_doc>The Haxe Reflection API allows retrieval of type information at runtime.

	This class complements the more lightweight Reflect class, with a focus on
	class and enum instances.

	@see https://haxe.org/manual/types.html
	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="UInt" params="" file="/usr/local/lib/haxe/std/UInt.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>The unsigned `Int` type is only defined for Flash and C#.
	Simulate it for other platforms.

	@see https://haxe.org/manual/types-basic-types.html</haxe_doc>
		<impl><class path="_UInt.UInt_Impl_" params="" file="/usr/local/lib/haxe/std/UInt.hx" private="1" module="UInt" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="cpp.ArrayBase" params="" file="/usr/local/lib/haxe/std/cpp/ArrayBase.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getElementSize public="1" set="method"><f a=""><x path="Int"/></f></getElementSize>
		<getByteCount public="1" set="method"><f a=""><x path="Int"/></f></getByteCount>
		<getBase public="1" set="method"><f a=""><c path="cpp.RawPointer"><x path="cpp.Char"/></c></f></getBase>
	</class>
	<class path="cpp.AutoCast" params="" file="/usr/local/lib/haxe/std/cpp/AutoCast.hx" extern="1"/>
	<typedef path="cpp.CallableData" params="T" file="/usr/local/lib/haxe/std/cpp/Callable.hx" module="cpp.Callable">
		<c path="cpp.CallableData.T"/>
		<meta>
			<m n=":noPackageRestrict"/>
			<m n=":callable"/>
		</meta>
	</typedef>
	<abstract path="cpp.Callable" params="T" file="/usr/local/lib/haxe/std/cpp/Callable.hx">
		<from><icast field="fromFunction"><x path="cpp.Function">
	<c path="fromFunction.F"/>
	<c path="cpp.abi.Abi"/>
</x></icast></from>
		<this><t path="cpp.CallableData"><c path="cpp.Callable.T"/></t></this>
		<to><icast field="toFunction"><x path="cpp.Function">
	<c path="cpp.Callable.T"/>
	<c path="cpp.abi.Abi"/>
</x></icast></to>
		<haxe_doc><![CDATA[The generator intercepts this type and converts it to a cpp.Function<T> on cpp.]]></haxe_doc>
		<meta>
			<m n=":noPackageRestrict"/>
			<m n=":callable"/>
		</meta>
		<impl><class path="cpp._Callable.Callable_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/Callable.hx" private="1" module="cpp.Callable" extern="1" final="1">
	<_new public="1" get="inline" set="null" line="37" static="1">
		<f a="inValue">
			<c path="cpp.Callable.T"/>
			<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<call public="1" get="accessor" set="null" static="1">
		<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
		<meta><m n=":impl"/></meta>
	</call>
	<get_call public="1" get="inline" set="null" line="42" static="1">
		<f a="this">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</get_call>
	<fromFunction public="1" params="F" get="inline" set="null" line="47" static="1">
		<f a="func">
			<x path="cpp.Function">
				<c path="fromFunction.F"/>
				<c path="cpp.abi.Abi"/>
			</x>
			<x path="cpp.Callable"><c path="fromFunction.F"/></x>
		</f>
		<meta><m n=":from"/></meta>
	</fromFunction>
	<toFunction public="1" get="inline" set="null" line="51" static="1">
		<f a="this">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<x path="cpp.Function">
				<c path="cpp.Callable.T"/>
				<c path="cpp.abi.Abi"/>
			</x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFunction>
	<getProcAddress public="1" params="T:ABI" get="inline" set="null" line="54" static="1"><f a="inModule:inFunction">
	<c path="String"/>
	<c path="String"/>
	<x path="cpp.Function">
		<c path="getProcAddress.T"/>
		<c path="getProcAddress.ABI"/>
	</x>
</f></getProcAddress>
	<fromStaticFunction public="1" params="T" get="inline" set="null" line="57" static="1"><f a="inStaticFunction">
	<c path="fromStaticFunction.T"/>
	<x path="cpp.Callable"><c path="fromStaticFunction.T"/></x>
</f></fromStaticFunction>
	<lt public="1" get="inline" set="null" line="60" static="1">
		<f a="this:inOther">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lt>
	<leq public="1" get="inline" set="null" line="63" static="1">
		<f a="this:inOther">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</leq>
	<gt public="1" get="inline" set="null" line="66" static="1">
		<f a="this:inOther">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</gt>
	<geq public="1" get="inline" set="null" line="69" static="1">
		<f a="this:inOther">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</geq>
</class></impl>
	</abstract>
	<class path="cpp._Callable.Callable_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/Callable.hx" private="1" module="cpp.Callable" extern="1" final="1">
		<_new public="1" get="inline" set="null" line="37" static="1">
			<f a="inValue">
				<c path="cpp.Callable.T"/>
				<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<call public="1" get="accessor" set="null" static="1">
			<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			<meta><m n=":impl"/></meta>
		</call>
		<get_call public="1" get="inline" set="null" line="42" static="1">
			<f a="this">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</get_call>
		<fromFunction public="1" params="F" get="inline" set="null" line="47" static="1">
			<f a="func">
				<x path="cpp.Function">
					<c path="fromFunction.F"/>
					<c path="cpp.abi.Abi"/>
				</x>
				<x path="cpp.Callable"><c path="fromFunction.F"/></x>
			</f>
			<meta><m n=":from"/></meta>
		</fromFunction>
		<toFunction public="1" get="inline" set="null" line="51" static="1">
			<f a="this">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<x path="cpp.Function">
					<c path="cpp.Callable.T"/>
					<c path="cpp.abi.Abi"/>
				</x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFunction>
		<getProcAddress public="1" params="T:ABI" get="inline" set="null" line="54" static="1"><f a="inModule:inFunction">
	<c path="String"/>
	<c path="String"/>
	<x path="cpp.Function">
		<c path="getProcAddress.T"/>
		<c path="getProcAddress.ABI"/>
	</x>
</f></getProcAddress>
		<fromStaticFunction public="1" params="T" get="inline" set="null" line="57" static="1"><f a="inStaticFunction">
	<c path="fromStaticFunction.T"/>
	<x path="cpp.Callable"><c path="fromStaticFunction.T"/></x>
</f></fromStaticFunction>
		<lt public="1" get="inline" set="null" line="60" static="1">
			<f a="this:inOther">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lt>
		<leq public="1" get="inline" set="null" line="63" static="1">
			<f a="this:inOther">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</leq>
		<gt public="1" get="inline" set="null" line="66" static="1">
			<f a="this:inOther">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</gt>
		<geq public="1" get="inline" set="null" line="69" static="1">
			<f a="this:inOther">
				<t path="cpp.CallableData"><c path="cpp.Callable.T"/></t>
				<x path="cpp.Callable"><c path="cpp.Callable.T"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</geq>
	</class>
	<abstract path="cpp.CastCharStar" params="" file="/usr/local/lib/haxe/std/cpp/CastCharStar.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><c path="cpp.RawPointer"><x path="cpp.Char"/></c></this>
		<to>
			<icast><c path="cpp.RawPointer"><x path="cpp.Char"/></c></icast>
			<icast field="toPointer"><c path="cpp.RawPointer"><x path="cpp.Char"/></c></icast>
		</to>
		<impl><class path="cpp._CastCharStar.CastCharStar_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/CastCharStar.hx" private="1" module="cpp.CastCharStar" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="cpp.Char" params="" file="/usr/local/lib/haxe/std/cpp/Char.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.Char"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.ConstCharStar" params="" file="/usr/local/lib/haxe/std/cpp/ConstCharStar.hx">
		<from><icast field="fromString"><c path="String"/></icast></from>
		<this><c path="cpp.RawConstPointer"><x path="cpp.Char"/></c></this>
		<to>
			<icast><c path="cpp.RawConstPointer"><x path="cpp.Char"/></c></icast>
			<icast field="toString"><c path="String"/></icast>
			<icast field="toPointer"><c path="cpp.RawConstPointer"><x path="cpp.Char"/></c></icast>
		</to>
		<impl><class path="cpp._ConstCharStar.ConstCharStar_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/ConstCharStar.hx" private="1" module="cpp.ConstCharStar" extern="1" final="1">
	<_new public="1" get="inline" set="null" line="26" static="1">
		<f a="s">
			<c path="String"/>
			<x path="cpp.ConstCharStar"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<fromString public="1" get="inline" set="null" line="30" static="1">
		<f a="s">
			<c path="String"/>
			<x path="cpp.ConstCharStar"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromString>
	<toString public="1" get="inline" set="null" line="33" static="1">
		<f a="this">
			<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
			<c path="String"/>
		</f>
		<meta>
			<m n=":has_untyped"/>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<toPointer public="1" get="inline" set="null" line="36" static="1">
		<f a="this">
			<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
			<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toPointer>
</class></impl>
	</abstract>
	<class path="cpp._ConstCharStar.ConstCharStar_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/ConstCharStar.hx" private="1" module="cpp.ConstCharStar" extern="1" final="1">
		<_new public="1" get="inline" set="null" line="26" static="1">
			<f a="s">
				<c path="String"/>
				<x path="cpp.ConstCharStar"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<fromString public="1" get="inline" set="null" line="30" static="1">
			<f a="s">
				<c path="String"/>
				<x path="cpp.ConstCharStar"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromString>
		<toString public="1" get="inline" set="null" line="33" static="1">
			<f a="this">
				<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
				<c path="String"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<toPointer public="1" get="inline" set="null" line="36" static="1">
			<f a="this">
				<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
				<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toPointer>
	</class>
	<class path="cpp.ConstPointer" params="T" file="/usr/local/lib/haxe/std/cpp/ConstPointer.hx" extern="1">
		<fromRaw public="1" params="T" set="method" static="1"><f a="ptr">
	<c path="cpp.RawConstPointer"><c path="fromRaw.T"/></c>
	<c path="cpp.ConstPointer"><c path="fromRaw.T"/></c>
</f></fromRaw>
		<fromStar public="1" params="T" set="method" static="1">
			<f a="star">
				<t path="cpp.Star"><c path="fromStar.T"/></t>
				<c path="cpp.ConstPointer"><c path="fromStar.T"/></c>
			</f>
			<meta><m n=":native"><e>"::cpp::Pointer_obj::fromRaw"</e></m></meta>
		</fromStar>
		<fromPointer public="1" params="T" set="method" static="1"><f a="inNativePointer">
	<d/>
	<c path="cpp.ConstPointer"><c path="fromPointer.T"/></c>
</f></fromPointer>
		<ptr public="1"><t path="cpp.Star"><c path="cpp.ConstPointer.T"/></t></ptr>
		<value public="1" get="accessor" set="null"><c path="cpp.ConstPointer.T"/></value>
		<raw public="1" get="accessor" set="null"><c path="cpp.RawPointer"><c path="cpp.ConstPointer.T"/></c></raw>
		<constRaw public="1" get="accessor" set="null"><c path="cpp.RawConstPointer"><c path="cpp.ConstPointer.T"/></c></constRaw>
		<get_value public="1" set="method"><f a=""><t path="cpp.Reference"><c path="cpp.ConstPointer.T"/></t></f></get_value>
		<get_constRaw public="1" set="method"><f a=""><c path="cpp.RawConstPointer"><c path="cpp.ConstPointer.T"/></c></f></get_constRaw>
		<get_raw public="1" set="method"><f a=""><c path="cpp.RawPointer"><c path="cpp.ConstPointer.T"/></c></f></get_raw>
		<lt public="1" set="method"><f a="inOther">
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
	<x path="Bool"/>
</f></lt>
		<leq public="1" set="method"><f a="inOther">
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
	<x path="Bool"/>
</f></leq>
		<gt public="1" set="method"><f a="inOther">
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
	<x path="Bool"/>
</f></gt>
		<geq public="1" set="method"><f a="inOther">
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
	<x path="Bool"/>
</f></geq>
		<setRaw public="1" params="O" set="method"><f a="ptr">
	<c path="cpp.RawPointer"><c path="setRaw.O"/></c>
	<x path="Void"/>
</f></setRaw>
		<reinterpret public="1" params="Other" set="method"><f a=""><c path="cpp.Pointer"><c path="reinterpret.Other"/></c></f></reinterpret>
		<rawCast public="1" params="Other" set="method"><f a=""><c path="cpp.RawPointer"><c path="rawCast.Other"/></c></f></rawCast>
		<at public="1" set="method"><f a="inIndex">
	<x path="Int"/>
	<t path="cpp.Reference"><c path="cpp.ConstPointer.T"/></t>
</f></at>
		<inc public="1" set="method"><f a=""><c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c></f></inc>
		<dec public="1" set="method"><f a=""><c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c></f></dec>
		<incBy public="1" set="method"><f a="inT">
	<x path="Int"/>
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
</f></incBy>
		<decBy public="1" set="method"><f a="inT">
	<x path="Int"/>
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
</f></decBy>
		<add public="1" set="method"><f a="inT">
	<x path="Int"/>
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
</f></add>
		<sub public="1" set="method"><f a="inT">
	<x path="Int"/>
	<c path="cpp.ConstPointer"><c path="cpp.ConstPointer.T"/></c>
</f></sub>
		<postIncVal public="1" set="method"><f a=""><t path="cpp.Reference"><c path="cpp.ConstPointer.T"/></t></f></postIncVal>
		<meta>
			<m n=":coreType"/>
			<m n=":include"><e>"cpp/Pointer.h"</e></m>
			<m n=":native"><e>"cpp.Pointer"</e></m>
			<m n=":semantics"><e>variable</e></m>
		</meta>
	</class>
	<typedef path="cpp.ConstStar" params="T" file="/usr/local/lib/haxe/std/cpp/ConstStar.hx">
		<x path="Null"><c path="cpp.ConstStar.T"/></x>
		<haxe_doc>Allows haxe to type the result correctly, and hxcpp can recognise this uses
	the correct type.</haxe_doc>
	</typedef>
	<class path="cpp.EnumBase" params="" file="/usr/local/lib/haxe/std/cpp/EnumBase.hx" extern="1">
		<_hx_getIndex public="1" set="method"><f a=""><x path="Int"/></f></_hx_getIndex>
		<_hx_getTag public="1" set="method"><f a=""><c path="String"/></f></_hx_getTag>
		<_hx_getParamCount public="1" set="method"><f a=""><x path="Int"/></f></_hx_getParamCount>
		<_hx_getParamI public="1" set="method"><f a="inIndex">
	<x path="Int"/>
	<d/>
</f></_hx_getParamI>
		<_hx_getParameters public="1" set="method"><f a=""><c path="Array"><d/></c></f></_hx_getParameters>
		<getIndex public="1" get="inline" set="null" line="34"><f a=""><x path="Int"/></f></getIndex>
		<getTag public="1" get="inline" set="null" line="36"><f a=""><c path="String"/></f></getTag>
		<getParamCount public="1" get="inline" set="null" line="38"><f a=""><x path="Int"/></f></getParamCount>
		<getParamI public="1" get="inline" set="null" line="40"><f a="inIndex">
	<x path="Int"/>
	<d/>
</f></getParamI>
		<getParameters public="1" get="inline" set="null" line="42"><f a=""><c path="Array"><d/></c></f></getParameters>
		<meta><m n=":native"><e>"hx.EnumBase"</e></m></meta>
	</class>
	<class path="cpp.ErrorConstants" params="" file="/usr/local/lib/haxe/std/cpp/ErrorConstants.hx" extern="1">
		<invalidCast public="1" static="1">
			<d/>
			<meta><m n=":native"><e>"HX_INVALID_CAST"</e></m></meta>
		</invalidCast>
		<indexOutOfBounds public="1" static="1">
			<d/>
			<meta><m n=":native"><e>"HX_INDEX_OUT_OF_BOUNDS"</e></m></meta>
		</indexOutOfBounds>
		<invalidObject public="1" static="1">
			<d/>
			<meta><m n=":native"><e>"HX_INVALID_OBJECT"</e></m></meta>
		</invalidObject>
		<invalidArgCount public="1" static="1">
			<d/>
			<meta><m n=":native"><e>"HX_INVALID_ARG_COUNT"</e></m></meta>
		</invalidArgCount>
		<nullFunctionPointer public="1" static="1">
			<d/>
			<meta><m n=":native"><e>"HX_NULL_FUNCTION_POINTER"</e></m></meta>
		</nullFunctionPointer>
	</class>
	<abstract path="cpp.Float32" params="" file="/usr/local/lib/haxe/std/cpp/Float32.hx">
		<from><icast><x path="Float"/></icast></from>
		<this><x path="cpp.Float32"/></this>
		<to><icast><x path="Float"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.Float64" params="" file="/usr/local/lib/haxe/std/cpp/Float64.hx">
		<from><icast><x path="Float"/></icast></from>
		<this><x path="cpp.Float64"/></this>
		<to><icast><x path="Float"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="cpp.FunctionData" params="T:ABI" file="/usr/local/lib/haxe/std/cpp/Function.hx" module="cpp.Function">
		<c path="cpp.FunctionData.T"/>
		<meta><m n=":callable"/></meta>
	</typedef>
	<abstract path="cpp.Function" params="T:ABI" file="/usr/local/lib/haxe/std/cpp/Function.hx">
		<this><t path="cpp.FunctionData">
	<c path="cpp.Function.T"/>
	<c path="cpp.Function.ABI"/>
</t></this>
		<meta>
			<m n=":include"><e>"cpp/Pointer.h"</e></m>
			<m n=":callable"/>
		</meta>
		<impl><class path="cpp._Function.Function_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/Function.hx" private="1" module="cpp.Function" extern="1" final="1">
	<_new public="1" get="inline" set="null" line="30" static="1">
		<f a="inValue">
			<c path="cpp.Function.T"/>
			<x path="cpp.Function">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<call public="1" get="accessor" set="null" static="1">
		<t path="cpp.FunctionData">
			<c path="cpp.Function.T"/>
			<c path="cpp.Function.ABI"/>
		</t>
		<meta><m n=":impl"/></meta>
	</call>
	<get_call public="1" get="inline" set="null" line="36" static="1">
		<f a="this">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
		</f>
		<meta><m n=":impl"/></meta>
	</get_call>
	<nativeGetProcAddress public="1" params="T:ABI" set="method" static="1">
		<f a="inModule:inFunction">
			<c path="String"/>
			<c path="String"/>
			<c path="cpp.AutoCast"/>
		</f>
		<meta><m n=":native"><e>"::cpp::Function_obj::getProcAddress"</e></m></meta>
	</nativeGetProcAddress>
	<getProcAddress public="1" params="T:ABI" get="inline" set="null" line="42" static="1"><f a="inModule:inFunction">
	<c path="String"/>
	<c path="String"/>
	<x path="cpp.Function">
		<c path="getProcAddress.T"/>
		<c path="getProcAddress.ABI"/>
	</x>
</f></getProcAddress>
	<nativeFromStaticFunction public="1" params="T" set="method" static="1">
		<f a="inStaticFunction">
			<c path="nativeFromStaticFunction.T"/>
			<c path="cpp.AutoCast"/>
		</f>
		<meta><m n=":native"><e>"::cpp::Function_obj::fromStaticFunction"</e></m></meta>
	</nativeFromStaticFunction>
	<fromStaticFunction public="1" params="T" get="inline" set="null" line="49" static="1"><f a="inStaticFunction">
	<c path="fromStaticFunction.T"/>
	<x path="cpp.Callable"><c path="fromStaticFunction.T"/></x>
</f></fromStaticFunction>
	<lt public="1" set="method" static="1">
		<f a="this:inOther">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<x path="cpp.Function">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lt>
	<leq public="1" set="method" static="1">
		<f a="this:inOther">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<x path="cpp.Function">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</leq>
	<gt public="1" set="method" static="1">
		<f a="this:inOther">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<x path="cpp.Function">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</gt>
	<geq public="1" set="method" static="1">
		<f a="this:inOther">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<x path="cpp.Function">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</geq>
	<meta><m n=":directlyUsed"/></meta>
</class></impl>
	</abstract>
	<class path="cpp._Function.Function_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/Function.hx" private="1" module="cpp.Function" extern="1" final="1">
		<_new public="1" get="inline" set="null" line="30" static="1">
			<f a="inValue">
				<c path="cpp.Function.T"/>
				<x path="cpp.Function">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<call public="1" get="accessor" set="null" static="1">
			<t path="cpp.FunctionData">
				<c path="cpp.Function.T"/>
				<c path="cpp.Function.ABI"/>
			</t>
			<meta><m n=":impl"/></meta>
		</call>
		<get_call public="1" get="inline" set="null" line="36" static="1">
			<f a="this">
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
			</f>
			<meta><m n=":impl"/></meta>
		</get_call>
		<nativeGetProcAddress public="1" params="T:ABI" set="method" static="1">
			<f a="inModule:inFunction">
				<c path="String"/>
				<c path="String"/>
				<c path="cpp.AutoCast"/>
			</f>
			<meta><m n=":native"><e>"::cpp::Function_obj::getProcAddress"</e></m></meta>
		</nativeGetProcAddress>
		<getProcAddress public="1" params="T:ABI" get="inline" set="null" line="42" static="1"><f a="inModule:inFunction">
	<c path="String"/>
	<c path="String"/>
	<x path="cpp.Function">
		<c path="getProcAddress.T"/>
		<c path="getProcAddress.ABI"/>
	</x>
</f></getProcAddress>
		<nativeFromStaticFunction public="1" params="T" set="method" static="1">
			<f a="inStaticFunction">
				<c path="nativeFromStaticFunction.T"/>
				<c path="cpp.AutoCast"/>
			</f>
			<meta><m n=":native"><e>"::cpp::Function_obj::fromStaticFunction"</e></m></meta>
		</nativeFromStaticFunction>
		<fromStaticFunction public="1" params="T" get="inline" set="null" line="49" static="1"><f a="inStaticFunction">
	<c path="fromStaticFunction.T"/>
	<x path="cpp.Callable"><c path="fromStaticFunction.T"/></x>
</f></fromStaticFunction>
		<lt public="1" set="method" static="1">
			<f a="this:inOther">
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
				<x path="cpp.Function">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lt>
		<leq public="1" set="method" static="1">
			<f a="this:inOther">
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
				<x path="cpp.Function">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</leq>
		<gt public="1" set="method" static="1">
			<f a="this:inOther">
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
				<x path="cpp.Function">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</gt>
		<geq public="1" set="method" static="1">
			<f a="this:inOther">
				<t path="cpp.FunctionData">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</t>
				<x path="cpp.Function">
					<c path="cpp.Function.T"/>
					<c path="cpp.Function.ABI"/>
				</x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</geq>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="cpp.Int16" params="" file="/usr/local/lib/haxe/std/cpp/Int16.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.Int16"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.Int32" params="" file="/usr/local/lib/haxe/std/cpp/Int32.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.Int32"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.Int64" params="" file="/usr/local/lib/haxe/std/cpp/Int64.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.Int64"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.Int8" params="" file="/usr/local/lib/haxe/std/cpp/Int8.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.Int8"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="cpp.Lib" params="" file="/usr/local/lib/haxe/std/cpp/Lib.hx">
		<load public="1" set="method" line="34" static="1">
			<f a="lib:prim:nargs">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Load and return a Cpp primitive from a DLL library.</haxe_doc>
		</load>
		<do_rethrow set="method" static="1">
			<f a="inExp">
				<d/>
				<unknown/>
			</f>
			<meta>
				<m n=":noDebug"/>
				<m n=":native"><e>"HX_STACK_DO_RETHROW"</e></m>
			</meta>
		</do_rethrow>
		<haxe_doc>Platform-specific Cpp Library. Provides some platform-specific functions
	for the C++ target, such as conversion from Haxe types to native types
	and vice-versa.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="cpp.Native" params="" file="/usr/local/lib/haxe/std/cpp/Native.hx" extern="1">
		<nativeMalloc public="1" set="method" static="1">
			<f a="bytes">
				<x path="Int"/>
				<t path="cpp.Star"><c path="cpp.Void"/></t>
			</f>
			<meta><m n=":native"><e>"malloc"</e></m></meta>
		</nativeMalloc>
		<nativeCalloc public="1" set="method" static="1">
			<f a="bytes">
				<x path="Int"/>
				<t path="cpp.Star"><c path="cpp.Void"/></t>
			</f>
			<meta><m n=":native"><e>"calloc"</e></m></meta>
		</nativeCalloc>
		<nativeRealloc public="1" set="method" static="1">
			<f a="inPtr:bytes">
				<t path="cpp.Star"><c path="cpp.Void"/></t>
				<x path="Int"/>
				<c path="cpp.RawPointer"><c path="cpp.Void"/></c>
			</f>
			<meta><m n=":native"><e>"realloc"</e></m></meta>
		</nativeRealloc>
		<nativeFree public="1" set="method" static="1">
			<f a="ptr">
				<t path="cpp.Star"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"free"</e></m></meta>
		</nativeFree>
		<nativeMemcpy public="1" set="method" static="1">
			<f a="dest:src:bytes">
				<t path="cpp.Star"><c path="cpp.Void"/></t>
				<t path="cpp.Star"><c path="cpp.Void"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"memcpy"</e></m></meta>
		</nativeMemcpy>
		<sizeof public="1" params="T" set="method" static="1">
			<f a="t">
				<c path="sizeof.T"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":native"><e>"::hx::ClassSizeOf"</e></m>
				<m n=":templatedCall"/>
			</meta>
		</sizeof>
		<star public="1" params="T" set="method" static="1">
			<f a="ptr">
				<t path="cpp.Star"><c path="star.T"/></t>
				<t path="cpp.Reference"><c path="star.T"/></t>
			</f>
			<meta><m n=":native"><e>"::hx::Dereference"</e></m></meta>
		</star>
		<set public="1" params="T" get="inline" set="null" line="46" static="1">
			<f a="ptr:value">
				<t path="cpp.Star"><c path="set.T"/></t>
				<c path="set.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":generic"/></meta>
		</set>
		<get public="1" params="T" get="inline" set="null" line="51" static="1">
			<f a="ptr">
				<t path="cpp.Star"><c path="get.T"/></t>
				<c path="get.T"/>
			</f>
			<meta><m n=":generic"/></meta>
		</get>
		<memcpy public="1" params="DEST:SRC" get="inline" set="null" line="57" static="1">
			<f a="dest:src:bytes">
				<t path="cpp.Star"><c path="memcpy.DEST"/></t>
				<t path="cpp.Star"><c path="memcpy.SRC"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":generic"/></meta>
		</memcpy>
		<malloc public="1" params="T" get="inline" set="null" line="61" static="1">
			<f a="bytes">
				<x path="Int"/>
				<t path="cpp.Star"><c path="malloc.T"/></t>
			</f>
			<meta><m n=":generic"/></meta>
		</malloc>
		<calloc public="1" params="T" get="inline" set="null" line="65" static="1">
			<f a="bytes">
				<x path="Int"/>
				<t path="cpp.Star"><c path="calloc.T"/></t>
			</f>
			<meta><m n=":generic"/></meta>
		</calloc>
		<realloc public="1" params="T" get="inline" set="null" line="69" static="1">
			<f a="ioPtr:bytes">
				<t path="cpp.Star"><c path="realloc.T"/></t>
				<x path="Int"/>
				<t path="cpp.Star"><c path="realloc.T"/></t>
			</f>
			<meta><m n=":generic"/></meta>
		</realloc>
		<free public="1" params="T" get="inline" set="null" line="73" static="1">
			<f a="ptr">
				<t path="cpp.Star"><c path="free.T"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":generic"/></meta>
		</free>
		<addressOf public="1" params="T" set="method" static="1">
			<f a="inVariable">
				<t path="cpp.Reference"><c path="addressOf.T"/></t>
				<t path="cpp.Star"><c path="addressOf.T"/></t>
			</f>
			<meta><m n=":native"><e>"::hx::StarOf"</e></m></meta>
		</addressOf>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":include"><e>"stdlib.h"</e></m>
		</meta>
	</class>
	<class path="cpp.NativeArray" params="" file="/usr/local/lib/haxe/std/cpp/NativeArray.hx" extern="1">
		<create public="1" params="T" set="method" static="1">
			<f a="length">
				<x path="Int"/>
				<c path="Array"><c path="create.T"/></c>
			</f>
			<meta><m n=":native"><e>"_hx_create_array_length"</e></m></meta>
		</create>
		<blit public="1" params="T" get="inline" set="null" line="37" static="1">
			<f a="ioDestArray:inDestElement:inSourceArray:inSourceElement:inElementCount">
				<c path="Array"><c path="blit.T"/></c>
				<x path="Int"/>
				<c path="Array"><c path="blit.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</blit>
		<getBase public="1" get="inline" set="null" line="41" static="1">
			<f a="inArray">
				<c path="Array"><d/></c>
				<c path="cpp.ArrayBase"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getBase>
		<reserve public="1" params="T" set="method" static="1">
			<f a="inArray:inElements">
				<c path="Array"><c path="reserve.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</reserve>
		<capacity public="1" params="T" set="method" static="1">
			<f a="inArray">
				<c path="Array"><c path="capacity.T"/></c>
				<x path="Int"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</capacity>
		<getElementSize public="1" params="T" set="method" static="1">
			<f a="inArray">
				<c path="Array"><c path="getElementSize.T"/></c>
				<x path="Int"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</getElementSize>
		<address public="1" params="T" get="inline" set="null" line="54" static="1"><f a="inArray:inIndex">
	<c path="Array"><c path="address.T"/></c>
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="address.T"/></c>
</f></address>
		<setData public="1" params="T" set="method" static="1">
			<f a="inArray:inData:inElementCount">
				<c path="Array"><c path="setData.T"/></c>
				<c path="cpp.Pointer"><c path="setData.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</setData>
		<setUnmanagedData public="1" params="T" set="method" static="1">
			<f a="inArray:inData:inElementCount">
				<c path="Array"><c path="setUnmanagedData.T"/></c>
				<c path="cpp.ConstPointer"><c path="setUnmanagedData.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</setUnmanagedData>
		<zero public="1" params="T" set="method" static="1">
			<f a="ioDestArray:?inFirst:?inElements">
				<c path="Array"><c path="zero.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</zero>
		<removeAt public="1" params="T" set="method" static="1">
			<f a="ioDestArray:inIndex">
				<c path="Array"><c path="removeAt.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</removeAt>
		<memcmp public="1" params="T" set="method" static="1">
			<f a="inArrayA:inArrayB">
				<c path="Array"><c path="memcmp.T"/></c>
				<c path="Array"><c path="memcmp.T"/></c>
				<x path="Int"/>
			</f>
			<meta><m n=":nativeStaticExtension"/></meta>
		</memcmp>
		<resolveVirtualArray public="1" set="method" static="1">
			<f a="inArray">
				<c path="Array"><d/></c>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_reslove_virtual_array"</e></m></meta>
		</resolveVirtualArray>
		<unsafeGet public="1" params="T" set="method" static="1">
			<f a="inDestArray:inIndex">
				<c path="Array"><c path="unsafeGet.T"/></c>
				<x path="Int"/>
				<c path="unsafeGet.T"/>
			</f>
			<meta><m n=":native"><e>"_hx_array_unsafe_get"</e></m></meta>
		</unsafeGet>
		<unsafeSet public="1" params="T" get="inline" set="null" line="93" static="1">
			<f a="ioDestArray:inIndex:inValue">
				<c path="Array"><c path="unsafeSet.T"/></c>
				<x path="Int"/>
				<c path="unsafeSet.T"/>
				<c path="unsafeSet.T"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":native"><e>"_hx_array_unsafe_set"</e></m>
			</meta>
		</unsafeSet>
		<setSize public="1" params="T" set="method" static="1">
			<f a="ioArray:inSize">
				<c path="Array"><c path="setSize.T"/></c>
				<x path="Int"/>
				<c path="Array"><c path="setSize.T"/></c>
			</f>
			<meta><m n=":native"><e>"_hx_array_set_size_exact"</e></m></meta>
		</setSize>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="cpp.NativeFile" params="" file="/usr/local/lib/haxe/std/cpp/NativeFile.hx" extern="1">
		<file_open public="1" set="method" static="1">
			<f a="fname:r">
				<c path="String"/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_open"</e></m></meta>
		</file_open>
		<file_close public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_close"</e></m></meta>
		</file_close>
		<file_write public="1" set="method" static="1">
			<f a="handle:s:p:n">
				<d/>
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_write"</e></m></meta>
		</file_write>
		<file_write_char public="1" set="method" static="1">
			<f a="handle:c">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_write_char"</e></m></meta>
		</file_write_char>
		<file_read public="1" set="method" static="1">
			<f a="handle:s:p:n">
				<d/>
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_read"</e></m></meta>
		</file_read>
		<file_read_char public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_read_char"</e></m></meta>
		</file_read_char>
		<file_seek public="1" set="method" static="1">
			<f a="handle:pos:kind">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_seek"</e></m></meta>
		</file_seek>
		<file_tell public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_tell"</e></m></meta>
		</file_tell>
		<file_eof public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_eof"</e></m></meta>
		</file_eof>
		<file_flush public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_flush"</e></m></meta>
		</file_flush>
		<file_contents_string public="1" set="method" static="1">
			<f a="name">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_contents_string"</e></m></meta>
		</file_contents_string>
		<file_contents_bytes public="1" set="method" static="1">
			<f a="name">
				<c path="String"/>
				<t path="haxe.io.BytesData"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_contents_bytes"</e></m></meta>
		</file_contents_bytes>
		<file_stdin public="1" set="method" static="1">
			<f a=""><d/></f>
			<meta><m n=":native"><e>"_hx_std_file_stdin"</e></m></meta>
		</file_stdin>
		<file_stdout public="1" set="method" static="1">
			<f a=""><d/></f>
			<meta><m n=":native"><e>"_hx_std_file_stdout"</e></m></meta>
		</file_stdout>
		<file_stderr public="1" set="method" static="1">
			<f a=""><d/></f>
			<meta><m n=":native"><e>"_hx_std_file_stderr"</e></m></meta>
		</file_stderr>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":buildXml"><e><![CDATA["<include name=\"${HXCPP}/src/hx/libs/std/Build.xml\"/>"]]></e></m>
		</meta>
	</class>
	<class path="cpp.NativeGc" params="" file="/usr/local/lib/haxe/std/cpp/NativeGc.hx" extern="1">
		<memInfo public="1" set="method" static="1">
			<f a="inWhatInfo">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_gc_mem_info"</e></m></meta>
		</memInfo>
		<allocateExtended public="1" params="T" set="method" static="1">
			<f a="cls:size">
				<x path="Class"><c path="allocateExtended.T"/></x>
				<x path="Int"/>
				<c path="allocateExtended.T"/>
			</f>
			<meta>
				<m n=":native"><e>"_hx_allocate_extended"</e></m>
				<m n=":templatedCall"/>
			</meta>
		</allocateExtended>
		<addFinalizable public="1" set="method" static="1">
			<f a="instance:inPin">
				<a><finalize set="method"><f a=""><x path="Void"/></f></finalize></a>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_add_finalizable"</e></m></meta>
		</addFinalizable>
		<allocGcBytesRaw public="1" set="method" static="1">
			<f a="inBytes:isContainer">
				<x path="Int"/>
				<x path="Bool"/>
				<c path="cpp.RawPointer"><c path="cpp.Void"/></c>
			</f>
			<meta><m n=":native"><e>"::hx::InternalNew"</e></m></meta>
		</allocGcBytesRaw>
		<allocGcBytes public="1" get="inline" set="null" line="38" static="1"><f a="inBytes">
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="cpp.Void"/></c>
</f></allocGcBytes>
		<enable public="1" set="method" static="1">
			<f a="inEnable">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_enable"</e></m></meta>
		</enable>
		<run public="1" set="method" static="1">
			<f a="major">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_collect"</e></m></meta>
		</run>
		<compact public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"__hxcpp_gc_compact"</e></m></meta>
		</compact>
		<nativeTrace public="1" set="method" static="1">
			<f a="sought:printInstances">
				<x path="Class"><d/></x>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_gc_trace"</e></m></meta>
		</nativeTrace>
		<doNotKill public="1" set="method" static="1">
			<f a="inObject">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_gc_do_not_kill"</e></m></meta>
		</doNotKill>
		<getNextZombie public="1" set="method" static="1">
			<f a=""><d/></f>
			<meta><m n=":native"><e>"__hxcpp_get_next_zombie"</e></m></meta>
		</getNextZombie>
		<safePoint public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"__hxcpp_gc_safe_point"</e></m></meta>
		</safePoint>
		<enterGCFreeZone public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"__hxcpp_enter_gc_free_zone"</e></m></meta>
		</enterGCFreeZone>
		<exitGCFreeZone public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"__hxcpp_exit_gc_free_zone"</e></m></meta>
		</exitGCFreeZone>
		<setMinimumFreeSpace public="1" set="method" static="1">
			<f a="inBytes">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_set_minimum_free_space"</e></m></meta>
		</setMinimumFreeSpace>
		<setTargetFreeSpacePercentage public="1" set="method" static="1">
			<f a="inPercentage">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_set_target_free_space_percentage"</e></m></meta>
		</setTargetFreeSpacePercentage>
		<setMinimumWorkingMemory public="1" set="method" static="1">
			<f a="inBytes">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_set_minimum_working_memory"</e></m></meta>
		</setMinimumWorkingMemory>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="cpp.NativeMath" params="" file="/usr/local/lib/haxe/std/cpp/NativeMath.hx" extern="1">
		<idiv public="1" set="method" static="1">
			<f a="num:denom">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_idiv"</e></m></meta>
		</idiv>
		<imod public="1" set="method" static="1">
			<f a="num:denom">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_imod"</e></m></meta>
		</imod>
		<castInt public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_cast_int"</e></m></meta>
		</castInt>
		<fastInt public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_fast_floor"</e></m></meta>
		</fastInt>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noPackageRestrict"/>
		</meta>
	</class>
	<class path="cpp.NativeProcess" params="" file="/usr/local/lib/haxe/std/cpp/NativeProcess.hx" extern="1">
		<process_run public="1" set="method" static="1">
			<f a="cmd:vargs">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_run"</e></m></meta>
		</process_run>
		<process_run_with_show public="1" set="method" static="1">
			<f a="cmd:vargs:inShow">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_run"</e></m></meta>
		</process_run_with_show>
		<process_stdout_read public="1" set="method" static="1">
			<f a="handle:buf:pos:len">
				<d/>
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_stdout_read"</e></m></meta>
		</process_stdout_read>
		<process_stderr_read public="1" set="method" static="1">
			<f a="handle:buf:pos:len">
				<d/>
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_stderr_read"</e></m></meta>
		</process_stderr_read>
		<process_stdin_write public="1" set="method" static="1">
			<f a="handle:buf:pos:len">
				<d/>
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_stdin_write"</e></m></meta>
		</process_stdin_write>
		<process_stdin_close public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_stdin_close"</e></m></meta>
		</process_stdin_close>
		<process_exit public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_exit"</e></m></meta>
		</process_exit>
		<process_pid public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_pid"</e></m></meta>
		</process_pid>
		<process_kill public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_kill"</e></m></meta>
		</process_kill>
		<process_close public="1" set="method" static="1">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_process_close"</e></m></meta>
		</process_close>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":buildXml"><e><![CDATA["<include name=\"${HXCPP}/src/hx/libs/std/Build.xml\"/>"]]></e></m>
		</meta>
	</class>
	<class path="cpp.NativeString" params="" file="/usr/local/lib/haxe/std/cpp/NativeString.hx" extern="1">
		<raw public="1" get="inline" set="null" line="26" static="1">
			<f a="inString">
				<c path="String"/>
				<c path="cpp.RawConstPointer"><x path="cpp.Char"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</raw>
		<c_str public="1" get="inline" set="null" line="29" static="1">
			<f a="inString">
				<c path="String"/>
				<c path="cpp.ConstPointer"><x path="cpp.Char"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</c_str>
		<fromPointer public="1" get="inline" set="null" line="32" static="1">
			<f a="inPtr">
				<c path="cpp.ConstPointer"><x path="cpp.Char"/></c>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</fromPointer>
		<fromGcPointer public="1" get="inline" set="null" line="35" static="1">
			<f a="inPtr:inLen">
				<c path="cpp.ConstPointer"><x path="cpp.Char"/></c>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</fromGcPointer>
		<parseFloat public="1" set="method" static="1">
			<f a="inString">
				<c path="String"/>
				<x path="Float"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_parse_float"</e></m></meta>
		</parseFloat>
		<parseSubstrFloat public="1" set="method" static="1">
			<f a="inString:start:length">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_parse_substr_float"</e></m></meta>
		</parseSubstrFloat>
		<parseInt public="1" set="method" static="1">
			<f a="inString">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_parse_substr_int"</e></m></meta>
		</parseInt>
		<parseSubstrInt public="1" set="method" static="1">
			<f a="inString:start:length">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_parse_substr_int"</e></m></meta>
		</parseSubstrInt>
		<compare public="1" set="method" static="1">
			<f a="inString0:inString1">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_string_compare"</e></m></meta>
		</compare>
		<utf8CharCodeAt public="1" set="method" static="1">
			<f a="inString:inIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_utf8_char_code_at"</e></m></meta>
		</utf8CharCodeAt>
		<utf8Length public="1" set="method" static="1">
			<f a="inString">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_utf8_length"</e></m></meta>
		</utf8Length>
		<utf8IsValid public="1" set="method" static="1">
			<f a="inString">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_utf8_is_valid"</e></m></meta>
		</utf8IsValid>
		<utf8Sub public="1" set="method" static="1">
			<f a="inString:charStart:inLen">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_utf8_sub"</e></m></meta>
		</utf8Sub>
		<fromPointerLen public="1" set="method" static="1">
			<f a="inPtr:len">
				<c path="cpp.ConstPointer"><x path="cpp.Char"/></c>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_string_create"</e></m></meta>
		</fromPointerLen>
		<utf8DecodeAdvance public="1" set="method" static="1">
			<f a="reference">
				<x path="cpp.Char"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_utf8_decode_advance"</e></m></meta>
		</utf8DecodeAdvance>
	</class>
	<class path="cpp.NativeSys" params="" file="/usr/local/lib/haxe/std/cpp/NativeSys.hx" extern="1">
		<print public="1" set="method" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_print"</e></m></meta>
		</print>
		<println public="1" set="method" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__hxcpp_println"</e></m></meta>
		</println>
		<get_env public="1" set="method" static="1">
			<f a="v">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_get_env"</e></m></meta>
		</get_env>
		<put_env public="1" set="method" static="1">
			<f a="e:v">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_put_env"</e></m></meta>
		</put_env>
		<sys_sleep public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_sleep"</e></m></meta>
		</sys_sleep>
		<set_time_locale public="1" set="method" static="1">
			<f a="l">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_set_time_locale"</e></m></meta>
		</set_time_locale>
		<get_cwd public="1" set="method" static="1">
			<f a=""><c path="String"/></f>
			<meta><m n=":native"><e>"_hx_std_get_cwd"</e></m></meta>
		</get_cwd>
		<set_cwd public="1" set="method" static="1">
			<f a="d">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_set_cwd"</e></m></meta>
		</set_cwd>
		<sys_string public="1" set="method" static="1">
			<f a=""><c path="String"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_string"</e></m></meta>
		</sys_string>
		<sys_is64 public="1" set="method" static="1">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_is64"</e></m></meta>
		</sys_is64>
		<sys_command public="1" set="method" static="1">
			<f a="cmd">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_command"</e></m></meta>
		</sys_command>
		<sys_exit public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_exit"</e></m></meta>
		</sys_exit>
		<sys_exists public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_exists"</e></m></meta>
		</sys_exists>
		<file_delete public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_delete"</e></m></meta>
		</file_delete>
		<sys_rename public="1" set="method" static="1">
			<f a="path:newname">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_rename"</e></m></meta>
		</sys_rename>
		<sys_stat public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_stat"</e></m></meta>
		</sys_stat>
		<sys_file_type public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_file_type"</e></m></meta>
		</sys_file_type>
		<sys_create_dir public="1" set="method" static="1">
			<f a="path:mode">
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_create_dir"</e></m></meta>
		</sys_create_dir>
		<sys_remove_dir public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_remove_dir"</e></m></meta>
		</sys_remove_dir>
		<sys_time public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_time"</e></m></meta>
		</sys_time>
		<sys_cpu_time public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_cpu_time"</e></m></meta>
		</sys_cpu_time>
		<sys_read_dir public="1" set="method" static="1">
			<f a="p">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_read_dir"</e></m></meta>
		</sys_read_dir>
		<file_full_path public="1" set="method" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_file_full_path"</e></m></meta>
		</file_full_path>
		<sys_exe_path public="1" set="method" static="1">
			<f a=""><c path="String"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_exe_path"</e></m></meta>
		</sys_exe_path>
		<sys_env public="1" set="method" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<meta><m n=":native"><e>"_hx_std_sys_env"</e></m></meta>
		</sys_env>
		<sys_getch public="1" set="method" static="1">
			<f a="b">
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_std_sys_getch"</e></m></meta>
		</sys_getch>
		<sys_get_pid public="1" set="method" static="1">
			<f a=""><x path="Int"/></f>
			<meta><m n=":native"><e>"_hx_std_sys_get_pid"</e></m></meta>
		</sys_get_pid>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":buildXml"><e><![CDATA["<include name=\"${HXCPP}/src/hx/libs/std/Build.xml\"/>"]]></e></m>
		</meta>
	</class>
	<typedef path="cpp.Object" params="" file="/usr/local/lib/haxe/std/cpp/Object.hx">
		<d/>
		<meta><m n=":noPackageRestrict"/></meta>
	</typedef>
	<class path="cpp.ObjectType" params="" file="/usr/local/lib/haxe/std/cpp/ObjectType.hx" extern="1">
		<vtUnknown public="1" get="inline" set="null" expr="-1" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</vtUnknown>
		<vtInt public="1" get="inline" set="null" expr="0xff" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xff</e></m></meta>
		</vtInt>
		<vtNull public="1" get="inline" set="null" expr="0" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</vtNull>
		<vtFloat public="1" get="inline" set="null" expr="1" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</vtFloat>
		<vtBool public="1" get="inline" set="null" expr="2" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</vtBool>
		<vtString public="1" get="inline" set="null" expr="3" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</vtString>
		<vtObject public="1" get="inline" set="null" expr="4" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</vtObject>
		<vtArray public="1" get="inline" set="null" expr="5" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</vtArray>
		<vtFunction public="1" get="inline" set="null" expr="6" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</vtFunction>
		<vtEnum public="1" get="inline" set="null" expr="7" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</vtEnum>
		<vtClass public="1" get="inline" set="null" expr="8" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</vtClass>
		<vtInt64 public="1" get="inline" set="null" expr="9" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</vtInt64>
		<vtAbstractBase public="1" get="inline" set="null" expr="0x100" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100</e></m></meta>
		</vtAbstractBase>
	</class>
	<class path="cpp.Pointer" params="T" file="/usr/local/lib/haxe/std/cpp/Pointer.hx" extern="1">
		<extends path="cpp.ConstPointer"><c path="cpp.Pointer.T"/></extends>
		<fromRaw public="1" params="T" set="method" static="1"><f a="ptr">
	<c path="cpp.RawPointer"><c path="fromRaw.T"/></c>
	<c path="cpp.Pointer"><c path="fromRaw.T"/></c>
</f></fromRaw>
		<fromStar public="1" params="T" set="method" static="1">
			<f a="star">
				<t path="cpp.Star"><c path="fromStar.T"/></t>
				<c path="cpp.Pointer"><c path="fromStar.T"/></c>
			</f>
			<meta><m n=":native"><e>"::cpp::Pointer_obj::fromRaw"</e></m></meta>
		</fromStar>
		<nativeFromHandle public="1" params="T" set="method" static="1">
			<f a="inHandle:?inKind">
				<d/>
				<c path="String"/>
				<c path="cpp.AutoCast"/>
			</f>
			<meta><m n=":native"><e>"::cpp::Pointer_obj::fromHandle"</e></m></meta>
		</nativeFromHandle>
		<fromHandle public="1" params="T" get="inline" set="null" line="44" static="1"><f a="inHandle:?inKind">
	<d/>
	<c path="String"/>
	<c path="cpp.Pointer"><c path="fromHandle.T"/></c>
</f></fromHandle>
		<fromPointer public="1" params="T" set="method" static="1"><f a="inNativePointer">
	<d/>
	<c path="cpp.Pointer"><c path="fromPointer.T"/></c>
</f></fromPointer>
		<addressOf public="1" params="T" set="method" static="1"><f a="inVariable">
	<t path="cpp.Reference"><c path="addressOf.T"/></t>
	<c path="cpp.Pointer"><c path="addressOf.T"/></c>
</f></addressOf>
		<endOf public="1" params="T" set="method" static="1"><f a="inVariable">
	<c path="endOf.T"/>
	<c path="cpp.Pointer"><c path="cpp.Void"/></c>
</f></endOf>
		<nativeArrayElem public="1" params="T" set="method" static="1">
			<f a="array:inElem">
				<c path="Array"><c path="nativeArrayElem.T"/></c>
				<x path="Int"/>
				<c path="cpp.AutoCast"/>
			</f>
			<meta><m n=":native"><e>"::cpp::Pointer_obj::arrayElem"</e></m></meta>
		</nativeArrayElem>
		<arrayElem public="1" params="T" get="inline" set="null" line="56" static="1"><f a="array:inElem">
	<c path="Array"><c path="arrayElem.T"/></c>
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="arrayElem.T"/></c>
</f></arrayElem>
		<nativeOfArray public="1" params="T" set="method" static="1">
			<f a="array">
				<c path="Array"><c path="nativeOfArray.T"/></c>
				<c path="cpp.AutoCast"/>
			</f>
			<meta><m n=":native"><e>"::cpp::Pointer_obj::ofArray"</e></m></meta>
		</nativeOfArray>
		<ofArray public="1" params="T" get="inline" set="null" line="62" static="1"><f a="array">
	<c path="Array"><c path="ofArray.T"/></c>
	<c path="cpp.Pointer"><c path="ofArray.T"/></c>
</f></ofArray>
		<ref public="1" get="accessor" set="accessor"><t path="cpp.Reference"><c path="cpp.Pointer.T"/></t></ref>
		<get_ref public="1" set="method"><f a=""><t path="cpp.Reference"><c path="cpp.Pointer.T"/></t></f></get_ref>
		<set_ref public="1" set="method"><f a="t">
	<c path="cpp.Pointer.T"/>
	<t path="cpp.Reference"><c path="cpp.Pointer.T"/></t>
</f></set_ref>
		<setAt public="1" set="method"><f a="inIndex:value">
	<x path="Int"/>
	<c path="cpp.Pointer.T"/>
	<x path="Void"/>
</f></setAt>
		<toUnmanagedArray public="1" get="inline" set="null" line="66"><f a="elementCount">
	<x path="Int"/>
	<c path="Array"><c path="cpp.Pointer.T"/></c>
</f></toUnmanagedArray>
		<toUnmanagedVector public="1" get="inline" set="null" line="72"><f a="elementCount">
	<x path="Int"/>
	<x path="haxe.ds.Vector"><c path="cpp.Pointer.T"/></x>
</f></toUnmanagedVector>
		<inc public="1" set="method" override="1"><f a=""><c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c></f></inc>
		<dec public="1" set="method" override="1"><f a=""><c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c></f></dec>
		<incBy public="1" set="method" override="1"><f a="inT">
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c>
</f></incBy>
		<decBy public="1" set="method" override="1"><f a="inT">
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c>
</f></decBy>
		<add public="1" set="method" override="1"><f a="inT">
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c>
</f></add>
		<sub public="1" set="method" override="1"><f a="inT">
	<x path="Int"/>
	<c path="cpp.Pointer"><c path="cpp.Pointer.T"/></c>
</f></sub>
		<postIncRef public="1" set="method"><f a=""><t path="cpp.Reference"><c path="cpp.Pointer.T"/></t></f></postIncRef>
		<destroy public="1" set="method"><f a=""><x path="Void"/></f></destroy>
		<destroyArray public="1" set="method"><f a=""><x path="Void"/></f></destroyArray>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":coreType"/>
			<m n=":semantics"><e>variable</e></m>
		</meta>
	</class>
	<class path="cpp.Prime" params="" file="/usr/local/lib/haxe/std/cpp/Prime.hx">
		<_loadPrime public="1" set="method" line="34" static="1">
			<f a="lib:prim:signature:?quietFail" v=":::false">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ quietFail : false }</e></m>
			</meta>
		</_loadPrime>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":noPackageRestrict"/>
		</meta>
	</class>
	<class path="cpp.RawConstPointer" params="T" file="/usr/local/lib/haxe/std/cpp/RawConstPointer.hx" extern="1">
		<addressOf public="1" params="T" set="method" static="1">
			<f a="t">
				<c path="addressOf.T"/>
				<c path="cpp.RawConstPointer"><c path="addressOf.T"/></c>
			</f>
			<meta><m n=":native"><e>"::hx::AddressOf"</e></m></meta>
		</addressOf>
		<meta><m n=":unreflective"/></meta>
	</class>
	<class path="cpp.RawPointer" params="T" file="/usr/local/lib/haxe/std/cpp/RawPointer.hx" extern="1">
		<extends path="cpp.RawConstPointer"><c path="cpp.RawPointer.T"/></extends>
		<addressOf public="1" params="T" set="method" static="1">
			<f a="t">
				<c path="addressOf.T"/>
				<c path="cpp.RawPointer"><c path="addressOf.T"/></c>
			</f>
			<meta><m n=":native"><e>"::hx::AddressOf"</e></m></meta>
		</addressOf>
		<meta><m n=":unreflective"/></meta>
	</class>
	<typedef path="cpp.Reference" params="T" file="/usr/local/lib/haxe/std/cpp/Reference.hx">
		<c path="cpp.Reference.T"/>
		<haxe_doc>Allows haxe to type result correctly, and hxcpp can recognise this and
	prevent unwanted casting.</haxe_doc>
		<meta><m n=":semantics"><e>reference</e></m></meta>
	</typedef>
	<typedef path="cpp.Star" params="T" file="/usr/local/lib/haxe/std/cpp/Star.hx">
		<x path="Null"><c path="cpp.Star.T"/></x>
		<haxe_doc>Allows haxe to type result correctly, and hxcpp can recognise this use the
	correct type.</haxe_doc>
	</typedef>
	<abstract path="cpp.UInt16" params="" file="/usr/local/lib/haxe/std/cpp/UInt16.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.UInt16"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.UInt32" params="" file="/usr/local/lib/haxe/std/cpp/UInt32.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.UInt32"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="cpp.UInt8" params="" file="/usr/local/lib/haxe/std/cpp/UInt8.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="cpp.UInt8"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="cpp.Void" params="" file="/usr/local/lib/haxe/std/cpp/Void.hx" extern="1"><meta><m n=":native"><e>"void"</e></m></meta></class>
	<class path="cpp.abi.Abi" params="" file="/usr/local/lib/haxe/std/cpp/abi/Abi.hx" extern="1"/>
	<typedef path="glfw.HWND" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><c path="cpp.Pointer"><c path="cpp.Void"/></c></typedef>
	<class path="glfw.GLFWwindow" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW" extern="1"><meta>
	<m n=":keep"/>
	<m n=":native"><e>"GLFWwindow"</e></m>
	<m n=":include"><e>"linc_glfw.h"</e></m>
</meta></class>
	<class path="glfw.GLFWcursor" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW" extern="1"><meta>
	<m n=":keep"/>
	<m n=":native"><e>"GLFWcursor"</e></m>
	<m n=":include"><e>"linc_glfw.h"</e></m>
</meta></class>
	<class path="glfw.GLFWmonitor" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW" extern="1"><meta>
	<m n=":keep"/>
	<m n=":native"><e>"GLFWmonitor"</e></m>
	<m n=":include"><e>"linc_glfw.h"</e></m>
</meta></class>
	<typedef path="glfw.GLFWerrorfun" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWErrorHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<cb static="1"><t path="glfw.GLFWerrorfun"/></cb>
		<nativeCallack public="1" set="method" line="33" static="1"><f a="error:message">
	<x path="Int"/>
	<x path="cpp.ConstCharStar"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="38" static="1"><f a="func">
	<t path="glfw.GLFWerrorfun"/>
	<x path="Void"/>
</f></setCallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<typedef path="glfw.GLFWcharcb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a="">
	<x path="cpp.UInt32"/>
	<x path="Void"/>
</f></typedef>
	<class path="haxe.ds._Map.Map_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/Map.hx" private="1" module="haxe.ds.Map" final="1">
		<_new public="1" set="method" static="1">
			<f a=""><x path="haxe.ds.Map">
	<c path="haxe.ds.Map.K"/>
	<c path="haxe.ds.Map.V"/>
</x></f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new Map.

		This becomes a constructor call to one of the specialization types in
		the output. The rules for that are as follows:

		1. if `K` is a `String`, `haxe.ds.StringMap` is used
		2. if `K` is an `Int`, `haxe.ds.IntMap` is used
		3. if `K` is an `EnumValue`, `haxe.ds.EnumValueMap` is used
		4. if `K` is any other class or structure, `haxe.ds.ObjectMap` is used
		5. if `K` is any other type, it causes a compile-time error

		(Cpp) Map does not use weak keys on `ObjectMap` by default.</haxe_doc>
		</_new>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="glfw.GLFWCharHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWcharcb&gt;()" line="47" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWcharcb"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWcharcb>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="49" static="1"><f a="win:key">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="cpp.UInt32"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="56" static="1"><f a="win:func">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWcharcb"/>
	<x path="Void"/>
</f></setCallback>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="glfw.GLFWkeycb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWKeyHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWkeycb&gt;()" line="65" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWkeycb"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWkeycb>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="67" static="1"><f a="win:key:scancode:action:mods">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="74" static="1"><f a="win:func">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWkeycb"/>
	<x path="Void"/>
</f></setCallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<typedef path="glfw.GLFWmouseposcb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWMouseMoveHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWmouseposcb&gt;()" line="83" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWmouseposcb"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWmouseposcb>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="85" static="1"><f a="win:x:y">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="92" static="1"><f a="win:func">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWmouseposcb"/>
	<x path="Void"/>
</f></setCallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<typedef path="glfw.GLFWmousebuttoncb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWMouseButtonHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWmousebuttoncb&gt;()" line="101" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWmousebuttoncb"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWmousebuttoncb>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="103" static="1"><f a="win:button:action:mods">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="110" static="1"><f a="win:func">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWmousebuttoncb"/>
	<x path="Void"/>
</f></setCallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<typedef path="glfw.GLFWmousewheelcb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWMouseWheelHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWmousewheelcb&gt;()" line="119" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWmousewheelcb"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWmousewheelcb>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="121" static="1"><f a="win:x:y">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="128" static="1"><f a="win:func">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWmousewheelcb"/>
	<x path="Void"/>
</f></setCallback>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="glfw.GLFWjoystickcb" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWJoystickHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listener static="1"><t path="glfw.GLFWjoystickcb"/></listener>
		<nativeCallack set="method" line="140" static="1"><f a="joy:event">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="146" static="1"><f a="func">
	<t path="glfw.GLFWjoystickcb"/>
	<x path="Void"/>
</f></setCallback>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="glfw.GLFWwindowsizefun" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW"><f a="::">
	<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></typedef>
	<class path="glfw.GLFWWindowSizeHandler" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW">
		<listeners expr="new Map&lt;String,GLFWwindowsizefun&gt;()" line="155" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<t path="glfw.GLFWwindowsizefun"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,GLFWwindowsizefun>()]]></e></m></meta>
		</listeners>
		<nativeCallack public="1" set="method" line="157" static="1"><f a="win:width:height">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></nativeCallack>
		<setCallback public="1" set="method" line="162" static="1"><f a="win:cb">
	<t path="cpp.Star"><c path="glfw.GLFWwindow"/></t>
	<t path="glfw.GLFWwindowsizefun"/>
	<x path="Void"/>
</f></setCallback>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<class path="glfw.GLFWvidmode" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" module="glfw.GLFW" extern="1">
		<width public="1"><x path="Int"/></width>
		<height public="1"><x path="Int"/></height>
		<redBits public="1"><x path="Int"/></redBits>
		<greenBits public="1"><x path="Int"/></greenBits>
		<blueBits public="1"><x path="Int"/></blueBits>
		<refreshRate public="1"><x path="Int"/></refreshRate>
		<meta><m n=":native"><e><![CDATA["cpp.Struct<GLFWvidmode>"]]></e></m></meta>
	</class>
	<class path="glfw.GLFW" params="" file="/usr/local/lib/haxeLibrary/linc_glfw/git/glfw/GLFW.hx" extern="1">
		<glfwInit public="1" get="inline" set="null" line="189" static="1">
			<f a=""><x path="Int"/></f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":native"><e>"glfwInit"</e></m>
			</meta>
		</glfwInit>
		<glfwTerminate public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glfwTerminate"</e></m></meta>
		</glfwTerminate>
		<glfwSetErrorCallback public="1" get="inline" set="null" line="197" static="1">
			<f a="cb">
				<t path="glfw.GLFWerrorfun"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetErrorCallback>
		<glfwSetKeyCallback public="1" get="inline" set="null" line="202" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWkeycb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetKeyCallback>
		<glfwSetCharCallback public="1" get="inline" set="null" line="207" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWcharcb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetCharCallback>
		<glfwSetCursorPosCallback public="1" get="inline" set="null" line="212" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWmouseposcb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetCursorPosCallback>
		<glfwSetMouseButtonCallback public="1" get="inline" set="null" line="217" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWmousebuttoncb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetMouseButtonCallback>
		<glfwSetScrollCallback public="1" get="inline" set="null" line="222" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWmousewheelcb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetScrollCallback>
		<glfwSetWindowSizeCallback public="1" get="inline" set="null" line="227" static="1">
			<f a="window:cb">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.GLFWwindowsizefun"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetWindowSizeCallback>
		<glfwSetJoystickCallback public="1" get="inline" set="null" line="232" static="1">
			<f a="cb">
				<t path="glfw.GLFWjoystickcb"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwSetJoystickCallback>
		<glfwGetPrimaryMonitor public="1" set="method" static="1">
			<f a=""><c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c></f>
			<meta><m n=":native"><e>"glfwGetPrimaryMonitor"</e></m></meta>
		</glfwGetPrimaryMonitor>
		<glfwGetMonitors public="1" get="inline" set="null" line="241" static="1">
			<f a=""><c path="Array"><d/></c></f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetMonitors>
		<glfwGetVideoModes public="1" get="inline" set="null" line="248" static="1">
			<f a="monitor">
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<x path="Null"><c path="Array"><c path="glfw.GLFWvidmode"/></c></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetVideoModes>
		<glfwGetVideoMode public="1" set="method" static="1">
			<f a="monitor">
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWvidmode"/></c>
			</f>
			<meta><m n=":native"><e>"glfwGetVideoMode"</e></m></meta>
		</glfwGetVideoMode>
		<glfwGetMonitorContentScale public="1" set="method" static="1">
			<f a="monitor:xscale:yscale">
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<c path="cpp.Pointer"><x path="cpp.Float32"/></c>
				<c path="cpp.Pointer"><x path="cpp.Float32"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwGetMonitorContentScale"</e></m></meta>
		</glfwGetMonitorContentScale>
		<glfwGetWindowContentScale public="1" set="method" static="1">
			<f a="monitor:xscale:yscale">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><x path="cpp.Float32"/></c>
				<c path="cpp.Pointer"><x path="cpp.Float32"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwGetWindowContentScale"</e></m></meta>
		</glfwGetWindowContentScale>
		<glfwGetMonitorName public="1" get="inline" set="null" line="263" static="1">
			<f a="monitor">
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetMonitorName>
		<glfwGetWindowMonitor public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
			</f>
			<meta><m n=":native"><e>"glfwGetWindowMonitor"</e></m></meta>
		</glfwGetWindowMonitor>
		<glfwSetWindowMonitor public="1" set="method" static="1">
			<f a="window:monitor:xpos:ypos:width:height:refreshRate">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSetWindowMonitor"</e></m></meta>
		</glfwSetWindowMonitor>
		<glfwGetNumMonitors public="1" get="inline" set="null" line="274" static="1">
			<f a=""><x path="Int"/></f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetNumMonitors>
		<glfwSetWindowSize public="1" set="method" static="1">
			<f a="window:width:height">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSetWindowSize"</e></m></meta>
		</glfwSetWindowSize>
		<glfwGetWindowSize public="1" set="method" static="1">
			<f a="window:width:height">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><x path="Int"/></c>
				<c path="cpp.Pointer"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwGetWindowSize"</e></m></meta>
		</glfwGetWindowSize>
		<glfwGetFramebufferSize public="1" set="method" static="1">
			<f a="window:width:height">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><x path="Int"/></c>
				<c path="cpp.Pointer"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwGetFramebufferSize"</e></m></meta>
		</glfwGetFramebufferSize>
		<glfwWindowHint public="1" set="method" static="1">
			<f a="hint:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwWindowHint"</e></m></meta>
		</glfwWindowHint>
		<glfwDestroyWindow public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwDestroyWindow"</e></m></meta>
		</glfwDestroyWindow>
		<glfwCreateWindow public="1" set="method" static="1">
			<f a="width:height:title:monitor:window">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<c path="cpp.Pointer"><c path="glfw.GLFWmonitor"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
			</f>
			<meta><m n=":native"><e>"glfwCreateWindow"</e></m></meta>
		</glfwCreateWindow>
		<glfwMakeContextCurrent public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwMakeContextCurrent"</e></m></meta>
		</glfwMakeContextCurrent>
		<glfwWindowShouldClose public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"glfwWindowShouldClose"</e></m></meta>
		</glfwWindowShouldClose>
		<glfwSwapBuffers public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSwapBuffers"</e></m></meta>
		</glfwSwapBuffers>
		<glfwSwapInterval public="1" set="method" static="1">
			<f a="interval">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSwapInterval"</e></m></meta>
		</glfwSwapInterval>
		<glfwDefaultWindowHints public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glfwDefaultWindowHints"</e></m></meta>
		</glfwDefaultWindowHints>
		<glfwJoystickPresent public="1" set="method" static="1">
			<f a="index">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"glfwJoystickPresent"</e></m></meta>
		</glfwJoystickPresent>
		<glfwGetJoystickAxes public="1" get="inline" set="null" line="318" static="1">
			<f a="index">
				<x path="Int"/>
				<c path="Array"><x path="cpp.Float32"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetJoystickAxes>
		<glfwGetJoystickButtons public="1" get="inline" set="null" line="324" static="1">
			<f a="index">
				<x path="Int"/>
				<t path="haxe.io.BytesData"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetJoystickButtons>
		<glfwGetJoystickName public="1" get="inline" set="null" line="330" static="1">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</glfwGetJoystickName>
		<glfwGetInputMode public="1" set="method" static="1">
			<f a="window:mode">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"glfwGetInputMode"</e></m></meta>
		</glfwGetInputMode>
		<glfwSetInputMode public="1" set="method" static="1">
			<f a="window:mode:value">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSetInputMode"</e></m></meta>
		</glfwSetInputMode>
		<glfwPollEvents public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glfwPollEvents"</e></m></meta>
		</glfwPollEvents>
		<glfwWaitEvents public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glfwWaitEvents"</e></m></meta>
		</glfwWaitEvents>
		<glfwPostEmptyEvent public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glfwPostEmptyEvent"</e></m></meta>
		</glfwPostEmptyEvent>
		<glfwWaitEventsTimeout public="1" set="method" static="1">
			<f a="timeout">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwWaitEventsTimeout"</e></m></meta>
		</glfwWaitEventsTimeout>
		<glfwGetWin32Window public="1" set="method" static="1">
			<f a="window">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<t path="glfw.HWND"/>
			</f>
			<meta><m n=":native"><e>"glfwGetWin32Window"</e></m></meta>
		</glfwGetWin32Window>
		<glfwGetTime public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":native"><e>"glfwGetTime"</e></m></meta>
		</glfwGetTime>
		<glfwCreateStandardCursor public="1" set="method" static="1">
			<f a="shape">
				<x path="Int"/>
				<c path="cpp.Pointer"><c path="glfw.GLFWcursor"/></c>
			</f>
			<meta><m n=":native"><e>"glfwCreateStandardCursor"</e></m></meta>
		</glfwCreateStandardCursor>
		<glfwSetCursor public="1" set="method" static="1">
			<f a="window:cursor">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><c path="glfw.GLFWcursor"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glfwSetCursor"</e></m></meta>
		</glfwSetCursor>
		<glfwGetMouseButton public="1" set="method" static="1">
			<f a="window:button">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"glfwGetMouseButton"</e></m></meta>
		</glfwGetMouseButton>
		<glfwGetCursorPos public="1" set="method" static="1">
			<f a="window:xpos:ypos">
				<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
				<c path="cpp.Pointer"><x path="Float"/></c>
				<c path="cpp.Pointer"><x path="Float"/></c>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"glfwGetCursorPos"</e></m></meta>
		</glfwGetCursorPos>
		<GLFW_VERSION_MAJOR final="1" public="1" get="inline" set="null" expr="3" line="384" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
			<haxe_doc>***********************************************************************
     * GLFW API tokens
     ***********************************************************************</haxe_doc>
		</GLFW_VERSION_MAJOR>
		<GLFW_VERSION_MINOR final="1" public="1" get="inline" set="null" expr="3" line="391" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</GLFW_VERSION_MINOR>
		<GLFW_VERSION_REVISION final="1" public="1" get="inline" set="null" expr="1" line="398" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_VERSION_REVISION>
		<GLFW_TRUE final="1" public="1" get="inline" set="null" expr="1" line="409" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_TRUE>
		<GLFW_FALSE final="1" public="1" get="inline" set="null" expr="0" line="418" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_FALSE>
		<GLFW_RELEASE final="1" public="1" get="inline" set="null" expr="0" line="428" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_RELEASE>
		<GLFW_PRESS final="1" public="1" get="inline" set="null" expr="1" line="435" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_PRESS>
		<GLFW_REPEAT final="1" public="1" get="inline" set="null" expr="2" line="442" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_REPEAT>
		<GLFW_HAT_CENTERED final="1" public="1" get="inline" set="null" expr="0" line="452" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_HAT_CENTERED>
		<GLFW_HAT_UP final="1" public="1" get="inline" set="null" expr="1" line="453" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_HAT_UP>
		<GLFW_HAT_RIGHT final="1" public="1" get="inline" set="null" expr="2" line="454" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_HAT_RIGHT>
		<GLFW_HAT_DOWN final="1" public="1" get="inline" set="null" expr="4" line="455" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</GLFW_HAT_DOWN>
		<GLFW_HAT_LEFT final="1" public="1" get="inline" set="null" expr="8" line="456" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</GLFW_HAT_LEFT>
		<GLFW_HAT_RIGHT_UP final="1" public="1" get="inline" set="null" expr="(GLFW_HAT_RIGHT | GLFW_HAT_UP)" line="457" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>(GLFW_HAT_RIGHT | GLFW_HAT_UP)</e></m></meta>
		</GLFW_HAT_RIGHT_UP>
		<GLFW_HAT_RIGHT_DOWN final="1" public="1" get="inline" set="null" expr="(GLFW_HAT_RIGHT | GLFW_HAT_DOWN)" line="458" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>(GLFW_HAT_RIGHT | GLFW_HAT_DOWN)</e></m></meta>
		</GLFW_HAT_RIGHT_DOWN>
		<GLFW_HAT_LEFT_UP final="1" public="1" get="inline" set="null" expr="(GLFW_HAT_LEFT | GLFW_HAT_UP)" line="459" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>(GLFW_HAT_LEFT | GLFW_HAT_UP)</e></m></meta>
		</GLFW_HAT_LEFT_UP>
		<GLFW_HAT_LEFT_DOWN final="1" public="1" get="inline" set="null" expr="(GLFW_HAT_LEFT | GLFW_HAT_DOWN)" line="460" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>(GLFW_HAT_LEFT | GLFW_HAT_DOWN)</e></m></meta>
		</GLFW_HAT_LEFT_DOWN>
		<GLFW_KEY_UNKNOWN final="1" public="1" get="inline" set="null" expr="1" line="488" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_KEY_UNKNOWN>
		<GLFW_KEY_SPACE final="1" public="1" get="inline" set="null" expr="32" line="491" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32</e></m></meta>
		</GLFW_KEY_SPACE>
		<GLFW_KEY_APOSTROPHE final="1" public="1" get="inline" set="null" expr="39" line="492" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>39</e></m></meta>
		</GLFW_KEY_APOSTROPHE>
		<GLFW_KEY_COMMA final="1" public="1" get="inline" set="null" expr="44" line="493" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>44</e></m></meta>
		</GLFW_KEY_COMMA>
		<GLFW_KEY_MINUS final="1" public="1" get="inline" set="null" expr="45" line="494" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>45</e></m></meta>
		</GLFW_KEY_MINUS>
		<GLFW_KEY_PERIOD final="1" public="1" get="inline" set="null" expr="46" line="495" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>46</e></m></meta>
		</GLFW_KEY_PERIOD>
		<GLFW_KEY_SLASH final="1" public="1" get="inline" set="null" expr="47" line="496" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>47</e></m></meta>
		</GLFW_KEY_SLASH>
		<GLFW_KEY_0 final="1" public="1" get="inline" set="null" expr="48" line="497" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>48</e></m></meta>
		</GLFW_KEY_0>
		<GLFW_KEY_1 final="1" public="1" get="inline" set="null" expr="49" line="498" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>49</e></m></meta>
		</GLFW_KEY_1>
		<GLFW_KEY_2 final="1" public="1" get="inline" set="null" expr="50" line="499" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>50</e></m></meta>
		</GLFW_KEY_2>
		<GLFW_KEY_3 final="1" public="1" get="inline" set="null" expr="51" line="500" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>51</e></m></meta>
		</GLFW_KEY_3>
		<GLFW_KEY_4 final="1" public="1" get="inline" set="null" expr="52" line="501" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>52</e></m></meta>
		</GLFW_KEY_4>
		<GLFW_KEY_5 final="1" public="1" get="inline" set="null" expr="53" line="502" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>53</e></m></meta>
		</GLFW_KEY_5>
		<GLFW_KEY_6 final="1" public="1" get="inline" set="null" expr="54" line="503" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>54</e></m></meta>
		</GLFW_KEY_6>
		<GLFW_KEY_7 final="1" public="1" get="inline" set="null" expr="55" line="504" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>55</e></m></meta>
		</GLFW_KEY_7>
		<GLFW_KEY_8 final="1" public="1" get="inline" set="null" expr="56" line="505" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>56</e></m></meta>
		</GLFW_KEY_8>
		<GLFW_KEY_9 final="1" public="1" get="inline" set="null" expr="57" line="506" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>57</e></m></meta>
		</GLFW_KEY_9>
		<GLFW_KEY_SEMICOLON final="1" public="1" get="inline" set="null" expr="59" line="507" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>59</e></m></meta>
		</GLFW_KEY_SEMICOLON>
		<GLFW_KEY_EQUAL final="1" public="1" get="inline" set="null" expr="61" line="508" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>61</e></m></meta>
		</GLFW_KEY_EQUAL>
		<GLFW_KEY_A final="1" public="1" get="inline" set="null" expr="65" line="509" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>65</e></m></meta>
		</GLFW_KEY_A>
		<GLFW_KEY_B final="1" public="1" get="inline" set="null" expr="66" line="510" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>66</e></m></meta>
		</GLFW_KEY_B>
		<GLFW_KEY_C final="1" public="1" get="inline" set="null" expr="67" line="511" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>67</e></m></meta>
		</GLFW_KEY_C>
		<GLFW_KEY_D final="1" public="1" get="inline" set="null" expr="68" line="512" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>68</e></m></meta>
		</GLFW_KEY_D>
		<GLFW_KEY_E final="1" public="1" get="inline" set="null" expr="69" line="513" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>69</e></m></meta>
		</GLFW_KEY_E>
		<GLFW_KEY_F final="1" public="1" get="inline" set="null" expr="70" line="514" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>70</e></m></meta>
		</GLFW_KEY_F>
		<GLFW_KEY_G final="1" public="1" get="inline" set="null" expr="71" line="515" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>71</e></m></meta>
		</GLFW_KEY_G>
		<GLFW_KEY_H final="1" public="1" get="inline" set="null" expr="72" line="516" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>72</e></m></meta>
		</GLFW_KEY_H>
		<GLFW_KEY_I final="1" public="1" get="inline" set="null" expr="73" line="517" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>73</e></m></meta>
		</GLFW_KEY_I>
		<GLFW_KEY_J final="1" public="1" get="inline" set="null" expr="74" line="518" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>74</e></m></meta>
		</GLFW_KEY_J>
		<GLFW_KEY_K final="1" public="1" get="inline" set="null" expr="75" line="519" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>75</e></m></meta>
		</GLFW_KEY_K>
		<GLFW_KEY_L final="1" public="1" get="inline" set="null" expr="76" line="520" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>76</e></m></meta>
		</GLFW_KEY_L>
		<GLFW_KEY_M final="1" public="1" get="inline" set="null" expr="77" line="521" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>77</e></m></meta>
		</GLFW_KEY_M>
		<GLFW_KEY_N final="1" public="1" get="inline" set="null" expr="78" line="522" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>78</e></m></meta>
		</GLFW_KEY_N>
		<GLFW_KEY_O final="1" public="1" get="inline" set="null" expr="79" line="523" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>79</e></m></meta>
		</GLFW_KEY_O>
		<GLFW_KEY_P final="1" public="1" get="inline" set="null" expr="80" line="524" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>80</e></m></meta>
		</GLFW_KEY_P>
		<GLFW_KEY_Q final="1" public="1" get="inline" set="null" expr="81" line="525" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>81</e></m></meta>
		</GLFW_KEY_Q>
		<GLFW_KEY_R final="1" public="1" get="inline" set="null" expr="82" line="526" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>82</e></m></meta>
		</GLFW_KEY_R>
		<GLFW_KEY_S final="1" public="1" get="inline" set="null" expr="83" line="527" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>83</e></m></meta>
		</GLFW_KEY_S>
		<GLFW_KEY_T final="1" public="1" get="inline" set="null" expr="84" line="528" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>84</e></m></meta>
		</GLFW_KEY_T>
		<GLFW_KEY_U final="1" public="1" get="inline" set="null" expr="85" line="529" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>85</e></m></meta>
		</GLFW_KEY_U>
		<GLFW_KEY_V final="1" public="1" get="inline" set="null" expr="86" line="530" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>86</e></m></meta>
		</GLFW_KEY_V>
		<GLFW_KEY_W final="1" public="1" get="inline" set="null" expr="87" line="531" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>87</e></m></meta>
		</GLFW_KEY_W>
		<GLFW_KEY_X final="1" public="1" get="inline" set="null" expr="88" line="532" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>88</e></m></meta>
		</GLFW_KEY_X>
		<GLFW_KEY_Y final="1" public="1" get="inline" set="null" expr="89" line="533" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>89</e></m></meta>
		</GLFW_KEY_Y>
		<GLFW_KEY_Z final="1" public="1" get="inline" set="null" expr="90" line="534" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>90</e></m></meta>
		</GLFW_KEY_Z>
		<GLFW_KEY_LEFT_BRACKET final="1" public="1" get="inline" set="null" expr="91" line="535" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>91</e></m></meta>
		</GLFW_KEY_LEFT_BRACKET>
		<GLFW_KEY_BACKSLASH final="1" public="1" get="inline" set="null" expr="92" line="536" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>92</e></m></meta>
		</GLFW_KEY_BACKSLASH>
		<GLFW_KEY_RIGHT_BRACKET final="1" public="1" get="inline" set="null" expr="93" line="537" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>93</e></m></meta>
		</GLFW_KEY_RIGHT_BRACKET>
		<GLFW_KEY_GRAVE_ACCENT final="1" public="1" get="inline" set="null" expr="96" line="538" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>96</e></m></meta>
		</GLFW_KEY_GRAVE_ACCENT>
		<GLFW_KEY_WORLD_1 final="1" public="1" get="inline" set="null" expr="161" line="539" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>161</e></m></meta>
		</GLFW_KEY_WORLD_1>
		<GLFW_KEY_WORLD_2 final="1" public="1" get="inline" set="null" expr="162" line="540" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>162</e></m></meta>
		</GLFW_KEY_WORLD_2>
		<GLFW_KEY_ESCAPE final="1" public="1" get="inline" set="null" expr="256" line="543" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>256</e></m></meta>
		</GLFW_KEY_ESCAPE>
		<GLFW_KEY_ENTER final="1" public="1" get="inline" set="null" expr="257" line="544" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>257</e></m></meta>
		</GLFW_KEY_ENTER>
		<GLFW_KEY_TAB final="1" public="1" get="inline" set="null" expr="258" line="545" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>258</e></m></meta>
		</GLFW_KEY_TAB>
		<GLFW_KEY_BACKSPACE final="1" public="1" get="inline" set="null" expr="259" line="546" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>259</e></m></meta>
		</GLFW_KEY_BACKSPACE>
		<GLFW_KEY_INSERT final="1" public="1" get="inline" set="null" expr="260" line="547" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>260</e></m></meta>
		</GLFW_KEY_INSERT>
		<GLFW_KEY_DELETE final="1" public="1" get="inline" set="null" expr="261" line="548" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>261</e></m></meta>
		</GLFW_KEY_DELETE>
		<GLFW_KEY_RIGHT final="1" public="1" get="inline" set="null" expr="262" line="549" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>262</e></m></meta>
		</GLFW_KEY_RIGHT>
		<GLFW_KEY_LEFT final="1" public="1" get="inline" set="null" expr="263" line="550" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>263</e></m></meta>
		</GLFW_KEY_LEFT>
		<GLFW_KEY_DOWN final="1" public="1" get="inline" set="null" expr="264" line="551" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>264</e></m></meta>
		</GLFW_KEY_DOWN>
		<GLFW_KEY_UP final="1" public="1" get="inline" set="null" expr="265" line="552" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>265</e></m></meta>
		</GLFW_KEY_UP>
		<GLFW_KEY_PAGE_UP final="1" public="1" get="inline" set="null" expr="266" line="553" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>266</e></m></meta>
		</GLFW_KEY_PAGE_UP>
		<GLFW_KEY_PAGE_DOWN final="1" public="1" get="inline" set="null" expr="267" line="554" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>267</e></m></meta>
		</GLFW_KEY_PAGE_DOWN>
		<GLFW_KEY_HOME final="1" public="1" get="inline" set="null" expr="268" line="555" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>268</e></m></meta>
		</GLFW_KEY_HOME>
		<GLFW_KEY_END final="1" public="1" get="inline" set="null" expr="269" line="556" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>269</e></m></meta>
		</GLFW_KEY_END>
		<GLFW_KEY_CAPS_LOCK final="1" public="1" get="inline" set="null" expr="280" line="557" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>280</e></m></meta>
		</GLFW_KEY_CAPS_LOCK>
		<GLFW_KEY_SCROLL_LOCK final="1" public="1" get="inline" set="null" expr="281" line="558" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>281</e></m></meta>
		</GLFW_KEY_SCROLL_LOCK>
		<GLFW_KEY_NUM_LOCK final="1" public="1" get="inline" set="null" expr="282" line="559" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>282</e></m></meta>
		</GLFW_KEY_NUM_LOCK>
		<GLFW_KEY_PRINT_SCREEN final="1" public="1" get="inline" set="null" expr="283" line="560" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>283</e></m></meta>
		</GLFW_KEY_PRINT_SCREEN>
		<GLFW_KEY_PAUSE final="1" public="1" get="inline" set="null" expr="284" line="561" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>284</e></m></meta>
		</GLFW_KEY_PAUSE>
		<GLFW_KEY_F1 final="1" public="1" get="inline" set="null" expr="290" line="562" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>290</e></m></meta>
		</GLFW_KEY_F1>
		<GLFW_KEY_F2 final="1" public="1" get="inline" set="null" expr="291" line="563" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>291</e></m></meta>
		</GLFW_KEY_F2>
		<GLFW_KEY_F3 final="1" public="1" get="inline" set="null" expr="292" line="564" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>292</e></m></meta>
		</GLFW_KEY_F3>
		<GLFW_KEY_F4 final="1" public="1" get="inline" set="null" expr="293" line="565" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>293</e></m></meta>
		</GLFW_KEY_F4>
		<GLFW_KEY_F5 final="1" public="1" get="inline" set="null" expr="294" line="566" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>294</e></m></meta>
		</GLFW_KEY_F5>
		<GLFW_KEY_F6 final="1" public="1" get="inline" set="null" expr="295" line="567" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>295</e></m></meta>
		</GLFW_KEY_F6>
		<GLFW_KEY_F7 final="1" public="1" get="inline" set="null" expr="296" line="568" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>296</e></m></meta>
		</GLFW_KEY_F7>
		<GLFW_KEY_F8 final="1" public="1" get="inline" set="null" expr="297" line="569" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>297</e></m></meta>
		</GLFW_KEY_F8>
		<GLFW_KEY_F9 final="1" public="1" get="inline" set="null" expr="298" line="570" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>298</e></m></meta>
		</GLFW_KEY_F9>
		<GLFW_KEY_F10 final="1" public="1" get="inline" set="null" expr="299" line="571" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>299</e></m></meta>
		</GLFW_KEY_F10>
		<GLFW_KEY_F11 final="1" public="1" get="inline" set="null" expr="300" line="572" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>300</e></m></meta>
		</GLFW_KEY_F11>
		<GLFW_KEY_F12 final="1" public="1" get="inline" set="null" expr="301" line="573" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>301</e></m></meta>
		</GLFW_KEY_F12>
		<GLFW_KEY_F13 final="1" public="1" get="inline" set="null" expr="302" line="574" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>302</e></m></meta>
		</GLFW_KEY_F13>
		<GLFW_KEY_F14 final="1" public="1" get="inline" set="null" expr="303" line="575" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>303</e></m></meta>
		</GLFW_KEY_F14>
		<GLFW_KEY_F15 final="1" public="1" get="inline" set="null" expr="304" line="576" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>304</e></m></meta>
		</GLFW_KEY_F15>
		<GLFW_KEY_F16 final="1" public="1" get="inline" set="null" expr="305" line="577" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>305</e></m></meta>
		</GLFW_KEY_F16>
		<GLFW_KEY_F17 final="1" public="1" get="inline" set="null" expr="306" line="578" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>306</e></m></meta>
		</GLFW_KEY_F17>
		<GLFW_KEY_F18 final="1" public="1" get="inline" set="null" expr="307" line="579" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>307</e></m></meta>
		</GLFW_KEY_F18>
		<GLFW_KEY_F19 final="1" public="1" get="inline" set="null" expr="308" line="580" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>308</e></m></meta>
		</GLFW_KEY_F19>
		<GLFW_KEY_F20 final="1" public="1" get="inline" set="null" expr="309" line="581" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>309</e></m></meta>
		</GLFW_KEY_F20>
		<GLFW_KEY_F21 final="1" public="1" get="inline" set="null" expr="310" line="582" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>310</e></m></meta>
		</GLFW_KEY_F21>
		<GLFW_KEY_F22 final="1" public="1" get="inline" set="null" expr="311" line="583" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>311</e></m></meta>
		</GLFW_KEY_F22>
		<GLFW_KEY_F23 final="1" public="1" get="inline" set="null" expr="312" line="584" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>312</e></m></meta>
		</GLFW_KEY_F23>
		<GLFW_KEY_F24 final="1" public="1" get="inline" set="null" expr="313" line="585" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>313</e></m></meta>
		</GLFW_KEY_F24>
		<GLFW_KEY_F25 final="1" public="1" get="inline" set="null" expr="314" line="586" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>314</e></m></meta>
		</GLFW_KEY_F25>
		<GLFW_KEY_KP_0 final="1" public="1" get="inline" set="null" expr="320" line="587" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>320</e></m></meta>
		</GLFW_KEY_KP_0>
		<GLFW_KEY_KP_1 final="1" public="1" get="inline" set="null" expr="321" line="588" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>321</e></m></meta>
		</GLFW_KEY_KP_1>
		<GLFW_KEY_KP_2 final="1" public="1" get="inline" set="null" expr="322" line="589" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>322</e></m></meta>
		</GLFW_KEY_KP_2>
		<GLFW_KEY_KP_3 final="1" public="1" get="inline" set="null" expr="323" line="590" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>323</e></m></meta>
		</GLFW_KEY_KP_3>
		<GLFW_KEY_KP_4 final="1" public="1" get="inline" set="null" expr="324" line="591" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>324</e></m></meta>
		</GLFW_KEY_KP_4>
		<GLFW_KEY_KP_5 final="1" public="1" get="inline" set="null" expr="325" line="592" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>325</e></m></meta>
		</GLFW_KEY_KP_5>
		<GLFW_KEY_KP_6 final="1" public="1" get="inline" set="null" expr="326" line="593" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>326</e></m></meta>
		</GLFW_KEY_KP_6>
		<GLFW_KEY_KP_7 final="1" public="1" get="inline" set="null" expr="327" line="594" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>327</e></m></meta>
		</GLFW_KEY_KP_7>
		<GLFW_KEY_KP_8 final="1" public="1" get="inline" set="null" expr="328" line="595" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>328</e></m></meta>
		</GLFW_KEY_KP_8>
		<GLFW_KEY_KP_9 final="1" public="1" get="inline" set="null" expr="329" line="596" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>329</e></m></meta>
		</GLFW_KEY_KP_9>
		<GLFW_KEY_KP_DECIMAL final="1" public="1" get="inline" set="null" expr="330" line="597" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>330</e></m></meta>
		</GLFW_KEY_KP_DECIMAL>
		<GLFW_KEY_KP_DIVIDE final="1" public="1" get="inline" set="null" expr="331" line="598" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>331</e></m></meta>
		</GLFW_KEY_KP_DIVIDE>
		<GLFW_KEY_KP_MULTIPLY final="1" public="1" get="inline" set="null" expr="332" line="599" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>332</e></m></meta>
		</GLFW_KEY_KP_MULTIPLY>
		<GLFW_KEY_KP_SUBTRACT final="1" public="1" get="inline" set="null" expr="333" line="600" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>333</e></m></meta>
		</GLFW_KEY_KP_SUBTRACT>
		<GLFW_KEY_KP_ADD final="1" public="1" get="inline" set="null" expr="334" line="601" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>334</e></m></meta>
		</GLFW_KEY_KP_ADD>
		<GLFW_KEY_KP_ENTER final="1" public="1" get="inline" set="null" expr="335" line="602" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>335</e></m></meta>
		</GLFW_KEY_KP_ENTER>
		<GLFW_KEY_KP_EQUAL final="1" public="1" get="inline" set="null" expr="336" line="603" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>336</e></m></meta>
		</GLFW_KEY_KP_EQUAL>
		<GLFW_KEY_LEFT_SHIFT final="1" public="1" get="inline" set="null" expr="340" line="604" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>340</e></m></meta>
		</GLFW_KEY_LEFT_SHIFT>
		<GLFW_KEY_LEFT_CONTROL final="1" public="1" get="inline" set="null" expr="341" line="605" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>341</e></m></meta>
		</GLFW_KEY_LEFT_CONTROL>
		<GLFW_KEY_LEFT_ALT final="1" public="1" get="inline" set="null" expr="342" line="606" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>342</e></m></meta>
		</GLFW_KEY_LEFT_ALT>
		<GLFW_KEY_LEFT_SUPER final="1" public="1" get="inline" set="null" expr="343" line="607" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>343</e></m></meta>
		</GLFW_KEY_LEFT_SUPER>
		<GLFW_KEY_RIGHT_SHIFT final="1" public="1" get="inline" set="null" expr="344" line="608" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>344</e></m></meta>
		</GLFW_KEY_RIGHT_SHIFT>
		<GLFW_KEY_RIGHT_CONTROL final="1" public="1" get="inline" set="null" expr="345" line="609" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>345</e></m></meta>
		</GLFW_KEY_RIGHT_CONTROL>
		<GLFW_KEY_RIGHT_ALT final="1" public="1" get="inline" set="null" expr="346" line="610" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>346</e></m></meta>
		</GLFW_KEY_RIGHT_ALT>
		<GLFW_KEY_RIGHT_SUPER final="1" public="1" get="inline" set="null" expr="347" line="611" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>347</e></m></meta>
		</GLFW_KEY_RIGHT_SUPER>
		<GLFW_KEY_MENU final="1" public="1" get="inline" set="null" expr="348" line="612" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>348</e></m></meta>
		</GLFW_KEY_MENU>
		<GLFW_KEY_LAST final="1" public="1" get="inline" set="null" expr="GLFW_KEY_MENU" line="614" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_KEY_MENU</e></m></meta>
		</GLFW_KEY_LAST>
		<GLFW_MOD_SHIFT final="1" public="1" get="inline" set="null" expr="0x0001" line="630" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</GLFW_MOD_SHIFT>
		<GLFW_MOD_CONTROL final="1" public="1" get="inline" set="null" expr="0x0002" line="635" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</GLFW_MOD_CONTROL>
		<GLFW_MOD_ALT final="1" public="1" get="inline" set="null" expr="0x0004" line="640" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</GLFW_MOD_ALT>
		<GLFW_MOD_SUPER final="1" public="1" get="inline" set="null" expr="0x0008" line="645" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</GLFW_MOD_SUPER>
		<GLFW_MOD_CAPS_LOCK final="1" public="1" get="inline" set="null" expr="0x0010" line="651" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0010</e></m></meta>
		</GLFW_MOD_CAPS_LOCK>
		<GLFW_MOD_NUM_LOCK final="1" public="1" get="inline" set="null" expr="0x0020" line="657" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0020</e></m></meta>
		</GLFW_MOD_NUM_LOCK>
		<GLFW_MOUSE_BUTTON_1 final="1" public="1" get="inline" set="null" expr="0" line="668" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_MOUSE_BUTTON_1>
		<GLFW_MOUSE_BUTTON_2 final="1" public="1" get="inline" set="null" expr="1" line="669" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_MOUSE_BUTTON_2>
		<GLFW_MOUSE_BUTTON_3 final="1" public="1" get="inline" set="null" expr="2" line="670" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_MOUSE_BUTTON_3>
		<GLFW_MOUSE_BUTTON_4 final="1" public="1" get="inline" set="null" expr="3" line="671" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</GLFW_MOUSE_BUTTON_4>
		<GLFW_MOUSE_BUTTON_5 final="1" public="1" get="inline" set="null" expr="4" line="672" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</GLFW_MOUSE_BUTTON_5>
		<GLFW_MOUSE_BUTTON_6 final="1" public="1" get="inline" set="null" expr="5" line="673" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</GLFW_MOUSE_BUTTON_6>
		<GLFW_MOUSE_BUTTON_7 final="1" public="1" get="inline" set="null" expr="6" line="674" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</GLFW_MOUSE_BUTTON_7>
		<GLFW_MOUSE_BUTTON_8 final="1" public="1" get="inline" set="null" expr="7" line="675" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</GLFW_MOUSE_BUTTON_8>
		<GLFW_MOUSE_BUTTON_LAST final="1" public="1" get="inline" set="null" expr="GLFW_MOUSE_BUTTON_8" line="676" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_MOUSE_BUTTON_8</e></m></meta>
		</GLFW_MOUSE_BUTTON_LAST>
		<GLFW_MOUSE_BUTTON_LEFT final="1" public="1" get="inline" set="null" expr="GLFW_MOUSE_BUTTON_1" line="677" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_MOUSE_BUTTON_1</e></m></meta>
		</GLFW_MOUSE_BUTTON_LEFT>
		<GLFW_MOUSE_BUTTON_RIGHT final="1" public="1" get="inline" set="null" expr="GLFW_MOUSE_BUTTON_2" line="678" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_MOUSE_BUTTON_2</e></m></meta>
		</GLFW_MOUSE_BUTTON_RIGHT>
		<GLFW_MOUSE_BUTTON_MIDDLE final="1" public="1" get="inline" set="null" expr="GLFW_MOUSE_BUTTON_3" line="679" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_MOUSE_BUTTON_3</e></m></meta>
		</GLFW_MOUSE_BUTTON_MIDDLE>
		<GLFW_JOYSTICK_1 final="1" public="1" get="inline" set="null" expr="0" line="689" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_JOYSTICK_1>
		<GLFW_JOYSTICK_2 final="1" public="1" get="inline" set="null" expr="1" line="690" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_JOYSTICK_2>
		<GLFW_JOYSTICK_3 final="1" public="1" get="inline" set="null" expr="2" line="691" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_JOYSTICK_3>
		<GLFW_JOYSTICK_4 final="1" public="1" get="inline" set="null" expr="3" line="692" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</GLFW_JOYSTICK_4>
		<GLFW_JOYSTICK_5 final="1" public="1" get="inline" set="null" expr="4" line="693" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</GLFW_JOYSTICK_5>
		<GLFW_JOYSTICK_6 final="1" public="1" get="inline" set="null" expr="5" line="694" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</GLFW_JOYSTICK_6>
		<GLFW_JOYSTICK_7 final="1" public="1" get="inline" set="null" expr="6" line="695" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</GLFW_JOYSTICK_7>
		<GLFW_JOYSTICK_8 final="1" public="1" get="inline" set="null" expr="7" line="696" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</GLFW_JOYSTICK_8>
		<GLFW_JOYSTICK_9 final="1" public="1" get="inline" set="null" expr="8" line="697" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</GLFW_JOYSTICK_9>
		<GLFW_JOYSTICK_10 final="1" public="1" get="inline" set="null" expr="9" line="698" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</GLFW_JOYSTICK_10>
		<GLFW_JOYSTICK_11 final="1" public="1" get="inline" set="null" expr="10" line="699" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10</e></m></meta>
		</GLFW_JOYSTICK_11>
		<GLFW_JOYSTICK_12 final="1" public="1" get="inline" set="null" expr="11" line="700" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>11</e></m></meta>
		</GLFW_JOYSTICK_12>
		<GLFW_JOYSTICK_13 final="1" public="1" get="inline" set="null" expr="12" line="701" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>12</e></m></meta>
		</GLFW_JOYSTICK_13>
		<GLFW_JOYSTICK_14 final="1" public="1" get="inline" set="null" expr="13" line="702" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>13</e></m></meta>
		</GLFW_JOYSTICK_14>
		<GLFW_JOYSTICK_15 final="1" public="1" get="inline" set="null" expr="14" line="703" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>14</e></m></meta>
		</GLFW_JOYSTICK_15>
		<GLFW_JOYSTICK_16 final="1" public="1" get="inline" set="null" expr="15" line="704" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>15</e></m></meta>
		</GLFW_JOYSTICK_16>
		<GLFW_JOYSTICK_LAST final="1" public="1" get="inline" set="null" expr="GLFW_JOYSTICK_16" line="705" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_JOYSTICK_16</e></m></meta>
		</GLFW_JOYSTICK_LAST>
		<GLFW_GAMEPAD_BUTTON_A final="1" public="1" get="inline" set="null" expr="0" line="715" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_A>
		<GLFW_GAMEPAD_BUTTON_B final="1" public="1" get="inline" set="null" expr="1" line="716" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_B>
		<GLFW_GAMEPAD_BUTTON_X final="1" public="1" get="inline" set="null" expr="2" line="717" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_X>
		<GLFW_GAMEPAD_BUTTON_Y final="1" public="1" get="inline" set="null" expr="3" line="718" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_Y>
		<GLFW_GAMEPAD_BUTTON_LEFT_BUMPER final="1" public="1" get="inline" set="null" expr="4" line="719" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_LEFT_BUMPER>
		<GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER final="1" public="1" get="inline" set="null" expr="5" line="720" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER>
		<GLFW_GAMEPAD_BUTTON_BACK final="1" public="1" get="inline" set="null" expr="6" line="721" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_BACK>
		<GLFW_GAMEPAD_BUTTON_START final="1" public="1" get="inline" set="null" expr="7" line="722" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_START>
		<GLFW_GAMEPAD_BUTTON_GUIDE final="1" public="1" get="inline" set="null" expr="8" line="723" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_GUIDE>
		<GLFW_GAMEPAD_BUTTON_LEFT_THUMB final="1" public="1" get="inline" set="null" expr="9" line="724" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_LEFT_THUMB>
		<GLFW_GAMEPAD_BUTTON_RIGHT_THUMB final="1" public="1" get="inline" set="null" expr="10" line="725" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_RIGHT_THUMB>
		<GLFW_GAMEPAD_BUTTON_DPAD_UP final="1" public="1" get="inline" set="null" expr="11" line="726" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>11</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_DPAD_UP>
		<GLFW_GAMEPAD_BUTTON_DPAD_RIGHT final="1" public="1" get="inline" set="null" expr="12" line="727" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>12</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_DPAD_RIGHT>
		<GLFW_GAMEPAD_BUTTON_DPAD_DOWN final="1" public="1" get="inline" set="null" expr="13" line="728" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>13</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_DPAD_DOWN>
		<GLFW_GAMEPAD_BUTTON_DPAD_LEFT final="1" public="1" get="inline" set="null" expr="14" line="729" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>14</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_DPAD_LEFT>
		<GLFW_GAMEPAD_BUTTON_LAST final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_BUTTON_DPAD_LEFT" line="730" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_BUTTON_DPAD_LEFT</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_LAST>
		<GLFW_GAMEPAD_BUTTON_CROSS final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_BUTTON_A" line="732" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_BUTTON_A</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_CROSS>
		<GLFW_GAMEPAD_BUTTON_CIRCLE final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_BUTTON_B" line="733" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_BUTTON_B</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_CIRCLE>
		<GLFW_GAMEPAD_BUTTON_SQUARE final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_BUTTON_X" line="734" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_BUTTON_X</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_SQUARE>
		<GLFW_GAMEPAD_BUTTON_TRIANGLE final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_BUTTON_Y" line="735" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_BUTTON_Y</e></m></meta>
		</GLFW_GAMEPAD_BUTTON_TRIANGLE>
		<GLFW_GAMEPAD_AXIS_LEFT_X final="1" public="1" get="inline" set="null" expr="0" line="745" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_GAMEPAD_AXIS_LEFT_X>
		<GLFW_GAMEPAD_AXIS_LEFT_Y final="1" public="1" get="inline" set="null" expr="1" line="746" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_GAMEPAD_AXIS_LEFT_Y>
		<GLFW_GAMEPAD_AXIS_RIGHT_X final="1" public="1" get="inline" set="null" expr="2" line="747" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</GLFW_GAMEPAD_AXIS_RIGHT_X>
		<GLFW_GAMEPAD_AXIS_RIGHT_Y final="1" public="1" get="inline" set="null" expr="3" line="748" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</GLFW_GAMEPAD_AXIS_RIGHT_Y>
		<GLFW_GAMEPAD_AXIS_LEFT_TRIGGER final="1" public="1" get="inline" set="null" expr="4" line="749" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</GLFW_GAMEPAD_AXIS_LEFT_TRIGGER>
		<GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER final="1" public="1" get="inline" set="null" expr="5" line="750" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER>
		<GLFW_GAMEPAD_AXIS_LAST final="1" public="1" get="inline" set="null" expr="GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER" line="751" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER</e></m></meta>
		</GLFW_GAMEPAD_AXIS_LAST>
		<GLFW_NO_ERROR final="1" public="1" get="inline" set="null" expr="0" line="767" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_NO_ERROR>
		<GLFW_NOT_INITIALIZED final="1" public="1" get="inline" set="null" expr="0x00010001" line="776" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010001</e></m></meta>
		</GLFW_NOT_INITIALIZED>
		<GLFW_NO_CURRENT_CONTEXT final="1" public="1" get="inline" set="null" expr="0x00010002" line="786" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010002</e></m></meta>
		</GLFW_NO_CURRENT_CONTEXT>
		<GLFW_INVALID_ENUM final="1" public="1" get="inline" set="null" expr="0x00010003" line="794" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010003</e></m></meta>
		</GLFW_INVALID_ENUM>
		<GLFW_INVALID_VALUE final="1" public="1" get="inline" set="null" expr="0x00010004" line="805" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010004</e></m></meta>
		</GLFW_INVALID_VALUE>
		<GLFW_OUT_OF_MEMORY final="1" public="1" get="inline" set="null" expr="0x00010005" line="813" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010005</e></m></meta>
		</GLFW_OUT_OF_MEMORY>
		<GLFW_API_UNAVAILABLE final="1" public="1" get="inline" set="null" expr="0x00010006" line="829" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010006</e></m></meta>
		</GLFW_API_UNAVAILABLE>
		<GLFW_VERSION_UNAVAILABLE final="1" public="1" get="inline" set="null" expr="0x00010007" line="846" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010007</e></m></meta>
		</GLFW_VERSION_UNAVAILABLE>
		<GLFW_PLATFORM_ERROR final="1" public="1" get="inline" set="null" expr="0x00010008" line="857" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010008</e></m></meta>
		</GLFW_PLATFORM_ERROR>
		<GLFW_FORMAT_UNAVAILABLE final="1" public="1" get="inline" set="null" expr="0x00010009" line="876" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010009</e></m></meta>
		</GLFW_FORMAT_UNAVAILABLE>
		<GLFW_NO_WINDOW_CONTEXT final="1" public="1" get="inline" set="null" expr="0x0001000A" line="884" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001000A</e></m></meta>
		</GLFW_NO_WINDOW_CONTEXT>
		<GLFW_FOCUSED final="1" public="1" get="inline" set="null" expr="0x00020001" line="894" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020001</e></m></meta>
		</GLFW_FOCUSED>
		<GLFW_ICONIFIED final="1" public="1" get="inline" set="null" expr="0x00020002" line="899" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020002</e></m></meta>
		</GLFW_ICONIFIED>
		<GLFW_RESIZABLE final="1" public="1" get="inline" set="null" expr="0x00020003" line="905" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020003</e></m></meta>
		</GLFW_RESIZABLE>
		<GLFW_VISIBLE final="1" public="1" get="inline" set="null" expr="0x00020004" line="911" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020004</e></m></meta>
		</GLFW_VISIBLE>
		<GLFW_DECORATED final="1" public="1" get="inline" set="null" expr="0x00020005" line="917" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020005</e></m></meta>
		</GLFW_DECORATED>
		<GLFW_AUTO_ICONIFY final="1" public="1" get="inline" set="null" expr="0x00020006" line="923" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020006</e></m></meta>
		</GLFW_AUTO_ICONIFY>
		<GLFW_FLOATING final="1" public="1" get="inline" set="null" expr="0x00020007" line="929" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020007</e></m></meta>
		</GLFW_FLOATING>
		<GLFW_MAXIMIZED final="1" public="1" get="inline" set="null" expr="0x00020008" line="935" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020008</e></m></meta>
		</GLFW_MAXIMIZED>
		<GLFW_CENTER_CURSOR final="1" public="1" get="inline" set="null" expr="0x00020009" line="940" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020009</e></m></meta>
		</GLFW_CENTER_CURSOR>
		<GLFW_TRANSPARENT_FRAMEBUFFER final="1" public="1" get="inline" set="null" expr="0x0002000A" line="947" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002000A</e></m></meta>
		</GLFW_TRANSPARENT_FRAMEBUFFER>
		<GLFW_HOVERED final="1" public="1" get="inline" set="null" expr="0x0002000B" line="952" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002000B</e></m></meta>
		</GLFW_HOVERED>
		<GLFW_FOCUS_ON_SHOW final="1" public="1" get="inline" set="null" expr="0x0002000C" line="958" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002000C</e></m></meta>
		</GLFW_FOCUS_ON_SHOW>
		<GLFW_RED_BITS final="1" public="1" get="inline" set="null" expr="0x00021001" line="964" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021001</e></m></meta>
		</GLFW_RED_BITS>
		<GLFW_GREEN_BITS final="1" public="1" get="inline" set="null" expr="0x00021002" line="969" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021002</e></m></meta>
		</GLFW_GREEN_BITS>
		<GLFW_BLUE_BITS final="1" public="1" get="inline" set="null" expr="0x00021003" line="974" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021003</e></m></meta>
		</GLFW_BLUE_BITS>
		<GLFW_ALPHA_BITS final="1" public="1" get="inline" set="null" expr="0x00021004" line="979" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021004</e></m></meta>
		</GLFW_ALPHA_BITS>
		<GLFW_DEPTH_BITS final="1" public="1" get="inline" set="null" expr="0x00021005" line="984" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021005</e></m></meta>
		</GLFW_DEPTH_BITS>
		<GLFW_STENCIL_BITS final="1" public="1" get="inline" set="null" expr="0x00021006" line="989" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021006</e></m></meta>
		</GLFW_STENCIL_BITS>
		<GLFW_ACCUM_RED_BITS final="1" public="1" get="inline" set="null" expr="0x00021007" line="994" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021007</e></m></meta>
		</GLFW_ACCUM_RED_BITS>
		<GLFW_ACCUM_GREEN_BITS final="1" public="1" get="inline" set="null" expr="0x00021008" line="999" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021008</e></m></meta>
		</GLFW_ACCUM_GREEN_BITS>
		<GLFW_ACCUM_BLUE_BITS final="1" public="1" get="inline" set="null" expr="0x00021009" line="1004" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021009</e></m></meta>
		</GLFW_ACCUM_BLUE_BITS>
		<GLFW_ACCUM_ALPHA_BITS final="1" public="1" get="inline" set="null" expr="0x0002100A" line="1009" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100A</e></m></meta>
		</GLFW_ACCUM_ALPHA_BITS>
		<GLFW_AUX_BUFFERS final="1" public="1" get="inline" set="null" expr="0x0002100B" line="1014" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100B</e></m></meta>
		</GLFW_AUX_BUFFERS>
		<GLFW_STEREO final="1" public="1" get="inline" set="null" expr="0x0002100C" line="1019" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100C</e></m></meta>
		</GLFW_STEREO>
		<GLFW_SAMPLES final="1" public="1" get="inline" set="null" expr="0x0002100D" line="1024" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100D</e></m></meta>
		</GLFW_SAMPLES>
		<GLFW_SRGB_CAPABLE final="1" public="1" get="inline" set="null" expr="0x0002100E" line="1029" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100E</e></m></meta>
		</GLFW_SRGB_CAPABLE>
		<GLFW_REFRESH_RATE final="1" public="1" get="inline" set="null" expr="0x0002100F" line="1034" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002100F</e></m></meta>
		</GLFW_REFRESH_RATE>
		<GLFW_DOUBLEBUFFER final="1" public="1" get="inline" set="null" expr="0x00021010" line="1039" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00021010</e></m></meta>
		</GLFW_DOUBLEBUFFER>
		<GLFW_CLIENT_API final="1" public="1" get="inline" set="null" expr="0x00022001" line="1046" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022001</e></m></meta>
		</GLFW_CLIENT_API>
		<GLFW_CONTEXT_VERSION_MAJOR final="1" public="1" get="inline" set="null" expr="0x00022002" line="1052" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022002</e></m></meta>
		</GLFW_CONTEXT_VERSION_MAJOR>
		<GLFW_CONTEXT_VERSION_MINOR final="1" public="1" get="inline" set="null" expr="0x00022003" line="1058" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022003</e></m></meta>
		</GLFW_CONTEXT_VERSION_MINOR>
		<GLFW_CONTEXT_REVISION final="1" public="1" get="inline" set="null" expr="0x00022004" line="1064" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022004</e></m></meta>
		</GLFW_CONTEXT_REVISION>
		<GLFW_CONTEXT_ROBUSTNESS final="1" public="1" get="inline" set="null" expr="0x00022005" line="1070" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022005</e></m></meta>
		</GLFW_CONTEXT_ROBUSTNESS>
		<GLFW_OPENGL_FORWARD_COMPAT final="1" public="1" get="inline" set="null" expr="0x00022006" line="1076" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022006</e></m></meta>
		</GLFW_OPENGL_FORWARD_COMPAT>
		<GLFW_OPENGL_DEBUG_CONTEXT final="1" public="1" get="inline" set="null" expr="0x00022007" line="1082" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022007</e></m></meta>
		</GLFW_OPENGL_DEBUG_CONTEXT>
		<GLFW_OPENGL_PROFILE final="1" public="1" get="inline" set="null" expr="0x00022008" line="1088" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022008</e></m></meta>
		</GLFW_OPENGL_PROFILE>
		<GLFW_CONTEXT_RELEASE_BEHAVIOR final="1" public="1" get="inline" set="null" expr="0x00022009" line="1094" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00022009</e></m></meta>
		</GLFW_CONTEXT_RELEASE_BEHAVIOR>
		<GLFW_CONTEXT_NO_ERROR final="1" public="1" get="inline" set="null" expr="0x0002200A" line="1100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002200A</e></m></meta>
		</GLFW_CONTEXT_NO_ERROR>
		<GLFW_CONTEXT_CREATION_API final="1" public="1" get="inline" set="null" expr="0x0002200B" line="1106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002200B</e></m></meta>
		</GLFW_CONTEXT_CREATION_API>
		<GLFW_SCALE_TO_MONITOR final="1" public="1" get="inline" set="null" expr="0x0002200C" line="1110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002200C</e></m></meta>
		</GLFW_SCALE_TO_MONITOR>
		<GLFW_COCOA_RETINA_FRAMEBUFFER final="1" public="1" get="inline" set="null" expr="0x00023001" line="1114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00023001</e></m></meta>
		</GLFW_COCOA_RETINA_FRAMEBUFFER>
		<GLFW_COCOA_FRAME_NAME final="1" public="1" get="inline" set="null" expr="0x00023002" line="1118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00023002</e></m></meta>
		</GLFW_COCOA_FRAME_NAME>
		<GLFW_COCOA_GRAPHICS_SWITCHING final="1" public="1" get="inline" set="null" expr="0x00023003" line="1122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00023003</e></m></meta>
		</GLFW_COCOA_GRAPHICS_SWITCHING>
		<GLFW_X11_CLASS_NAME final="1" public="1" get="inline" set="null" expr="0x00024001" line="1126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00024001</e></m></meta>
		</GLFW_X11_CLASS_NAME>
		<GLFW_X11_INSTANCE_NAME final="1" public="1" get="inline" set="null" expr="0x00024002" line="1130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00024002</e></m></meta>
		</GLFW_X11_INSTANCE_NAME>
		<GLFW_NO_API final="1" public="1" get="inline" set="null" expr="0" line="1133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_NO_API>
		<GLFW_OPENGL_API final="1" public="1" get="inline" set="null" expr="0x00030001" line="1134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00030001</e></m></meta>
		</GLFW_OPENGL_API>
		<GLFW_OPENGL_ES_API final="1" public="1" get="inline" set="null" expr="0x00030002" line="1135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00030002</e></m></meta>
		</GLFW_OPENGL_ES_API>
		<GLFW_NO_ROBUSTNESS final="1" public="1" get="inline" set="null" expr="0" line="1137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_NO_ROBUSTNESS>
		<GLFW_NO_RESET_NOTIFICATION final="1" public="1" get="inline" set="null" expr="0x00031001" line="1138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00031001</e></m></meta>
		</GLFW_NO_RESET_NOTIFICATION>
		<GLFW_LOSE_CONTEXT_ON_RESET final="1" public="1" get="inline" set="null" expr="0x00031002" line="1139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00031002</e></m></meta>
		</GLFW_LOSE_CONTEXT_ON_RESET>
		<GLFW_OPENGL_ANY_PROFILE final="1" public="1" get="inline" set="null" expr="0" line="1141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_OPENGL_ANY_PROFILE>
		<GLFW_OPENGL_CORE_PROFILE final="1" public="1" get="inline" set="null" expr="0x00032001" line="1142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00032001</e></m></meta>
		</GLFW_OPENGL_CORE_PROFILE>
		<GLFW_OPENGL_COMPAT_PROFILE final="1" public="1" get="inline" set="null" expr="0x00032002" line="1143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00032002</e></m></meta>
		</GLFW_OPENGL_COMPAT_PROFILE>
		<GLFW_CURSOR final="1" public="1" get="inline" set="null" expr="0x00033001" line="1145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00033001</e></m></meta>
		</GLFW_CURSOR>
		<GLFW_STICKY_KEYS final="1" public="1" get="inline" set="null" expr="0x00033002" line="1146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00033002</e></m></meta>
		</GLFW_STICKY_KEYS>
		<GLFW_STICKY_MOUSE_BUTTONS final="1" public="1" get="inline" set="null" expr="0x00033003" line="1147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00033003</e></m></meta>
		</GLFW_STICKY_MOUSE_BUTTONS>
		<GLFW_LOCK_KEY_MODS final="1" public="1" get="inline" set="null" expr="0x00033004" line="1148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00033004</e></m></meta>
		</GLFW_LOCK_KEY_MODS>
		<GLFW_RAW_MOUSE_MOTION final="1" public="1" get="inline" set="null" expr="0x00033005" line="1149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00033005</e></m></meta>
		</GLFW_RAW_MOUSE_MOTION>
		<GLFW_CURSOR_NORMAL final="1" public="1" get="inline" set="null" expr="0x00034001" line="1151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00034001</e></m></meta>
		</GLFW_CURSOR_NORMAL>
		<GLFW_CURSOR_HIDDEN final="1" public="1" get="inline" set="null" expr="0x00034002" line="1152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00034002</e></m></meta>
		</GLFW_CURSOR_HIDDEN>
		<GLFW_CURSOR_DISABLED final="1" public="1" get="inline" set="null" expr="0x00034003" line="1153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00034003</e></m></meta>
		</GLFW_CURSOR_DISABLED>
		<GLFW_ANY_RELEASE_BEHAVIOR final="1" public="1" get="inline" set="null" expr="0" line="1155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</GLFW_ANY_RELEASE_BEHAVIOR>
		<GLFW_RELEASE_BEHAVIOR_FLUSH final="1" public="1" get="inline" set="null" expr="0x00035001" line="1156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00035001</e></m></meta>
		</GLFW_RELEASE_BEHAVIOR_FLUSH>
		<GLFW_RELEASE_BEHAVIOR_NONE final="1" public="1" get="inline" set="null" expr="0x00035002" line="1157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00035002</e></m></meta>
		</GLFW_RELEASE_BEHAVIOR_NONE>
		<GLFW_NATIVE_CONTEXT_API final="1" public="1" get="inline" set="null" expr="0x00036001" line="1159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036001</e></m></meta>
		</GLFW_NATIVE_CONTEXT_API>
		<GLFW_EGL_CONTEXT_API final="1" public="1" get="inline" set="null" expr="0x00036002" line="1160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036002</e></m></meta>
		</GLFW_EGL_CONTEXT_API>
		<GLFW_OSMESA_CONTEXT_API final="1" public="1" get="inline" set="null" expr="0x00036003" line="1161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036003</e></m></meta>
		</GLFW_OSMESA_CONTEXT_API>
		<GLFW_ARROW_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036001" line="1175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036001</e></m></meta>
		</GLFW_ARROW_CURSOR>
		<GLFW_IBEAM_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036002" line="1180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036002</e></m></meta>
		</GLFW_IBEAM_CURSOR>
		<GLFW_CROSSHAIR_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036003" line="1185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036003</e></m></meta>
		</GLFW_CROSSHAIR_CURSOR>
		<GLFW_HAND_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036004" line="1190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036004</e></m></meta>
		</GLFW_HAND_CURSOR>
		<GLFW_HRESIZE_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036005" line="1195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036005</e></m></meta>
		</GLFW_HRESIZE_CURSOR>
		<GLFW_VRESIZE_CURSOR final="1" public="1" get="inline" set="null" expr="0x00036006" line="1200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00036006</e></m></meta>
		</GLFW_VRESIZE_CURSOR>
		<GLFW_CONNECTED final="1" public="1" get="inline" set="null" expr="0x00040001" line="1203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00040001</e></m></meta>
		</GLFW_CONNECTED>
		<GLFW_DISCONNECTED final="1" public="1" get="inline" set="null" expr="0x00040002" line="1204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00040002</e></m></meta>
		</GLFW_DISCONNECTED>
		<GLFW_JOYSTICK_HAT_BUTTONS final="1" public="1" get="inline" set="null" expr="0x00050001" line="1212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00050001</e></m></meta>
		</GLFW_JOYSTICK_HAT_BUTTONS>
		<GLFW_COCOA_CHDIR_RESOURCES final="1" public="1" get="inline" set="null" expr="0x00051001" line="1217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00051001</e></m></meta>
		</GLFW_COCOA_CHDIR_RESOURCES>
		<GLFW_COCOA_MENUBAR final="1" public="1" get="inline" set="null" expr="0x00051002" line="1222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00051002</e></m></meta>
		</GLFW_COCOA_MENUBAR>
		<GLFW_DONT_CARE final="1" public="1" get="inline" set="null" expr="1" line="1225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</GLFW_DONT_CARE>
		<force_include public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"void"</e></m></meta>
		</force_include>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":include"><e>"linc_glfw.h"</e></m>
		</meta>
	</class>
	<abstract path="gluon.webgl.Extension" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/Extension.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._Extension.Extension_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/Extension.hx" private="1" module="gluon.webgl.Extension" extern="1" final="1">
	<ANGLE_instanced_arrays public="1" get="inline" set="null" expr="cast &quot;ANGLE_instanced_arrays&quot;" line="6" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.ANGLEInstancedArrays"/></x>
		<meta>
			<m n=":value"><e>cast "ANGLE_instanced_arrays"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ANGLE_instanced_arrays>
	<EXT_blend_minmax public="1" get="inline" set="null" expr="cast &quot;EXT_blend_minmax&quot;" line="7" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTBlendMinmax"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_blend_minmax"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_blend_minmax>
	<EXT_color_buffer_float public="1" get="inline" set="null" expr="cast &quot;EXT_color_buffer_float&quot;" line="8" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTColorBufferFloat"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_color_buffer_float"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_color_buffer_float>
	<EXT_color_buffer_half_float public="1" get="inline" set="null" expr="cast &quot;EXT_color_buffer_half_float&quot;" line="9" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTColorBufferHalfFloat"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_color_buffer_half_float"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_color_buffer_half_float>
	<EXT_disjoint_timer_query public="1" get="inline" set="null" expr="cast &quot;EXT_disjoint_timer_query&quot;" line="10" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTDisjointTimerQuery"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_disjoint_timer_query"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_disjoint_timer_query>
	<EXT_frag_depth public="1" get="inline" set="null" expr="cast &quot;EXT_frag_depth&quot;" line="11" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTFragDepth"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_frag_depth"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_frag_depth>
	<EXT_sRGB public="1" get="inline" set="null" expr="cast &quot;EXT_sRGB&quot;" line="12" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTSrgb"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_sRGB"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_sRGB>
	<EXT_shader_texture_lod public="1" get="inline" set="null" expr="cast &quot;EXT_shader_texture_lod&quot;" line="13" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTShaderTextureLod"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_shader_texture_lod"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_shader_texture_lod>
	<EXT_texture_filter_anisotropic public="1" get="inline" set="null" expr="cast &quot;EXT_texture_filter_anisotropic&quot;" line="14" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTTextureFilterAnisotropic"/></x>
		<meta>
			<m n=":value"><e>cast "EXT_texture_filter_anisotropic"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXT_texture_filter_anisotropic>
	<OES_element_index_uint public="1" get="inline" set="null" expr="cast &quot;OES_element_index_uint&quot;" line="15" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESElementIndexUint"/></x>
		<meta>
			<m n=":value"><e>cast "OES_element_index_uint"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_element_index_uint>
	<OES_standard_derivatives public="1" get="inline" set="null" expr="cast &quot;OES_standard_derivatives&quot;" line="16" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESStandardDerivatives"/></x>
		<meta>
			<m n=":value"><e>cast "OES_standard_derivatives"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_standard_derivatives>
	<OES_texture_float public="1" get="inline" set="null" expr="cast &quot;OES_texture_float&quot;" line="17" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureFloat"/></x>
		<meta>
			<m n=":value"><e>cast "OES_texture_float"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_texture_float>
	<OES_texture_float_linear public="1" get="inline" set="null" expr="cast &quot;OES_texture_float_linear&quot;" line="18" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureFloatLinear"/></x>
		<meta>
			<m n=":value"><e>cast "OES_texture_float_linear"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_texture_float_linear>
	<OES_texture_half_float public="1" get="inline" set="null" expr="cast &quot;OES_texture_half_float&quot;" line="19" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureHalfFloat"/></x>
		<meta>
			<m n=":value"><e>cast "OES_texture_half_float"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_texture_half_float>
	<OES_texture_half_float_linear public="1" get="inline" set="null" expr="cast &quot;OES_texture_half_float_linear&quot;" line="20" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureHalfFloatLinear"/></x>
		<meta>
			<m n=":value"><e>cast "OES_texture_half_float_linear"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_texture_half_float_linear>
	<OES_vertex_array_object public="1" get="inline" set="null" expr="cast &quot;OES_vertex_array_object&quot;" line="21" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESVertexArrayObject"/></x>
		<meta>
			<m n=":value"><e>cast "OES_vertex_array_object"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OES_vertex_array_object>
	<WEBGL_color_buffer_float public="1" get="inline" set="null" expr="cast &quot;WEBGL_color_buffer_float&quot;" line="22" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLColorBufferFloat"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_color_buffer_float"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_color_buffer_float>
	<WEBGL_compressed_texture_astc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_astc&quot;" line="23" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureAstc"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_astc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_astc>
	<WEBGL_compressed_texture_atc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_atc&quot;" line="24" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureAtc"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_atc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_atc>
	<WEBGL_compressed_texture_etc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_etc&quot;" line="25" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureEtc"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_etc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_etc>
	<WEBGL_compressed_texture_etc1 public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_etc1&quot;" line="26" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureEtc1"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_etc1"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_etc1>
	<WEBGL_compressed_texture_pvrtc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_pvrtc&quot;" line="27" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTexturePvrtc"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_pvrtc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_pvrtc>
	<WEBGL_compressed_texture_s3tc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_s3tc&quot;" line="28" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureS3tc"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_s3tc"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_s3tc>
	<WEBGL_compressed_texture_s3tc_srgb public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_s3tc_srgb&quot;" line="29" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureS3tcSrgb"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_compressed_texture_s3tc_srgb"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_compressed_texture_s3tc_srgb>
	<WEBGL_debug_renderer_info public="1" get="inline" set="null" expr="cast &quot;WEBGL_debug_renderer_info&quot;" line="30" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDebugRendererInfo"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_debug_renderer_info"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_debug_renderer_info>
	<WEBGL_debug_shaders public="1" get="inline" set="null" expr="cast &quot;WEBGL_debug_shaders&quot;" line="31" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDebugShaders"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_debug_shaders"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_debug_shaders>
	<WEBGL_depth_texture public="1" get="inline" set="null" expr="cast &quot;WEBGL_depth_texture&quot;" line="32" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDepthTexture"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_depth_texture"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_depth_texture>
	<WEBGL_draw_buffers public="1" get="inline" set="null" expr="cast &quot;WEBGL_draw_buffers&quot;" line="33" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDrawBuffers"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_draw_buffers"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_draw_buffers>
	<WEBGL_lose_context public="1" get="inline" set="null" expr="cast &quot;WEBGL_lose_context&quot;" line="34" static="1">
		<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLLoseContext"/></x>
		<meta>
			<m n=":value"><e>cast "WEBGL_lose_context"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEBGL_lose_context>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._Extension.Extension_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/Extension.hx" private="1" module="gluon.webgl.Extension" extern="1" final="1">
		<ANGLE_instanced_arrays public="1" get="inline" set="null" expr="cast &quot;ANGLE_instanced_arrays&quot;" line="6" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.ANGLEInstancedArrays"/></x>
			<meta>
				<m n=":value"><e>cast "ANGLE_instanced_arrays"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ANGLE_instanced_arrays>
		<EXT_blend_minmax public="1" get="inline" set="null" expr="cast &quot;EXT_blend_minmax&quot;" line="7" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTBlendMinmax"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_blend_minmax"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_blend_minmax>
		<EXT_color_buffer_float public="1" get="inline" set="null" expr="cast &quot;EXT_color_buffer_float&quot;" line="8" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTColorBufferFloat"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_color_buffer_float"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_color_buffer_float>
		<EXT_color_buffer_half_float public="1" get="inline" set="null" expr="cast &quot;EXT_color_buffer_half_float&quot;" line="9" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTColorBufferHalfFloat"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_color_buffer_half_float"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_color_buffer_half_float>
		<EXT_disjoint_timer_query public="1" get="inline" set="null" expr="cast &quot;EXT_disjoint_timer_query&quot;" line="10" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTDisjointTimerQuery"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_disjoint_timer_query"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_disjoint_timer_query>
		<EXT_frag_depth public="1" get="inline" set="null" expr="cast &quot;EXT_frag_depth&quot;" line="11" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTFragDepth"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_frag_depth"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_frag_depth>
		<EXT_sRGB public="1" get="inline" set="null" expr="cast &quot;EXT_sRGB&quot;" line="12" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTSrgb"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_sRGB"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_sRGB>
		<EXT_shader_texture_lod public="1" get="inline" set="null" expr="cast &quot;EXT_shader_texture_lod&quot;" line="13" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTShaderTextureLod"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_shader_texture_lod"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_shader_texture_lod>
		<EXT_texture_filter_anisotropic public="1" get="inline" set="null" expr="cast &quot;EXT_texture_filter_anisotropic&quot;" line="14" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.EXTTextureFilterAnisotropic"/></x>
			<meta>
				<m n=":value"><e>cast "EXT_texture_filter_anisotropic"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXT_texture_filter_anisotropic>
		<OES_element_index_uint public="1" get="inline" set="null" expr="cast &quot;OES_element_index_uint&quot;" line="15" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESElementIndexUint"/></x>
			<meta>
				<m n=":value"><e>cast "OES_element_index_uint"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_element_index_uint>
		<OES_standard_derivatives public="1" get="inline" set="null" expr="cast &quot;OES_standard_derivatives&quot;" line="16" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESStandardDerivatives"/></x>
			<meta>
				<m n=":value"><e>cast "OES_standard_derivatives"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_standard_derivatives>
		<OES_texture_float public="1" get="inline" set="null" expr="cast &quot;OES_texture_float&quot;" line="17" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureFloat"/></x>
			<meta>
				<m n=":value"><e>cast "OES_texture_float"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_texture_float>
		<OES_texture_float_linear public="1" get="inline" set="null" expr="cast &quot;OES_texture_float_linear&quot;" line="18" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureFloatLinear"/></x>
			<meta>
				<m n=":value"><e>cast "OES_texture_float_linear"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_texture_float_linear>
		<OES_texture_half_float public="1" get="inline" set="null" expr="cast &quot;OES_texture_half_float&quot;" line="19" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureHalfFloat"/></x>
			<meta>
				<m n=":value"><e>cast "OES_texture_half_float"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_texture_half_float>
		<OES_texture_half_float_linear public="1" get="inline" set="null" expr="cast &quot;OES_texture_half_float_linear&quot;" line="20" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESTextureHalfFloatLinear"/></x>
			<meta>
				<m n=":value"><e>cast "OES_texture_half_float_linear"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_texture_half_float_linear>
		<OES_vertex_array_object public="1" get="inline" set="null" expr="cast &quot;OES_vertex_array_object&quot;" line="21" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.OESVertexArrayObject"/></x>
			<meta>
				<m n=":value"><e>cast "OES_vertex_array_object"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OES_vertex_array_object>
		<WEBGL_color_buffer_float public="1" get="inline" set="null" expr="cast &quot;WEBGL_color_buffer_float&quot;" line="22" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLColorBufferFloat"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_color_buffer_float"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_color_buffer_float>
		<WEBGL_compressed_texture_astc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_astc&quot;" line="23" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureAstc"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_astc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_astc>
		<WEBGL_compressed_texture_atc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_atc&quot;" line="24" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureAtc"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_atc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_atc>
		<WEBGL_compressed_texture_etc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_etc&quot;" line="25" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureEtc"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_etc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_etc>
		<WEBGL_compressed_texture_etc1 public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_etc1&quot;" line="26" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureEtc1"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_etc1"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_etc1>
		<WEBGL_compressed_texture_pvrtc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_pvrtc&quot;" line="27" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTexturePvrtc"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_pvrtc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_pvrtc>
		<WEBGL_compressed_texture_s3tc public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_s3tc&quot;" line="28" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureS3tc"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_s3tc"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_s3tc>
		<WEBGL_compressed_texture_s3tc_srgb public="1" get="inline" set="null" expr="cast &quot;WEBGL_compressed_texture_s3tc_srgb&quot;" line="29" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLCompressedTextureS3tcSrgb"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_compressed_texture_s3tc_srgb"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_compressed_texture_s3tc_srgb>
		<WEBGL_debug_renderer_info public="1" get="inline" set="null" expr="cast &quot;WEBGL_debug_renderer_info&quot;" line="30" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDebugRendererInfo"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_debug_renderer_info"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_debug_renderer_info>
		<WEBGL_debug_shaders public="1" get="inline" set="null" expr="cast &quot;WEBGL_debug_shaders&quot;" line="31" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDebugShaders"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_debug_shaders"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_debug_shaders>
		<WEBGL_depth_texture public="1" get="inline" set="null" expr="cast &quot;WEBGL_depth_texture&quot;" line="32" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDepthTexture"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_depth_texture"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_depth_texture>
		<WEBGL_draw_buffers public="1" get="inline" set="null" expr="cast &quot;WEBGL_draw_buffers&quot;" line="33" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLDrawBuffers"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_draw_buffers"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_draw_buffers>
		<WEBGL_lose_context public="1" get="inline" set="null" expr="cast &quot;WEBGL_lose_context&quot;" line="34" static="1">
			<x path="gluon.webgl.Extension"><t path="gluon.webgl.extension.WEBGLLoseContext"/></x>
			<meta>
				<m n=":value"><e>cast "WEBGL_lose_context"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEBGL_lose_context>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="gluon.webgl.GLActiveInfo" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLActiveInfo.hx"><a>
	<type set="null"><x path="gluon.webgl.UniformType"/></type>
	<size set="null"><t path="gluon.webgl.GLint"/></size>
	<name set="null"><c path="String"/></name>
</a></typedef>
	<typedef path="gluon.webgl.GLBuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLBuffer.hx"><c path="gluon.webgl.native.GLBuffer"/></typedef>
	<typedef path="gluon.webgl.GLenum" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.UInt32"/></typedef>
	<typedef path="gluon.webgl.GLbitfield" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.UInt32"/></typedef>
	<typedef path="gluon.webgl.GLbyte" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int8"/></typedef>
	<typedef path="gluon.webgl.GLshort" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int16"/></typedef>
	<typedef path="gluon.webgl.GLint" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int32"/></typedef>
	<typedef path="gluon.webgl.GLsizei" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int32"/></typedef>
	<typedef path="gluon.webgl.GLintptr" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int64"/></typedef>
	<typedef path="gluon.webgl.GLsizeiptr" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Int64"/></typedef>
	<typedef path="gluon.webgl.GLubyte" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.UInt8"/></typedef>
	<typedef path="gluon.webgl.GLushort" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.UInt16"/></typedef>
	<typedef path="gluon.webgl.GLuint" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.UInt32"/></typedef>
	<typedef path="gluon.webgl.GLfloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Float32"/></typedef>
	<typedef path="gluon.webgl.GLclampf" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="cpp.Float32"/></typedef>
	<typedef path="gluon.webgl.GLArrayBuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.ArrayBuffer"/></typedef>
	<typedef path="gluon.webgl.GLArrayBufferView" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><c path="typedarray.ArrayBufferView"/></typedef>
	<typedef path="gluon.webgl.GLInt8Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Int8Array"/></typedef>
	<typedef path="gluon.webgl.GLUint8Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Uint8Array"/></typedef>
	<typedef path="gluon.webgl.GLUint8ClampedArray" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Uint8ClampedArray"/></typedef>
	<typedef path="gluon.webgl.GLInt16Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Int16Array"/></typedef>
	<typedef path="gluon.webgl.GLUint16Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Uint16Array"/></typedef>
	<typedef path="gluon.webgl.GLInt32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Int32Array"/></typedef>
	<typedef path="gluon.webgl.GLUint32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Uint32Array"/></typedef>
	<typedef path="gluon.webgl.GLFloat32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Float32Array"/></typedef>
	<typedef path="gluon.webgl.GLFloat64Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext"><x path="typedarray.Float64Array"/></typedef>
	<typedef path="gluon.webgl._GLContext.InternalGLContext" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext"><c path="gluon.webgl.native.GLContext"/></typedef>
	<typedef path="gluon.webgl._GLContext.InternalConstGLContext" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext"><c path="gluon.webgl.native.GLContext"/></typedef>
	<abstract path="gluon.webgl.GLContext" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx">
		<from><icast><t path="gluon.webgl._GLContext.InternalGLContext"/></icast></from>
		<this><t path="gluon.webgl._GLContext.InternalGLContext"/></this>
		<to><icast><t path="gluon.webgl._GLContext.InternalGLContext"/></icast></to>
		<impl><class path="gluon.webgl._GLContext.GLContext_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" final="1">
	<getContextAttributes public="1" get="inline" set="null" line="91" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLContextAttributes"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</getContextAttributes>
	<getSupportedExtensions public="1" get="inline" set="null" line="94" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<c path="Array"><c path="String"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getSupportedExtensions>
	<getExtension public="1" params="T" get="inline" set="null" line="97" static="1">
		<f a="this:name">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Extension"><c path="getExtension.T"/></x>
			<x path="Null"><c path="getExtension.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<isContextLost public="1" get="inline" set="null" line="100" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isContextLost>
	<activeTexture public="1" get="inline" set="null" line="103" static="1">
		<f a="this:unit">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureUnit"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="106" static="1">
		<f a="this:program:shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<t path="gluon.webgl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<bindAttribLocation public="1" get="inline" set="null" line="109" static="1">
		<f a="this:program:index:name">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<t path="gluon.webgl.GLuint"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="112" static="1">
		<f a="this:target:?buffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BufferTarget"/>
			<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindFramebuffer public="1" get="inline" set="null" line="115" static="1">
		<f a="this:target:?framebuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FramebufferTarget"/>
			<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="118" static="1">
		<f a="this:target:?renderbuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.RenderbufferTarget"/>
			<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindTexture public="1" get="inline" set="null" line="121" static="1">
		<f a="this:target:?texture">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<blendColor public="1" get="inline" set="null" line="124" static="1">
		<f a="this:red:green:blue:alpha">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="127" static="1">
		<f a="this:mode">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BlendEquation"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="130" static="1">
		<f a="this:modeRGB:modeAlpha">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BlendEquation"/>
			<x path="gluon.webgl.BlendEquation"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="133" static="1">
		<f a="this:sfactor:dfactor">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="136" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="gluon.webgl.BlendFactor"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<bufferData public="1" get="inline" set="null" line="139" static="1">
		<f a="this:target:data:usage">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BufferTarget"/>
			<x path="typedarray.BufferSource"/>
			<x path="gluon.webgl.BufferUsage"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferDataOfSize public="1" get="inline" set="null" line="142" static="1">
		<f a="this:target:size:usage">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BufferTarget"/>
			<x path="Int"/>
			<x path="gluon.webgl.BufferUsage"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferDataOfSize>
	<bufferSubData public="1" get="inline" set="null" line="150" static="1">
		<f a="this:target:offset:data">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BufferTarget"/>
			<t path="gluon.webgl.GLintptr"/>
			<x path="typedarray.BufferSource"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="153" static="1">
		<f a="this:target">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FramebufferTarget"/>
			<x path="gluon.webgl.FramebufferStatus"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="156" static="1">
		<f a="this:mask">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ClearBufferMask"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearColor public="1" get="inline" set="null" line="159" static="1">
		<f a="this:red:green:blue:alpha">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepth public="1" get="inline" set="null" line="162" static="1">
		<f a="this:depth">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLclampf"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepth>
	<clearStencil public="1" get="inline" set="null" line="165" static="1">
		<f a="this:s">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<colorMask public="1" get="inline" set="null" line="168" static="1">
		<f a="this:red:green:blue:alpha">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="171" static="1">
		<f a="this:shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" get="inline" set="null" line="174" static="1">
		<f a="this:target:level:internalformat:width:height:border:data">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<x path="gluon.webgl.PixelFormat"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="177" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:data">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="gluon.webgl.PixelFormat"/>
			<t path="gluon.webgl.GLArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<copyTexImage2D public="1" get="inline" set="null" line="180" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<x path="gluon.webgl.PixelFormat"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="183" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<createBuffer public="1" get="inline" set="null" line="186" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="189" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="192" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createRenderbuffer public="1" get="inline" set="null" line="195" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createShader public="1" get="inline" set="null" line="198" static="1">
		<f a="this:type">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ShaderType"/>
			<x path="Null"><t path="gluon.webgl.GLShader"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="201" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<cullFace public="1" get="inline" set="null" line="204" static="1">
		<f a="this:mode">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.CullFaceMode"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="207" static="1">
		<f a="this:?buffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="210" static="1">
		<f a="this:?framebuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="213" static="1">
		<f a="this:?program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteRenderbuffer public="1" get="inline" set="null" line="216" static="1">
		<f a="this:?renderbuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteShader public="1" get="inline" set="null" line="219" static="1">
		<f a="this:?shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLShader"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteTexture public="1" get="inline" set="null" line="222" static="1">
		<f a="this:?texture">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<depthFunc public="1" get="inline" set="null" line="225" static="1">
		<f a="this:func">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ComparisonFunction"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="228" static="1">
		<f a="this:flag">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRange public="1" get="inline" set="null" line="231" static="1">
		<f a="this:zNear:zFar">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLclampf"/>
			<t path="gluon.webgl.GLclampf"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRange>
	<detachShader public="1" get="inline" set="null" line="234" static="1">
		<f a="this:program:shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<t path="gluon.webgl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="237" static="1">
		<f a="this:cap">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Capability"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="240" static="1">
		<f a="this:index">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="243" static="1">
		<f a="this:mode:first:count">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.DrawMode"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawElements public="1" get="inline" set="null" line="246" static="1">
		<f a="this:mode:count:type:offset">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.DrawMode"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="gluon.webgl.DataType"/>
			<t path="gluon.webgl.GLintptr"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<enable public="1" get="inline" set="null" line="249" static="1">
		<f a="this:cap">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Capability"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="252" static="1">
		<f a="this:index">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<finish public="1" get="inline" set="null" line="255" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="258" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="261" static="1">
		<f a="this:target:attachment:renderbuffertarget:?renderbuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FramebufferTarget"/>
			<x path="gluon.webgl.FramebufferAttachement"/>
			<x path="gluon.webgl.RenderbufferTarget"/>
			<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="264" static="1">
		<f a="this:target:attachment:textarget:?texture:level">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FramebufferTarget"/>
			<x path="gluon.webgl.FramebufferAttachement"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<frontFace public="1" get="inline" set="null" line="267" static="1">
		<f a="this:mode">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FrontFaceDirection"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<generateMipmap public="1" get="inline" set="null" line="270" static="1">
		<f a="this:target">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<getActiveAttrib public="1" get="inline" set="null" line="273" static="1">
		<f a="this:program:index">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="276" static="1">
		<f a="this:program:index">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getAttachedShaders public="1" get="inline" set="null" line="279" static="1">
		<f a="this:program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<c path="Array"><t path="gluon.webgl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="282" static="1">
		<f a="this:program:name">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<c path="String"/>
			<t path="gluon.webgl.GLint"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBufferParameter public="1" params="T" get="inline" set="null" line="285" static="1">
		<f a="this:target:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.BufferTarget"/>
			<x path="gluon.webgl.BufferParameter"><c path="getBufferParameter.T"/></x>
			<c path="getBufferParameter.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameter>
	<getParameter public="1" params="T" get="inline" set="null" line="288" static="1">
		<f a="this:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Parameter"><c path="getParameter.T"/></x>
			<x path="Null"><c path="getParameter.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</getParameter>
	<getError public="1" get="inline" set="null" line="291" static="1">
		<f a="this">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ErrorCode"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getFramebufferAttachmentParameter public="1" params="T" get="inline" set="null" line="294" static="1">
		<f a="this:target:attachment:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.FramebufferTarget"/>
			<x path="gluon.webgl.FramebufferAttachement"/>
			<x path="gluon.webgl.FramebufferAttachmentParameter"><c path="getFramebufferAttachmentParameter.T"/></x>
			<x path="Null"><c path="getFramebufferAttachmentParameter.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameter>
	<getProgramParameter public="1" params="T" get="inline" set="null" line="297" static="1">
		<f a="this:program:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<x path="gluon.webgl.ProgramParameter"><c path="getProgramParameter.T"/></x>
			<c path="getProgramParameter.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramParameter>
	<getProgramInfoLog public="1" get="inline" set="null" line="300" static="1">
		<f a="this:program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getRenderbufferParameter public="1" params="T" get="inline" set="null" line="303" static="1">
		<f a="this:target:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.RenderbufferTarget"/>
			<x path="gluon.webgl.RenderbufferParameter"><c path="getRenderbufferParameter.T"/></x>
			<c path="getRenderbufferParameter.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameter>
	<getShaderParameter public="1" params="T" get="inline" set="null" line="306" static="1">
		<f a="this:shader:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLShader"/>
			<x path="gluon.webgl.ShaderParameter"><c path="getShaderParameter.T"/></x>
			<c path="getShaderParameter.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderParameter>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="309" static="1">
		<f a="this:shadertype:precisiontype">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ShaderType"/>
			<x path="gluon.webgl.PrecisionType"/>
			<t path="gluon.webgl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderInfoLog public="1" get="inline" set="null" line="312" static="1">
		<f a="this:shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderSource public="1" get="inline" set="null" line="315" static="1">
		<f a="this:shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getTexParameter public="1" params="T" get="inline" set="null" line="318" static="1">
		<f a="this:target:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="gluon.webgl.TextureParameter"><c path="getTexParameter.T"/></x>
			<c path="getTexParameter.T"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameter>
	<getUniform public="1" get="inline" set="null" line="321" static="1">
		<f a="this:program:location">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniform>
	<getUniformLocation public="1" get="inline" set="null" line="324" static="1">
		<f a="this:program:name">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<c path="String"/>
			<x path="gluon.webgl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttrib public="1" params="T" get="inline" set="null" line="327" static="1">
		<f a="this:index:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="gluon.webgl.VertexAttributeParameter"><c path="getVertexAttrib.T"/></x>
			<x path="Null"><c path="getVertexAttrib.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttrib>
	<getVertexAttribOffset public="1" get="inline" set="null" line="330" static="1">
		<f a="this:index:pname">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="gluon.webgl.VertexAttributeOffsetParameter"/>
			<t path="gluon.webgl.GLsizeiptr"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribOffset>
	<hint public="1" get="inline" set="null" line="333" static="1">
		<f a="this:target:mode">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.HintTarget"/>
			<x path="gluon.webgl.HintMode"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<isEnabled public="1" get="inline" set="null" line="336" static="1">
		<f a="this:cap">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Capability"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isBuffer public="1" get="inline" set="null" line="339" static="1">
		<f a="this:?buffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isFramebuffer public="1" get="inline" set="null" line="342" static="1">
		<f a="this:?framebuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="345" static="1">
		<f a="this:?program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isRenderbuffer public="1" get="inline" set="null" line="348" static="1">
		<f a="this:?renderbuffer">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isShader public="1" get="inline" set="null" line="351" static="1">
		<f a="this:?shader">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLShader"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isTexture public="1" get="inline" set="null" line="354" static="1">
		<f a="this:?texture">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<lineWidth public="1" get="inline" set="null" line="357" static="1">
		<f a="this:width">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="360" static="1">
		<f a="this:program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<pixelStorei public="1" params="T" get="inline" set="null" line="363" static="1">
		<f a="this:pname:param">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.PixelStoreParameter"><c path="pixelStorei.T"/></x>
			<c path="pixelStorei.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="366" static="1">
		<f a="this:factor:units">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<readPixels public="1" get="inline" set="null" line="369" static="1">
		<f a="this:x:y:width:height:format:type:pixels">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="gluon.webgl.PixelFormat"/>
			<x path="gluon.webgl.PixelDataType"/>
			<t path="gluon.webgl.GLArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<renderbufferStorage public="1" get="inline" set="null" line="372" static="1">
		<f a="this:target:internalformat:width:height">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.RenderbufferTarget"/>
			<x path="gluon.webgl.RenderbufferFormat"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<sampleCoverage public="1" get="inline" set="null" line="375" static="1">
		<f a="this:value:invert">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLclampf"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<scissor public="1" get="inline" set="null" line="378" static="1">
		<f a="this:x:y:width:height">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderSource public="1" get="inline" set="null" line="381" static="1">
		<f a="this:shader:source">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="384" static="1">
		<f a="this:func:ref:mask">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.ComparisonFunction"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="387" static="1">
		<f a="this:face:func:ref:mask">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.CullFaceMode"/>
			<x path="gluon.webgl.ComparisonFunction"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="390" static="1">
		<f a="this:mask">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="393" static="1">
		<f a="this:face:mask">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.CullFaceMode"/>
			<t path="gluon.webgl.GLuint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="396" static="1">
		<f a="this:fail:zfail:zpass">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.Operation"/>
			<x path="gluon.webgl.Operation"/>
			<x path="gluon.webgl.Operation"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="399" static="1">
		<f a="this:face:fail:zfail:zpass">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.CullFaceMode"/>
			<x path="gluon.webgl.Operation"/>
			<x path="gluon.webgl.Operation"/>
			<x path="gluon.webgl.Operation"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="402" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:pixels">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLint"/>
			<x path="gluon.webgl.PixelFormat"/>
			<x path="gluon.webgl.PixelDataType"/>
			<t path="gluon.webgl.GLArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texImage2DPtr public="1" get="inline" set="null" line="406" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:pixels">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLint"/>
			<x path="gluon.webgl.PixelFormat"/>
			<x path="gluon.webgl.PixelDataType"/>
			<c path="cpp.RawConstPointer"><c path="cpp.Void"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2DPtr>
	<texParameterf public="1" params="T" get="inline" set="null" line="415" static="1">
		<f a="this:target:pname:param">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="gluon.webgl.TextureParameter"><c path="texParameterf.T"/></x>
			<c path="texParameterf.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" params="T" get="inline" set="null" line="418" static="1">
		<f a="this:target:pname:param">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<x path="gluon.webgl.TextureParameter"><c path="texParameteri.T"/></x>
			<c path="texParameteri.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="421" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:pixels">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.TextureTarget"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="gluon.webgl.PixelFormat"/>
			<x path="gluon.webgl.PixelDataType"/>
			<t path="gluon.webgl.GLArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage2D>
	<uniform1f public="1" get="inline" set="null" line="429" static="1">
		<f a="this:location:x">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="432" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="435" static="1">
		<f a="this:location:x">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="438" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform2f public="1" get="inline" set="null" line="441" static="1">
		<f a="this:location:x:y">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" get="inline" set="null" line="444" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="447" static="1">
		<f a="this:location:x:y">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="450" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform3f public="1" get="inline" set="null" line="453" static="1">
		<f a="this:location:x:y:z">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="456" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="459" static="1">
		<f a="this:location:x:y:z">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="462" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform4f public="1" get="inline" set="null" line="465" static="1">
		<f a="this:location:x:y:z:w">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="468" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="471" static="1">
		<f a="this:location:x:y:z:w">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="474" static="1">
		<f a="this:location:v">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<t path="gluon.webgl.GLInt32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniformMatrix2fv public="1" get="inline" set="null" line="477" static="1">
		<f a="this:location:transpose:value">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<x path="Bool"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix3fv public="1" get="inline" set="null" line="480" static="1">
		<f a="this:location:transpose:value">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<x path="Bool"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix4fv public="1" get="inline" set="null" line="483" static="1">
		<f a="this:location:transpose:value">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="gluon.webgl.GLUniformLocation"/>
			<x path="Bool"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<useProgram public="1" get="inline" set="null" line="486" static="1">
		<f a="this:?program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="489" static="1">
		<f a="this:program">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="492" static="1">
		<f a="this:index:x">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="495" static="1">
		<f a="this:index:values">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="498" static="1">
		<f a="this:index:x:y">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="501" static="1">
		<f a="this:index:values">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="504" static="1">
		<f a="this:index:x:y:z">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="507" static="1">
		<f a="this:index:values">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="510" static="1">
		<f a="this:index:x:y:z:w">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<t path="gluon.webgl.GLfloat"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="513" static="1">
		<f a="this:index:values">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLFloat32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribPointer public="1" get="inline" set="null" line="516" static="1">
		<f a="this:index:size:type:normalized:stride:offset">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLuint"/>
			<t path="gluon.webgl.GLint"/>
			<x path="gluon.webgl.DataType"/>
			<x path="Bool"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLintptr"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="519" static="1">
		<f a="this:x:y:width:height">
			<t path="gluon.webgl._GLContext.InternalGLContext"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLint"/>
			<t path="gluon.webgl.GLsizei"/>
			<t path="gluon.webgl.GLsizei"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.GLContext_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" final="1">
		<getContextAttributes public="1" get="inline" set="null" line="91" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLContextAttributes"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</getContextAttributes>
		<getSupportedExtensions public="1" get="inline" set="null" line="94" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getSupportedExtensions>
		<getExtension public="1" params="T" get="inline" set="null" line="97" static="1">
			<f a="this:name">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Extension"><c path="getExtension.T"/></x>
				<x path="Null"><c path="getExtension.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<isContextLost public="1" get="inline" set="null" line="100" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isContextLost>
		<activeTexture public="1" get="inline" set="null" line="103" static="1">
			<f a="this:unit">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureUnit"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="106" static="1">
			<f a="this:program:shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<t path="gluon.webgl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<bindAttribLocation public="1" get="inline" set="null" line="109" static="1">
			<f a="this:program:index:name">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<t path="gluon.webgl.GLuint"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="112" static="1">
			<f a="this:target:?buffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BufferTarget"/>
				<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindFramebuffer public="1" get="inline" set="null" line="115" static="1">
			<f a="this:target:?framebuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FramebufferTarget"/>
				<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="118" static="1">
			<f a="this:target:?renderbuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.RenderbufferTarget"/>
				<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindTexture public="1" get="inline" set="null" line="121" static="1">
			<f a="this:target:?texture">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<blendColor public="1" get="inline" set="null" line="124" static="1">
			<f a="this:red:green:blue:alpha">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="127" static="1">
			<f a="this:mode">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BlendEquation"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="130" static="1">
			<f a="this:modeRGB:modeAlpha">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BlendEquation"/>
				<x path="gluon.webgl.BlendEquation"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="133" static="1">
			<f a="this:sfactor:dfactor">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="136" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="gluon.webgl.BlendFactor"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<bufferData public="1" get="inline" set="null" line="139" static="1">
			<f a="this:target:data:usage">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BufferTarget"/>
				<x path="typedarray.BufferSource"/>
				<x path="gluon.webgl.BufferUsage"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferDataOfSize public="1" get="inline" set="null" line="142" static="1">
			<f a="this:target:size:usage">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BufferTarget"/>
				<x path="Int"/>
				<x path="gluon.webgl.BufferUsage"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferDataOfSize>
		<bufferSubData public="1" get="inline" set="null" line="150" static="1">
			<f a="this:target:offset:data">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BufferTarget"/>
				<t path="gluon.webgl.GLintptr"/>
				<x path="typedarray.BufferSource"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="153" static="1">
			<f a="this:target">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FramebufferTarget"/>
				<x path="gluon.webgl.FramebufferStatus"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="156" static="1">
			<f a="this:mask">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ClearBufferMask"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearColor public="1" get="inline" set="null" line="159" static="1">
			<f a="this:red:green:blue:alpha">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepth public="1" get="inline" set="null" line="162" static="1">
			<f a="this:depth">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLclampf"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepth>
		<clearStencil public="1" get="inline" set="null" line="165" static="1">
			<f a="this:s">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<colorMask public="1" get="inline" set="null" line="168" static="1">
			<f a="this:red:green:blue:alpha">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="171" static="1">
			<f a="this:shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="174" static="1">
			<f a="this:target:level:internalformat:width:height:border:data">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.PixelFormat"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="177" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:data">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="gluon.webgl.PixelFormat"/>
				<t path="gluon.webgl.GLArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<copyTexImage2D public="1" get="inline" set="null" line="180" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.PixelFormat"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="183" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<createBuffer public="1" get="inline" set="null" line="186" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="189" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="192" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createRenderbuffer public="1" get="inline" set="null" line="195" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createShader public="1" get="inline" set="null" line="198" static="1">
			<f a="this:type">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ShaderType"/>
				<x path="Null"><t path="gluon.webgl.GLShader"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="201" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<cullFace public="1" get="inline" set="null" line="204" static="1">
			<f a="this:mode">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.CullFaceMode"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="207" static="1">
			<f a="this:?buffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="210" static="1">
			<f a="this:?framebuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="213" static="1">
			<f a="this:?program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteRenderbuffer public="1" get="inline" set="null" line="216" static="1">
			<f a="this:?renderbuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteShader public="1" get="inline" set="null" line="219" static="1">
			<f a="this:?shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLShader"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteTexture public="1" get="inline" set="null" line="222" static="1">
			<f a="this:?texture">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<depthFunc public="1" get="inline" set="null" line="225" static="1">
			<f a="this:func">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ComparisonFunction"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="228" static="1">
			<f a="this:flag">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRange public="1" get="inline" set="null" line="231" static="1">
			<f a="this:zNear:zFar">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLclampf"/>
				<t path="gluon.webgl.GLclampf"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRange>
		<detachShader public="1" get="inline" set="null" line="234" static="1">
			<f a="this:program:shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<t path="gluon.webgl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="237" static="1">
			<f a="this:cap">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Capability"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="240" static="1">
			<f a="this:index">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="243" static="1">
			<f a="this:mode:first:count">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.DrawMode"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawElements public="1" get="inline" set="null" line="246" static="1">
			<f a="this:mode:count:type:offset">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.DrawMode"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="gluon.webgl.DataType"/>
				<t path="gluon.webgl.GLintptr"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<enable public="1" get="inline" set="null" line="249" static="1">
			<f a="this:cap">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Capability"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="252" static="1">
			<f a="this:index">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<finish public="1" get="inline" set="null" line="255" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="258" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="261" static="1">
			<f a="this:target:attachment:renderbuffertarget:?renderbuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FramebufferTarget"/>
				<x path="gluon.webgl.FramebufferAttachement"/>
				<x path="gluon.webgl.RenderbufferTarget"/>
				<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="264" static="1">
			<f a="this:target:attachment:textarget:?texture:level">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FramebufferTarget"/>
				<x path="gluon.webgl.FramebufferAttachement"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<frontFace public="1" get="inline" set="null" line="267" static="1">
			<f a="this:mode">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FrontFaceDirection"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<generateMipmap public="1" get="inline" set="null" line="270" static="1">
			<f a="this:target">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="273" static="1">
			<f a="this:program:index">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="276" static="1">
			<f a="this:program:index">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getAttachedShaders public="1" get="inline" set="null" line="279" static="1">
			<f a="this:program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<c path="Array"><t path="gluon.webgl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="282" static="1">
			<f a="this:program:name">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<c path="String"/>
				<t path="gluon.webgl.GLint"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBufferParameter public="1" params="T" get="inline" set="null" line="285" static="1">
			<f a="this:target:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.BufferTarget"/>
				<x path="gluon.webgl.BufferParameter"><c path="getBufferParameter.T"/></x>
				<c path="getBufferParameter.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameter>
		<getParameter public="1" params="T" get="inline" set="null" line="288" static="1">
			<f a="this:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Parameter"><c path="getParameter.T"/></x>
				<x path="Null"><c path="getParameter.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</getParameter>
		<getError public="1" get="inline" set="null" line="291" static="1">
			<f a="this">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ErrorCode"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getFramebufferAttachmentParameter public="1" params="T" get="inline" set="null" line="294" static="1">
			<f a="this:target:attachment:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.FramebufferTarget"/>
				<x path="gluon.webgl.FramebufferAttachement"/>
				<x path="gluon.webgl.FramebufferAttachmentParameter"><c path="getFramebufferAttachmentParameter.T"/></x>
				<x path="Null"><c path="getFramebufferAttachmentParameter.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameter>
		<getProgramParameter public="1" params="T" get="inline" set="null" line="297" static="1">
			<f a="this:program:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="gluon.webgl.ProgramParameter"><c path="getProgramParameter.T"/></x>
				<c path="getProgramParameter.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="300" static="1">
			<f a="this:program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getRenderbufferParameter public="1" params="T" get="inline" set="null" line="303" static="1">
			<f a="this:target:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.RenderbufferTarget"/>
				<x path="gluon.webgl.RenderbufferParameter"><c path="getRenderbufferParameter.T"/></x>
				<c path="getRenderbufferParameter.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameter>
		<getShaderParameter public="1" params="T" get="inline" set="null" line="306" static="1">
			<f a="this:shader:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLShader"/>
				<x path="gluon.webgl.ShaderParameter"><c path="getShaderParameter.T"/></x>
				<c path="getShaderParameter.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="309" static="1">
			<f a="this:shadertype:precisiontype">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ShaderType"/>
				<x path="gluon.webgl.PrecisionType"/>
				<t path="gluon.webgl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderInfoLog public="1" get="inline" set="null" line="312" static="1">
			<f a="this:shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderSource public="1" get="inline" set="null" line="315" static="1">
			<f a="this:shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getTexParameter public="1" params="T" get="inline" set="null" line="318" static="1">
			<f a="this:target:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="gluon.webgl.TextureParameter"><c path="getTexParameter.T"/></x>
				<c path="getTexParameter.T"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameter>
		<getUniform public="1" get="inline" set="null" line="321" static="1">
			<f a="this:program:location">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniform>
		<getUniformLocation public="1" get="inline" set="null" line="324" static="1">
			<f a="this:program:name">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<c path="String"/>
				<x path="gluon.webgl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttrib public="1" params="T" get="inline" set="null" line="327" static="1">
			<f a="this:index:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="gluon.webgl.VertexAttributeParameter"><c path="getVertexAttrib.T"/></x>
				<x path="Null"><c path="getVertexAttrib.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="330" static="1">
			<f a="this:index:pname">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="gluon.webgl.VertexAttributeOffsetParameter"/>
				<t path="gluon.webgl.GLsizeiptr"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="333" static="1">
			<f a="this:target:mode">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.HintTarget"/>
				<x path="gluon.webgl.HintMode"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<isEnabled public="1" get="inline" set="null" line="336" static="1">
			<f a="this:cap">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Capability"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isBuffer public="1" get="inline" set="null" line="339" static="1">
			<f a="this:?buffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLBuffer"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isFramebuffer public="1" get="inline" set="null" line="342" static="1">
			<f a="this:?framebuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLFramebuffer"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="345" static="1">
			<f a="this:?program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isRenderbuffer public="1" get="inline" set="null" line="348" static="1">
			<f a="this:?renderbuffer">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLRenderbuffer"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isShader public="1" get="inline" set="null" line="351" static="1">
			<f a="this:?shader">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLShader"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isTexture public="1" get="inline" set="null" line="354" static="1">
			<f a="this:?texture">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLTexture"/></x>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<lineWidth public="1" get="inline" set="null" line="357" static="1">
			<f a="this:width">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="360" static="1">
			<f a="this:program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<pixelStorei public="1" params="T" get="inline" set="null" line="363" static="1">
			<f a="this:pname:param">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.PixelStoreParameter"><c path="pixelStorei.T"/></x>
				<c path="pixelStorei.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="366" static="1">
			<f a="this:factor:units">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<readPixels public="1" get="inline" set="null" line="369" static="1">
			<f a="this:x:y:width:height:format:type:pixels">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="gluon.webgl.PixelFormat"/>
				<x path="gluon.webgl.PixelDataType"/>
				<t path="gluon.webgl.GLArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="372" static="1">
			<f a="this:target:internalformat:width:height">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.RenderbufferTarget"/>
				<x path="gluon.webgl.RenderbufferFormat"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<sampleCoverage public="1" get="inline" set="null" line="375" static="1">
			<f a="this:value:invert">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLclampf"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<scissor public="1" get="inline" set="null" line="378" static="1">
			<f a="this:x:y:width:height">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderSource public="1" get="inline" set="null" line="381" static="1">
			<f a="this:shader:source">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="384" static="1">
			<f a="this:func:ref:mask">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.ComparisonFunction"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="387" static="1">
			<f a="this:face:func:ref:mask">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.CullFaceMode"/>
				<x path="gluon.webgl.ComparisonFunction"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="390" static="1">
			<f a="this:mask">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="393" static="1">
			<f a="this:face:mask">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.CullFaceMode"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="396" static="1">
			<f a="this:fail:zfail:zpass">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.Operation"/>
				<x path="gluon.webgl.Operation"/>
				<x path="gluon.webgl.Operation"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="399" static="1">
			<f a="this:face:fail:zfail:zpass">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.CullFaceMode"/>
				<x path="gluon.webgl.Operation"/>
				<x path="gluon.webgl.Operation"/>
				<x path="gluon.webgl.Operation"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="402" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:pixels">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.PixelFormat"/>
				<x path="gluon.webgl.PixelDataType"/>
				<t path="gluon.webgl.GLArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texImage2DPtr public="1" get="inline" set="null" line="406" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:pixels">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.PixelFormat"/>
				<x path="gluon.webgl.PixelDataType"/>
				<c path="cpp.RawConstPointer"><c path="cpp.Void"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2DPtr>
		<texParameterf public="1" params="T" get="inline" set="null" line="415" static="1">
			<f a="this:target:pname:param">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="gluon.webgl.TextureParameter"><c path="texParameterf.T"/></x>
				<c path="texParameterf.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" params="T" get="inline" set="null" line="418" static="1">
			<f a="this:target:pname:param">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<x path="gluon.webgl.TextureParameter"><c path="texParameteri.T"/></x>
				<c path="texParameteri.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="421" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:pixels">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.TextureTarget"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="gluon.webgl.PixelFormat"/>
				<x path="gluon.webgl.PixelDataType"/>
				<t path="gluon.webgl.GLArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage2D>
		<uniform1f public="1" get="inline" set="null" line="429" static="1">
			<f a="this:location:x">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="432" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="435" static="1">
			<f a="this:location:x">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="438" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform2f public="1" get="inline" set="null" line="441" static="1">
			<f a="this:location:x:y">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="444" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="447" static="1">
			<f a="this:location:x:y">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="450" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform3f public="1" get="inline" set="null" line="453" static="1">
			<f a="this:location:x:y:z">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="456" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="459" static="1">
			<f a="this:location:x:y:z">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="462" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform4f public="1" get="inline" set="null" line="465" static="1">
			<f a="this:location:x:y:z:w">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="468" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="471" static="1">
			<f a="this:location:x:y:z:w">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="474" static="1">
			<f a="this:location:v">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<t path="gluon.webgl.GLInt32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniformMatrix2fv public="1" get="inline" set="null" line="477" static="1">
			<f a="this:location:transpose:value">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="480" static="1">
			<f a="this:location:transpose:value">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="483" static="1">
			<f a="this:location:transpose:value">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="gluon.webgl.GLUniformLocation"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<useProgram public="1" get="inline" set="null" line="486" static="1">
			<f a="this:?program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<x path="Null"><t path="gluon.webgl.GLProgram"/></x>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="489" static="1">
			<f a="this:program">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="492" static="1">
			<f a="this:index:x">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="495" static="1">
			<f a="this:index:values">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="498" static="1">
			<f a="this:index:x:y">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="501" static="1">
			<f a="this:index:values">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="504" static="1">
			<f a="this:index:x:y:z">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="507" static="1">
			<f a="this:index:values">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="510" static="1">
			<f a="this:index:x:y:z:w">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="513" static="1">
			<f a="this:index:values">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLFloat32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribPointer public="1" get="inline" set="null" line="516" static="1">
			<f a="this:index:size:type:normalized:stride:offset">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.DataType"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLintptr"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="519" static="1">
			<f a="this:x:y:width:height">
				<t path="gluon.webgl._GLContext.InternalGLContext"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
	</class>
	<abstract path="gluon.webgl.BufferTarget" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.BufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<ARRAY_BUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.ARRAY_BUFFER" line="528" static="1">
		<x path="gluon.webgl.BufferTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ARRAY_BUFFER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER" line="529" static="1">
		<x path="gluon.webgl.BufferTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ELEMENT_ARRAY_BUFFER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.BufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<ARRAY_BUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.ARRAY_BUFFER" line="528" static="1">
			<x path="gluon.webgl.BufferTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ARRAY_BUFFER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER" line="529" static="1">
			<x path="gluon.webgl.BufferTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ELEMENT_ARRAY_BUFFER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.FramebufferTarget" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FramebufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FRAMEBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER" line="534" static="1">
		<x path="gluon.webgl.FramebufferTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FRAMEBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER" line="534" static="1">
			<x path="gluon.webgl.FramebufferTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.RenderbufferTarget" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.RenderbufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<RENDERBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER" line="539" static="1">
		<x path="gluon.webgl.RenderbufferTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.RenderbufferTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<RENDERBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER" line="539" static="1">
			<x path="gluon.webgl.RenderbufferTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.HintTarget" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.HintTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="cast InternalConstGLContext.GENERATE_MIPMAP_HINT" line="544" static="1">
		<x path="gluon.webgl.HintTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.GENERATE_MIPMAP_HINT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GENERATE_MIPMAP_HINT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.HintTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="cast InternalConstGLContext.GENERATE_MIPMAP_HINT" line="544" static="1">
			<x path="gluon.webgl.HintTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.GENERATE_MIPMAP_HINT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GENERATE_MIPMAP_HINT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureTarget" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE" line="549" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE>
	<TEXTURE_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_2D" line="550" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_2D>
	<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP" line="551" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_X" line="552" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_X</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_X" line="553" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_X</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Y" line="554" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Y</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Y" line="555" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Y</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Z" line="556" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Z</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Z" line="557" static="1">
		<x path="gluon.webgl.TextureTarget"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Z</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureTarget_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE" line="549" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE>
		<TEXTURE_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_2D" line="550" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_2D>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP" line="551" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_X" line="552" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_X</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_X" line="553" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_X</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Y" line="554" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Y</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Y" line="555" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Y</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Z" line="556" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_POSITIVE_Z</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Z" line="557" static="1">
			<x path="gluon.webgl.TextureTarget"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_CUBE_MAP_NEGATIVE_Z</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.BufferUsage" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.BufferUsage_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<STREAM_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.STREAM_DRAW" line="562" static="1">
		<x path="gluon.webgl.BufferUsage"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STREAM_DRAW</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.STATIC_DRAW" line="563" static="1">
		<x path="gluon.webgl.BufferUsage"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STATIC_DRAW</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.DYNAMIC_DRAW" line="564" static="1">
		<x path="gluon.webgl.BufferUsage"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DYNAMIC_DRAW</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DYNAMIC_DRAW>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.BufferUsage_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<STREAM_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.STREAM_DRAW" line="562" static="1">
			<x path="gluon.webgl.BufferUsage"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STREAM_DRAW</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.STATIC_DRAW" line="563" static="1">
			<x path="gluon.webgl.BufferUsage"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STATIC_DRAW</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="cast InternalConstGLContext.DYNAMIC_DRAW" line="564" static="1">
			<x path="gluon.webgl.BufferUsage"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DYNAMIC_DRAW</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DYNAMIC_DRAW>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.CullFaceMode" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.CullFaceMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FRONT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT" line="569" static="1">
		<x path="gluon.webgl.CullFaceMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRONT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRONT>
	<BACK public="1" get="inline" set="null" expr="cast InternalConstGLContext.BACK" line="570" static="1">
		<x path="gluon.webgl.CullFaceMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BACK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT_AND_BACK" line="571" static="1">
		<x path="gluon.webgl.CullFaceMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRONT_AND_BACK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRONT_AND_BACK>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.CullFaceMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FRONT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT" line="569" static="1">
			<x path="gluon.webgl.CullFaceMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRONT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRONT>
		<BACK public="1" get="inline" set="null" expr="cast InternalConstGLContext.BACK" line="570" static="1">
			<x path="gluon.webgl.CullFaceMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BACK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT_AND_BACK" line="571" static="1">
			<x path="gluon.webgl.CullFaceMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRONT_AND_BACK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRONT_AND_BACK>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.FramebufferStatus" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FramebufferStatus_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_COMPLETE" line="576" static="1">
		<x path="gluon.webgl.FramebufferStatus"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_COMPLETE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT" line="577" static="1">
		<x path="gluon.webgl.FramebufferStatus"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT" line="578" static="1">
		<x path="gluon.webgl.FramebufferStatus"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS" line="579" static="1">
		<x path="gluon.webgl.FramebufferStatus"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_UNSUPPORTED" line="580" static="1">
		<x path="gluon.webgl.FramebufferStatus"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_UNSUPPORTED</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferStatus_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_COMPLETE" line="576" static="1">
			<x path="gluon.webgl.FramebufferStatus"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_COMPLETE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT" line="577" static="1">
			<x path="gluon.webgl.FramebufferStatus"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT" line="578" static="1">
			<x path="gluon.webgl.FramebufferStatus"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS" line="579" static="1">
			<x path="gluon.webgl.FramebufferStatus"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_UNSUPPORTED" line="580" static="1">
			<x path="gluon.webgl.FramebufferStatus"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_UNSUPPORTED</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.BlendEquation" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.BlendEquation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FUNC_ADD public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_ADD" line="585" static="1">
		<x path="gluon.webgl.BlendEquation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FUNC_ADD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FUNC_ADD>
	<FUNC_SUBTRACT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_SUBTRACT" line="586" static="1">
		<x path="gluon.webgl.BlendEquation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FUNC_SUBTRACT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_REVERSE_SUBTRACT" line="587" static="1">
		<x path="gluon.webgl.BlendEquation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FUNC_REVERSE_SUBTRACT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FUNC_REVERSE_SUBTRACT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.BlendEquation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FUNC_ADD public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_ADD" line="585" static="1">
			<x path="gluon.webgl.BlendEquation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FUNC_ADD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FUNC_ADD>
		<FUNC_SUBTRACT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_SUBTRACT" line="586" static="1">
			<x path="gluon.webgl.BlendEquation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FUNC_SUBTRACT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FUNC_REVERSE_SUBTRACT" line="587" static="1">
			<x path="gluon.webgl.BlendEquation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FUNC_REVERSE_SUBTRACT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FUNC_REVERSE_SUBTRACT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.BlendFactor" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.BlendFactor_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<ZERO public="1" get="inline" set="null" expr="cast InternalConstGLContext.ZERO" line="592" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ZERO</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ZERO>
	<ONE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE" line="593" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE>
	<SRC_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_COLOR" line="594" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SRC_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_SRC_COLOR" line="595" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_SRC_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_SRC_COLOR>
	<DST_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.DST_COLOR" line="596" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DST_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_DST_COLOR" line="597" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_DST_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_ALPHA" line="598" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SRC_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_SRC_ALPHA" line="599" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_SRC_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.DST_ALPHA" line="600" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DST_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_DST_ALPHA" line="601" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_DST_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_DST_ALPHA>
	<CONSTANT_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.CONSTANT_COLOR" line="602" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CONSTANT_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_CONSTANT_COLOR" line="603" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_CONSTANT_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.CONSTANT_ALPHA" line="604" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CONSTANT_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_CONSTANT_ALPHA" line="605" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_CONSTANT_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_ALPHA_SATURATE" line="606" static="1">
		<x path="gluon.webgl.BlendFactor"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SRC_ALPHA_SATURATE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SRC_ALPHA_SATURATE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.BlendFactor_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<ZERO public="1" get="inline" set="null" expr="cast InternalConstGLContext.ZERO" line="592" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ZERO</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ZERO>
		<ONE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE" line="593" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE>
		<SRC_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_COLOR" line="594" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SRC_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_SRC_COLOR" line="595" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_SRC_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_SRC_COLOR>
		<DST_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.DST_COLOR" line="596" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DST_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_DST_COLOR" line="597" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_DST_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_ALPHA" line="598" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SRC_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_SRC_ALPHA" line="599" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_SRC_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.DST_ALPHA" line="600" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DST_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_DST_ALPHA" line="601" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_DST_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_DST_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.CONSTANT_COLOR" line="602" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CONSTANT_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_CONSTANT_COLOR" line="603" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_CONSTANT_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.CONSTANT_ALPHA" line="604" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CONSTANT_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ONE_MINUS_CONSTANT_ALPHA" line="605" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ONE_MINUS_CONSTANT_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SRC_ALPHA_SATURATE" line="606" static="1">
			<x path="gluon.webgl.BlendFactor"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SRC_ALPHA_SATURATE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SRC_ALPHA_SATURATE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ClearBufferMask" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ClearBufferMask_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_BUFFER_BIT" line="611" static="1">
		<x path="gluon.webgl.ClearBufferMask"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_BUFFER_BIT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BUFFER_BIT" line="612" static="1">
		<x path="gluon.webgl.ClearBufferMask"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BUFFER_BIT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_BUFFER_BIT" line="613" static="1">
		<x path="gluon.webgl.ClearBufferMask"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COLOR_BUFFER_BIT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_BUFFER_BIT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ClearBufferMask_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_BUFFER_BIT" line="611" static="1">
			<x path="gluon.webgl.ClearBufferMask"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_BUFFER_BIT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BUFFER_BIT" line="612" static="1">
			<x path="gluon.webgl.ClearBufferMask"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BUFFER_BIT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_BUFFER_BIT" line="613" static="1">
			<x path="gluon.webgl.ClearBufferMask"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COLOR_BUFFER_BIT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_BUFFER_BIT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.DrawMode" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.DrawMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<POINTS public="1" get="inline" set="null" expr="cast InternalConstGLContext.POINTS" line="618" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.POINTS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POINTS>
	<LINES public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINES" line="619" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINES</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINES>
	<LINE_LOOP public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_LOOP" line="620" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINE_LOOP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_STRIP" line="621" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINE_STRIP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLES" line="622" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TRIANGLES</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLE_STRIP" line="623" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TRIANGLE_STRIP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLE_FAN" line="624" static="1">
		<x path="gluon.webgl.DrawMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TRIANGLE_FAN</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIANGLE_FAN>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.DrawMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<POINTS public="1" get="inline" set="null" expr="cast InternalConstGLContext.POINTS" line="618" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.POINTS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POINTS>
		<LINES public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINES" line="619" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINES</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINES>
		<LINE_LOOP public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_LOOP" line="620" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINE_LOOP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_STRIP" line="621" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINE_STRIP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLES" line="622" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TRIANGLES</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLE_STRIP" line="623" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TRIANGLE_STRIP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" expr="cast InternalConstGLContext.TRIANGLE_FAN" line="624" static="1">
			<x path="gluon.webgl.DrawMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TRIANGLE_FAN</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIANGLE_FAN>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureMagFilter" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to>
			<icast><x path="gluon.webgl.TextureMinFilter"/></icast>
			<icast><t path="gluon.webgl.GLenum"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureMagFilter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST" line="629" static="1">
		<x path="gluon.webgl.TextureMagFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NEAREST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST>
	<LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR" line="630" static="1">
		<x path="gluon.webgl.TextureMagFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINEAR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureMagFilter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST" line="629" static="1">
			<x path="gluon.webgl.TextureMagFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NEAREST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR" line="630" static="1">
			<x path="gluon.webgl.TextureMagFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINEAR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureMinFilter" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureMinFilter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST" line="635" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NEAREST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST>
	<LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR" line="636" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINEAR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST_MIPMAP_NEAREST" line="637" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NEAREST_MIPMAP_NEAREST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR_MIPMAP_NEAREST" line="638" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINEAR_MIPMAP_NEAREST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST_MIPMAP_LINEAR" line="639" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NEAREST_MIPMAP_LINEAR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR_MIPMAP_LINEAR" line="640" static="1">
		<x path="gluon.webgl.TextureMinFilter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINEAR_MIPMAP_LINEAR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINEAR_MIPMAP_LINEAR>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureMinFilter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST" line="635" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NEAREST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR" line="636" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINEAR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST_MIPMAP_NEAREST" line="637" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NEAREST_MIPMAP_NEAREST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR_MIPMAP_NEAREST" line="638" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINEAR_MIPMAP_NEAREST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEAREST_MIPMAP_LINEAR" line="639" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NEAREST_MIPMAP_LINEAR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINEAR_MIPMAP_LINEAR" line="640" static="1">
			<x path="gluon.webgl.TextureMinFilter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINEAR_MIPMAP_LINEAR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINEAR_MIPMAP_LINEAR>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureWrapMode" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureWrapMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<REPEAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.REPEAT" line="645" static="1">
		<x path="gluon.webgl.TextureWrapMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.REPEAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CLAMP_TO_EDGE" line="646" static="1">
		<x path="gluon.webgl.TextureWrapMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CLAMP_TO_EDGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MIRRORED_REPEAT" line="647" static="1">
		<x path="gluon.webgl.TextureWrapMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MIRRORED_REPEAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIRRORED_REPEAT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureWrapMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<REPEAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.REPEAT" line="645" static="1">
			<x path="gluon.webgl.TextureWrapMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.REPEAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CLAMP_TO_EDGE" line="646" static="1">
			<x path="gluon.webgl.TextureWrapMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CLAMP_TO_EDGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MIRRORED_REPEAT" line="647" static="1">
			<x path="gluon.webgl.TextureWrapMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MIRRORED_REPEAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIRRORED_REPEAT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureUnit" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureUnit_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<TEXTURE0 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE0" line="652" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE1" line="653" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE2" line="654" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE3" line="655" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE4" line="656" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE5" line="657" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE6" line="658" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE7" line="659" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE8" line="660" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE9" line="661" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE10" line="662" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE11" line="663" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE12" line="664" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE13" line="665" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE14" line="666" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE15" line="667" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE16" line="668" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE17" line="669" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE18" line="670" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE19" line="671" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE20" line="672" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE21" line="673" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE22" line="674" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE23" line="675" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE24" line="676" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE25" line="677" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE26" line="678" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE27" line="679" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE28" line="680" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE29" line="681" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE30" line="682" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE31" line="683" static="1">
		<x path="gluon.webgl.TextureUnit"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE31>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureUnit_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<TEXTURE0 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE0" line="652" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE1" line="653" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE2" line="654" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE3" line="655" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE4" line="656" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE5" line="657" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE6" line="658" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE7" line="659" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE8" line="660" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE9" line="661" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE10" line="662" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE11" line="663" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE12" line="664" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE13" line="665" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE14" line="666" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE15" line="667" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE16" line="668" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE17" line="669" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE18" line="670" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE19" line="671" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE20" line="672" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE21" line="673" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE22" line="674" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE23" line="675" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE24" line="676" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE25" line="677" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE26" line="678" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE27" line="679" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE28" line="680" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE29" line="681" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE30" line="682" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE31" line="683" static="1">
			<x path="gluon.webgl.TextureUnit"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE31>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ShaderType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ShaderType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FRAGMENT_SHADER public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAGMENT_SHADER" line="688" static="1">
		<x path="gluon.webgl.ShaderType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAGMENT_SHADER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_SHADER" line="689" static="1">
		<x path="gluon.webgl.ShaderType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_SHADER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_SHADER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ShaderType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FRAGMENT_SHADER public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAGMENT_SHADER" line="688" static="1">
			<x path="gluon.webgl.ShaderType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAGMENT_SHADER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_SHADER" line="689" static="1">
			<x path="gluon.webgl.ShaderType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_SHADER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_SHADER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.DataType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.DataType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BYTE" line="694" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BYTE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_BYTE" line="695" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_BYTE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHORT" line="696" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SHORT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT" line="697" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT" line="698" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT>
	<UNSIGNED_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_INT" line="699" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="700" static="1">
		<x path="gluon.webgl.DataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.DataType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BYTE" line="694" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BYTE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_BYTE" line="695" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_BYTE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHORT" line="696" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SHORT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT" line="697" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT" line="698" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT>
		<UNSIGNED_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_INT" line="699" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="700" static="1">
			<x path="gluon.webgl.DataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.PixelDataType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.PixelDataType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<UNSIGNED_BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_BYTE" line="705" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_BYTE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_BYTE>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_4_4_4_4" line="706" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_4_4_4_4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_5_5_5_1" line="707" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_5_5_5_1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_5_6_5" line="708" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_5_6_5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSIGNED_SHORT_5_6_5>
	<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="710" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>requires enabling floating point texture extension, OES_texture_float</haxe_doc>
	</FLOAT>
	<HALF_FLOAT_OES public="1" get="inline" set="null" expr="cast 0x8D61" line="712" static="1">
		<x path="gluon.webgl.PixelDataType"/>
		<meta>
			<m n=":value"><e>cast 0x8D61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>requires enabling half-floating point texture extension, OES_texture_half_float</haxe_doc>
	</HALF_FLOAT_OES>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.PixelDataType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_BYTE" line="705" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_BYTE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_BYTE>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_4_4_4_4" line="706" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_4_4_4_4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_5_5_5_1" line="707" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_5_5_5_1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNSIGNED_SHORT_5_6_5" line="708" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNSIGNED_SHORT_5_6_5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSIGNED_SHORT_5_6_5>
		<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="710" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>requires enabling floating point texture extension, OES_texture_float</haxe_doc>
		</FLOAT>
		<HALF_FLOAT_OES public="1" get="inline" set="null" expr="cast 0x8D61" line="712" static="1">
			<x path="gluon.webgl.PixelDataType"/>
			<meta>
				<m n=":value"><e>cast 0x8D61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>requires enabling half-floating point texture extension, OES_texture_half_float</haxe_doc>
		</HALF_FLOAT_OES>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.PixelFormat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.PixelFormat_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<DEPTH_COMPONENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_COMPONENT" line="717" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_COMPONENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALPHA" line="718" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALPHA>
	<RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB" line="719" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RGB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB>
	<RGBA public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGBA" line="720" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RGBA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGBA>
	<LUMINANCE public="1" get="inline" set="null" expr="cast InternalConstGLContext.LUMINANCE" line="721" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LUMINANCE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.LUMINANCE_ALPHA" line="722" static="1">
		<x path="gluon.webgl.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LUMINANCE_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LUMINANCE_ALPHA>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.PixelFormat_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<DEPTH_COMPONENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_COMPONENT" line="717" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_COMPONENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALPHA" line="718" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALPHA>
		<RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB" line="719" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RGB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB>
		<RGBA public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGBA" line="720" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RGBA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGBA>
		<LUMINANCE public="1" get="inline" set="null" expr="cast InternalConstGLContext.LUMINANCE" line="721" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LUMINANCE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.LUMINANCE_ALPHA" line="722" static="1">
			<x path="gluon.webgl.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LUMINANCE_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LUMINANCE_ALPHA>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.RenderbufferFormat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.RenderbufferFormat_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<RGBA4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGBA4" line="727" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RGBA4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGBA4>
	<RGB5_A1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB5_A1" line="728" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RGB5_A1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB5_A1>
	<RGB565 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB565" line="729" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RGB565</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_COMPONENT16" line="730" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_COMPONENT16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX8 public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_INDEX8" line="731" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_INDEX8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_STENCIL" line="732" static="1">
		<x path="gluon.webgl.RenderbufferFormat"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_STENCIL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_STENCIL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.RenderbufferFormat_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<RGBA4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGBA4" line="727" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RGBA4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB5_A1" line="728" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RGB5_A1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB5_A1>
		<RGB565 public="1" get="inline" set="null" expr="cast InternalConstGLContext.RGB565" line="729" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RGB565</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_COMPONENT16" line="730" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_COMPONENT16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX8 public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_INDEX8" line="731" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_INDEX8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_STENCIL" line="732" static="1">
			<x path="gluon.webgl.RenderbufferFormat"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_STENCIL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_STENCIL>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.UniformType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.UniformType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="737" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT>
	<FLOAT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC2" line="738" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC3" line="739" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC4" line="740" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC4>
	<INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT" line="741" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT>
	<INT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC2" line="742" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INT_VEC2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC3" line="743" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INT_VEC3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC4" line="744" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INT_VEC4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INT_VEC4>
	<BOOL public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL" line="745" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BOOL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC2" line="746" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC3" line="747" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC4" line="748" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT2" line="749" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT3" line="750" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT4" line="751" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLER_2D" line="752" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLER_2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLER_CUBE" line="753" static="1">
		<x path="gluon.webgl.UniformType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLER_CUBE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLER_CUBE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.UniformType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="737" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC2" line="738" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC3" line="739" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC4" line="740" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC4>
		<INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT" line="741" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT>
		<INT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC2" line="742" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INT_VEC2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC3" line="743" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INT_VEC3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.INT_VEC4" line="744" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INT_VEC4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INT_VEC4>
		<BOOL public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL" line="745" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BOOL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC2" line="746" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC3" line="747" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.BOOL_VEC4" line="748" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BOOL_VEC4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT2" line="749" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT3" line="750" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT4" line="751" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLER_2D" line="752" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLER_2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLER_CUBE" line="753" static="1">
			<x path="gluon.webgl.UniformType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLER_CUBE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLER_CUBE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.AttributeType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to>
			<icast><x path="gluon.webgl.UniformType"/></icast>
			<icast><t path="gluon.webgl.GLenum"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.AttributeType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="758" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT>
	<FLOAT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC2" line="759" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC3" line="760" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC4" line="761" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_VEC4>
	<FLOAT_MAT2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT2" line="762" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT3" line="763" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT4" line="764" static="1">
		<x path="gluon.webgl.AttributeType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLOAT_MAT4>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.AttributeType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT" line="758" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC2" line="759" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC3" line="760" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_VEC4" line="761" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_VEC4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT2" line="762" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT3" line="763" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="cast InternalConstGLContext.FLOAT_MAT4" line="764" static="1">
			<x path="gluon.webgl.AttributeType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FLOAT_MAT4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLOAT_MAT4>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ComparisonFunction" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ComparisonFunction_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<NEVER public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEVER" line="769" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NEVER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEVER>
	<LESS public="1" get="inline" set="null" expr="cast InternalConstGLContext.LESS" line="770" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LESS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS>
	<EQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.EQUAL" line="771" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.EQUAL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUAL>
	<LEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.LEQUAL" line="772" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LEQUAL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEQUAL>
	<GREATER public="1" get="inline" set="null" expr="cast InternalConstGLContext.GREATER" line="773" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.GREATER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER>
	<NOTEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.NOTEQUAL" line="774" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NOTEQUAL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.GEQUAL" line="775" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.GEQUAL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GEQUAL>
	<ALWAYS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALWAYS" line="776" static="1">
		<x path="gluon.webgl.ComparisonFunction"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ALWAYS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALWAYS>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ComparisonFunction_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<NEVER public="1" get="inline" set="null" expr="cast InternalConstGLContext.NEVER" line="769" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NEVER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEVER>
		<LESS public="1" get="inline" set="null" expr="cast InternalConstGLContext.LESS" line="770" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LESS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS>
		<EQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.EQUAL" line="771" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.EQUAL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUAL>
		<LEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.LEQUAL" line="772" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LEQUAL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEQUAL>
		<GREATER public="1" get="inline" set="null" expr="cast InternalConstGLContext.GREATER" line="773" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.GREATER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER>
		<NOTEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.NOTEQUAL" line="774" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NOTEQUAL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" expr="cast InternalConstGLContext.GEQUAL" line="775" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.GEQUAL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GEQUAL>
		<ALWAYS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALWAYS" line="776" static="1">
			<x path="gluon.webgl.ComparisonFunction"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ALWAYS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALWAYS>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.Operation" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.Operation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<ZERO public="1" get="inline" set="null" expr="cast InternalConstGLContext.ZERO" line="781" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ZERO</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ZERO>
	<KEEP public="1" get="inline" set="null" expr="cast InternalConstGLContext.KEEP" line="782" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.KEEP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEEP>
	<REPLACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.REPLACE" line="783" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.REPLACE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPLACE>
	<INCR public="1" get="inline" set="null" expr="cast InternalConstGLContext.INCR" line="784" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INCR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INCR>
	<DECR public="1" get="inline" set="null" expr="cast InternalConstGLContext.DECR" line="785" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DECR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECR>
	<INVERT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVERT" line="786" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INVERT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVERT>
	<INCR_WRAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.INCR_WRAP" line="787" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INCR_WRAP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.DECR_WRAP" line="788" static="1">
		<x path="gluon.webgl.Operation"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DECR_WRAP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECR_WRAP>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.Operation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<ZERO public="1" get="inline" set="null" expr="cast InternalConstGLContext.ZERO" line="781" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ZERO</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ZERO>
		<KEEP public="1" get="inline" set="null" expr="cast InternalConstGLContext.KEEP" line="782" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.KEEP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEEP>
		<REPLACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.REPLACE" line="783" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.REPLACE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPLACE>
		<INCR public="1" get="inline" set="null" expr="cast InternalConstGLContext.INCR" line="784" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INCR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INCR>
		<DECR public="1" get="inline" set="null" expr="cast InternalConstGLContext.DECR" line="785" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DECR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECR>
		<INVERT public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVERT" line="786" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INVERT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVERT>
		<INCR_WRAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.INCR_WRAP" line="787" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INCR_WRAP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.DECR_WRAP" line="788" static="1">
			<x path="gluon.webgl.Operation"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DECR_WRAP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECR_WRAP>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ErrorCode" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ErrorCode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<NO_ERROR public="1" get="inline" set="null" expr="cast InternalConstGLContext.NO_ERROR" line="793" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NO_ERROR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_ENUM" line="794" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INVALID_ENUM</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_VALUE" line="795" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INVALID_VALUE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_OPERATION" line="796" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INVALID_OPERATION</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_OPERATION>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_FRAMEBUFFER_OPERATION" line="797" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.INVALID_FRAMEBUFFER_OPERATION</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<OUT_OF_MEMORY public="1" get="inline" set="null" expr="cast InternalConstGLContext.OUT_OF_MEMORY" line="798" static="1">
		<x path="gluon.webgl.ErrorCode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.OUT_OF_MEMORY</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT_OF_MEMORY>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ErrorCode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<NO_ERROR public="1" get="inline" set="null" expr="cast InternalConstGLContext.NO_ERROR" line="793" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NO_ERROR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_ENUM" line="794" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INVALID_ENUM</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_VALUE" line="795" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INVALID_VALUE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_OPERATION" line="796" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INVALID_OPERATION</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_OPERATION>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="cast InternalConstGLContext.INVALID_FRAMEBUFFER_OPERATION" line="797" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.INVALID_FRAMEBUFFER_OPERATION</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="cast InternalConstGLContext.OUT_OF_MEMORY" line="798" static="1">
			<x path="gluon.webgl.ErrorCode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.OUT_OF_MEMORY</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT_OF_MEMORY>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.FrontFaceDirection" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FrontFaceDirection_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<CW public="1" get="inline" set="null" expr="cast InternalConstGLContext.CW" line="803" static="1">
		<x path="gluon.webgl.FrontFaceDirection"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CW</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CW>
	<CCW public="1" get="inline" set="null" expr="cast InternalConstGLContext.CCW" line="804" static="1">
		<x path="gluon.webgl.FrontFaceDirection"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CCW</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CCW>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FrontFaceDirection_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<CW public="1" get="inline" set="null" expr="cast InternalConstGLContext.CW" line="803" static="1">
			<x path="gluon.webgl.FrontFaceDirection"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CW</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CW>
		<CCW public="1" get="inline" set="null" expr="cast InternalConstGLContext.CCW" line="804" static="1">
			<x path="gluon.webgl.FrontFaceDirection"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CCW</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CCW>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.Capability" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.Capability_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<CULL_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE" line="809" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CULL_FACE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CULL_FACE>
	<BLEND public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND" line="810" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND>
	<DITHER public="1" get="inline" set="null" expr="cast InternalConstGLContext.DITHER" line="811" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DITHER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DITHER>
	<STENCIL_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_TEST" line="812" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_TEST" line="813" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_TEST" line="814" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SCISSOR_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FILL" line="815" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FILL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_ALPHA_TO_COVERAGE" line="816" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLE_ALPHA_TO_COVERAGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE" line="817" static="1">
		<x path="gluon.webgl.Capability"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLE_COVERAGE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.Capability_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<CULL_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE" line="809" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CULL_FACE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CULL_FACE>
		<BLEND public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND" line="810" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND>
		<DITHER public="1" get="inline" set="null" expr="cast InternalConstGLContext.DITHER" line="811" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DITHER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_TEST" line="812" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_TEST" line="813" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_TEST" line="814" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SCISSOR_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FILL" line="815" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FILL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_ALPHA_TO_COVERAGE" line="816" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLE_ALPHA_TO_COVERAGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE" line="817" static="1">
			<x path="gluon.webgl.Capability"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLE_COVERAGE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.FramebufferAttachement" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FramebufferAttachement_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_ATTACHMENT0" line="822" static="1">
		<x path="gluon.webgl.FramebufferAttachement"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COLOR_ATTACHMENT0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_ATTACHMENT" line="823" static="1">
		<x path="gluon.webgl.FramebufferAttachement"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_ATTACHMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_ATTACHMENT" line="824" static="1">
		<x path="gluon.webgl.FramebufferAttachement"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_ATTACHMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_STENCIL_ATTACHMENT" line="828" static="1">
		<x path="gluon.webgl.FramebufferAttachement"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_STENCIL_ATTACHMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferAttachement_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_ATTACHMENT0" line="822" static="1">
			<x path="gluon.webgl.FramebufferAttachement"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COLOR_ATTACHMENT0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_ATTACHMENT" line="823" static="1">
			<x path="gluon.webgl.FramebufferAttachement"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_ATTACHMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_ATTACHMENT" line="824" static="1">
			<x path="gluon.webgl.FramebufferAttachement"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_ATTACHMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_STENCIL_ATTACHMENT" line="828" static="1">
			<x path="gluon.webgl.FramebufferAttachement"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_STENCIL_ATTACHMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.HintMode" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.HintMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<DONT_CARE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DONT_CARE" line="833" static="1">
		<x path="gluon.webgl.HintMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DONT_CARE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DONT_CARE>
	<FASTEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.FASTEST" line="834" static="1">
		<x path="gluon.webgl.HintMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FASTEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FASTEST>
	<NICEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NICEST" line="835" static="1">
		<x path="gluon.webgl.HintMode"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NICEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NICEST>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.HintMode_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<DONT_CARE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DONT_CARE" line="833" static="1">
			<x path="gluon.webgl.HintMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DONT_CARE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DONT_CARE>
		<FASTEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.FASTEST" line="834" static="1">
			<x path="gluon.webgl.HintMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FASTEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FASTEST>
		<NICEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.NICEST" line="835" static="1">
			<x path="gluon.webgl.HintMode"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NICEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NICEST>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.PrecisionType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.PrecisionType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<LOW_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.LOW_FLOAT" line="840" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LOW_FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MEDIUM_FLOAT" line="841" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MEDIUM_FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.HIGH_FLOAT" line="842" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.HIGH_FLOAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.LOW_INT" line="843" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LOW_INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MEDIUM_INT" line="844" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MEDIUM_INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.HIGH_INT" line="845" static="1">
		<x path="gluon.webgl.PrecisionType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.HIGH_INT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HIGH_INT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.PrecisionType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<LOW_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.LOW_FLOAT" line="840" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LOW_FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MEDIUM_FLOAT" line="841" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MEDIUM_FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.HIGH_FLOAT" line="842" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.HIGH_FLOAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.LOW_INT" line="843" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LOW_INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.MEDIUM_INT" line="844" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MEDIUM_INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" expr="cast InternalConstGLContext.HIGH_INT" line="845" static="1">
			<x path="gluon.webgl.PrecisionType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.HIGH_INT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HIGH_INT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.FramebufferAttachmentObjectType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FramebufferAttachmentObjectType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<NONE public="1" get="inline" set="null" expr="cast InternalConstGLContext.NONE" line="850" static="1">
		<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.NONE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE" line="851" static="1">
		<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE>
	<RENDERBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER" line="852" static="1">
		<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferAttachmentObjectType_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<NONE public="1" get="inline" set="null" expr="cast InternalConstGLContext.NONE" line="850" static="1">
			<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.NONE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE" line="851" static="1">
			<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE>
		<RENDERBUFFER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER" line="852" static="1">
			<x path="gluon.webgl.FramebufferAttachmentObjectType"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.BufferParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.BufferParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<BUFFER_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BUFFER_SIZE" line="857" static="1">
		<x path="gluon.webgl.BufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BUFFER_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BUFFER_USAGE" line="858" static="1">
		<x path="gluon.webgl.BufferParameter"><x path="gluon.webgl.BufferUsage"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BUFFER_USAGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFER_USAGE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.BufferParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<BUFFER_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BUFFER_SIZE" line="857" static="1">
			<x path="gluon.webgl.BufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BUFFER_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.BUFFER_USAGE" line="858" static="1">
			<x path="gluon.webgl.BufferParameter"><x path="gluon.webgl.BufferUsage"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BUFFER_USAGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFER_USAGE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl._GLContext.FramebufferAttachmentObjectName" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext">
		<from>
			<icast><t path="gluon.webgl.GLTexture"/></icast>
			<icast><t path="gluon.webgl.GLRenderbuffer"/></icast>
		</from>
		<this><d/></this>
		<to>
			<icast><t path="gluon.webgl.GLTexture"/></icast>
			<icast><t path="gluon.webgl.GLRenderbuffer"/></icast>
		</to>
		<impl><class path="gluon.webgl._GLContext.FramebufferAttachmentObjectName_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1"/></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferAttachmentObjectName_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1"/>
	<abstract path="gluon.webgl.FramebufferAttachmentParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.FramebufferAttachmentParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE" line="867" static="1">
		<x path="gluon.webgl.FramebufferAttachmentParameter"><x path="gluon.webgl.FramebufferAttachmentObjectType"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME" line="868" static="1">
		<x path="gluon.webgl.FramebufferAttachmentParameter"><x path="gluon.webgl._GLContext.FramebufferAttachmentObjectName"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL" line="869" static="1">
		<x path="gluon.webgl.FramebufferAttachmentParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE" line="870" static="1">
		<x path="gluon.webgl.FramebufferAttachmentParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.FramebufferAttachmentParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE" line="867" static="1">
			<x path="gluon.webgl.FramebufferAttachmentParameter"><x path="gluon.webgl.FramebufferAttachmentObjectType"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME" line="868" static="1">
			<x path="gluon.webgl.FramebufferAttachmentParameter"><x path="gluon.webgl._GLContext.FramebufferAttachmentObjectName"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL" line="869" static="1">
			<x path="gluon.webgl.FramebufferAttachmentParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE" line="870" static="1">
			<x path="gluon.webgl.FramebufferAttachmentParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ProgramParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ProgramParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<DELETE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DELETE_STATUS" line="875" static="1">
		<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DELETE_STATUS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINK_STATUS" line="876" static="1">
		<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINK_STATUS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.VALIDATE_STATUS" line="877" static="1">
		<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VALIDATE_STATUS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ATTACHED_SHADERS" line="878" static="1">
		<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ATTACHED_SHADERS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ATTACHED_SHADERS>
	<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_ATTRIBUTES" line="879" static="1">
		<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ACTIVE_ATTRIBUTES</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACTIVE_ATTRIBUTES>
	<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_UNIFORMS" line="880" static="1">
		<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ACTIVE_UNIFORMS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACTIVE_UNIFORMS>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ProgramParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<DELETE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DELETE_STATUS" line="875" static="1">
			<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DELETE_STATUS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINK_STATUS" line="876" static="1">
			<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINK_STATUS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.VALIDATE_STATUS" line="877" static="1">
			<x path="gluon.webgl.ProgramParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VALIDATE_STATUS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ATTACHED_SHADERS" line="878" static="1">
			<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ATTACHED_SHADERS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ATTACHED_SHADERS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_ATTRIBUTES" line="879" static="1">
			<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ACTIVE_ATTRIBUTES</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACTIVE_ATTRIBUTES>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_UNIFORMS" line="880" static="1">
			<x path="gluon.webgl.ProgramParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ACTIVE_UNIFORMS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACTIVE_UNIFORMS>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.ShaderParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.ShaderParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<SHADER_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHADER_TYPE" line="885" static="1">
		<x path="gluon.webgl.ShaderParameter"><x path="gluon.webgl.ShaderType"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SHADER_TYPE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DELETE_STATUS" line="886" static="1">
		<x path="gluon.webgl.ShaderParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DELETE_STATUS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE_STATUS>
	<COMPILE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.COMPILE_STATUS" line="887" static="1">
		<x path="gluon.webgl.ShaderParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COMPILE_STATUS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPILE_STATUS>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.ShaderParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<SHADER_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHADER_TYPE" line="885" static="1">
			<x path="gluon.webgl.ShaderParameter"><x path="gluon.webgl.ShaderType"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SHADER_TYPE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DELETE_STATUS" line="886" static="1">
			<x path="gluon.webgl.ShaderParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DELETE_STATUS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE_STATUS>
		<COMPILE_STATUS public="1" get="inline" set="null" expr="cast InternalConstGLContext.COMPILE_STATUS" line="887" static="1">
			<x path="gluon.webgl.ShaderParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COMPILE_STATUS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPILE_STATUS>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.RenderbufferParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.RenderbufferParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_WIDTH" line="892" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_WIDTH</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_HEIGHT" line="893" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_HEIGHT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_INTERNAL_FORMAT" line="894" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><x path="gluon.webgl.RenderbufferFormat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_INTERNAL_FORMAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_RED_SIZE" line="895" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_RED_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_GREEN_SIZE" line="896" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_GREEN_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_BLUE_SIZE" line="897" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_BLUE_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_ALPHA_SIZE" line="898" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_ALPHA_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_DEPTH_SIZE" line="899" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_DEPTH_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_STENCIL_SIZE" line="900" static="1">
		<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_STENCIL_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.RenderbufferParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_WIDTH" line="892" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_WIDTH</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_HEIGHT" line="893" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_HEIGHT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_INTERNAL_FORMAT" line="894" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><x path="gluon.webgl.RenderbufferFormat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_INTERNAL_FORMAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_RED_SIZE" line="895" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_RED_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_GREEN_SIZE" line="896" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_GREEN_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_BLUE_SIZE" line="897" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_BLUE_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_ALPHA_SIZE" line="898" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_ALPHA_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_DEPTH_SIZE" line="899" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_DEPTH_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_STENCIL_SIZE" line="900" static="1">
			<x path="gluon.webgl.RenderbufferParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_STENCIL_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.TextureParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.TextureParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_MAG_FILTER" line="905" static="1">
		<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureMagFilter"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_MAG_FILTER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_MIN_FILTER" line="906" static="1">
		<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureMinFilter"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_MIN_FILTER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_WRAP_S" line="907" static="1">
		<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureWrapMode"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_WRAP_S</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_WRAP_T" line="908" static="1">
		<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureWrapMode"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_WRAP_T</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_MAX_ANISOTROPY_EXT public="1" get="inline" set="null" expr="cast 0x84FE" line="911" static="1">
		<x path="gluon.webgl.TextureParameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast 0x84FE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_MAX_ANISOTROPY_EXT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.TextureParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_MAG_FILTER" line="905" static="1">
			<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureMagFilter"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_MAG_FILTER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_MIN_FILTER" line="906" static="1">
			<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureMinFilter"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_MIN_FILTER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_WRAP_S" line="907" static="1">
			<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureWrapMode"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_WRAP_S</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_WRAP_T" line="908" static="1">
			<x path="gluon.webgl.TextureParameter"><x path="gluon.webgl.TextureWrapMode"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_WRAP_T</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_MAX_ANISOTROPY_EXT public="1" get="inline" set="null" expr="cast 0x84FE" line="911" static="1">
			<x path="gluon.webgl.TextureParameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast 0x84FE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_MAX_ANISOTROPY_EXT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.VertexAttributeParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.VertexAttributeParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING" line="916" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLBuffer"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_ENABLED" line="917" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_ENABLED</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_SIZE" line="918" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_STRIDE" line="919" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_STRIDE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_TYPE" line="920" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><x path="gluon.webgl.DataType"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_TYPE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_NORMALIZED" line="921" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_NORMALIZED</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="cast InternalConstGLContext.CURRENT_VERTEX_ATTRIB" line="922" static="1">
		<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CURRENT_VERTEX_ATTRIB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENT_VERTEX_ATTRIB>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.VertexAttributeParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING" line="916" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLBuffer"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_ENABLED" line="917" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_ENABLED</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_SIZE" line="918" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_STRIDE" line="919" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_STRIDE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_TYPE" line="920" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><x path="gluon.webgl.DataType"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_TYPE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_NORMALIZED" line="921" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_NORMALIZED</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="cast InternalConstGLContext.CURRENT_VERTEX_ATTRIB" line="922" static="1">
			<x path="gluon.webgl.VertexAttributeParameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CURRENT_VERTEX_ATTRIB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENT_VERTEX_ATTRIB>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.VertexAttributeOffsetParameter" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.VertexAttributeOffsetParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_POINTER" line="927" static="1">
		<x path="gluon.webgl.VertexAttributeOffsetParameter"/>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_POINTER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.VertexAttributeOffsetParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_POINTER" line="927" static="1">
			<x path="gluon.webgl.VertexAttributeOffsetParameter"/>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERTEX_ATTRIB_ARRAY_POINTER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.PixelStoreParameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.PixelStoreParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<PACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.PACK_ALIGNMENT" line="932" static="1">
		<x path="gluon.webgl.PixelStoreParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.PACK_ALIGNMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PACK_ALIGNMENT>
	<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNPACK_ALIGNMENT" line="933" static="1">
		<x path="gluon.webgl.PixelStoreParameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNPACK_ALIGNMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNPACK_ALIGNMENT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.PixelStoreParameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.PACK_ALIGNMENT" line="932" static="1">
			<x path="gluon.webgl.PixelStoreParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.PACK_ALIGNMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PACK_ALIGNMENT>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNPACK_ALIGNMENT" line="933" static="1">
			<x path="gluon.webgl.PixelStoreParameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNPACK_ALIGNMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNPACK_ALIGNMENT>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="gluon.webgl.Parameter" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" module="gluon.webgl.GLContext">
		<from><icast><t path="gluon.webgl.GLenum"/></icast></from>
		<this><t path="gluon.webgl.GLenum"/></this>
		<to><icast><t path="gluon.webgl.GLenum"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContext.Parameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
	<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_TEXTURE" line="945" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.TextureUnit"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ACTIVE_TEXTURE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACTIVE_TEXTURE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALIASED_LINE_WIDTH_RANGE" line="946" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ALIASED_LINE_WIDTH_RANGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALIASED_POINT_SIZE_RANGE" line="947" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ALIASED_POINT_SIZE_RANGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALPHA_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALPHA_BITS" line="948" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ALPHA_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALPHA_BITS>
	<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.ARRAY_BUFFER_BINDING" line="949" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLBuffer"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ARRAY_BUFFER_BINDING</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARRAY_BUFFER_BINDING>
	<BLEND public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND" line="950" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND>
	<BLEND_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_COLOR" line="951" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_COLOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_COLOR>
	<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_DST_ALPHA" line="952" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_DST_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_DST_ALPHA>
	<BLEND_DST_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_DST_RGB" line="953" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_DST_RGB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_DST_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_EQUATION_ALPHA" line="954" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendEquation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_EQUATION_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_EQUATION_ALPHA>
	<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_EQUATION_RGB" line="955" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendEquation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_EQUATION_RGB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_EQUATION_RGB>
	<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_SRC_ALPHA" line="956" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_SRC_ALPHA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_SRC_ALPHA>
	<BLEND_SRC_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_SRC_RGB" line="957" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLEND_SRC_RGB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLEND_SRC_RGB>
	<BLUE_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLUE_BITS" line="958" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.BLUE_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BLUE_BITS>
	<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_CLEAR_VALUE" line="959" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COLOR_CLEAR_VALUE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_WRITEMASK" line="960" static="1">
		<x path="gluon.webgl.Parameter"><c path="Array"><x path="Bool"/></c></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COLOR_WRITEMASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_WRITEMASK>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="cast InternalConstGLContext.COMPRESSED_TEXTURE_FORMATS" line="961" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLUint32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.COMPRESSED_TEXTURE_FORMATS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<CULL_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE" line="962" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CULL_FACE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CULL_FACE>
	<CULL_FACE_MODE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE_MODE" line="963" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.CullFaceMode"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CULL_FACE_MODE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CULL_FACE_MODE>
	<CURRENT_PROGRAM public="1" get="inline" set="null" expr="cast InternalConstGLContext.CURRENT_PROGRAM" line="964" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLProgram"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.CURRENT_PROGRAM</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENT_PROGRAM>
	<DEPTH_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_BITS" line="965" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_BITS>
	<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_CLEAR_VALUE" line="966" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_CLEAR_VALUE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_FUNC" line="967" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_FUNC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_FUNC>
	<DEPTH_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_RANGE" line="968" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_RANGE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_RANGE>
	<DEPTH_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_TEST" line="969" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_TEST>
	<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_WRITEMASK" line="970" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DEPTH_WRITEMASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEPTH_WRITEMASK>
	<DITHER public="1" get="inline" set="null" expr="cast InternalConstGLContext.DITHER" line="971" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.DITHER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DITHER>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER_BINDING" line="972" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLBuffer"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER_BINDING</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_BINDING" line="973" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFramebuffer"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_BINDING</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER_BINDING>
	<FRONT_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT_FACE" line="974" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.FrontFaceDirection"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.FRONT_FACE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRONT_FACE>
	<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="cast InternalConstGLContext.GENERATE_MIPMAP_HINT" line="975" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.HintMode"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.GENERATE_MIPMAP_HINT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GENERATE_MIPMAP_HINT>
	<GREEN_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.GREEN_BITS" line="976" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.GREEN_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREEN_BITS>
	<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_FORMAT" line="977" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.PixelFormat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_FORMAT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMPLEMENTATION_COLOR_READ_FORMAT>
	<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_TYPE" line="978" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.PixelDataType"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_TYPE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMPLEMENTATION_COLOR_READ_TYPE>
	<LINE_WIDTH public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_WIDTH" line="979" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.LINE_WIDTH</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LINE_WIDTH>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS" line="980" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_CUBE_MAP_TEXTURE_SIZE" line="981" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_CUBE_MAP_TEXTURE_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_FRAGMENT_UNIFORM_VECTORS" line="982" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_FRAGMENT_UNIFORM_VECTORS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_RENDERBUFFER_SIZE" line="983" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_RENDERBUFFER_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_RENDERBUFFER_SIZE>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_TEXTURE_IMAGE_UNITS" line="984" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_TEXTURE_IMAGE_UNITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_TEXTURE_SIZE" line="985" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_TEXTURE_SIZE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VARYING_VECTORS" line="986" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_VARYING_VECTORS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_VARYING_VECTORS>
	<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_ATTRIBS" line="987" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_ATTRIBS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS" line="988" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_UNIFORM_VECTORS" line="989" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_UNIFORM_VECTORS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VIEWPORT_DIMS" line="990" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.MAX_VIEWPORT_DIMS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_VIEWPORT_DIMS>
	<PACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.PACK_ALIGNMENT" line="991" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.PACK_ALIGNMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PACK_ALIGNMENT>
	<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FACTOR" line="992" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FACTOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POLYGON_OFFSET_FACTOR>
	<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FILL" line="993" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FILL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POLYGON_OFFSET_FILL>
	<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_UNITS" line="994" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_UNITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POLYGON_OFFSET_UNITS>
	<RED_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.RED_BITS" line="995" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RED_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RED_BITS>
	<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_BINDING" line="996" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLRenderbuffer"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_BINDING</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER_BINDING>
	<RENDERER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERER" line="997" static="1">
		<x path="gluon.webgl.Parameter"><c path="String"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.RENDERER</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERER>
	<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_BUFFERS" line="998" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLE_BUFFERS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLE_BUFFERS>
	<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE_INVERT" line="999" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE_INVERT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLE_COVERAGE_INVERT>
	<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE_VALUE" line="1000" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE_VALUE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLES public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLES" line="1001" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SAMPLES</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLES>
	<SCISSOR_BOX public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_BOX" line="1002" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SCISSOR_BOX</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCISSOR_BOX>
	<SCISSOR_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_TEST" line="1003" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SCISSOR_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCISSOR_TEST>
	<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHADING_LANGUAGE_VERSION" line="1004" static="1">
		<x path="gluon.webgl.Parameter"><c path="String"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SHADING_LANGUAGE_VERSION</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADING_LANGUAGE_VERSION>
	<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_FAIL" line="1005" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_FAIL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_FUNC" line="1006" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_FUNC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_FAIL" line="1007" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_FAIL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_PASS" line="1008" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_PASS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_REF" line="1009" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_REF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_VALUE_MASK" line="1010" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_VALUE_MASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_WRITEMASK" line="1011" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_WRITEMASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BACK_WRITEMASK>
	<STENCIL_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BITS" line="1012" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_BITS>
	<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_CLEAR_VALUE" line="1013" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_CLEAR_VALUE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_FAIL" line="1014" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_FAIL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_FAIL>
	<STENCIL_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_FUNC" line="1015" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_FUNC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_FUNC>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_PASS_DEPTH_FAIL" line="1016" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_PASS_DEPTH_FAIL</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_PASS_DEPTH_PASS" line="1017" static="1">
		<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_PASS_DEPTH_PASS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_REF" line="1018" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_REF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_REF>
	<STENCIL_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_TEST" line="1019" static="1">
		<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_TEST</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_TEST>
	<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_VALUE_MASK" line="1020" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_VALUE_MASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_WRITEMASK" line="1021" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.STENCIL_WRITEMASK</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL_WRITEMASK>
	<SUBPIXEL_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.SUBPIXEL_BITS" line="1022" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.SUBPIXEL_BITS</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUBPIXEL_BITS>
	<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_BINDING_2D" line="1023" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLTexture"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_BINDING_2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_BINDING_2D>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_BINDING_CUBE_MAP" line="1024" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLTexture"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.TEXTURE_BINDING_CUBE_MAP</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNPACK_ALIGNMENT" line="1025" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.UNPACK_ALIGNMENT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNPACK_ALIGNMENT>
	<VENDOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.VENDOR" line="1034" static="1">
		<x path="gluon.webgl.Parameter"><c path="String"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VENDOR</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VENDOR>
	<VERSION public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERSION" line="1035" static="1">
		<x path="gluon.webgl.Parameter"><c path="String"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VERSION</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERSION>
	<VIEWPORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.VIEWPORT" line="1036" static="1">
		<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
		<meta>
			<m n=":value"><e>cast InternalConstGLContext.VIEWPORT</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VIEWPORT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContext.Parameter_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContext.hx" private="1" module="gluon.webgl.GLContext" extern="1" final="1">
		<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ACTIVE_TEXTURE" line="945" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.TextureUnit"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ACTIVE_TEXTURE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACTIVE_TEXTURE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALIASED_LINE_WIDTH_RANGE" line="946" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ALIASED_LINE_WIDTH_RANGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALIASED_POINT_SIZE_RANGE" line="947" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ALIASED_POINT_SIZE_RANGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALPHA_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.ALPHA_BITS" line="948" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ALPHA_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALPHA_BITS>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.ARRAY_BUFFER_BINDING" line="949" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLBuffer"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ARRAY_BUFFER_BINDING</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARRAY_BUFFER_BINDING>
		<BLEND public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND" line="950" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND>
		<BLEND_COLOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_COLOR" line="951" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_COLOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_COLOR>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_DST_ALPHA" line="952" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_DST_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_DST_ALPHA>
		<BLEND_DST_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_DST_RGB" line="953" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_DST_RGB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_DST_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_EQUATION_ALPHA" line="954" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendEquation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_EQUATION_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_EQUATION_ALPHA>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_EQUATION_RGB" line="955" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendEquation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_EQUATION_RGB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_EQUATION_RGB>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_SRC_ALPHA" line="956" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_SRC_ALPHA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_SRC_ALPHA>
		<BLEND_SRC_RGB public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLEND_SRC_RGB" line="957" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.BlendFactor"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLEND_SRC_RGB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLEND_SRC_RGB>
		<BLUE_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.BLUE_BITS" line="958" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.BLUE_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BLUE_BITS>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_CLEAR_VALUE" line="959" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COLOR_CLEAR_VALUE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.COLOR_WRITEMASK" line="960" static="1">
			<x path="gluon.webgl.Parameter"><c path="Array"><x path="Bool"/></c></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COLOR_WRITEMASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_WRITEMASK>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="cast InternalConstGLContext.COMPRESSED_TEXTURE_FORMATS" line="961" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLUint32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.COMPRESSED_TEXTURE_FORMATS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<CULL_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE" line="962" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CULL_FACE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CULL_FACE>
		<CULL_FACE_MODE public="1" get="inline" set="null" expr="cast InternalConstGLContext.CULL_FACE_MODE" line="963" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.CullFaceMode"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CULL_FACE_MODE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CULL_FACE_MODE>
		<CURRENT_PROGRAM public="1" get="inline" set="null" expr="cast InternalConstGLContext.CURRENT_PROGRAM" line="964" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLProgram"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.CURRENT_PROGRAM</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENT_PROGRAM>
		<DEPTH_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_BITS" line="965" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_BITS>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_CLEAR_VALUE" line="966" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_CLEAR_VALUE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_FUNC" line="967" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_FUNC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_FUNC>
		<DEPTH_RANGE public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_RANGE" line="968" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFloat32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_RANGE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_RANGE>
		<DEPTH_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_TEST" line="969" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_TEST>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.DEPTH_WRITEMASK" line="970" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DEPTH_WRITEMASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEPTH_WRITEMASK>
		<DITHER public="1" get="inline" set="null" expr="cast InternalConstGLContext.DITHER" line="971" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.DITHER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DITHER>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER_BINDING" line="972" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLBuffer"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.ELEMENT_ARRAY_BUFFER_BINDING</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRAMEBUFFER_BINDING" line="973" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLFramebuffer"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRAMEBUFFER_BINDING</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER_BINDING>
		<FRONT_FACE public="1" get="inline" set="null" expr="cast InternalConstGLContext.FRONT_FACE" line="974" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.FrontFaceDirection"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.FRONT_FACE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRONT_FACE>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="cast InternalConstGLContext.GENERATE_MIPMAP_HINT" line="975" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.HintMode"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.GENERATE_MIPMAP_HINT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GENERATE_MIPMAP_HINT>
		<GREEN_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.GREEN_BITS" line="976" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.GREEN_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREEN_BITS>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_FORMAT" line="977" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.PixelFormat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_FORMAT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_TYPE" line="978" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.PixelDataType"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.IMPLEMENTATION_COLOR_READ_TYPE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<LINE_WIDTH public="1" get="inline" set="null" expr="cast InternalConstGLContext.LINE_WIDTH" line="979" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.LINE_WIDTH</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LINE_WIDTH>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS" line="980" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_CUBE_MAP_TEXTURE_SIZE" line="981" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_CUBE_MAP_TEXTURE_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_FRAGMENT_UNIFORM_VECTORS" line="982" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_FRAGMENT_UNIFORM_VECTORS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_RENDERBUFFER_SIZE" line="983" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_RENDERBUFFER_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_RENDERBUFFER_SIZE>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_TEXTURE_IMAGE_UNITS" line="984" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_TEXTURE_IMAGE_UNITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_TEXTURE_SIZE" line="985" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_TEXTURE_SIZE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VARYING_VECTORS" line="986" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_VARYING_VECTORS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_VARYING_VECTORS>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_ATTRIBS" line="987" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_ATTRIBS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS" line="988" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VERTEX_UNIFORM_VECTORS" line="989" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_VERTEX_UNIFORM_VECTORS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="cast InternalConstGLContext.MAX_VIEWPORT_DIMS" line="990" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.MAX_VIEWPORT_DIMS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_VIEWPORT_DIMS>
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.PACK_ALIGNMENT" line="991" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.PACK_ALIGNMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PACK_ALIGNMENT>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FACTOR" line="992" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FACTOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POLYGON_OFFSET_FACTOR>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_FILL" line="993" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_FILL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POLYGON_OFFSET_FILL>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.POLYGON_OFFSET_UNITS" line="994" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.POLYGON_OFFSET_UNITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POLYGON_OFFSET_UNITS>
		<RED_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.RED_BITS" line="995" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RED_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RED_BITS>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERBUFFER_BINDING" line="996" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLRenderbuffer"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERBUFFER_BINDING</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER_BINDING>
		<RENDERER public="1" get="inline" set="null" expr="cast InternalConstGLContext.RENDERER" line="997" static="1">
			<x path="gluon.webgl.Parameter"><c path="String"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.RENDERER</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERER>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_BUFFERS" line="998" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLE_BUFFERS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLE_BUFFERS>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE_INVERT" line="999" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE_INVERT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLE_COVERAGE_INVERT>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLE_COVERAGE_VALUE" line="1000" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLfloat"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLE_COVERAGE_VALUE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLES public="1" get="inline" set="null" expr="cast InternalConstGLContext.SAMPLES" line="1001" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SAMPLES</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLES>
		<SCISSOR_BOX public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_BOX" line="1002" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SCISSOR_BOX</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCISSOR_BOX>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.SCISSOR_TEST" line="1003" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SCISSOR_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCISSOR_TEST>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="cast InternalConstGLContext.SHADING_LANGUAGE_VERSION" line="1004" static="1">
			<x path="gluon.webgl.Parameter"><c path="String"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SHADING_LANGUAGE_VERSION</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADING_LANGUAGE_VERSION>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_FAIL" line="1005" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_FAIL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_FUNC" line="1006" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_FUNC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_FAIL" line="1007" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_FAIL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_PASS" line="1008" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_PASS_DEPTH_PASS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_REF" line="1009" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_REF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_VALUE_MASK" line="1010" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_VALUE_MASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BACK_WRITEMASK" line="1011" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BACK_WRITEMASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BACK_WRITEMASK>
		<STENCIL_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_BITS" line="1012" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_BITS>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_CLEAR_VALUE" line="1013" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_CLEAR_VALUE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_FAIL" line="1014" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_FAIL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_FAIL>
		<STENCIL_FUNC public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_FUNC" line="1015" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.ComparisonFunction"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_FUNC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_FUNC>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_PASS_DEPTH_FAIL" line="1016" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_PASS_DEPTH_FAIL</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_PASS_DEPTH_PASS" line="1017" static="1">
			<x path="gluon.webgl.Parameter"><x path="gluon.webgl.Operation"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_PASS_DEPTH_PASS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_REF" line="1018" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_REF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_REF>
		<STENCIL_TEST public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_TEST" line="1019" static="1">
			<x path="gluon.webgl.Parameter"><x path="Bool"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_TEST</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_TEST>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_VALUE_MASK" line="1020" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_VALUE_MASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="cast InternalConstGLContext.STENCIL_WRITEMASK" line="1021" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLuint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.STENCIL_WRITEMASK</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL_WRITEMASK>
		<SUBPIXEL_BITS public="1" get="inline" set="null" expr="cast InternalConstGLContext.SUBPIXEL_BITS" line="1022" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.SUBPIXEL_BITS</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUBPIXEL_BITS>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_BINDING_2D" line="1023" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLTexture"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_BINDING_2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_BINDING_2D>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="cast InternalConstGLContext.TEXTURE_BINDING_CUBE_MAP" line="1024" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLTexture"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.TEXTURE_BINDING_CUBE_MAP</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="cast InternalConstGLContext.UNPACK_ALIGNMENT" line="1025" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLint"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.UNPACK_ALIGNMENT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNPACK_ALIGNMENT>
		<VENDOR public="1" get="inline" set="null" expr="cast InternalConstGLContext.VENDOR" line="1034" static="1">
			<x path="gluon.webgl.Parameter"><c path="String"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VENDOR</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VENDOR>
		<VERSION public="1" get="inline" set="null" expr="cast InternalConstGLContext.VERSION" line="1035" static="1">
			<x path="gluon.webgl.Parameter"><c path="String"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VERSION</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERSION>
		<VIEWPORT public="1" get="inline" set="null" expr="cast InternalConstGLContext.VIEWPORT" line="1036" static="1">
			<x path="gluon.webgl.Parameter"><t path="gluon.webgl.GLInt32Array"/></x>
			<meta>
				<m n=":value"><e>cast InternalConstGLContext.VIEWPORT</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VIEWPORT>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="gluon.webgl.GLContextAttributes" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContextAttributes.hx"><a>
	<stencil><x path="Bool"/></stencil>
	<preserveDrawingBuffer><x path="Bool"/></preserveDrawingBuffer>
	<premultipliedAlpha><x path="Bool"/></premultipliedAlpha>
	<powerPreference>
		<x path="Null"><x path="gluon.webgl.PowerPreference"/></x>
		<meta><m n=":optional"/></meta>
	</powerPreference>
	<failIfMajorPerformanceCaveat>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</failIfMajorPerformanceCaveat>
	<depth><x path="Bool"/></depth>
	<antialias><x path="Bool"/></antialias>
	<alpha><x path="Bool"/></alpha>
</a></typedef>
	<abstract path="gluon.webgl.PowerPreference" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContextAttributes.hx" module="gluon.webgl.GLContextAttributes">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="gluon.webgl._GLContextAttributes.PowerPreference_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContextAttributes.hx" private="1" module="gluon.webgl.GLContextAttributes" extern="1" final="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast &quot;default&quot;" line="20" static="1">
		<x path="gluon.webgl.PowerPreference"/>
		<meta>
			<m n=":value"><e>cast "default"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<LOW_POWER public="1" get="inline" set="null" expr="cast &quot;low-power&quot;" line="21" static="1">
		<x path="gluon.webgl.PowerPreference"/>
		<meta>
			<m n=":value"><e>cast "low-power"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_POWER>
	<HIGH_PERFORMANCE public="1" get="inline" set="null" expr="cast &quot;high-performance&quot;" line="22" static="1">
		<x path="gluon.webgl.PowerPreference"/>
		<meta>
			<m n=":value"><e>cast "high-performance"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HIGH_PERFORMANCE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLContextAttributes.PowerPreference_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLContextAttributes.hx" private="1" module="gluon.webgl.GLContextAttributes" extern="1" final="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast &quot;default&quot;" line="20" static="1">
			<x path="gluon.webgl.PowerPreference"/>
			<meta>
				<m n=":value"><e>cast "default"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<LOW_POWER public="1" get="inline" set="null" expr="cast &quot;low-power&quot;" line="21" static="1">
			<x path="gluon.webgl.PowerPreference"/>
			<meta>
				<m n=":value"><e>cast "low-power"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_POWER>
		<HIGH_PERFORMANCE public="1" get="inline" set="null" expr="cast &quot;high-performance&quot;" line="22" static="1">
			<x path="gluon.webgl.PowerPreference"/>
			<meta>
				<m n=":value"><e>cast "high-performance"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HIGH_PERFORMANCE>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="gluon.webgl.GLFramebuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLFramebuffer.hx"><c path="gluon.webgl.native.GLFramebuffer"/></typedef>
	<typedef path="gluon.webgl.GLProgram" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLProgram.hx"><c path="gluon.webgl.native.GLProgram"/></typedef>
	<typedef path="gluon.webgl.GLRenderbuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLRenderbuffer.hx"><c path="gluon.webgl.native.GLRenderbuffer"/></typedef>
	<typedef path="gluon.webgl.GLShader" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLShader.hx"><c path="gluon.webgl.native.GLShader"/></typedef>
	<typedef path="gluon.webgl.GLShaderPrecisionFormat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLShaderPrecisionFormat.hx"><a>
	<rangeMin set="null"><t path="gluon.webgl.GLint"/></rangeMin>
	<rangeMax set="null"><t path="gluon.webgl.GLint"/></rangeMax>
	<precision set="null"><t path="gluon.webgl.GLint"/></precision>
</a></typedef>
	<typedef path="gluon.webgl.GLTexture" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLTexture.hx"><c path="gluon.webgl.native.GLTexture"/></typedef>
	<typedef path="gluon.webgl._GLUniformLocation.InternalGLUniformLocation" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLUniformLocation.hx" private="1" module="gluon.webgl.GLUniformLocation"><t path="gluon.webgl.GLint"/></typedef>
	<abstract path="gluon.webgl.GLUniformLocation" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLUniformLocation.hx">
		<from><icast><t path="gluon.webgl._GLUniformLocation.InternalGLUniformLocation"/></icast></from>
		<this><t path="gluon.webgl._GLUniformLocation.InternalGLUniformLocation"/></this>
		<to><icast><t path="gluon.webgl._GLUniformLocation.InternalGLUniformLocation"/></icast></to>
		<haxe_doc>Platform consistent wrapper, so that uniform locations can be compared with null (natively these are Ints and -1 means null).
	We use an enum so you can do: if (uniform == NONE).</haxe_doc>
		<meta>
			<m n=":enum"/>
			<m n=":notNull"/>
		</meta>
		<impl><class path="gluon.webgl._GLUniformLocation.GLUniformLocation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLUniformLocation.hx" private="1" module="gluon.webgl.GLUniformLocation" extern="1" final="1">
	<NONE public="1" get="inline" set="null" expr="cast -1" line="16" static="1">
		<x path="gluon.webgl.GLUniformLocation"/>
		<meta>
			<m n=":value"><e>cast -1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="gluon.webgl._GLUniformLocation.GLUniformLocation_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/GLUniformLocation.hx" private="1" module="gluon.webgl.GLUniformLocation" extern="1" final="1">
		<NONE public="1" get="inline" set="null" expr="cast -1" line="16" static="1">
			<x path="gluon.webgl.GLUniformLocation"/>
			<meta>
				<m n=":value"><e>cast -1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="gluon.webgl.extension.ANGLEInstancedArrays" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/ANGLEInstancedArrays.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.EXTBlendMinmax" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTBlendMinmax.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTColorBufferFloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTColorBufferFloat.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTColorBufferHalfFloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTColorBufferHalfFloat.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTDisjointTimerQuery" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTDisjointTimerQuery.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTFragDepth" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTFragDepth.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTShaderTextureLod" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTShaderTextureLod.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTSrgb" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTSrgb.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.EXTTextureFilterAnisotropic" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/EXTTextureFilterAnisotropic.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESElementIndexUint" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESElementIndexUint.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESStandardDerivatives" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESStandardDerivatives.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESTextureFloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESTextureFloat.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESTextureFloatLinear" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESTextureFloatLinear.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESTextureHalfFloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESTextureHalfFloat.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESTextureHalfFloatLinear" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESTextureHalfFloatLinear.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.OESVertexArrayObject" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/OESVertexArrayObject.hx"><d/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLColorBufferFloat" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLColorBufferFloat.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureAstc" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureAstc.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureAtc" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureAtc.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureEtc" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureEtc.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureEtc1" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureEtc1.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTexturePvrtc" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTexturePvrtc.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureS3tc" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureS3tc.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLCompressedTextureS3tcSrgb" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLCompressedTextureS3tcSrgb.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLDebugRendererInfo" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLDebugRendererInfo.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLDebugShaders" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLDebugShaders.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLDepthTexture" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLDepthTexture.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLDrawBuffers" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLDrawBuffers.hx"><x path="Any"/></typedef>
	<typedef path="gluon.webgl.extension.WEBGLLoseContext" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/extension/WEBGLLoseContext.hx"><x path="Any"/></typedef>
	<class path="gluon.webgl.native.ES2Context" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/ES2Context.hx" extern="1">
		<glActiveTexture public="1" set="method" static="1">
			<f a="texture">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glActiveTexture"</e></m></meta>
		</glActiveTexture>
		<glAttachShader public="1" set="method" static="1">
			<f a="program:shader">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glAttachShader"</e></m></meta>
		</glAttachShader>
		<glBindAttribLocation public="1" set="method" static="1">
			<f a="program:index:name">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="cpp.ConstCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBindAttribLocation"</e></m></meta>
		</glBindAttribLocation>
		<glBindBuffer public="1" set="method" static="1">
			<f a="target:buffer">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBindBuffer"</e></m></meta>
		</glBindBuffer>
		<glBindFramebuffer public="1" set="method" static="1">
			<f a="target:framebuffer">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBindFramebuffer"</e></m></meta>
		</glBindFramebuffer>
		<glBindRenderbuffer public="1" set="method" static="1">
			<f a="target:renderbuffer">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBindRenderbuffer"</e></m></meta>
		</glBindRenderbuffer>
		<glBindTexture public="1" set="method" static="1">
			<f a="target:texture">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBindTexture"</e></m></meta>
		</glBindTexture>
		<glBlendColor public="1" set="method" static="1">
			<f a="red:green:blue:alpha">
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBlendColor"</e></m></meta>
		</glBlendColor>
		<glBlendEquation public="1" set="method" static="1">
			<f a="mode">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBlendEquation"</e></m></meta>
		</glBlendEquation>
		<glBlendEquationSeparate public="1" set="method" static="1">
			<f a="modeRGB:modeAlpha">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBlendEquationSeparate"</e></m></meta>
		</glBlendEquationSeparate>
		<glBlendFunc public="1" set="method" static="1">
			<f a="sfactor:dfactor">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBlendFunc"</e></m></meta>
		</glBlendFunc>
		<glBlendFuncSeparate public="1" set="method" static="1">
			<f a="sfactorRGB:dfactorRGB:sfactorAlpha:dfactorAlpha">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBlendFuncSeparate"</e></m></meta>
		</glBlendFuncSeparate>
		<glBufferData public="1" set="method" static="1">
			<f a="target:size:data:usage">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLsizeiptr"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBufferData"</e></m></meta>
		</glBufferData>
		<glBufferSubData public="1" set="method" static="1">
			<f a="target:offset:size:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLintptr"/>
				<t path="gluon.webgl.GLsizeiptr"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glBufferSubData"</e></m></meta>
		</glBufferSubData>
		<glCheckFramebufferStatus public="1" set="method" static="1">
			<f a="target">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
			</f>
			<meta><m n=":native"><e>"glCheckFramebufferStatus"</e></m></meta>
		</glCheckFramebufferStatus>
		<glClear public="1" set="method" static="1">
			<f a="mask">
				<t path="gluon.webgl.GLbitfield"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glClear"</e></m></meta>
		</glClear>
		<glClearColor public="1" set="method" static="1">
			<f a="red:green:blue:alpha">
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glClearColor"</e></m></meta>
		</glClearColor>
		<glClearDepthf public="1" set="method" static="1">
			<f a="d">
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glClearDepthf"</e></m></meta>
		</glClearDepthf>
		<glClearStencil public="1" set="method" static="1">
			<f a="s">
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glClearStencil"</e></m></meta>
		</glClearStencil>
		<glColorMask public="1" set="method" static="1">
			<f a="red:green:blue:alpha">
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glColorMask"</e></m></meta>
		</glColorMask>
		<glCompileShader public="1" set="method" static="1">
			<f a="shader">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCompileShader"</e></m></meta>
		</glCompileShader>
		<glCompressedTexImage2D public="1" set="method" static="1">
			<f a="target:level:internalformat:width:height:border:imageSize:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCompressedTexImage2D"</e></m></meta>
		</glCompressedTexImage2D>
		<glCompressedTexSubImage2D public="1" set="method" static="1">
			<f a="target:level:xoffset:yoffset:width:height:format:imageSize:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCompressedTexSubImage2D"</e></m></meta>
		</glCompressedTexSubImage2D>
		<glCopyTexImage2D public="1" set="method" static="1">
			<f a="target:level:internalformat:x:y:width:height:border">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCopyTexImage2D"</e></m></meta>
		</glCopyTexImage2D>
		<glCopyTexSubImage2D public="1" set="method" static="1">
			<f a="target:level:xoffset:yoffset:x:y:width:height">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCopyTexSubImage2D"</e></m></meta>
		</glCopyTexSubImage2D>
		<glCreateProgram public="1" set="method" static="1">
			<f a=""><t path="gluon.webgl.GLuint"/></f>
			<meta><m n=":native"><e>"glCreateProgram"</e></m></meta>
		</glCreateProgram>
		<glCreateShader public="1" set="method" static="1">
			<f a="type">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
			</f>
			<meta><m n=":native"><e>"glCreateShader"</e></m></meta>
		</glCreateShader>
		<glCullFace public="1" set="method" static="1">
			<f a="mode">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glCullFace"</e></m></meta>
		</glCullFace>
		<glDeleteBuffers public="1" set="method" static="1">
			<f a="n:buffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteBuffers"</e></m></meta>
		</glDeleteBuffers>
		<glDeleteFramebuffers public="1" set="method" static="1">
			<f a="n:framebuffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteFramebuffers"</e></m></meta>
		</glDeleteFramebuffers>
		<glDeleteProgram public="1" set="method" static="1">
			<f a="program">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteProgram"</e></m></meta>
		</glDeleteProgram>
		<glDeleteRenderbuffers public="1" set="method" static="1">
			<f a="n:renderbuffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteRenderbuffers"</e></m></meta>
		</glDeleteRenderbuffers>
		<glDeleteShader public="1" set="method" static="1">
			<f a="shader">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteShader"</e></m></meta>
		</glDeleteShader>
		<glDeleteTextures public="1" set="method" static="1">
			<f a="n:textures">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDeleteTextures"</e></m></meta>
		</glDeleteTextures>
		<glDepthFunc public="1" set="method" static="1">
			<f a="func">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDepthFunc"</e></m></meta>
		</glDepthFunc>
		<glDepthMask public="1" set="method" static="1">
			<f a="flag">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDepthMask"</e></m></meta>
		</glDepthMask>
		<glDepthRangef public="1" set="method" static="1">
			<f a="n:f">
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDepthRangef"</e></m></meta>
		</glDepthRangef>
		<glDetachShader public="1" set="method" static="1">
			<f a="program:shader">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDetachShader"</e></m></meta>
		</glDetachShader>
		<glDisable public="1" set="method" static="1">
			<f a="cap">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDisable"</e></m></meta>
		</glDisable>
		<glDisableVertexAttribArray public="1" set="method" static="1">
			<f a="index">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDisableVertexAttribArray"</e></m></meta>
		</glDisableVertexAttribArray>
		<glDrawArrays public="1" set="method" static="1">
			<f a="mode:first:count">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDrawArrays"</e></m></meta>
		</glDrawArrays>
		<glDrawElements public="1" set="method" static="1">
			<f a="mode:count:type:indices">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glDrawElements"</e></m></meta>
		</glDrawElements>
		<glEnable public="1" set="method" static="1">
			<f a="cap">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glEnable"</e></m></meta>
		</glEnable>
		<glEnableVertexAttribArray public="1" set="method" static="1">
			<f a="index">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glEnableVertexAttribArray"</e></m></meta>
		</glEnableVertexAttribArray>
		<glFinish public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glFinish"</e></m></meta>
		</glFinish>
		<glFlush public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glFlush"</e></m></meta>
		</glFlush>
		<glFramebufferRenderbuffer public="1" set="method" static="1">
			<f a="target:attachment:renderbuffertarget:renderbuffer">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glFramebufferRenderbuffer"</e></m></meta>
		</glFramebufferRenderbuffer>
		<glFramebufferTexture2D public="1" set="method" static="1">
			<f a="target:attachment:textarget:texture:level">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glFramebufferTexture2D"</e></m></meta>
		</glFramebufferTexture2D>
		<glFrontFace public="1" set="method" static="1">
			<f a="mode">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glFrontFace"</e></m></meta>
		</glFrontFace>
		<glGenBuffers public="1" set="method" static="1">
			<f a="n:buffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGenBuffers"</e></m></meta>
		</glGenBuffers>
		<glGenerateMipmap public="1" set="method" static="1">
			<f a="target">
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGenerateMipmap"</e></m></meta>
		</glGenerateMipmap>
		<glGenFramebuffers public="1" set="method" static="1">
			<f a="n:framebuffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGenFramebuffers"</e></m></meta>
		</glGenFramebuffers>
		<glGenRenderbuffers public="1" set="method" static="1">
			<f a="n:renderbuffers">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGenRenderbuffers"</e></m></meta>
		</glGenRenderbuffers>
		<glGenTextures public="1" set="method" static="1">
			<f a="n:textures">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGenTextures"</e></m></meta>
		</glGenTextures>
		<glGetActiveAttrib public="1" set="method" static="1">
			<f a="program:index:bufSize:length:size:type:name">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLenum"/></t>
				<x path="cpp.CastCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetActiveAttrib"</e></m></meta>
		</glGetActiveAttrib>
		<glGetActiveUniform public="1" set="method" static="1">
			<f a="program:index:bufSize:length:size:type:name">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLenum"/></t>
				<x path="cpp.CastCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetActiveUniform"</e></m></meta>
		</glGetActiveUniform>
		<glGetAttachedShaders public="1" set="method" static="1">
			<f a="program:maxCount:count:shaders">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLuint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetAttachedShaders"</e></m></meta>
		</glGetAttachedShaders>
		<glGetAttribLocation public="1" set="method" static="1">
			<f a="program:name">
				<t path="gluon.webgl.GLuint"/>
				<x path="cpp.ConstCharStar"/>
				<t path="gluon.webgl.GLint"/>
			</f>
			<meta><m n=":native"><e>"glGetAttribLocation"</e></m></meta>
		</glGetAttribLocation>
		<glGetBooleanv public="1" set="method" static="1">
			<f a="pname:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><x path="cpp.UInt8"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetBooleanv"</e></m></meta>
		</glGetBooleanv>
		<glGetBufferParameteriv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetBufferParameteriv"</e></m></meta>
		</glGetBufferParameteriv>
		<glGetError public="1" set="method" static="1">
			<f a=""><t path="gluon.webgl.GLenum"/></f>
			<meta><m n=":native"><e>"glGetError"</e></m></meta>
		</glGetError>
		<glGetFloatv public="1" set="method" static="1">
			<f a="pname:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetFloatv"</e></m></meta>
		</glGetFloatv>
		<glGetFramebufferAttachmentParameteriv public="1" set="method" static="1">
			<f a="target:attachment:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetFramebufferAttachmentParameteriv"</e></m></meta>
		</glGetFramebufferAttachmentParameteriv>
		<glGetIntegerv public="1" set="method" static="1">
			<f a="pname:data">
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetIntegerv"</e></m></meta>
		</glGetIntegerv>
		<glGetProgramiv public="1" set="method" static="1">
			<f a="program:pname:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetProgramiv"</e></m></meta>
		</glGetProgramiv>
		<glGetProgramInfoLog public="1" set="method" static="1">
			<f a="program:bufSize:length:infoLog">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<x path="cpp.CastCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetProgramInfoLog"</e></m></meta>
		</glGetProgramInfoLog>
		<glGetRenderbufferParameteriv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetRenderbufferParameteriv"</e></m></meta>
		</glGetRenderbufferParameteriv>
		<glGetShaderiv public="1" set="method" static="1">
			<f a="shader:pname:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetShaderiv"</e></m></meta>
		</glGetShaderiv>
		<glGetShaderInfoLog public="1" set="method" static="1">
			<f a="shader:bufSize:length:infoLog">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<x path="cpp.CastCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetShaderInfoLog"</e></m></meta>
		</glGetShaderInfoLog>
		<glGetShaderPrecisionFormat public="1" set="method" static="1">
			<f a="shadertype:precisiontype:range:precision">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetShaderPrecisionFormat"</e></m></meta>
		</glGetShaderPrecisionFormat>
		<glGetShaderSource public="1" set="method" static="1">
			<f a="shader:bufSize:length:source">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLsizei"/></t>
				<x path="cpp.CastCharStar"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetShaderSource"</e></m></meta>
		</glGetShaderSource>
		<glGetString public="1" set="method" static="1">
			<f a="name">
				<t path="gluon.webgl.GLenum"/>
				<c path="cpp.RawConstPointer"><t path="gluon.webgl.GLubyte"/></c>
			</f>
			<meta><m n=":native"><e>"glGetString"</e></m></meta>
		</glGetString>
		<glGetTexParameterfv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetTexParameterfv"</e></m></meta>
		</glGetTexParameterfv>
		<glGetTexParameteriv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetTexParameteriv"</e></m></meta>
		</glGetTexParameteriv>
		<glGetUniformfv public="1" set="method" static="1">
			<f a="program:location:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetUniformfv"</e></m></meta>
		</glGetUniformfv>
		<glGetUniformiv public="1" set="method" static="1">
			<f a="program:location:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetUniformiv"</e></m></meta>
		</glGetUniformiv>
		<glGetUniformLocation public="1" set="method" static="1">
			<f a="program:name">
				<t path="gluon.webgl.GLuint"/>
				<x path="cpp.ConstCharStar"/>
				<t path="gluon.webgl.GLint"/>
			</f>
			<meta><m n=":native"><e>"glGetUniformLocation"</e></m></meta>
		</glGetUniformLocation>
		<glGetVertexAttribfv public="1" set="method" static="1">
			<f a="index:pname:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetVertexAttribfv"</e></m></meta>
		</glGetVertexAttribfv>
		<glGetVertexAttribiv public="1" set="method" static="1">
			<f a="index:pname:params">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetVertexAttribiv"</e></m></meta>
		</glGetVertexAttribiv>
		<glGetVertexAttribPointerv public="1" set="method" static="1">
			<f a="index:pname:pointer">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><t path="cpp.Star"><c path="cpp.Void"/></t></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glGetVertexAttribPointerv"</e></m></meta>
		</glGetVertexAttribPointerv>
		<glHint public="1" set="method" static="1">
			<f a="target:mode">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glHint"</e></m></meta>
		</glHint>
		<glIsBuffer public="1" set="method" static="1">
			<f a="buffer">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsBuffer"</e></m></meta>
		</glIsBuffer>
		<glIsEnabled public="1" set="method" static="1">
			<f a="cap">
				<t path="gluon.webgl.GLenum"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsEnabled"</e></m></meta>
		</glIsEnabled>
		<glIsFramebuffer public="1" set="method" static="1">
			<f a="framebuffer">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsFramebuffer"</e></m></meta>
		</glIsFramebuffer>
		<glIsProgram public="1" set="method" static="1">
			<f a="program">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsProgram"</e></m></meta>
		</glIsProgram>
		<glIsRenderbuffer public="1" set="method" static="1">
			<f a="renderbuffer">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsRenderbuffer"</e></m></meta>
		</glIsRenderbuffer>
		<glIsShader public="1" set="method" static="1">
			<f a="shader">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsShader"</e></m></meta>
		</glIsShader>
		<glIsTexture public="1" set="method" static="1">
			<f a="texture">
				<t path="gluon.webgl.GLuint"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"glIsTexture"</e></m></meta>
		</glIsTexture>
		<glLineWidth public="1" set="method" static="1">
			<f a="width">
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glLineWidth"</e></m></meta>
		</glLineWidth>
		<glLinkProgram public="1" set="method" static="1">
			<f a="program">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glLinkProgram"</e></m></meta>
		</glLinkProgram>
		<glPixelStorei public="1" set="method" static="1">
			<f a="pname:param">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glPixelStorei"</e></m></meta>
		</glPixelStorei>
		<glPolygonOffset public="1" set="method" static="1">
			<f a="factor:units">
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glPolygonOffset"</e></m></meta>
		</glPolygonOffset>
		<glReadPixels public="1" set="method" static="1">
			<f a="x:y:width:height:format:type:pixels">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.Star"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glReadPixels"</e></m></meta>
		</glReadPixels>
		<glReleaseShaderCompiler public="1" set="method" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":native"><e>"glReleaseShaderCompiler"</e></m></meta>
		</glReleaseShaderCompiler>
		<glRenderbufferStorage public="1" set="method" static="1">
			<f a="target:internalformat:width:height">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glRenderbufferStorage"</e></m></meta>
		</glRenderbufferStorage>
		<glSampleCoverage public="1" set="method" static="1">
			<f a="value:invert">
				<t path="gluon.webgl.GLfloat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glSampleCoverage"</e></m></meta>
		</glSampleCoverage>
		<glScissor public="1" set="method" static="1">
			<f a="x:y:width:height">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glScissor"</e></m></meta>
		</glScissor>
		<glShaderBinary public="1" set="method" static="1">
			<f a="count:shaders:binaryformat:binary:length">
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLuint"/></t>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glShaderBinary"</e></m></meta>
		</glShaderBinary>
		<glShaderSource public="1" set="method" static="1">
			<f a="shader:count:string:length">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><x path="cpp.ConstCharStar"/></t>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glShaderSource"</e></m></meta>
		</glShaderSource>
		<glStencilFunc public="1" set="method" static="1">
			<f a="func:ref:mask">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilFunc"</e></m></meta>
		</glStencilFunc>
		<glStencilFuncSeparate public="1" set="method" static="1">
			<f a="face:func:ref:mask">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilFuncSeparate"</e></m></meta>
		</glStencilFuncSeparate>
		<glStencilMask public="1" set="method" static="1">
			<f a="mask">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilMask"</e></m></meta>
		</glStencilMask>
		<glStencilMaskSeparate public="1" set="method" static="1">
			<f a="face:mask">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilMaskSeparate"</e></m></meta>
		</glStencilMaskSeparate>
		<glStencilOp public="1" set="method" static="1">
			<f a="fail:zfail:zpass">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilOp"</e></m></meta>
		</glStencilOp>
		<glStencilOpSeparate public="1" set="method" static="1">
			<f a="face:sfail:dpfail:dppass">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glStencilOpSeparate"</e></m></meta>
		</glStencilOpSeparate>
		<glTexImage2D public="1" set="method" static="1">
			<f a="target:level:internalformat:width:height:border:format:type:pixels">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexImage2D"</e></m></meta>
		</glTexImage2D>
		<glTexParameterf public="1" set="method" static="1">
			<f a="target:pname:param">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexParameterf"</e></m></meta>
		</glTexParameterf>
		<glTexParameterfv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexParameterfv"</e></m></meta>
		</glTexParameterfv>
		<glTexParameteri public="1" set="method" static="1">
			<f a="target:pname:param">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexParameteri"</e></m></meta>
		</glTexParameteri>
		<glTexParameteriv public="1" set="method" static="1">
			<f a="target:pname:params">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexParameteriv"</e></m></meta>
		</glTexParameteriv>
		<glTexSubImage2D public="1" set="method" static="1">
			<f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="gluon.webgl.GLenum"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glTexSubImage2D"</e></m></meta>
		</glTexSubImage2D>
		<glUniform1f public="1" set="method" static="1">
			<f a="location:v0">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform1f"</e></m></meta>
		</glUniform1f>
		<glUniform1fv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform1fv"</e></m></meta>
		</glUniform1fv>
		<glUniform1i public="1" set="method" static="1">
			<f a="location:v0">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform1i"</e></m></meta>
		</glUniform1i>
		<glUniform1iv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform1iv"</e></m></meta>
		</glUniform1iv>
		<glUniform2f public="1" set="method" static="1">
			<f a="location:v0:v1">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform2f"</e></m></meta>
		</glUniform2f>
		<glUniform2fv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform2fv"</e></m></meta>
		</glUniform2fv>
		<glUniform2i public="1" set="method" static="1">
			<f a="location:v0:v1">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform2i"</e></m></meta>
		</glUniform2i>
		<glUniform2iv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform2iv"</e></m></meta>
		</glUniform2iv>
		<glUniform3f public="1" set="method" static="1">
			<f a="location:v0:v1:v2">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform3f"</e></m></meta>
		</glUniform3f>
		<glUniform3fv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform3fv"</e></m></meta>
		</glUniform3fv>
		<glUniform3i public="1" set="method" static="1">
			<f a="location:v0:v1:v2">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform3i"</e></m></meta>
		</glUniform3i>
		<glUniform3iv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform3iv"</e></m></meta>
		</glUniform3iv>
		<glUniform4f public="1" set="method" static="1">
			<f a="location:v0:v1:v2:v3">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform4f"</e></m></meta>
		</glUniform4f>
		<glUniform4fv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform4fv"</e></m></meta>
		</glUniform4fv>
		<glUniform4i public="1" set="method" static="1">
			<f a="location:v0:v1:v2:v3">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform4i"</e></m></meta>
		</glUniform4i>
		<glUniform4iv public="1" set="method" static="1">
			<f a="location:count:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLint"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniform4iv"</e></m></meta>
		</glUniform4iv>
		<glUniformMatrix2fv public="1" set="method" static="1">
			<f a="location:count:transpose:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Bool"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniformMatrix2fv"</e></m></meta>
		</glUniformMatrix2fv>
		<glUniformMatrix3fv public="1" set="method" static="1">
			<f a="location:count:transpose:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Bool"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniformMatrix3fv"</e></m></meta>
		</glUniformMatrix3fv>
		<glUniformMatrix4fv public="1" set="method" static="1">
			<f a="location:count:transpose:value">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Bool"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUniformMatrix4fv"</e></m></meta>
		</glUniformMatrix4fv>
		<glUseProgram public="1" set="method" static="1">
			<f a="program">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glUseProgram"</e></m></meta>
		</glUseProgram>
		<glValidateProgram public="1" set="method" static="1">
			<f a="program">
				<t path="gluon.webgl.GLuint"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glValidateProgram"</e></m></meta>
		</glValidateProgram>
		<glVertexAttrib1f public="1" set="method" static="1">
			<f a="index:x">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib1f"</e></m></meta>
		</glVertexAttrib1f>
		<glVertexAttrib1fv public="1" set="method" static="1">
			<f a="index:v">
				<t path="gluon.webgl.GLuint"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib1fv"</e></m></meta>
		</glVertexAttrib1fv>
		<glVertexAttrib2f public="1" set="method" static="1">
			<f a="index:x:y">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib2f"</e></m></meta>
		</glVertexAttrib2f>
		<glVertexAttrib2fv public="1" set="method" static="1">
			<f a="index:v">
				<t path="gluon.webgl.GLuint"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib2fv"</e></m></meta>
		</glVertexAttrib2fv>
		<glVertexAttrib3f public="1" set="method" static="1">
			<f a="index:x:y:z">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib3f"</e></m></meta>
		</glVertexAttrib3f>
		<glVertexAttrib3fv public="1" set="method" static="1">
			<f a="index:v">
				<t path="gluon.webgl.GLuint"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib3fv"</e></m></meta>
		</glVertexAttrib3fv>
		<glVertexAttrib4f public="1" set="method" static="1">
			<f a="index:x:y:z:w">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<t path="gluon.webgl.GLfloat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib4f"</e></m></meta>
		</glVertexAttrib4f>
		<glVertexAttrib4fv public="1" set="method" static="1">
			<f a="index:v">
				<t path="gluon.webgl.GLuint"/>
				<t path="cpp.ConstStar"><t path="gluon.webgl.GLfloat"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttrib4fv"</e></m></meta>
		</glVertexAttrib4fv>
		<glVertexAttribPointer public="1" set="method" static="1">
			<f a="index:size:type:normalized:stride:pointer">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLenum"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="cpp.ConstStar"><c path="cpp.Void"/></t>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glVertexAttribPointer"</e></m></meta>
		</glVertexAttribPointer>
		<glViewport public="1" set="method" static="1">
			<f a="x:y:width:height">
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLint"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"glViewport"</e></m></meta>
		</glViewport>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>""</e></m>
			<m n=":include"><e>"./ES2Context.h"</e></m>
			<m n=":unreflective"/>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLObject" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLObject.hx">
		<context final="1"><c path="gluon.webgl.native.GLContext"/></context>
		<handle><t path="gluon.webgl.GLuint"/></handle>
		<finalize public="1" set="method" line="19">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="12"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":allow"><e>gluon.webgl.native.GLContext</e></m></meta>
	</class>
	<class path="gluon.webgl.native.GLBuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLBuffer.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLContext" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLContext.hx">
		<DEPTH_BUFFER_BIT final="1" public="1" get="inline" set="null" expr="0x00000100" line="1019" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT final="1" public="1" get="inline" set="null" expr="0x00000400" line="1020" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT final="1" public="1" get="inline" set="null" expr="0x00004000" line="1021" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</COLOR_BUFFER_BIT>
		<FALSE final="1" public="1" get="inline" set="null" expr="0" line="1022" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE final="1" public="1" get="inline" set="null" expr="1" line="1023" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<POINTS final="1" public="1" get="inline" set="null" expr="0x0000" line="1024" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</POINTS>
		<LINES final="1" public="1" get="inline" set="null" expr="0x0001" line="1025" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LINES>
		<LINE_LOOP final="1" public="1" get="inline" set="null" expr="0x0002" line="1026" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP final="1" public="1" get="inline" set="null" expr="0x0003" line="1027" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES final="1" public="1" get="inline" set="null" expr="0x0004" line="1028" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP final="1" public="1" get="inline" set="null" expr="0x0005" line="1029" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN final="1" public="1" get="inline" set="null" expr="0x0006" line="1030" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO final="1" public="1" get="inline" set="null" expr="0" line="1031" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE final="1" public="1" get="inline" set="null" expr="1" line="1032" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR final="1" public="1" get="inline" set="null" expr="0x0300" line="1033" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0300</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR final="1" public="1" get="inline" set="null" expr="0x0301" line="1034" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0301</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA final="1" public="1" get="inline" set="null" expr="0x0302" line="1035" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0302</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA final="1" public="1" get="inline" set="null" expr="0x0303" line="1036" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0303</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA final="1" public="1" get="inline" set="null" expr="0x0304" line="1037" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0304</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA final="1" public="1" get="inline" set="null" expr="0x0305" line="1038" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0305</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR final="1" public="1" get="inline" set="null" expr="0x0306" line="1039" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0306</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR final="1" public="1" get="inline" set="null" expr="0x0307" line="1040" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0307</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE final="1" public="1" get="inline" set="null" expr="0x0308" line="1041" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0308</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD final="1" public="1" get="inline" set="null" expr="0x8006" line="1042" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8006</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION final="1" public="1" get="inline" set="null" expr="0x8009" line="1043" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB final="1" public="1" get="inline" set="null" expr="0x8009" line="1044" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA final="1" public="1" get="inline" set="null" expr="0x883D" line="1045" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x883D</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT final="1" public="1" get="inline" set="null" expr="0x800A" line="1046" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800A</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT final="1" public="1" get="inline" set="null" expr="0x800B" line="1047" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800B</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB final="1" public="1" get="inline" set="null" expr="0x80C8" line="1048" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C8</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB final="1" public="1" get="inline" set="null" expr="0x80C9" line="1049" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C9</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA final="1" public="1" get="inline" set="null" expr="0x80CA" line="1050" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CA</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA final="1" public="1" get="inline" set="null" expr="0x80CB" line="1051" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CB</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR final="1" public="1" get="inline" set="null" expr="0x8001" line="1052" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR final="1" public="1" get="inline" set="null" expr="0x8002" line="1053" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8002</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA final="1" public="1" get="inline" set="null" expr="0x8003" line="1054" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8003</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA final="1" public="1" get="inline" set="null" expr="0x8004" line="1055" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8004</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR final="1" public="1" get="inline" set="null" expr="0x8005" line="1056" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8005</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER final="1" public="1" get="inline" set="null" expr="0x8892" line="1057" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8892</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER final="1" public="1" get="inline" set="null" expr="0x8893" line="1058" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8893</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING final="1" public="1" get="inline" set="null" expr="0x8894" line="1059" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8894</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING final="1" public="1" get="inline" set="null" expr="0x8895" line="1060" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8895</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW final="1" public="1" get="inline" set="null" expr="0x88E0" line="1061" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E0</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW final="1" public="1" get="inline" set="null" expr="0x88E4" line="1062" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E4</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW final="1" public="1" get="inline" set="null" expr="0x88E8" line="1063" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E8</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE final="1" public="1" get="inline" set="null" expr="0x8764" line="1064" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8764</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE final="1" public="1" get="inline" set="null" expr="0x8765" line="1065" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8765</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB final="1" public="1" get="inline" set="null" expr="0x8626" line="1066" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8626</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT final="1" public="1" get="inline" set="null" expr="0x0404" line="1067" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0404</e></m></meta>
		</FRONT>
		<BACK final="1" public="1" get="inline" set="null" expr="0x0405" line="1068" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0405</e></m></meta>
		</BACK>
		<FRONT_AND_BACK final="1" public="1" get="inline" set="null" expr="0x0408" line="1069" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0408</e></m></meta>
		</FRONT_AND_BACK>
		<TEXTURE_2D final="1" public="1" get="inline" set="null" expr="0x0DE1" line="1070" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0DE1</e></m></meta>
		</TEXTURE_2D>
		<CULL_FACE final="1" public="1" get="inline" set="null" expr="0x0B44" line="1071" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B44</e></m></meta>
		</CULL_FACE>
		<BLEND final="1" public="1" get="inline" set="null" expr="0x0BE2" line="1072" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BE2</e></m></meta>
		</BLEND>
		<DITHER final="1" public="1" get="inline" set="null" expr="0x0BD0" line="1073" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BD0</e></m></meta>
		</DITHER>
		<STENCIL_TEST final="1" public="1" get="inline" set="null" expr="0x0B90" line="1074" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B90</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST final="1" public="1" get="inline" set="null" expr="0x0B71" line="1075" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B71</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST final="1" public="1" get="inline" set="null" expr="0x0C11" line="1076" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C11</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL final="1" public="1" get="inline" set="null" expr="0x8037" line="1077" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8037</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE final="1" public="1" get="inline" set="null" expr="0x809E" line="1078" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x809E</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE final="1" public="1" get="inline" set="null" expr="0x80A0" line="1079" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A0</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR final="1" public="1" get="inline" set="null" expr="0" line="1080" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM final="1" public="1" get="inline" set="null" expr="0x0500" line="1081" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0500</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE final="1" public="1" get="inline" set="null" expr="0x0501" line="1082" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0501</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION final="1" public="1" get="inline" set="null" expr="0x0502" line="1083" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0502</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY final="1" public="1" get="inline" set="null" expr="0x0505" line="1084" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0505</e></m></meta>
		</OUT_OF_MEMORY>
		<CW final="1" public="1" get="inline" set="null" expr="0x0900" line="1085" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0900</e></m></meta>
		</CW>
		<CCW final="1" public="1" get="inline" set="null" expr="0x0901" line="1086" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0901</e></m></meta>
		</CCW>
		<LINE_WIDTH final="1" public="1" get="inline" set="null" expr="0x0B21" line="1087" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B21</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE final="1" public="1" get="inline" set="null" expr="0x846D" line="1088" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846D</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE final="1" public="1" get="inline" set="null" expr="0x846E" line="1089" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846E</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE final="1" public="1" get="inline" set="null" expr="0x0B45" line="1090" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B45</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE final="1" public="1" get="inline" set="null" expr="0x0B46" line="1091" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B46</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE final="1" public="1" get="inline" set="null" expr="0x0B70" line="1092" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B70</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK final="1" public="1" get="inline" set="null" expr="0x0B72" line="1093" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B72</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE final="1" public="1" get="inline" set="null" expr="0x0B73" line="1094" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B73</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC final="1" public="1" get="inline" set="null" expr="0x0B74" line="1095" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B74</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE final="1" public="1" get="inline" set="null" expr="0x0B91" line="1096" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B91</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC final="1" public="1" get="inline" set="null" expr="0x0B92" line="1097" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B92</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL final="1" public="1" get="inline" set="null" expr="0x0B94" line="1098" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B94</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL final="1" public="1" get="inline" set="null" expr="0x0B95" line="1099" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B95</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS final="1" public="1" get="inline" set="null" expr="0x0B96" line="1100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B96</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF final="1" public="1" get="inline" set="null" expr="0x0B97" line="1101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B97</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK final="1" public="1" get="inline" set="null" expr="0x0B93" line="1102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B93</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK final="1" public="1" get="inline" set="null" expr="0x0B98" line="1103" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B98</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC final="1" public="1" get="inline" set="null" expr="0x8800" line="1104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8800</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL final="1" public="1" get="inline" set="null" expr="0x8801" line="1105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8801</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL final="1" public="1" get="inline" set="null" expr="0x8802" line="1106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8802</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS final="1" public="1" get="inline" set="null" expr="0x8803" line="1107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8803</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF final="1" public="1" get="inline" set="null" expr="0x8CA3" line="1108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA3</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK final="1" public="1" get="inline" set="null" expr="0x8CA4" line="1109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA4</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK final="1" public="1" get="inline" set="null" expr="0x8CA5" line="1110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA5</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT final="1" public="1" get="inline" set="null" expr="0x0BA2" line="1111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BA2</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX final="1" public="1" get="inline" set="null" expr="0x0C10" line="1112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C10</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE final="1" public="1" get="inline" set="null" expr="0x0C22" line="1113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C22</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK final="1" public="1" get="inline" set="null" expr="0x0C23" line="1114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C23</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT final="1" public="1" get="inline" set="null" expr="0x0CF5" line="1115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF5</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT final="1" public="1" get="inline" set="null" expr="0x0D05" line="1116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D05</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE final="1" public="1" get="inline" set="null" expr="0x0D33" line="1117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D33</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS final="1" public="1" get="inline" set="null" expr="0x0D3A" line="1118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D3A</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS final="1" public="1" get="inline" set="null" expr="0x0D50" line="1119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D50</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS final="1" public="1" get="inline" set="null" expr="0x0D52" line="1120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D52</e></m></meta>
		</RED_BITS>
		<GREEN_BITS final="1" public="1" get="inline" set="null" expr="0x0D53" line="1121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D53</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS final="1" public="1" get="inline" set="null" expr="0x0D54" line="1122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D54</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS final="1" public="1" get="inline" set="null" expr="0x0D55" line="1123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D55</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS final="1" public="1" get="inline" set="null" expr="0x0D56" line="1124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D56</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS final="1" public="1" get="inline" set="null" expr="0x0D57" line="1125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D57</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS final="1" public="1" get="inline" set="null" expr="0x2A00" line="1126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2A00</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR final="1" public="1" get="inline" set="null" expr="0x8038" line="1127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8038</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D final="1" public="1" get="inline" set="null" expr="0x8069" line="1128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8069</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS final="1" public="1" get="inline" set="null" expr="0x80A8" line="1129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A8</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES final="1" public="1" get="inline" set="null" expr="0x80A9" line="1130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A9</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE final="1" public="1" get="inline" set="null" expr="0x80AA" line="1131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AA</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT final="1" public="1" get="inline" set="null" expr="0x80AB" line="1132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AB</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<NUM_COMPRESSED_TEXTURE_FORMATS final="1" public="1" get="inline" set="null" expr="0x86A2" line="1133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A2</e></m></meta>
		</NUM_COMPRESSED_TEXTURE_FORMATS>
		<COMPRESSED_TEXTURE_FORMATS final="1" public="1" get="inline" set="null" expr="0x86A3" line="1134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A3</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE final="1" public="1" get="inline" set="null" expr="0x1100" line="1135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</DONT_CARE>
		<FASTEST final="1" public="1" get="inline" set="null" expr="0x1101" line="1136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FASTEST>
		<NICEST final="1" public="1" get="inline" set="null" expr="0x1102" line="1137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT final="1" public="1" get="inline" set="null" expr="0x8192" line="1138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8192</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE final="1" public="1" get="inline" set="null" expr="0x1400" line="1139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1400</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE final="1" public="1" get="inline" set="null" expr="0x1401" line="1140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1401</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT final="1" public="1" get="inline" set="null" expr="0x1402" line="1141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1402</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT final="1" public="1" get="inline" set="null" expr="0x1403" line="1142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1403</e></m></meta>
		</UNSIGNED_SHORT>
		<INT final="1" public="1" get="inline" set="null" expr="0x1404" line="1143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1404</e></m></meta>
		</INT>
		<UNSIGNED_INT final="1" public="1" get="inline" set="null" expr="0x1405" line="1144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT final="1" public="1" get="inline" set="null" expr="0x1406" line="1145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1406</e></m></meta>
		</FLOAT>
		<FIXED final="1" public="1" get="inline" set="null" expr="0x140C" line="1146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x140C</e></m></meta>
		</FIXED>
		<DEPTH_COMPONENT final="1" public="1" get="inline" set="null" expr="0x1902" line="1147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1902</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA final="1" public="1" get="inline" set="null" expr="0x1906" line="1148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1906</e></m></meta>
		</ALPHA>
		<RGB final="1" public="1" get="inline" set="null" expr="0x1907" line="1149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1907</e></m></meta>
		</RGB>
		<RGBA final="1" public="1" get="inline" set="null" expr="0x1908" line="1150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1908</e></m></meta>
		</RGBA>
		<LUMINANCE final="1" public="1" get="inline" set="null" expr="0x1909" line="1151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1909</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA final="1" public="1" get="inline" set="null" expr="0x190A" line="1152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x190A</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 final="1" public="1" get="inline" set="null" expr="0x8033" line="1153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8033</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 final="1" public="1" get="inline" set="null" expr="0x8034" line="1154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8034</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 final="1" public="1" get="inline" set="null" expr="0x8363" line="1155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8363</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER final="1" public="1" get="inline" set="null" expr="0x8B30" line="1156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B30</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER final="1" public="1" get="inline" set="null" expr="0x8B31" line="1157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B31</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS final="1" public="1" get="inline" set="null" expr="0x8869" line="1158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8869</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS final="1" public="1" get="inline" set="null" expr="0x8DFB" line="1159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFB</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS final="1" public="1" get="inline" set="null" expr="0x8DFC" line="1160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFC</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS final="1" public="1" get="inline" set="null" expr="0x8B4D" line="1161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4D</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS final="1" public="1" get="inline" set="null" expr="0x8B4C" line="1162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4C</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS final="1" public="1" get="inline" set="null" expr="0x8872" line="1163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8872</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS final="1" public="1" get="inline" set="null" expr="0x8DFD" line="1164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFD</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE final="1" public="1" get="inline" set="null" expr="0x8B4F" line="1165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4F</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS final="1" public="1" get="inline" set="null" expr="0x8B80" line="1166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B80</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS final="1" public="1" get="inline" set="null" expr="0x8B82" line="1167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B82</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS final="1" public="1" get="inline" set="null" expr="0x8B83" line="1168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B83</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS final="1" public="1" get="inline" set="null" expr="0x8B85" line="1169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B85</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS final="1" public="1" get="inline" set="null" expr="0x8B86" line="1170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B86</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_UNIFORM_MAX_LENGTH final="1" public="1" get="inline" set="null" expr="0x8B87" line="1171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B87</e></m></meta>
		</ACTIVE_UNIFORM_MAX_LENGTH>
		<ACTIVE_ATTRIBUTES final="1" public="1" get="inline" set="null" expr="0x8B89" line="1172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B89</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<ACTIVE_ATTRIBUTE_MAX_LENGTH final="1" public="1" get="inline" set="null" expr="0x8B8A" line="1173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8A</e></m></meta>
		</ACTIVE_ATTRIBUTE_MAX_LENGTH>
		<SHADING_LANGUAGE_VERSION final="1" public="1" get="inline" set="null" expr="0x8B8C" line="1174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8C</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM final="1" public="1" get="inline" set="null" expr="0x8B8D" line="1175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8D</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER final="1" public="1" get="inline" set="null" expr="0x0200" line="1176" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</NEVER>
		<LESS final="1" public="1" get="inline" set="null" expr="0x0201" line="1177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0201</e></m></meta>
		</LESS>
		<EQUAL final="1" public="1" get="inline" set="null" expr="0x0202" line="1178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0202</e></m></meta>
		</EQUAL>
		<LEQUAL final="1" public="1" get="inline" set="null" expr="0x0203" line="1179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0203</e></m></meta>
		</LEQUAL>
		<GREATER final="1" public="1" get="inline" set="null" expr="0x0204" line="1180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0204</e></m></meta>
		</GREATER>
		<NOTEQUAL final="1" public="1" get="inline" set="null" expr="0x0205" line="1181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0205</e></m></meta>
		</NOTEQUAL>
		<GEQUAL final="1" public="1" get="inline" set="null" expr="0x0206" line="1182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0206</e></m></meta>
		</GEQUAL>
		<ALWAYS final="1" public="1" get="inline" set="null" expr="0x0207" line="1183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0207</e></m></meta>
		</ALWAYS>
		<KEEP final="1" public="1" get="inline" set="null" expr="0x1E00" line="1184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E00</e></m></meta>
		</KEEP>
		<REPLACE final="1" public="1" get="inline" set="null" expr="0x1E01" line="1185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E01</e></m></meta>
		</REPLACE>
		<INCR final="1" public="1" get="inline" set="null" expr="0x1E02" line="1186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E02</e></m></meta>
		</INCR>
		<DECR final="1" public="1" get="inline" set="null" expr="0x1E03" line="1187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E03</e></m></meta>
		</DECR>
		<INVERT final="1" public="1" get="inline" set="null" expr="0x150A" line="1188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x150A</e></m></meta>
		</INVERT>
		<INCR_WRAP final="1" public="1" get="inline" set="null" expr="0x8507" line="1189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8507</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP final="1" public="1" get="inline" set="null" expr="0x8508" line="1190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8508</e></m></meta>
		</DECR_WRAP>
		<VENDOR final="1" public="1" get="inline" set="null" expr="0x1F00" line="1191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F00</e></m></meta>
		</VENDOR>
		<RENDERER final="1" public="1" get="inline" set="null" expr="0x1F01" line="1192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F01</e></m></meta>
		</RENDERER>
		<VERSION final="1" public="1" get="inline" set="null" expr="0x1F02" line="1193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F02</e></m></meta>
		</VERSION>
		<EXTENSIONS final="1" public="1" get="inline" set="null" expr="0x1F03" line="1194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F03</e></m></meta>
		</EXTENSIONS>
		<NEAREST final="1" public="1" get="inline" set="null" expr="0x2600" line="1195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2600</e></m></meta>
		</NEAREST>
		<LINEAR final="1" public="1" get="inline" set="null" expr="0x2601" line="1196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2601</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST final="1" public="1" get="inline" set="null" expr="0x2700" line="1197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2700</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST final="1" public="1" get="inline" set="null" expr="0x2701" line="1198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2701</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR final="1" public="1" get="inline" set="null" expr="0x2702" line="1199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2702</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR final="1" public="1" get="inline" set="null" expr="0x2703" line="1200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2703</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER final="1" public="1" get="inline" set="null" expr="0x2800" line="1201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2800</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER final="1" public="1" get="inline" set="null" expr="0x2801" line="1202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2801</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S final="1" public="1" get="inline" set="null" expr="0x2802" line="1203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2802</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T final="1" public="1" get="inline" set="null" expr="0x2803" line="1204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2803</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE final="1" public="1" get="inline" set="null" expr="0x1702" line="1205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1702</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP final="1" public="1" get="inline" set="null" expr="0x8513" line="1206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8513</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP final="1" public="1" get="inline" set="null" expr="0x8514" line="1207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8514</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X final="1" public="1" get="inline" set="null" expr="0x8515" line="1208" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8515</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X final="1" public="1" get="inline" set="null" expr="0x8516" line="1209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8516</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y final="1" public="1" get="inline" set="null" expr="0x8517" line="1210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8517</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y final="1" public="1" get="inline" set="null" expr="0x8518" line="1211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8518</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z final="1" public="1" get="inline" set="null" expr="0x8519" line="1212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8519</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z final="1" public="1" get="inline" set="null" expr="0x851A" line="1213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851A</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE final="1" public="1" get="inline" set="null" expr="0x851C" line="1214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851C</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 final="1" public="1" get="inline" set="null" expr="0x84C0" line="1215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C0</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 final="1" public="1" get="inline" set="null" expr="0x84C1" line="1216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C1</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 final="1" public="1" get="inline" set="null" expr="0x84C2" line="1217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C2</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 final="1" public="1" get="inline" set="null" expr="0x84C3" line="1218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C3</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 final="1" public="1" get="inline" set="null" expr="0x84C4" line="1219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C4</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 final="1" public="1" get="inline" set="null" expr="0x84C5" line="1220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C5</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 final="1" public="1" get="inline" set="null" expr="0x84C6" line="1221" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C6</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 final="1" public="1" get="inline" set="null" expr="0x84C7" line="1222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C7</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 final="1" public="1" get="inline" set="null" expr="0x84C8" line="1223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C8</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 final="1" public="1" get="inline" set="null" expr="0x84C9" line="1224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C9</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 final="1" public="1" get="inline" set="null" expr="0x84CA" line="1225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CA</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 final="1" public="1" get="inline" set="null" expr="0x84CB" line="1226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CB</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 final="1" public="1" get="inline" set="null" expr="0x84CC" line="1227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CC</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 final="1" public="1" get="inline" set="null" expr="0x84CD" line="1228" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CD</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 final="1" public="1" get="inline" set="null" expr="0x84CE" line="1229" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CE</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 final="1" public="1" get="inline" set="null" expr="0x84CF" line="1230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CF</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 final="1" public="1" get="inline" set="null" expr="0x84D0" line="1231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D0</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 final="1" public="1" get="inline" set="null" expr="0x84D1" line="1232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D1</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 final="1" public="1" get="inline" set="null" expr="0x84D2" line="1233" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D2</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 final="1" public="1" get="inline" set="null" expr="0x84D3" line="1234" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D3</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 final="1" public="1" get="inline" set="null" expr="0x84D4" line="1235" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D4</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 final="1" public="1" get="inline" set="null" expr="0x84D5" line="1236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D5</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 final="1" public="1" get="inline" set="null" expr="0x84D6" line="1237" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D6</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 final="1" public="1" get="inline" set="null" expr="0x84D7" line="1238" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D7</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 final="1" public="1" get="inline" set="null" expr="0x84D8" line="1239" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D8</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 final="1" public="1" get="inline" set="null" expr="0x84D9" line="1240" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D9</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 final="1" public="1" get="inline" set="null" expr="0x84DA" line="1241" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DA</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 final="1" public="1" get="inline" set="null" expr="0x84DB" line="1242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DB</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 final="1" public="1" get="inline" set="null" expr="0x84DC" line="1243" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DC</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 final="1" public="1" get="inline" set="null" expr="0x84DD" line="1244" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DD</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 final="1" public="1" get="inline" set="null" expr="0x84DE" line="1245" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DE</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 final="1" public="1" get="inline" set="null" expr="0x84DF" line="1246" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DF</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE final="1" public="1" get="inline" set="null" expr="0x84E0" line="1247" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E0</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT final="1" public="1" get="inline" set="null" expr="0x2901" line="1248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2901</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE final="1" public="1" get="inline" set="null" expr="0x812F" line="1249" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x812F</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT final="1" public="1" get="inline" set="null" expr="0x8370" line="1250" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8370</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 final="1" public="1" get="inline" set="null" expr="0x8B50" line="1251" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B50</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 final="1" public="1" get="inline" set="null" expr="0x8B51" line="1252" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B51</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 final="1" public="1" get="inline" set="null" expr="0x8B52" line="1253" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B52</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 final="1" public="1" get="inline" set="null" expr="0x8B53" line="1254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B53</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 final="1" public="1" get="inline" set="null" expr="0x8B54" line="1255" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B54</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 final="1" public="1" get="inline" set="null" expr="0x8B55" line="1256" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B55</e></m></meta>
		</INT_VEC4>
		<BOOL final="1" public="1" get="inline" set="null" expr="0x8B56" line="1257" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B56</e></m></meta>
		</BOOL>
		<BOOL_VEC2 final="1" public="1" get="inline" set="null" expr="0x8B57" line="1258" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B57</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 final="1" public="1" get="inline" set="null" expr="0x8B58" line="1259" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B58</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 final="1" public="1" get="inline" set="null" expr="0x8B59" line="1260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B59</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 final="1" public="1" get="inline" set="null" expr="0x8B5A" line="1261" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5A</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 final="1" public="1" get="inline" set="null" expr="0x8B5B" line="1262" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5B</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 final="1" public="1" get="inline" set="null" expr="0x8B5C" line="1263" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5C</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D final="1" public="1" get="inline" set="null" expr="0x8B5E" line="1264" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5E</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE final="1" public="1" get="inline" set="null" expr="0x8B60" line="1265" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B60</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED final="1" public="1" get="inline" set="null" expr="0x8622" line="1266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8622</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE final="1" public="1" get="inline" set="null" expr="0x8623" line="1267" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8623</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE final="1" public="1" get="inline" set="null" expr="0x8624" line="1268" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8624</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE final="1" public="1" get="inline" set="null" expr="0x8625" line="1269" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8625</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED final="1" public="1" get="inline" set="null" expr="0x886A" line="1270" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x886A</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER final="1" public="1" get="inline" set="null" expr="0x8645" line="1271" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8645</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING final="1" public="1" get="inline" set="null" expr="0x889F" line="1272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x889F</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE final="1" public="1" get="inline" set="null" expr="0x8B9A" line="1273" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9A</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT final="1" public="1" get="inline" set="null" expr="0x8B9B" line="1274" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9B</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<COMPILE_STATUS final="1" public="1" get="inline" set="null" expr="0x8B81" line="1275" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B81</e></m></meta>
		</COMPILE_STATUS>
		<INFO_LOG_LENGTH final="1" public="1" get="inline" set="null" expr="0x8B84" line="1276" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B84</e></m></meta>
		</INFO_LOG_LENGTH>
		<SHADER_SOURCE_LENGTH final="1" public="1" get="inline" set="null" expr="0x8B88" line="1277" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B88</e></m></meta>
		</SHADER_SOURCE_LENGTH>
		<SHADER_COMPILER final="1" public="1" get="inline" set="null" expr="0x8DFA" line="1278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFA</e></m></meta>
		</SHADER_COMPILER>
		<SHADER_BINARY_FORMATS final="1" public="1" get="inline" set="null" expr="0x8DF8" line="1279" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF8</e></m></meta>
		</SHADER_BINARY_FORMATS>
		<NUM_SHADER_BINARY_FORMATS final="1" public="1" get="inline" set="null" expr="0x8DF9" line="1280" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF9</e></m></meta>
		</NUM_SHADER_BINARY_FORMATS>
		<LOW_FLOAT final="1" public="1" get="inline" set="null" expr="0x8DF0" line="1281" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF0</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT final="1" public="1" get="inline" set="null" expr="0x8DF1" line="1282" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF1</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT final="1" public="1" get="inline" set="null" expr="0x8DF2" line="1283" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF2</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT final="1" public="1" get="inline" set="null" expr="0x8DF3" line="1284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF3</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT final="1" public="1" get="inline" set="null" expr="0x8DF4" line="1285" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF4</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT final="1" public="1" get="inline" set="null" expr="0x8DF5" line="1286" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF5</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER final="1" public="1" get="inline" set="null" expr="0x8D40" line="1287" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D40</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER final="1" public="1" get="inline" set="null" expr="0x8D41" line="1288" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D41</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 final="1" public="1" get="inline" set="null" expr="0x8056" line="1289" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4>
		<RGB5_A1 final="1" public="1" get="inline" set="null" expr="0x8057" line="1290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1>
		<RGB565 final="1" public="1" get="inline" set="null" expr="0x8D62" line="1291" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 final="1" public="1" get="inline" set="null" expr="0x81A5" line="1292" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX8 final="1" public="1" get="inline" set="null" expr="0x8D48" line="1293" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D48</e></m></meta>
		</STENCIL_INDEX8>
		<RENDERBUFFER_WIDTH final="1" public="1" get="inline" set="null" expr="0x8D42" line="1294" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D42</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT final="1" public="1" get="inline" set="null" expr="0x8D43" line="1295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D43</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT final="1" public="1" get="inline" set="null" expr="0x8D44" line="1296" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D44</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE final="1" public="1" get="inline" set="null" expr="0x8D50" line="1297" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D50</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE final="1" public="1" get="inline" set="null" expr="0x8D51" line="1298" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D51</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE final="1" public="1" get="inline" set="null" expr="0x8D52" line="1299" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D52</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE final="1" public="1" get="inline" set="null" expr="0x8D53" line="1300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D53</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE final="1" public="1" get="inline" set="null" expr="0x8D54" line="1301" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D54</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE final="1" public="1" get="inline" set="null" expr="0x8D55" line="1302" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D55</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE final="1" public="1" get="inline" set="null" expr="0x8CD0" line="1303" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD0</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME final="1" public="1" get="inline" set="null" expr="0x8CD1" line="1304" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD1</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL final="1" public="1" get="inline" set="null" expr="0x8CD2" line="1305" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD2</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE final="1" public="1" get="inline" set="null" expr="0x8CD3" line="1306" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 final="1" public="1" get="inline" set="null" expr="0x8CE0" line="1307" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT final="1" public="1" get="inline" set="null" expr="0x8D00" line="1308" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D00</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT final="1" public="1" get="inline" set="null" expr="0x8D20" line="1309" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D20</e></m></meta>
		</STENCIL_ATTACHMENT>
		<NONE final="1" public="1" get="inline" set="null" expr="0" line="1310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE final="1" public="1" get="inline" set="null" expr="0x8CD5" line="1311" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD5</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT final="1" public="1" get="inline" set="null" expr="0x8CD6" line="1312" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD6</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT final="1" public="1" get="inline" set="null" expr="0x8CD7" line="1313" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD7</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS final="1" public="1" get="inline" set="null" expr="0x8CD9" line="1314" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD9</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED final="1" public="1" get="inline" set="null" expr="0x8CDD" line="1315" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDD</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING final="1" public="1" get="inline" set="null" expr="0x8CA6" line="1316" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING final="1" public="1" get="inline" set="null" expr="0x8CA7" line="1317" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA7</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE final="1" public="1" get="inline" set="null" expr="0x84E8" line="1318" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E8</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION final="1" public="1" get="inline" set="null" expr="0x0506" line="1319" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0506</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<DEPTH_STENCIL final="1" public="1" get="inline" set="null" expr="0x84F9" line="1322" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL>
		<DEPTH_STENCIL_ATTACHMENT final="1" public="1" get="inline" set="null" expr="0x821A" line="1323" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x821A</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<defaultFramebuffer final="1"><c path="gluon.webgl.native.GLFramebuffer"/></defaultFramebuffer>
		<getContextAttributes public="1" get="inline" set="null" line="54"><f a=""><x path="Null"><t path="gluon.webgl.GLContextAttributes"/></x></f></getContextAttributes>
		<getSupportedExtensions public="1" get="inline" set="null" line="60"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getExtension public="1" params="T" get="inline" set="null" line="65"><f a="name">
	<x path="gluon.webgl.Extension"><c path="getExtension.T"/></x>
	<x path="Null"><c path="getExtension.T"/></x>
</f></getExtension>
		<isContextLost public="1" get="inline" set="null" line="70"><f a=""><x path="Bool"/></f></isContextLost>
		<activeTexture public="1" get="inline" set="null" line="74"><f a="unit">
	<x path="gluon.webgl.TextureUnit"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" get="inline" set="null" line="78"><f a="program:shader">
	<c path="gluon.webgl.native.GLProgram"/>
	<c path="gluon.webgl.native.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" get="inline" set="null" line="82"><f a="program:index:name">
	<c path="gluon.webgl.native.GLProgram"/>
	<t path="gluon.webgl.GLuint"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="87"><f a="target:?buffer">
	<x path="gluon.webgl.BufferTarget"/>
	<c path="gluon.webgl.native.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" get="inline" set="null" line="92"><f a="target:?framebuffer">
	<x path="gluon.webgl.FramebufferTarget"/>
	<c path="gluon.webgl.native.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="97"><f a="target:?renderbuffer">
	<x path="gluon.webgl.RenderbufferTarget"/>
	<c path="gluon.webgl.native.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" get="inline" set="null" line="102"><f a="target:?texture">
	<x path="gluon.webgl.TextureTarget"/>
	<c path="gluon.webgl.native.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" get="inline" set="null" line="107"><f a="red:green:blue:alpha">
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" get="inline" set="null" line="111"><f a="mode">
	<x path="gluon.webgl.BlendEquation"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="115"><f a="modeRGB:modeAlpha">
	<x path="gluon.webgl.BlendEquation"/>
	<x path="gluon.webgl.BlendEquation"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="119"><f a="sfactor:dfactor">
	<x path="gluon.webgl.BlendFactor"/>
	<x path="gluon.webgl.BlendFactor"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="123"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="gluon.webgl.BlendFactor"/>
	<x path="gluon.webgl.BlendFactor"/>
	<x path="gluon.webgl.BlendFactor"/>
	<x path="gluon.webgl.BlendFactor"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" get="inline" set="null" line="127"><f a="target:data:usage">
	<x path="gluon.webgl.BufferTarget"/>
	<x path="typedarray.BufferSource"/>
	<x path="gluon.webgl.BufferUsage"/>
	<x path="Void"/>
</f></bufferData>
		<bufferDataOfSize public="1" get="inline" set="null" line="131"><f a="target:size:usage">
	<x path="gluon.webgl.BufferTarget"/>
	<x path="Int"/>
	<x path="gluon.webgl.BufferUsage"/>
	<x path="Void"/>
</f></bufferDataOfSize>
		<bufferSubData public="1" get="inline" set="null" line="135"><f a="target:offset:data">
	<x path="gluon.webgl.BufferTarget"/>
	<t path="gluon.webgl.GLintptr"/>
	<x path="typedarray.BufferSource"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="139"><f a="target">
	<x path="gluon.webgl.FramebufferTarget"/>
	<x path="gluon.webgl.FramebufferStatus"/>
</f></checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="143"><f a="mask">
	<x path="gluon.webgl.ClearBufferMask"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" get="inline" set="null" line="147"><f a="red:green:blue:alpha">
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" get="inline" set="null" line="151"><f a="depth">
	<t path="gluon.webgl.GLclampf"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" get="inline" set="null" line="155"><f a="s">
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" get="inline" set="null" line="159"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" get="inline" set="null" line="163"><f a="shader">
	<c path="gluon.webgl.native.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="167"><f a="target:level:internalformat:width:height:border:data">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<x path="gluon.webgl.PixelFormat"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="172"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="gluon.webgl.PixelFormat"/>
	<t path="gluon.webgl.GLArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" get="inline" set="null" line="177"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<x path="gluon.webgl.PixelFormat"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="181"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" get="inline" set="null" line="185"><f a=""><x path="Null"><c path="gluon.webgl.native.GLBuffer"/></x></f></createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="191"><f a=""><x path="Null"><c path="gluon.webgl.native.GLFramebuffer"/></x></f></createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="197"><f a=""><x path="Null"><c path="gluon.webgl.native.GLProgram"/></x></f></createProgram>
		<createRenderbuffer public="1" get="inline" set="null" line="202"><f a=""><x path="Null"><c path="gluon.webgl.native.GLRenderbuffer"/></x></f></createRenderbuffer>
		<createShader public="1" get="inline" set="null" line="208"><f a="type">
	<x path="gluon.webgl.ShaderType"/>
	<x path="Null"><c path="gluon.webgl.native.GLShader"/></x>
</f></createShader>
		<createTexture public="1" get="inline" set="null" line="213"><f a=""><x path="Null"><c path="gluon.webgl.native.GLTexture"/></x></f></createTexture>
		<cullFace public="1" get="inline" set="null" line="219"><f a="mode">
	<x path="gluon.webgl.CullFaceMode"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="223"><f a="?buffer">
	<c path="gluon.webgl.native.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="230"><f a="?framebuffer">
	<c path="gluon.webgl.native.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="237"><f a="?program">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" get="inline" set="null" line="244"><f a="?renderbuffer">
	<c path="gluon.webgl.native.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" get="inline" set="null" line="251"><f a="?shader">
	<c path="gluon.webgl.native.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" get="inline" set="null" line="258"><f a="?texture">
	<c path="gluon.webgl.native.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" get="inline" set="null" line="265"><f a="func">
	<x path="gluon.webgl.ComparisonFunction"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" get="inline" set="null" line="269"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" get="inline" set="null" line="273"><f a="zNear:zFar">
	<t path="gluon.webgl.GLclampf"/>
	<t path="gluon.webgl.GLclampf"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" get="inline" set="null" line="277"><f a="program:shader">
	<c path="gluon.webgl.native.GLProgram"/>
	<c path="gluon.webgl.native.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" get="inline" set="null" line="281"><f a="cap">
	<x path="gluon.webgl.Capability"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="285"><f a="index">
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="289"><f a="mode:first:count">
	<x path="gluon.webgl.DrawMode"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" get="inline" set="null" line="293">
			<f a="mode:count:type:offset">
				<x path="gluon.webgl.DrawMode"/>
				<t path="gluon.webgl.GLsizei"/>
				<x path="gluon.webgl.DataType"/>
				<t path="gluon.webgl.GLintptr"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</drawElements>
		<enable public="1" get="inline" set="null" line="298"><f a="cap">
	<x path="gluon.webgl.Capability"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="302"><f a="index">
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" get="inline" set="null" line="306"><f a=""><x path="Void"/></f></finish>
		<flush public="1" get="inline" set="null" line="310"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="314"><f a="target:attachment:renderbuffertarget:?renderbuffer">
	<x path="gluon.webgl.FramebufferTarget"/>
	<x path="gluon.webgl.FramebufferAttachement"/>
	<x path="gluon.webgl.RenderbufferTarget"/>
	<c path="gluon.webgl.native.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="319"><f a="target:attachment:textarget:texture:level">
	<x path="gluon.webgl.FramebufferTarget"/>
	<x path="gluon.webgl.FramebufferAttachement"/>
	<x path="gluon.webgl.TextureTarget"/>
	<c path="gluon.webgl.native.GLTexture"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" get="inline" set="null" line="324"><f a="mode">
	<x path="gluon.webgl.FrontFaceDirection"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" get="inline" set="null" line="328"><f a="target">
	<x path="gluon.webgl.TextureTarget"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method" line="332">
			<f a="program:index">
				<c path="gluon.webgl.native.GLProgram"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLActiveInfo"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" set="method" line="362">
			<f a="program:index">
				<c path="gluon.webgl.native.GLProgram"/>
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLActiveInfo"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getActiveUniform>
		<getAttachedShaders public="1" get="inline" set="null" line="391"><f a="program">
	<c path="gluon.webgl.native.GLProgram"/>
	<c path="Array"><c path="gluon.webgl.native.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="401"><f a="program:name">
	<c path="gluon.webgl.native.GLProgram"/>
	<c path="String"/>
	<t path="gluon.webgl.GLint"/>
</f></getAttribLocation>
		<getBufferParameter public="1" params="T" get="inline" set="null" line="406"><f a="target:pname">
	<x path="gluon.webgl.BufferTarget"/>
	<x path="gluon.webgl.BufferParameter"><c path="getBufferParameter.T"/></x>
	<c path="getBufferParameter.T"/>
</f></getBufferParameter>
		<getParameter public="1" params="T" set="method" line="412"><f a="pname">
	<x path="gluon.webgl.Parameter"><c path="getParameter.T"/></x>
	<x path="Null"><c path="getParameter.T"/></x>
</f></getParameter>
		<getError public="1" get="inline" set="null" line="518"><f a=""><x path="gluon.webgl.ErrorCode"/></f></getError>
		<getFramebufferAttachmentParameter public="1" params="T" set="method" line="522"><f a="target:attachment:pname">
	<x path="gluon.webgl.FramebufferTarget"/>
	<x path="gluon.webgl.FramebufferAttachement"/>
	<x path="gluon.webgl.FramebufferAttachmentParameter"><c path="getFramebufferAttachmentParameter.T"/></x>
	<x path="Null"><c path="getFramebufferAttachmentParameter.T"/></x>
</f></getFramebufferAttachmentParameter>
		<getProgramParameter public="1" params="T" get="inline" set="null" line="541"><f a="program:pname">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="gluon.webgl.ProgramParameter"><c path="getProgramParameter.T"/></x>
	<c path="getProgramParameter.T"/>
</f></getProgramParameter>
		<getProgramInfoLog public="1" set="method" line="547">
			<f a="program">
				<c path="gluon.webgl.native.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getProgramInfoLog>
		<getRenderbufferParameter public="1" params="T" get="inline" set="null" line="561"><f a="target:pname">
	<x path="gluon.webgl.RenderbufferTarget"/>
	<x path="gluon.webgl.RenderbufferParameter"><c path="getRenderbufferParameter.T"/></x>
	<c path="getRenderbufferParameter.T"/>
</f></getRenderbufferParameter>
		<getShaderParameter public="1" params="T" set="method" line="567"><f a="shader:pname">
	<c path="gluon.webgl.native.GLShader"/>
	<x path="gluon.webgl.ShaderParameter"><c path="getShaderParameter.T"/></x>
	<c path="getShaderParameter.T"/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="579"><f a="shadertype:precisiontype">
	<x path="gluon.webgl.ShaderType"/>
	<x path="gluon.webgl.PrecisionType"/>
	<t path="gluon.webgl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderInfoLog public="1" set="method" line="590">
			<f a="shader">
				<c path="gluon.webgl.native.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getShaderInfoLog>
		<getShaderSource public="1" set="method" line="604">
			<f a="shader">
				<c path="gluon.webgl.native.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getShaderSource>
		<getTexParameter public="1" params="T" set="method" line="618"><f a="target:pname">
	<x path="gluon.webgl.TextureTarget"/>
	<x path="gluon.webgl.TextureParameter"><c path="getTexParameter.T"/></x>
	<c path="getTexParameter.T"/>
</f></getTexParameter>
		<getUniform public="1" set="method" line="632"><f a="program:location">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="gluon.webgl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformLocation public="1" get="inline" set="null" line="699"><f a="program:name">
	<c path="gluon.webgl.native.GLProgram"/>
	<c path="String"/>
	<x path="gluon.webgl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" params="T" set="method" line="704"><f a="index:pname">
	<t path="gluon.webgl.GLuint"/>
	<x path="gluon.webgl.VertexAttributeParameter"><c path="getVertexAttrib.T"/></x>
	<x path="Null"><c path="getVertexAttrib.T"/></x>
</f></getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="730"><f a="index:pname">
	<t path="gluon.webgl.GLuint"/>
	<x path="gluon.webgl.VertexAttributeOffsetParameter"/>
	<t path="gluon.webgl.GLsizeiptr"/>
</f></getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="736"><f a="target:mode">
	<x path="gluon.webgl.HintTarget"/>
	<x path="gluon.webgl.HintMode"/>
	<x path="Void"/>
</f></hint>
		<isEnabled public="1" get="inline" set="null" line="740"><f a="cap">
	<x path="gluon.webgl.Capability"/>
	<x path="Bool"/>
</f></isEnabled>
		<isBuffer public="1" get="inline" set="null" line="744"><f a="?buffer">
	<c path="gluon.webgl.native.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isFramebuffer public="1" get="inline" set="null" line="748"><f a="?framebuffer">
	<c path="gluon.webgl.native.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="752"><f a="?program">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" get="inline" set="null" line="756"><f a="?renderbuffer">
	<c path="gluon.webgl.native.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" get="inline" set="null" line="760"><f a="?shader">
	<c path="gluon.webgl.native.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" get="inline" set="null" line="764"><f a="?texture">
	<c path="gluon.webgl.native.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" get="inline" set="null" line="768"><f a="width">
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" get="inline" set="null" line="772"><f a="program">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" params="T" get="inline" set="null" line="776"><f a="pname:param">
	<x path="gluon.webgl.PixelStoreParameter"><c path="pixelStorei.T"/></x>
	<c path="pixelStorei.T"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="780"><f a="factor:units">
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" get="inline" set="null" line="784"><f a="x:y:width:height:format:type:pixels">
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="gluon.webgl.PixelFormat"/>
	<x path="gluon.webgl.PixelDataType"/>
	<t path="gluon.webgl.GLArrayBufferView"/>
	<x path="Void"/>
</f></readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="789"><f a="target:internalformat:width:height">
	<x path="gluon.webgl.RenderbufferTarget"/>
	<x path="gluon.webgl.RenderbufferFormat"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" get="inline" set="null" line="793"><f a="value:invert">
	<t path="gluon.webgl.GLclampf"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" get="inline" set="null" line="797"><f a="x:y:width:height">
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method" line="802">
			<f a="shader:source">
				<c path="gluon.webgl.native.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":analyzer"><e>no_optimize</e></m></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="808"><f a="func:ref:mask">
	<x path="gluon.webgl.ComparisonFunction"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="812"><f a="face:func:ref:mask">
	<x path="gluon.webgl.CullFaceMode"/>
	<x path="gluon.webgl.ComparisonFunction"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="816"><f a="mask">
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="820"><f a="face:mask">
	<x path="gluon.webgl.CullFaceMode"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="824"><f a="fail:zfail:zpass">
	<x path="gluon.webgl.Operation"/>
	<x path="gluon.webgl.Operation"/>
	<x path="gluon.webgl.Operation"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="828"><f a="face:fail:zfail:zpass">
	<x path="gluon.webgl.CullFaceMode"/>
	<x path="gluon.webgl.Operation"/>
	<x path="gluon.webgl.Operation"/>
	<x path="gluon.webgl.Operation"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="832"><f a="target:level:internalformat:width:height:border:format:type:pixels">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLint"/>
	<x path="gluon.webgl.PixelFormat"/>
	<x path="gluon.webgl.PixelDataType"/>
	<t path="gluon.webgl.GLArrayBufferView"/>
	<x path="Void"/>
</f></texImage2D>
		<texImage2DPtr public="1" get="inline" set="null" line="837"><f a="target:level:internalformat:width:height:border:format:type:pixels">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLint"/>
	<x path="gluon.webgl.PixelFormat"/>
	<x path="gluon.webgl.PixelDataType"/>
	<c path="cpp.RawConstPointer"><c path="cpp.Void"/></c>
	<x path="Void"/>
</f></texImage2DPtr>
		<texParameterf public="1" params="T" get="inline" set="null" line="841"><f a="target:pname:param">
	<x path="gluon.webgl.TextureTarget"/>
	<x path="gluon.webgl.TextureParameter"><c path="texParameterf.T"/></x>
	<c path="texParameterf.T"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" params="T" get="inline" set="null" line="845"><f a="target:pname:param">
	<x path="gluon.webgl.TextureTarget"/>
	<x path="gluon.webgl.TextureParameter"><c path="texParameteri.T"/></x>
	<c path="texParameteri.T"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="849"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<x path="gluon.webgl.TextureTarget"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="gluon.webgl.PixelFormat"/>
	<x path="gluon.webgl.PixelDataType"/>
	<t path="gluon.webgl.GLArrayBufferView"/>
	<x path="Void"/>
</f></texSubImage2D>
		<uniform1f public="1" get="inline" set="null" line="854"><f a="location:x">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="858"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="862"><f a="location:x">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="866"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLInt32Array"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" get="inline" set="null" line="870"><f a="location:x:y">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="874"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="878"><f a="location:x:y">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="882"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLInt32Array"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" get="inline" set="null" line="886"><f a="location:x:y:z">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="890"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="894"><f a="location:x:y:z">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="898"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLInt32Array"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" get="inline" set="null" line="902"><f a="location:x:y:z:w">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="906"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="910"><f a="location:x:y:z:w">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="914"><f a="location:v">
	<x path="gluon.webgl.GLUniformLocation"/>
	<t path="gluon.webgl.GLInt32Array"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" get="inline" set="null" line="918"><f a="location:transpose:value">
	<x path="gluon.webgl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="922"><f a="location:transpose:value">
	<x path="gluon.webgl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="926"><f a="location:transpose:value">
	<x path="gluon.webgl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<useProgram public="1" get="inline" set="null" line="930"><f a="?program">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" get="inline" set="null" line="935"><f a="program">
	<c path="gluon.webgl.native.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="939"><f a="index:x">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="943"><f a="index:values">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="947"><f a="index:x:y">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="951"><f a="index:values">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="955"><f a="index:x:y:z">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="959"><f a="index:values">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="963"><f a="index:x:y:z:w">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<t path="gluon.webgl.GLfloat"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="967"><f a="index:values">
	<t path="gluon.webgl.GLuint"/>
	<t path="gluon.webgl.GLFloat32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" get="inline" set="null" line="971">
			<f a="index:size:type:normalized:stride:offset">
				<t path="gluon.webgl.GLuint"/>
				<t path="gluon.webgl.GLint"/>
				<x path="gluon.webgl.DataType"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLsizei"/>
				<t path="gluon.webgl.GLintptr"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="976"><f a="x:y:width:height">
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLint"/>
	<t path="gluon.webgl.GLsizei"/>
	<t path="gluon.webgl.GLsizei"/>
	<x path="Void"/>
</f></viewport>
		<getFloat32Array get="inline" set="null" line="981"><f a="pname:n">
	<t path="gluon.webgl.GLenum"/>
	<x path="Int"/>
	<x path="typedarray.Float32Array"/>
</f></getFloat32Array>
		<getInt32Array get="inline" set="null" line="987"><f a="pname:n">
	<t path="gluon.webgl.GLenum"/>
	<x path="Int"/>
	<x path="typedarray.Int32Array"/>
</f></getInt32Array>
		<getGLbooleanArray get="inline" set="null" line="993"><f a="pname:n">
	<t path="gluon.webgl.GLenum"/>
	<x path="Int"/>
	<x path="typedarray.Uint8Array"/>
</f></getGLbooleanArray>
		<getInt32 params="T" get="inline" set="null" line="999"><f a="pname">
	<t path="gluon.webgl.GLenum"/>
	<c path="getInt32.T"/>
</f></getInt32>
		<getBool get="inline" set="null" line="1003"><f a="pname">
	<t path="gluon.webgl.GLenum"/>
	<x path="Bool"/>
</f></getBool>
		<getFloat32 get="inline" set="null" line="1007"><f a="pname">
	<t path="gluon.webgl.GLenum"/>
	<t path="gluon.webgl.GLfloat"/>
</f></getFloat32>
		<getString get="inline" set="null" line="1011">
			<f a="pname">
				<t path="gluon.webgl.GLenum"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getString>
		<new public="1" get="inline" set="null" line="41"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLFramebuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLFramebuffer.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLProgram" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLProgram.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLRenderbuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLRenderbuffer.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLShader" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLShader.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<class path="gluon.webgl.native.GLTexture" params="" file="/usr/local/lib/haxeLibrary/gluon/git/gluon/webgl/native/GLTexture.hx" final="1">
		<extends path="gluon.webgl.native.GLObject"/>
		<finalize public="1" set="method" line="7" override="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</finalize>
		<new set="method" line="4"><f a="context:handle">
	<c path="gluon.webgl.native.GLContext"/>
	<t path="gluon.webgl.GLuint"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>gluon.webgl.native.GLContext</e></m>
		</meta>
	</class>
	<abstract path="haxe.CallStack" params="" file="/usr/local/lib/haxe/std/haxe/CallStack.hx">
		<from><icast><c path="Array"><e path="haxe.StackItem"/></c></icast></from>
		<this><c path="Array"><e path="haxe.StackItem"/></c></this>
		<haxe_doc>Get information about the call stack.</haxe_doc>
		<meta>
			<m n=":allow"><e>haxe.Exception</e></m>
			<m n=":using"><e>haxe.CallStack</e></m>
		</meta>
		<impl><class path="haxe._CallStack.CallStack_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/CallStack.hx" private="1" module="haxe.CallStack" final="1"><meta>
	<m n=":keep"/>
	<m n=":using"><e>haxe.CallStack</e></m>
	<m n=":allow"><e>haxe.Exception</e></m>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.Function" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with any function type.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<meta><m n=":callable"/></meta>
		<impl><class path="haxe._Constraints.Function_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="haxe.FlatEnum" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with an enum instance if all constructors of the enum
	require no arguments.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<impl><class path="haxe._Constraints.FlatEnum_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="haxe.NotVoid" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with anything but `Void`.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<impl><class path="haxe._Constraints.NotVoid_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="haxe.Constructible" params="T" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc><![CDATA[This type unifies with any instance of classes that have a constructor
	which

	  * is `public` and
	  * unifies with the type used for type parameter `T`.

	If a type parameter `A` is assigned to a type parameter `B` which is constrained
	to `Constructible<T>`, A must be explicitly constrained to
	`Constructible<T>` as well.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.]]></haxe_doc>
		<impl><class path="haxe._Constraints.Constructible_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.IMap" params="K:V" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints" interface="1"><meta><m n=":keep"/></meta></class>
	<class path="sys.thread.Mutex" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Mutex.hx">
		<m><d/></m>
		<acquire public="1" set="method" line="33">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>The current thread acquire the mutex or wait if not available.
		The same thread can acquire several times the same mutex but
		must release it as many times it has been acquired.</haxe_doc>
		</acquire>
		<release public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Release a mutex that has been acquired by the current thread.
		The behavior is undefined if the current thread does not own
		the mutex.</haxe_doc>
		</release>
		<new public="1" set="method" line="29">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates a mutex.</haxe_doc>
		</new>
		<haxe_doc>Creates a mutex, which can be used to acquire a temporary lock
	to access some ressource. The main difference with a lock is
	that a mutex must always be released by the owner thread.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="sys.thread.Lock" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Lock.hx">
		<l><d/></l>
		<wait public="1" set="method" line="33">
			<f a="?timeout" v="-1">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ timeout : -1 }</e></m>
			</meta>
			<haxe_doc>Waits for the lock to be released, or `timeout` (in seconds)
		to expire. Returns `true` if the lock is released and `false`
		if a time-out occurs.</haxe_doc>
		</wait>
		<new public="1" set="method" line="29">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates a new Lock which is initially locked.</haxe_doc>
		</new>
		<haxe_doc>A Lock allows blocking execution until it has been unlocked. It keeps track
	of how often `release` has been called, and blocks exactly as many `wait`
	calls.

	The order of the `release` and `wait` calls is irrelevant. That is, a Lock
	can be released before anyone waits for it. In that case, the `wait` call
	will execute immediately.

	Usage example:

	```haxe
	var lock = new Lock();
	var elements = [1, 2, 3];
	for (element in elements) {
		// Create one thread per element
		new Thread(function() {
			trace(element);
			Sys.sleep(1);
			// Release once per thread = 3 times
			lock.release();
		});
	}
	for (_ in elements) {
		// Wait 3 times
		lock.wait();
	}
	trace("All threads finished");
	```</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.EntryPoint" params="" file="/usr/local/lib/haxe/std/haxe/EntryPoint.hx">
		<sleepLock expr="new Lock()" line="37" static="1">
			<c path="sys.thread.Lock"/>
			<meta><m n=":value"><e>new Lock()</e></m></meta>
		</sleepLock>
		<mutex expr="new Mutex()" line="38" static="1">
			<c path="sys.thread.Mutex"/>
			<meta><m n=":value"><e>new Mutex()</e></m></meta>
		</mutex>
		<pending expr="new Array&lt;Void&gt;()" line="40" static="1">
			<c path="Array"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Array<Void>()]]></e></m></meta>
		</pending>
		<threadCount public="1" set="null" expr="0" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</threadCount>
		<processEvents set="method" line="85" static="1"><f a=""><x path="Float"/></f></processEvents>
		<run public="1" set="method" line="108" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":keep"/></meta>
			<haxe_doc>Start the main loop. Depending on the platform, this can return immediately or will only return when the application exits.</haxe_doc>
		</run>
		<haxe_doc>If `haxe.MainLoop` is kept from DCE, then we will insert an `haxe.EntryPoint.run()` call just at then end of `main()`.
	This class can be redefined by custom frameworks so they can handle their own main loop logic.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.EnumTools" params="" file="/usr/local/lib/haxe/std/haxe/EnumTools.hx" extern="1">
		<getName public="1" params="T" get="inline" set="null" line="52" static="1">
			<f a="e">
				<x path="Enum"><c path="getName.T"/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
		
			pack1.pack2.(...).packN.EnumName

		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is `null`, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getName>
		<createByName public="1" params="T" get="inline" set="null" line="65" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createByName.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createByName.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is `null`, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByName>
		<createByIndex public="1" params="T" get="inline" set="null" line="81" static="1">
			<f a="e:index:?params">
				<x path="Enum"><c path="createByIndex.T"/></x>
				<x path="Int"/>
				<c path="Array"><d/></c>
				<c path="createByIndex.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor number
		`index` with arguments `params`.

		The constructor indices are preserved from Haxe syntax, so the first
		declared is index 0, the next index 1 etc.

		If `e` or `index` is `null`, or if enum `e` has no constructor
		corresponding to index `index`, or if the number of elements in `params`
		does not match the expected number of constructor arguments, or if any
		argument has an invalid type, the result is unspecified.</haxe_doc>
		</createByIndex>
		<createAll public="1" params="T" get="inline" set="null" line="98" static="1">
			<f a="e">
				<x path="Enum"><c path="createAll.T"/></x>
				<c path="Array"><c path="createAll.T"/></c>
			</f>
			<haxe_doc>Returns a list of all constructors of enum `e` that require no
		arguments.

		This may return the empty Array `[]` if all constructors of `e` require
		arguments.

		Otherwise an instance of `e` constructed through each of its non-
		argument constructors is returned, in the order of the constructor
		declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</createAll>
		<getConstructors public="1" params="T" get="inline" set="null" line="110" static="1">
			<f a="e">
				<x path="Enum"><c path="getConstructors.T"/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `c` is `null`, the result is unspecified.</haxe_doc>
		</getConstructors>
		<haxe_doc>This class provides advanced methods on enums. It is ideally used with
	`using EnumTools` and then acts as an
	  [extension](https://haxe.org/manual/lf-static-extension.html) to the
	  `enum` types.

	If the first argument to any of the methods is `null`, the result is
	unspecified.</haxe_doc>
	</class>
	<class path="haxe.EnumValueTools" params="" file="/usr/local/lib/haxe/std/haxe/EnumTools.hx" module="haxe.EnumTools" extern="1">
		<equals public="1" params="T" get="inline" set="null" line="133" static="1">
			<f a="a:b">
				<c path="equals.T"/>
				<c path="equals.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Recursively compares two enum instances `a` and `b` by value.

		Unlike `a == b`, this function performs a deep equality check on the
		arguments of the constructors (if there are any).

		If `a` or `b` are `null`, the result is unspecified.</haxe_doc>
		</equals>
		<getName public="1" get="inline" set="null" line="144" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor name of enum instance `e`.

		The result String does not contain any constructor arguments.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getName>
		<getParameters public="1" get="inline" set="null" line="158" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is `[]`.

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getParameters>
		<getIndex public="1" get="inline" set="null" line="170" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of enum instance `e`.

		This corresponds to the original syntactic position of `e`. The index of
		the first declared constructor is 0, the next one is 1 etc.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getIndex>
		<haxe_doc>This class provides advanced methods on enum values. It is ideally used with
	`using EnumValueTools` and then acts as an
	  [extension](https://haxe.org/manual/lf-static-extension.html) to the
	  `EnumValue` types.

	If the first argument to any of the methods is `null`, the result is
	unspecified.</haxe_doc>
	</class>
	<class path="haxe.Exception" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Exception.hx">
		<caught set="method" line="18" static="1"><f a="value">
	<x path="Any"/>
	<c path="haxe.Exception"/>
</f></caught>
		<thrown set="method" line="26" static="1"><f a="value">
	<x path="Any"/>
	<x path="Any"/>
</f></thrown>
		<native public="1" get="accessor" set="null">
			<x path="Any"/>
			<haxe_doc>Native exception, which caused this exception.</haxe_doc>
		</native>
		<__exceptionMessage>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__exceptionMessage>
		<__nativeStack>
			<c path="Array"><c path="String"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__nativeStack>
		<__skipStack expr="0">
			<x path="Int"/>
			<meta>
				<m n=":value"><e>0</e></m>
				<m n=":noCompletion"/>
				<m n=":ifFeature"><e>"haxe.Exception.get_stack"</e></m>
			</meta>
		</__skipStack>
		<__nativeException>
			<x path="Any"/>
			<meta><m n=":noCompletion"/></meta>
		</__nativeException>
		<__previousException>
			<x path="Null"><c path="haxe.Exception"/></x>
			<meta><m n=":noCompletion"/></meta>
		</__previousException>
		<unwrap set="method" line="48"><f a=""><x path="Any"/></f></unwrap>
		<get_native final="1" set="method" line="74"><f a=""><x path="Any"/></f></get_native>
		<new public="1" set="method" line="36">
			<f a="message:?previous:?native">
				<c path="String"/>
				<c path="haxe.Exception"/>
				<x path="Any"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Create a new Exception instance.

		The `previous` argument could be used for exception chaining.

		The `native` argument is for internal usage only.
		There is no need to provide `native` argument manually and no need to keep it
		upon extending `haxe.Exception` unless you know what you're doing.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[Base class for exceptions.

	If this class (or derivatives) is used to catch an exception, then
	`haxe.CallStack.exceptionStack()` will not return a stack for the exception
	caught. Use `haxe.Exception.stack` property instead:
	```haxe
	try {
		throwSomething();
	} catch(e:Exception) {
		trace(e.stack);
	}
	```

	Custom exceptions should extend this class:
	```haxe
	class MyException extends haxe.Exception {}
	//...
	throw new MyException('terrible exception');
	```

	`haxe.Exception` is also a wildcard type to catch any exception:
	```haxe
	try {
		throw 'Catch me!';
	} catch(e:haxe.Exception) {
		trace(e.message); // Output: Catch me!
	}
	```

	To rethrow an exception just throw it again.
	Haxe will try to rethrow an original native exception whenever possible.
	```haxe
	try {
		var a:Array<Int> = null;
		a.push(1); // generates target-specific null-pointer exception
	} catch(e:haxe.Exception) {
		throw e; // rethrows native exception instead of haxe.Exception
	}
	```]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="haxe.Int32" params="" file="/usr/local/lib/haxe/std/haxe/Int32.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>Int32 provides a 32-bit integer with consistent overflow behavior across
	all platforms.</haxe_doc>
		<impl><class path="haxe._Int32.Int32_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Int32.hx" private="1" module="haxe.Int32" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe._Int64.___Int64" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Int64.hx" private="1" module="haxe.Int64" extern="1">
		<make public="1" set="method" static="1">
			<f a="high:low">
				<x path="haxe.Int32"/>
				<x path="haxe.Int32"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_make"</e></m></meta>
		</make>
		<ofInt public="1" set="method" static="1">
			<f a="value">
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>" ::cpp::Int64Struct"</e></m></meta>
		</ofInt>
		<isInt64 public="1" set="method" static="1">
			<f a="d">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>" ::cpp::Int64Struct::is"</e></m></meta>
		</isInt64>
		<isNeg public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_is_neg"</e></m></meta>
		</isNeg>
		<isZero public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_is_zero"</e></m></meta>
		</isZero>
		<compare public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_compare"</e></m></meta>
		</compare>
		<ucompare public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_ucompare"</e></m></meta>
		</ucompare>
		<toString public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<c path="String"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_to_string"</e></m></meta>
		</toString>
		<neg public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_neg"</e></m></meta>
		</neg>
		<preIncrement public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_pre_increment"</e></m></meta>
		</preIncrement>
		<postIncrement public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_post_increment"</e></m></meta>
		</postIncrement>
		<preDecrement public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_pre_decrement"</e></m></meta>
		</preDecrement>
		<postDecrement public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_post_decrement"</e></m></meta>
		</postDecrement>
		<add public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_add"</e></m></meta>
		</add>
		<addInt public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_add"</e></m></meta>
		</addInt>
		<sub public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_sub"</e></m></meta>
		</sub>
		<subInt public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_sub"</e></m></meta>
		</subInt>
		<intSub public="1" set="method" static="1">
			<f a="a:b">
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_sub"</e></m></meta>
		</intSub>
		<mul public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_mul"</e></m></meta>
		</mul>
		<div public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_div"</e></m></meta>
		</div>
		<mod public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_mod"</e></m></meta>
		</mod>
		<eq public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_eq"</e></m></meta>
		</eq>
		<eqInt public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_eq"</e></m></meta>
		</eqInt>
		<neq public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_neq"</e></m></meta>
		</neq>
		<neqInt public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_neq"</e></m></meta>
		</neqInt>
		<complement public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_complement"</e></m></meta>
		</complement>
		<bitAnd public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_and"</e></m></meta>
		</bitAnd>
		<bitOr public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_or"</e></m></meta>
		</bitOr>
		<bitXor public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_xor"</e></m></meta>
		</bitXor>
		<shl public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_shl"</e></m></meta>
		</shl>
		<shr public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_shr"</e></m></meta>
		</shr>
		<ushr public="1" set="method" static="1">
			<f a="a:b">
				<t path="haxe._Int64.__Int64"/>
				<x path="Int"/>
				<t path="haxe._Int64.__Int64"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_ushr"</e></m></meta>
		</ushr>
		<high public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_high"</e></m></meta>
		</high>
		<low public="1" set="method" static="1">
			<f a="a">
				<t path="haxe._Int64.__Int64"/>
				<x path="haxe.Int32"/>
			</f>
			<meta><m n=":native"><e>"_hx_int64_low"</e></m></meta>
		</low>
		<get public="1" set="method"><f a=""><x path="cpp.Int64"/></f></get>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":notNull"/>
			<m n=":include"><e>"cpp/Int64.h"</e></m>
			<m n=":native"><e>"cpp::Int64Struct"</e></m>
		</meta>
	</class>
	<typedef path="haxe._Int64.__Int64" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Int64.hx" private="1" module="haxe.Int64"><c path="haxe._Int64.___Int64"/></typedef>
	<abstract path="haxe.Int64" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Int64.hx">
		<from>
			<icast><t path="haxe._Int64.__Int64"/></icast>
			<icast field="ofInt"><x path="Int"/></icast>
		</from>
		<this><t path="haxe._Int64.__Int64"/></this>
		<to><icast><t path="haxe._Int64.__Int64"/></icast></to>
		<meta><m n=":coreApi"/></meta>
		<impl><class path="haxe._Int64.Int64_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Int64.hx" private="1" module="haxe.Int64" final="1"><meta>
	<m n=":keep"/>
	<m n=":coreApi"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.Log" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/Log.hx">
		<nativeTrace set="method" static="1">
			<f a="message:posInfo">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"__trace"</e></m></meta>
		</nativeTrace>
		<trace public="1" set="dynamic" line="29" static="1">
			<f a="v:?infos">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Outputs `v` in a platform-dependent way.

		The second parameter `infos` is injected by the compiler and contains
		information about the position where the `trace()` call was made.

		This method can be rebound to a custom function:

			var oldTrace = haxe.Log.trace; // store old function
			haxe.Log.trace = function(v, ?infos) {
			  // handle trace
			}
			...
			haxe.Log.trace = oldTrace;

		If it is bound to null, subsequent calls to `trace()` will cause an
		exception.</haxe_doc>
		</trace>
		<haxe_doc>Log primarily provides the `trace()` method, which is invoked upon a call to
	`trace()` in Haxe code.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.MainEvent" params="" file="/usr/local/lib/haxe/std/haxe/MainLoop.hx" module="haxe.MainLoop">
		<f><f a=""><x path="Void"/></f></f>
		<prev><c path="haxe.MainEvent"/></prev>
		<next><c path="haxe.MainEvent"/></next>
		<isBlocking public="1" expr="true">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
			<haxe_doc>Tells if the event can lock the process from exiting (default:true)</haxe_doc>
		</isBlocking>
		<nextRun public="1" set="null"><x path="Float"/></nextRun>
		<priority public="1" set="null"><x path="Int"/></priority>
		<stop public="1" set="method" line="43">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Stop the event from firing anymore.</haxe_doc>
		</stop>
		<new set="method" line="18"><f a="f:p">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.MainLoop" params="" file="/usr/local/lib/haxe/std/haxe/MainLoop.hx">
		<pending static="1"><c path="haxe.MainEvent"/></pending>
		<hasEvents public="1" set="method" line="66" static="1"><f a=""><x path="Bool"/></f></hasEvents>
		<add public="1" set="method" line="87" static="1">
			<f a="f:?priority" v=":0">
				<f a=""><x path="Void"/></f>
				<x path="Int"/>
				<c path="haxe.MainEvent"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0 }</e></m></meta>
			<haxe_doc>Add a pending event to be run into the main loop.</haxe_doc>
		</add>
		<sortEvents set="method" line="99" static="1"><f a=""><x path="Void"/></f></sortEvents>
		<tick set="method" line="164" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Run the pending events. Return the time for next event.</haxe_doc>
		</tick>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":access"><e>haxe.MainEvent</e></m>
		</meta>
	</class>
	<class path="haxe.NativeStackTrace" params="" file="/usr/local/lib/haxe/std/cpp/_std/haxe/NativeStackTrace.hx">
		<saveStack public="1" get="inline" set="null" line="12" static="1">
			<f a="exception">
				<x path="Any"/>
				<x path="Void"/>
			</f>
			<meta><m n=":ifFeature"><e>"haxe.NativeStackTrace.exceptionStack"</e></m></meta>
		</saveStack>
		<callStack public="1" set="method" line="16" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noDebug"/>
			</meta>
		</callStack>
		<exceptionStack public="1" set="method" line="21" static="1">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noDebug"/>
			</meta>
		</exceptionStack>
		<haxe_doc>Do not use manually.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<typedef path="haxe.PosInfos" params="" file="/usr/local/lib/haxe/std/haxe/PosInfos.hx">
		<a>
			<methodName><c path="String"/></methodName>
			<lineNumber><x path="Int"/></lineNumber>
			<fileName><c path="String"/></fileName>
			<customParams>
				<x path="Null"><c path="Array"><d/></c></x>
				<meta><m n=":optional"/></meta>
			</customParams>
			<className><c path="String"/></className>
		</a>
		<haxe_doc>`PosInfos` is a magic type which can be used to generate position information
	into the output for debugging use.

	If a function has a final optional argument of this type, i.e.
	`(..., ?pos:haxe.PosInfos)`, each call to that function which does not assign
	a value to that argument has its position added as call argument.

	This can be used to track positions of calls in e.g. a unit testing
	framework.</haxe_doc>
	</typedef>
	<class path="haxe.Serializer" params="" file="/usr/local/lib/haxe/std/haxe/Serializer.hx">
		<USE_CACHE public="1" expr="false" line="57" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>If the values you are serializing can contain circular references or
		objects repetitions, you should set `USE_CACHE` to true to prevent
		infinite loops.

		This may also reduce the size of serialization Strings at the expense of
		performance.

		This value can be changed for individual instances of `Serializer` by
		setting their `useCache` field.</haxe_doc>
		</USE_CACHE>
		<USE_ENUM_INDEX public="1" expr="false" line="69" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>Use constructor indexes for enums instead of names.

		This may reduce the size of serialization Strings, but makes them less
		suited for long-term storage: If constructors are removed or added from
		the enum, the indices may no longer match.

		This value can be changed for individual instances of `Serializer` by
		setting their `useEnumIndex` field.</haxe_doc>
		</USE_ENUM_INDEX>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="71" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<BASE64_CODES expr="null" line="72" static="1">
			<x path="haxe.ds.Vector"><x path="Null"><x path="Int"/></x></x>
			<meta><m n=":value"><e>null</e></m></meta>
		</BASE64_CODES>
		<run public="1" set="method" line="582" static="1">
			<f a="v">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Serializes `v` and returns the String representation.

	This is a convenience function for creating a new instance of
	Serializer, serialize `v` into it and obtain the result through a call
	to `toString()`.</haxe_doc>
		</run>
		<buf><c path="StringBuf"/></buf>
		<cache><c path="Array"><d/></c></cache>
		<shash><c path="haxe.ds.StringMap"><x path="Int"/></c></shash>
		<scount><x path="Int"/></scount>
		<useCache public="1">
			<x path="Bool"/>
			<haxe_doc>The individual cache setting for `this` Serializer instance.

		See `USE_CACHE` for a complete description.</haxe_doc>
		</useCache>
		<useEnumIndex public="1">
			<x path="Bool"/>
			<haxe_doc>The individual enum index setting for `this` Serializer instance.

		See `USE_ENUM_INDEX` for a complete description.</haxe_doc>
		</useEnumIndex>
		<toString public="1" set="method" line="118">
			<f a=""><c path="String"/></f>
			<haxe_doc>Return the String representation of `this` Serializer.

		The exact format specification can be found here:
		https://haxe.org/manual/serialization/format</haxe_doc>
		</toString>
		<serializeString set="method" line="154"><f a="s">
	<c path="String"/>
	<x path="Void"/>
</f></serializeString>
		<serializeRef set="method" line="174"><f a="v">
	<d/>
	<x path="Bool"/>
</f></serializeRef>
		<serializeFields set="method" line="211"><f a="v">
	<a/>
	<x path="Void"/>
</f></serializeFields>
		<serialize public="1" set="method" line="229">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Serializes `v`.

	All haxe-defined values and objects with the exception of functions can
	be serialized. Serialization of external/native objects is not
	guaranteed to work.

	The values of `this.useCache` and `this.useEnumIndex` may affect
	serialization output.</haxe_doc>
		</serialize>
		<__getField get="inline" set="null" line="556"><f a="o:f">
	<d/>
	<c path="String"/>
	<d/>
</f></__getField>
		<new public="1" set="method" line="103">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Serializer instance.

		Subsequent calls to `this.serialize` will append values to the
		internal buffer of this String. Once complete, the contents can be
		retrieved through a call to `this.toString`.

		Each `Serializer` instance maintains its own cache if `this.useCache` is
		`true`.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The Serializer class can be used to encode values and objects into a `String`,
	from which the `Unserializer` class can recreate the original representation.

	This class can be used in two ways:

	- create a `new Serializer()` instance, call its `serialize()` method with
		any argument and finally retrieve the String representation from
		`toString()`
	- call `Serializer.run()` to obtain the serialized representation of a
		single argument

	Serialization is guaranteed to work for all haxe-defined classes, but may
	or may not work for instances of external/native classes.

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/std-serialization-format.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Timer" params="" file="/projects/May2019/May2020/lime/src/haxe/Timer.hx">
		<sRunningTimers expr="[]" line="223" static="1">
			<c path="Array"><c path="haxe.Timer"/></c>
			<meta><m n=":value"><e>[]</e></m></meta>
		</sRunningTimers>
		<delay public="1" set="method" line="237" static="1"><f a="f:time">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<c path="haxe.Timer"/>
</f></delay>
		<getMS set="method" line="250" static="1"><f a=""><x path="Float"/></f></getMS>
		<measure public="1" params="T" set="method" line="255" static="1"><f a="f:?pos">
	<f a=""><c path="measure.T"/></f>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<c path="measure.T"/>
</f></measure>
		<stamp public="1" get="inline" set="null" line="265" static="1"><f a=""><x path="Float"/></f></stamp>
		<mTime><x path="Float"/></mTime>
		<mFireAt><x path="Float"/></mFireAt>
		<mRunning><x path="Bool"/></mRunning>
		<run public="1" set="dynamic" line="263"><f a=""><x path="Void"/></f></run>
		<stop public="1" set="method" line="271"><f a=""><x path="Void"/></f></stop>
		<__check set="method" line="288">
			<f a="inTime">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__check>
		<new public="1" set="method" line="229"><f a="time">
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="haxe._Unserializer.DefaultResolver" params="" file="/usr/local/lib/haxe/std/haxe/Unserializer.hx" private="1" module="haxe.Unserializer">
		<resolveClass public="1" get="inline" set="null" line="476"><f a="name">
	<c path="String"/>
	<x path="Class"><d/></x>
</f></resolveClass>
		<resolveEnum public="1" get="inline" set="null" line="479"><f a="name">
	<c path="String"/>
	<x path="Enum"><d/></x>
</f></resolveEnum>
		<new public="1" set="method" line="474"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Unserializer" params="" file="/usr/local/lib/haxe/std/haxe/Unserializer.hx">
		<DEFAULT_RESOLVER public="1" expr="new DefaultResolver()" line="65" static="1">
			<t path="haxe.TypeResolver"/>
			<meta><m n=":value"><e>new DefaultResolver()</e></m></meta>
			<haxe_doc><![CDATA[This value can be set to use custom type resolvers.

		A type resolver finds a `Class` or `Enum` instance from a given `String`.
		By default, the Haxe `Type` Api is used.

		A type resolver must provide two methods:

		1. `resolveClass(name:String):Class<Dynamic>` is called to determine a
				`Class` from a class name
		2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an
				`Enum` from an enum name

		This value is applied when a new `Unserializer` instance is created.
		Changing it afterwards has no effect on previously created instances.]]></haxe_doc>
		</DEFAULT_RESOLVER>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="67" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<CODES expr="null" line="70" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>null</e></m></meta>
		</CODES>
		<initCodes set="method" line="72" static="1"><f a=""><c path="Array"><x path="Int"/></c></f></initCodes>
		<run public="1" set="method" line="464" static="1">
			<f a="v">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Unserializes `v` and returns the according value.

		This is a convenience function for creating a new instance of
		Unserializer with `v` as buffer and calling its `unserialize()` method
		once.</haxe_doc>
		</run>
		<buf><c path="String"/></buf>
		<pos><x path="Int"/></pos>
		<length><x path="Int"/></length>
		<cache><c path="Array"><d/></c></cache>
		<scache><c path="Array"><c path="String"/></c></scache>
		<resolver><t path="haxe.TypeResolver"/></resolver>
		<readDigits set="method" line="144"><f a=""><x path="Int"/></f></readDigits>
		<readFloat set="method" line="169"><f a=""><x path="Float"/></f></readFloat>
		<unserializeObject set="method" line="184"><f a="o">
	<a/>
	<x path="Void"/>
</f></unserializeObject>
		<unserializeEnum params="T" set="method" line="199"><f a="edecl:tag">
	<x path="Enum"><c path="unserializeEnum.T"/></x>
	<c path="String"/>
	<c path="unserializeEnum.T"/>
</f></unserializeEnum>
		<unserialize public="1" set="method" line="231">
			<f a=""><d/></f>
			<haxe_doc>Unserializes the next part of `this` Unserializer instance and returns
		the according value.

		This function may call `this.resolver.resolveClass` to determine a
		Class from a String, and `this.resolver.resolveEnum` to determine an
		Enum from a String.

		If `this` Unserializer instance contains no more or invalid data, an
		exception is thrown.

		This operation may fail on structurally valid data if a type cannot be
		resolved or if a field cannot be set. This can happen when unserializing
		Strings that were serialized on a different Haxe target, in which the
		serialization side has to make sure not to include platform-specific
		data.

		Classes are created from `Type.createEmptyInstance`, which means their
		constructors are not called.</haxe_doc>
		</unserialize>
		<new public="1" set="method" line="99">
			<f a="buf">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Unserializer instance, with its internal buffer
		initialized to `buf`.

		This does not parse `buf` immediately. It is parsed only when calls to
		`this.unserialize` are made.

		Each Unserializer instance maintains its own cache.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Unserializer` class is the complement to the `Serializer` class. It parses
	a serialization `String` and creates objects from the contained data.

	This class can be used in two ways:

	- create a `new Unserializer()` instance with a given serialization
		String, then call its `unserialize()` method until all values are
		extracted
	- call `Unserializer.run()`  to unserialize a single value from a given
		String

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/serialization/format>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ValueException" params="" file="/usr/local/lib/haxe/std/haxe/ValueException.hx">
		<extends path="haxe.Exception"/>
		<value public="1" set="null">
			<x path="Any"/>
			<haxe_doc>Thrown value.</haxe_doc>
		</value>
		<unwrap set="method" line="35" override="1">
			<f a=""><x path="Any"/></f>
			<haxe_doc>Extract an originally thrown value.

		This method must return the same value on subsequent calls.
		Used internally for catching non-native exceptions.
		Do _not_ override unless you know what you are doing.</haxe_doc>
		</unwrap>
		<new public="1" set="method" line="23"><f a="value:?previous:?native">
	<x path="Any"/>
	<c path="haxe.Exception"/>
	<x path="Any"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>An exception containing arbitrary value.

	This class is automatically used for throwing values, which don't extend `haxe.Exception`
	or native exception type.
	For example:
	```haxe
	throw "Terrible error";
	```
	will be compiled to
	```haxe
	throw new ValueException("Terrible error");
	```</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.crypto.Adler32" params="" file="/usr/local/lib/haxe/std/haxe/crypto/Adler32.hx">
		<read public="1" set="method" line="60" static="1"><f a="i">
	<c path="haxe.io.Input"/>
	<c path="haxe.crypto.Adler32"/>
</f></read>
		<a1><x path="Int"/></a1>
		<a2><x path="Int"/></a2>
		<update public="1" set="method" line="41"><f a="b:pos:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<equals public="1" set="method" line="52"><f a="a">
	<c path="haxe.crypto.Adler32"/>
	<x path="Bool"/>
</f></equals>
		<new public="1" set="method" line="32"><f a=""><x path="Void"/></f></new>
		<haxe_doc>Calculates the Adler32 of the given Bytes.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.Bytes" params="" file="/projects/May2019/May2020/lime/src/haxe/io/Bytes.hx">
		<alloc public="1" set="method" line="505" static="1"><f a="length">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></alloc>
		<ofString public="1" set="method" line="535" static="1">
			<f a="s:?encoding">
				<c path="String"/>
				<e path="haxe.io.Encoding"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns bytes representation of the given String, using specific encoding (UTF-8 by default)</haxe_doc>
		</ofString>
		<ofData public="1" set="method" line="597" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<c path="haxe.io.Bytes"/>
</f></ofData>
		<ofHex public="1" set="method" line="614" static="1">
			<f a="s">
				<c path="String"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<haxe_doc>Convert hexadecimal string to Bytes.
		Support only straight hex string ( Example: "0FDA14058916052309" )</haxe_doc>
		</ofHex>
		<fastGet public="1" get="inline" set="null" line="635" static="1">
			<f a="b:pos">
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Read the most efficiently possible the n-th byte of the data.
		Behavior when reading outside of the available data is unspecified.</haxe_doc>
		</fastGet>
		<length public="1" set="null"><x path="Int"/></length>
		<b><t path="haxe.io.BytesData"/></b>
		<get public="1" get="inline" set="null" line="52">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</get>
		<set public="1" get="inline" set="null" line="69">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</set>
		<blit public="1" set="method" line="88"><f a="pos:src:srcpos:len">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blit>
		<fill public="1" set="method" line="127">
			<f a="pos:len:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</fill>
		<sub public="1" set="method" line="147"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></sub>
		<compare public="1" set="method" line="175"><f a="other">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
</f></compare>
		<getDouble public="1" get="inline" set="null" line="226">
			<f a="pos">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the IEEE double precision value at given position (in low endian encoding).
		Result is unspecified if reading outside of the bounds</haxe_doc>
		</getDouble>
		<getFloat public="1" get="inline" set="null" line="248">
			<f a="pos">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the IEEE single precision value at given position (in low endian encoding).
		Result is unspecified if reading outside of the bounds</haxe_doc>
		</getFloat>
		<setDouble public="1" set="method" line="272">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Store the IEEE double precision value at given position in low endian encoding.
		Result is unspecified if writing outside of the bounds.</haxe_doc>
		</setDouble>
		<setFloat public="1" set="method" line="298">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Store the IEEE single precision value at given position in low endian encoding.
		Result is unspecified if writing outside of the bounds.</haxe_doc>
		</setFloat>
		<getUInt16 public="1" get="inline" set="null" line="318">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the 16 bit unsigned integer at given position (in low endian encoding).</haxe_doc>
		</getUInt16>
		<setUInt16 public="1" get="inline" set="null" line="330">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 16 bit unsigned integer at given position (in low endian encoding).</haxe_doc>
		</setUInt16>
		<getInt32 public="1" get="inline" set="null" line="343">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the 32 bit integer at given position (in low endian encoding).</haxe_doc>
		</getInt32>
		<getInt64 public="1" get="inline" set="null" line="361">
			<f a="pos">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<haxe_doc>Returns the 64 bit integer at given position (in low endian encoding).</haxe_doc>
		</getInt64>
		<setInt32 public="1" get="inline" set="null" line="369">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 32 bit integer at given position (in low endian encoding).</haxe_doc>
		</setInt32>
		<setInt64 public="1" get="inline" set="null" line="384">
			<f a="pos:v">
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Store the 64 bit integer at given position (in low endian encoding).</haxe_doc>
		</setInt64>
		<getString public="1" set="method" line="390">
			<f a="pos:len:?encoding">
				<x path="Int"/>
				<x path="Int"/>
				<e path="haxe.io.Encoding"/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getString>
		<readString public="1" get="inline" set="null" line="455">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":deprecated"><e>"readString is deprecated, use getString instead"</e></m>
				<m n=":noCompletion"/>
			</meta>
		</readString>
		<toString public="1" set="method" line="463">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns string representation of the bytes as UTF8</haxe_doc>
		</toString>
		<toHex public="1" set="method" line="484"><f a=""><c path="String"/></f></toHex>
		<getData public="1" get="inline" set="null" line="500"><f a=""><t path="haxe.io.BytesData"/></f></getData>
		<new set="method" line="43"><f a="length:b">
	<x path="Int"/>
	<t path="haxe.io.BytesData"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":autoBuild"><e>lime._internal.macros.AssetsMacro.embedBytes()</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="haxe.crypto.Base64" params="" file="/usr/local/lib/haxe/std/haxe/crypto/Base64.hx">
		<CHARS public="1" set="null" expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;" line="29" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</e></m></meta>
		</CHARS>
		<BYTES public="1" set="null" expr="haxe.io.Bytes.ofString(CHARS)" line="30" static="1">
			<c path="haxe.io.Bytes"/>
			<meta><m n=":value"><e>haxe.io.Bytes.ofString(CHARS)</e></m></meta>
		</BYTES>
		<decode public="1" set="method" line="48" static="1">
			<f a="str:?complement" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ complement : true }</e></m></meta>
		</decode>
		<haxe_doc>Allows one to encode/decode String and bytes using Base64 encoding.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.crypto.BaseCode" params="" file="/usr/local/lib/haxe/std/haxe/crypto/BaseCode.hx">
		<base><c path="haxe.io.Bytes"/></base>
		<nbits><x path="Int"/></nbits>
		<tbl><c path="Array"><x path="Int"/></c></tbl>
		<initTable set="method" line="72"><f a=""><x path="Void"/></f></initTable>
		<decodeBytes public="1" set="method" line="81"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decodeBytes>
		<new public="1" set="method" line="33"><f a="base">
	<c path="haxe.io.Bytes"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Allows one to encode/decode String and bytes using a power of two base dictionary.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds.TreeNode" params="K:V" file="/usr/local/lib/haxe/std/haxe/ds/BalancedTree.hx" module="haxe.ds.BalancedTree">
		<left public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></left>
		<right public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></right>
		<key public="1"><c path="haxe.ds.TreeNode.K"/></key>
		<value public="1"><c path="haxe.ds.TreeNode.V"/></value>
		<_height><x path="Int"/></_height>
		<get_height public="1" get="inline" set="null" line="263"><f a=""><x path="Int"/></f></get_height>
		<new public="1" set="method" line="252">
			<f a="l:k:v:r:?h" v="::::-1">
				<c path="haxe.ds.TreeNode">
					<c path="haxe.ds.TreeNode.K"/>
					<c path="haxe.ds.TreeNode.V"/>
				</c>
				<c path="haxe.ds.TreeNode.K"/>
				<c path="haxe.ds.TreeNode.V"/>
				<c path="haxe.ds.TreeNode">
					<c path="haxe.ds.TreeNode.K"/>
					<c path="haxe.ds.TreeNode.V"/>
				</c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ h : -1 }</e></m></meta>
		</new>
		<haxe_doc>A tree node of `haxe.ds.BalancedTree`.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="haxe.ds.HashMap" params="K:V" file="/usr/local/lib/haxe/std/haxe/ds/HashMap.hx">
		<this><c path="haxe.ds._HashMap.HashMapData">
	<c path="haxe.ds.HashMap.K"/>
	<c path="haxe.ds.HashMap.V"/>
</c></this>
		<haxe_doc>HashMap allows mapping of hashable objects to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<impl><class path="haxe.ds._HashMap.HashMap_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/HashMap.hx" private="1" module="haxe.ds.HashMap" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.ds.IntMap" params="T" file="/usr/local/lib/haxe/std/cpp/_std/haxe/ds/IntMap.hx">
		<implements path="haxe.IMap">
			<x path="Int"/>
			<c path="haxe.ds.IntMap.T"/>
		</implements>
		<h>
			<d/>
			<meta><m n=":ifFeature"><e>"haxe.ds.IntMap.*"</e></m></meta>
		</h>
		<set public="1" set="method" line="60">
			<f a="key:value">
				<x path="Int"/>
				<c path="haxe.ds.IntMap.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" set="method" line="64">
			<f a="key">
				<x path="Int"/>
				<x path="Null"><c path="haxe.ds.IntMap.T"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" set="method" line="68">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="72">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="76">
			<f a=""><t path="Iterator"><x path="Int"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.keys`

		(cs, java) Implementation detail: Do not `set()` any new value while
		iterating, as it may cause a resize, which will break iteration.</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="81">
			<f a=""><t path="Iterator"><c path="haxe.ds.IntMap.T"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.iterator`

		(cs, java) Implementation detail: Do not `set()` any new value while
		iterating, as it may cause a resize, which will break iteration.</haxe_doc>
		</iterator>
		<new public="1" set="method" line="58">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new IntMap.</haxe_doc>
		</new>
		<haxe_doc>IntMap allows mapping of Int keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":headerClassCode"><e><![CDATA["\n  inline void set(int key, ::null value) { __int_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(int key, bool value) { __int_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(int key, char value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, unsigned char value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, signed char value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, short value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, unsigned short value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, int value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, unsigned int value) { __int_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(int key, float value) { __int_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(int key, double value) { __int_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(int key, ::String value) { __int_hash_set_string(HX_MAP_THIS,key,value); }\n\n  template<typename V, typename H>\n  inline void set(int key, const ::cpp::Struct<V,H> &value) {__int_hash_set(HX_MAP_THIS,key,value); }\n  template<typename F>\n  inline void set(int key, const ::cpp::Function<F> &value) {__int_hash_set(HX_MAP_THIS,key,value); }\n  template<typename V>\n  inline void set(int key, const ::cpp::Pointer<V> &value) {__int_hash_set(HX_MAP_THIS,key,(Dynamic)value ); }\n\n  template<typename VALUE>\n  inline void set(Dynamic &key, const VALUE &value) { set( (int)key, value ); }\n\n  inline bool get_bool(int key) { return __int_hash_get_bool(h,key); }\n  inline int get_int(int key) { return __int_hash_get_int(h,key); }\n  inline Float get_float(int key) { return __int_hash_get_float(h,key); }\n  inline String get_string(int key) { return __int_hash_get_string(h,key); }\n"]]></e></m>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds.List" params="T" file="/usr/local/lib/haxe/std/haxe/ds/List.hx">
		<h><c path="haxe.ds._List.ListNode"><c path="haxe.ds.List.T"/></c></h>
		<q><c path="haxe.ds._List.ListNode"><c path="haxe.ds.List.T"/></c></q>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` List.</haxe_doc>
		</length>
		<add public="1" set="method" line="53">
			<f a="item">
				<c path="haxe.ds.List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the end of `this` List.

		`this.length` increases by 1.</haxe_doc>
		</add>
		<push public="1" set="method" line="68">
			<f a="item">
				<c path="haxe.ds.List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the beginning of `this` List.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<pop public="1" set="method" line="99">
			<f a=""><x path="Null"><c path="haxe.ds.List.T"/></x></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.

		The element is removed from `this` List.</haxe_doc>
		</pop>
		<new public="1" set="method" line="44">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new empty list.</haxe_doc>
		</new>
		<haxe_doc>A linked-list of elements. The list is composed of element container objects
	that are chained together. It is optimized so that adding or removing an
	element does not imply copying the whole list content every time.

	@see https://haxe.org/manual/std-List.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds._List.ListNode" params="T" file="/usr/local/lib/haxe/std/haxe/ds/List.hx" private="1" module="haxe.ds.List">
		<create public="1" params="T" get="inline" set="null" line="271" static="1"><f a="item:next">
	<c path="create.T"/>
	<c path="haxe.ds._List.ListNode"><c path="create.T"/></c>
	<c path="haxe.ds._List.ListNode"><c path="create.T"/></c>
</f></create>
		<item public="1"><c path="haxe.ds._List.ListNode.T"/></item>
		<next public="1"><c path="haxe.ds._List.ListNode"><c path="haxe.ds._List.ListNode.T"/></c></next>
		<new public="1" set="method" line="266"><f a="item:next">
	<c path="haxe.ds._List.ListNode.T"/>
	<c path="haxe.ds._List.ListNode"><c path="haxe.ds._List.ListNode.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.ds.Map" params="K:V" file="/usr/local/lib/haxe/std/haxe/ds/Map.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
		</from>
		<this><c path="haxe.IMap">
	<c path="haxe.ds.Map.K"/>
	<c path="haxe.ds.Map.V"/>
</c></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="toEnumValueMapMap.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="toObjectMap.V"/>
</c></icast>
		</to>
		<haxe_doc><![CDATA[Map allows key to value mapping for arbitrary value types, and many key
	types.

	This is a multi-type abstract, it is instantiated as one of its
	specialization types depending on its type parameters.

	A Map can be instantiated without explicit type parameters. Type inference
	will then determine the type parameters from the usage.

	Maps can also be created with `[key1 => value1, key2 => value2]` syntax.

	Map is an abstract type, it is not available at runtime.

	@see https://haxe.org/manual/std-Map.html]]></haxe_doc>
		<meta><m n=":multiType"><e>@:followWithAbstracts K</e></m></meta>
		<impl><class path="haxe.ds._Map.Map_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/Map.hx" private="1" module="haxe.ds.Map" final="1">
	<_new public="1" set="method" static="1">
		<f a=""><x path="haxe.ds.Map">
	<c path="haxe.ds.Map.K"/>
	<c path="haxe.ds.Map.V"/>
</x></f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new Map.

		This becomes a constructor call to one of the specialization types in
		the output. The rules for that are as follows:

		1. if `K` is a `String`, `haxe.ds.StringMap` is used
		2. if `K` is an `Int`, `haxe.ds.IntMap` is used
		3. if `K` is an `EnumValue`, `haxe.ds.EnumValueMap` is used
		4. if `K` is any other class or structure, `haxe.ds.ObjectMap` is used
		5. if `K` is any other type, it causes a compile-time error

		(Cpp) Map does not use weak keys on `ObjectMap` by default.</haxe_doc>
	</_new>
	<meta><m n=":keep"/></meta>
</class></impl>
	</abstract>
	<class path="haxe.ds.ObjectMap" params="K:V" file="/usr/local/lib/haxe/std/cpp/_std/haxe/ds/ObjectMap.hx">
		<implements path="haxe.IMap">
			<c path="haxe.ds.ObjectMap.K"/>
			<c path="haxe.ds.ObjectMap.V"/>
		</implements>
		<h>
			<d/>
			<meta><m n=":ifFeature"><e>"haxe.ds.ObjectMap.*"</e></m></meta>
		</h>
		<set public="1" set="method" line="60">
			<f a="key:value">
				<c path="haxe.ds.ObjectMap.K"/>
				<c path="haxe.ds.ObjectMap.V"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" set="method" line="64">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Null"><c path="haxe.ds.ObjectMap.V"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" set="method" line="68">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<keys public="1" set="method" line="76">
			<f a=""><t path="Iterator"><c path="haxe.ds.ObjectMap.K"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.keys`

		(cs, java) Implementation detail: Do not `set()` any new value while
		iterating, as it may cause a resize, which will break iteration.</haxe_doc>
		</keys>
		<new public="1" set="method" line="58">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new ObjectMap.</haxe_doc>
		</new>
		<haxe_doc>ObjectMap allows mapping of object keys to arbitrary values.

	On static targets, the keys are considered to be strong references. Refer
	to `haxe.ds.WeakMap` for a weak reference version.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":headerClassCode"><e><![CDATA["\n  inline void set(Dynamic key, ::null value) { __object_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, bool value) { __object_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, char value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, signed char value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, short value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, int value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, float value) { __object_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, double value) { __object_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(Dynamic key, ::String value) { __object_hash_set_string(HX_MAP_THIS,key,value); }\n\n\n  template<typename V, typename H>\n  inline void set(Dynamic key, const ::cpp::Struct<V,H> &value) {__object_hash_set(HX_MAP_THIS,key,value); }\n  template<typename V>\n  inline void set(Dynamic key, const ::cpp::Function<V> &value) {__object_hash_set(HX_MAP_THIS,key,(Dynamic)value ); }\n  template<typename V>\n  inline void set(Dynamic key, const ::cpp::Pointer<V> &value) {__object_hash_set(HX_MAP_THIS,key,(Dynamic)value ); }\n\n  inline bool get_bool(Dynamic key) { return __object_hash_get_bool(h,key); }\n  inline int get_int(Dynamic key) { return __object_hash_get_int(h,key); }\n  inline Float get_float(Dynamic key) { return __object_hash_get_float(h,key); }\n  inline String get_string(Dynamic key) { return __object_hash_get_string(h,key); }\n\n"]]></e></m>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="haxe.ds.ReadOnlyArray" params="T" file="/usr/local/lib/haxe/std/haxe/ds/ReadOnlyArray.hx">
		<from><icast><c path="Array"><c path="haxe.ds.ReadOnlyArray.T"/></c></icast></from>
		<this><c path="Array"><c path="haxe.ds.ReadOnlyArray.T"/></c></this>
		<to><icast><t path="Iterable"><c path="haxe.ds.ReadOnlyArray.T"/></t></icast></to>
		<haxe_doc>`ReadOnlyArray` is an abstract over an ordinary `Array` which only exposes
	APIs that don't modify the instance, hence "read-only".

	Note that this doesn't necessarily mean that the instance is *immutable*.
	Other code holding a reference to the underlying `Array` can still modify it,
	and the reference can be obtained with a `cast`.</haxe_doc>
		<meta><m n=":forward">
	<e>concat</e>
	<e>copy</e>
	<e>filter</e>
	<e>indexOf</e>
	<e>iterator</e>
	<e>keyValueIterator</e>
	<e>join</e>
	<e>lastIndexOf</e>
	<e>map</e>
	<e>slice</e>
	<e>contains</e>
	<e>toString</e>
</m></meta>
		<impl><class path="haxe.ds._ReadOnlyArray.ReadOnlyArray_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/ReadOnlyArray.hx" private="1" module="haxe.ds.ReadOnlyArray" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.ds.StringMap" params="T" file="/usr/local/lib/haxe/std/cpp/_std/haxe/ds/StringMap.hx">
		<implements path="haxe.IMap">
			<c path="String"/>
			<c path="haxe.ds.StringMap.T"/>
		</implements>
		<h>
			<d/>
			<meta><m n=":ifFeature"><e>"haxe.ds.StringMap.*"</e></m></meta>
		</h>
		<set public="1" set="method" line="60">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" set="method" line="64">
			<f a="key">
				<c path="String"/>
				<x path="Null"><c path="haxe.ds.StringMap.T"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" set="method" line="68">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="72">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="76">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.keys`

		(cs, java) Implementation detail: Do not `set()` any new value while
		iterating, as it may cause a resize, which will break iteration.</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="81">
			<f a=""><t path="Iterator"><c path="haxe.ds.StringMap.T"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.iterator`

		(cs, java) Implementation detail: Do not `set()` any new value while
		iterating, as it may cause a resize, which will break iteration.</haxe_doc>
		</iterator>
		<new public="1" set="method" line="58">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringMap.</haxe_doc>
		</new>
		<haxe_doc>StringMap allows mapping of String keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":headerClassCode"><e><![CDATA["\n  inline void set(String key, ::null value) { __string_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(String key, bool value) { __string_hash_set(HX_MAP_THIS,key,value); }\n  inline void set(String key, char value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, unsigned char value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, signed char value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, short value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, unsigned short value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, int value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, unsigned int value) { __string_hash_set_int(HX_MAP_THIS,key,value); }\n  inline void set(String key, float value) { __string_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(String key, double value) { __string_hash_set_float(HX_MAP_THIS,key,value); }\n  inline void set(String key, ::String value) { __string_hash_set_string(HX_MAP_THIS,key,value); }\n\n  template<typename V, typename H>\n  inline void set(String key, const ::cpp::Struct<V,H> &value) {__string_hash_set(HX_MAP_THIS,key,value); }\n  template<typename V>\n  inline void set(String key, const ::cpp::Function<V> &value) {__string_hash_set(HX_MAP_THIS,key,(Dynamic)value ); }\n  template<typename V>\n  inline void set(String key, const ::cpp::Pointer<V> &value) {__string_hash_set(HX_MAP_THIS,key,(Dynamic)value ); }\n\n  template<typename VALUE>\n  inline void set(Dynamic &key, const VALUE &value) { set( (String)key, value ); }\n\n  inline bool get_bool(String key) { return __string_hash_get_bool(h,key); }\n  inline int get_int(String key) { return __string_hash_get_int(h,key); }\n  inline Float get_float(String key) { return __string_hash_get_float(h,key); }\n  inline String get_string(String key) { return __string_hash_get_string(h,key); }\n"]]></e></m>
			<m n=":coreApi"/>
		</meta>
	</class>
	<typedef path="haxe.ds._Vector.VectorData" params="T" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector"><c path="Array"><c path="haxe.ds._Vector.VectorData.T"/></c></typedef>
	<abstract path="haxe.ds.Vector" params="T" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx">
		<this><t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t></this>
		<haxe_doc>A Vector is a storage of fixed size. It can be faster than Array on some
	targets, and is never slower.

	@see https://haxe.org/manual/std-vector.html</haxe_doc>
		<impl><class path="haxe.ds._Vector.Vector_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="haxe.extern.AsVar" params="T" file="/usr/local/lib/haxe/std/haxe/extern/AsVar.hx">
		<from><icast><c path="haxe.extern.AsVar.T"/></icast></from>
		<this><c path="haxe.extern.AsVar.T"/></this>
		<to><icast><c path="haxe.extern.AsVar.T"/></icast></to>
		<haxe_doc>If this type is used as an argument type, the compiler ensures that
	argument expressions are bound to a local variable.</haxe_doc>
		<meta>
			<m n=":forward"/>
			<m n=":semantics"><e>variable</e></m>
		</meta>
		<impl><class path="haxe.extern._AsVar.AsVar_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/extern/AsVar.hx" private="1" module="haxe.extern.AsVar" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.format.JsonParser" params="" file="/usr/local/lib/haxe/std/haxe/format/JsonParser.hx">
		<str><c path="String"/></str>
		<pos><x path="Int"/></pos>
		<doParse set="method" line="56"><f a=""><d/></f></doParse>
		<parseRec set="method" line="70"><f a=""><d/></f></parseRec>
		<parseString set="method" line="152"><f a=""><c path="String"/></f></parseString>
		<invalidChar set="method" line="312"><f a=""><x path="Void"/></f></invalidChar>
		<invalidNumber set="method" line="317"><f a="start">
	<x path="Int"/>
	<x path="Void"/>
</f></invalidNumber>
		<new set="method" line="51"><f a="str">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>An implementation of JSON parser in Haxe.

	This class is used by `haxe.Json` when native JSON implementation
	is not available.

	@see https://haxe.org/manual/std-Json-parsing.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.format.JsonPrinter" params="" file="/usr/local/lib/haxe/std/haxe/format/JsonPrinter.hx">
		<print public="1" set="method" line="44" static="1">
			<f a="o:?replacer:?space">
				<d/>
				<f a="key:value">
					<d/>
					<d/>
					<d/>
				</f>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes `o`'s value and returns the resulting JSON string.

		If `replacer` is given and is not null, it is used to retrieve
		actual object to be encoded. The `replacer` function takes two parameters,
		the key and the value being encoded. Initial key value is an empty string.

		If `space` is given and is not null, the result will be pretty-printed.
		Successive levels will be indented by this string.</haxe_doc>
		</print>
		<buf><c path="StringBuf"/></buf>
		<replacer><f a="key:value">
	<d/>
	<d/>
	<d/>
</f></replacer>
		<indent><c path="String"/></indent>
		<pretty><x path="Bool"/></pretty>
		<nind><x path="Int"/></nind>
		<write set="method" line="81"><f a="k:v">
	<d/>
	<d/>
	<x path="Void"/>
</f></write>
		<addChar get="inline" set="null" line="140"><f a="c">
	<x path="Int"/>
	<x path="Void"/>
</f></addChar>
		<add get="inline" set="null" line="148"><f a="v">
	<c path="String"/>
	<x path="Void"/>
</f></add>
		<classString set="method" line="157"><f a="v">
	<d/>
	<x path="Void"/>
</f></classString>
		<fieldsString set="method" line="165"><f a="v:fields">
	<d/>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></fieldsString>
		<quote set="method" line="196"><f a="s">
	<c path="String"/>
	<x path="Void"/>
</f></quote>
		<new set="method" line="56"><f a="replacer:space">
	<f a="key:value">
		<d/>
		<d/>
		<d/>
	</f>
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>An implementation of JSON printer in Haxe.

	This class is used by `haxe.Json` when native JSON implementation
	is not available.

	@see https://haxe.org/manual/std-Json-encoding.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.BytesBuffer" params="" file="/usr/local/lib/haxe/std/haxe/io/BytesBuffer.hx">
		<b><t path="haxe.io.BytesData"/></b>
		<getBytes public="1" set="method" line="201">
			<f a=""><c path="haxe.io.Bytes"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns either a copy or a reference of the current bytes.
		Once called, the buffer should no longer be used.</haxe_doc>
		</getBytes>
		<new public="1" set="method" line="45"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<typedef path="haxe.io.BytesData" params="" file="/usr/local/lib/haxe/std/haxe/io/BytesData.hx"><c path="Array"><x path="cpp.UInt8"/></c></typedef>
	<class path="haxe.io.Input" params="" file="/usr/local/lib/haxe/std/haxe/io/Input.hx">
		<bigEndian public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Endianness (word byte order) used when reading numbers.

		If `true`, big-endian is used, otherwise `little-endian` is used.</haxe_doc>
		</bigEndian>
		<readByte public="1" set="method" line="49">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Read and return one byte.</haxe_doc>
		</readByte>
		<readBytes public="1" set="method" line="64">
			<f a="s:pos:len">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Read `len` bytes and write them into `s` to the position specified by `pos`.

		Returns the actual length of read data that can be smaller than `len`.

		See `readFullBytes` that tries to read the exact amount of specified bytes.</haxe_doc>
		</readBytes>
		<readFullBytes public="1" set="method" line="132">
			<f a="s:pos:len">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Read `len` bytes and write them into `s` to the position specified by `pos`.

		Unlike `readBytes`, this method tries to read the exact `len` amount of bytes.</haxe_doc>
		</readFullBytes>
		<read public="1" set="method" line="145">
			<f a="nbytes">
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<haxe_doc>Read and return `nbytes` bytes.</haxe_doc>
		</read>
		<readLine public="1" set="method" line="176">
			<f a=""><c path="String"/></f>
			<haxe_doc>Read a line of text separated by CR and/or LF bytes.

		The CR/LF characters are not included in the resulting string.</haxe_doc>
		</readLine>
		<readInt16 public="1" set="method" line="229">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Read a 16-bit signed integer.

		Endianness is specified by the `bigEndian` property.</haxe_doc>
		</readInt16>
		<readUInt16 public="1" set="method" line="243">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Read a 16-bit unsigned integer.

		Endianness is specified by the `bigEndian` property.</haxe_doc>
		</readUInt16>
		<readInt32 public="1" set="method" line="281">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Read a 32-bit signed integer.

		Endianness is specified by the `bigEndian` property.</haxe_doc>
		</readInt32>
		<readString public="1" set="method" line="304">
			<f a="len:?encoding">
				<x path="Int"/>
				<e path="haxe.io.Encoding"/>
				<c path="String"/>
			</f>
			<haxe_doc>Read and `len` bytes as a string.</haxe_doc>
		</readString>
		<haxe_doc>An Input is an abstract reader. See other classes in the `haxe.io` package
	for several possible implementations.

	All functions which read data throw `Eof` when the end of the stream
	is reached.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.io.BytesInput" params="" file="/usr/local/lib/haxe/std/haxe/io/BytesInput.hx">
		<extends path="haxe.io.Input"/>
		<b><t path="haxe.io.BytesData"/></b>
		<pos><x path="Int"/></pos>
		<len><x path="Int"/></len>
		<totlen><x path="Int"/></totlen>
		<readByte public="1" set="method" line="96" override="1">
			<f a=""><x path="Int"/></f>
			<meta><m n=":has_untyped"/></meta>
		</readByte>
		<readBytes public="1" set="method" line="119" override="1"><f a="buf:pos:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></readBytes>
		<new public="1" set="method" line="39"><f a="b:?pos:?len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.Output" params="" file="/usr/local/lib/haxe/std/haxe/io/Output.hx">
		<haxe_doc>An Output is an abstract write. A specific output implementation will only
	have to override the `writeByte` and maybe the `write`, `flush` and `close`
	methods. See `File.write` and `String.write` for two ways of creating an
	Output.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<enum path="haxe.io.Encoding" params="" file="/usr/local/lib/haxe/std/haxe/io/Encoding.hx">
		<UTF8/>
		<RawNative><haxe_doc>Output the string the way the platform represent it in memory. This is the most efficient but is platform-specific</haxe_doc></RawNative>
		<haxe_doc>String binary encoding supported by Haxe I/O</haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="haxe.io.Eof" params="" file="/usr/local/lib/haxe/std/haxe/io/Eof.hx">
		<toString set="method" line="32">
			<f a=""><c path="String"/></f>
			<meta><m n=":ifFeature"><e>"haxe.io.Eof.*"</e></m></meta>
		</toString>
		<new public="1" set="method" line="29"><f a=""><x path="Void"/></f></new>
		<haxe_doc>This exception is raised when reading while data is no longer available in the `haxe.io.Input`.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<enum path="haxe.io.Error" params="" file="/usr/local/lib/haxe/std/haxe/io/Error.hx">
		<Blocked><haxe_doc>The IO is set into nonblocking mode and some data cannot be read or written</haxe_doc></Blocked>
		<Overflow><haxe_doc>An integer value is outside its allowed range</haxe_doc></Overflow>
		<OutsideBounds><haxe_doc>An operation on Bytes is outside of its valid range</haxe_doc></OutsideBounds>
		<Custom a="e">
			<d/>
			<haxe_doc>Other errors</haxe_doc>
		</Custom>
		<haxe_doc>The possible IO errors that can occur</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="haxe.io.Path" params="" file="/usr/local/lib/haxe/std/haxe/io/Path.hx">
		<withoutDirectory public="1" set="method" line="134" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String representation of `path` without the directory.

		If `path` is `null`, the result is unspecified.</haxe_doc>
		</withoutDirectory>
		<directory public="1" set="method" line="147" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the directory of `path`.

		If the directory is `null`, the empty String `""` is returned.

		If `path` is `null`, the result is unspecified.</haxe_doc>
		</directory>
		<dir public="1">
			<x path="Null"><c path="String"/></x>
			<haxe_doc>The directory.

		This is the leading part of the path that is not part of the file name
		and the extension.

		Does not end with a `/` or `\` separator.

		If the path has no directory, the value is `null`.</haxe_doc>
		</dir>
		<file public="1">
			<c path="String"/>
			<haxe_doc>The file name.

		This is the part of the part between the directory and the extension.

		If there is no file name, e.g. for `".htaccess"` or `"/dir/"`, the value
		is the empty String `""`.</haxe_doc>
		</file>
		<ext public="1">
			<x path="Null"><c path="String"/></x>
			<haxe_doc>The file extension.

		It is separated from the file name by a dot. This dot is not part of
		the extension.

		If the path has no extension, the value is `null`.</haxe_doc>
		</ext>
		<backslash public="1">
			<x path="Bool"/>
			<haxe_doc>`true` if the last directory separator is a backslash, `false` otherwise.</haxe_doc>
		</backslash>
		<toString public="1" set="method" line="114">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String representation of `this` path.

		If `this.backslash` is `true`, backslash is used as directory separator,
		otherwise slash is used. This only affects the separator between
		`this.dir` and `this.file`.

		If `this.directory` or `this.extension` is `null`, their representation
		is the empty String `""`.</haxe_doc>
		</toString>
		<new public="1" set="method" line="76">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new `Path` instance by parsing `path`.

		Path information can be retrieved by accessing the `dir`, `file` and `ext`
		properties.</haxe_doc>
		</new>
		<haxe_doc>This class provides a convenient way of working with paths. It supports the
	common path formats:

	- `directory1/directory2/filename.extension`
	- `directory1\directory2\filename.extension`</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.iterators.ArrayIterator" params="T" file="/usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx">
		<array final="1"><c path="Array"><c path="haxe.iterators.ArrayIterator.T"/></c></array>
		<current expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</current>
		<hasNext public="1" get="inline" set="null" line="43">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>See `Iterator.hasNext`</haxe_doc>
		</hasNext>
		<next public="1" get="inline" set="null" line="51">
			<f a=""><c path="haxe.iterators.ArrayIterator.T"/></f>
			<haxe_doc>See `Iterator.next`</haxe_doc>
		</next>
		<new public="1" get="inline" set="null" line="35">
			<f a="array">
				<c path="Array"><c path="haxe.iterators.ArrayIterator.T"/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>Create a new `ArrayIterator`.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[This iterator is used only when `Array<T>` is passed to `Iterable<T>`]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.macro.IncludePosition" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" module="haxe.macro.Compiler">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="haxe.macro._Compiler.IncludePosition_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" private="1" module="haxe.macro.Compiler" final="1"><meta>
	<m n=":keep"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.macro.NullSafetyMode" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" module="haxe.macro.Compiler">
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="haxe.macro._Compiler.NullSafetyMode_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" private="1" module="haxe.macro.Compiler" final="1"><meta>
	<m n=":keep"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="haxe.macro.Position" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<min>
				<x path="Int"/>
				<haxe_doc>Position of the first character.</haxe_doc>
			</min>
			<max>
				<x path="Int"/>
				<haxe_doc>Position of the last character.</haxe_doc>
			</max>
			<file>
				<c path="String"/>
				<haxe_doc>Reference to the filename.</haxe_doc>
			</file>
		</a>
		<haxe_doc>Represents a position in a file.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Expr" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the expression.</haxe_doc>
			</pos>
			<expr>
				<e path="haxe.macro.ExprDef"/>
				<haxe_doc>The expression kind.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a node in the AST.
	@see https://haxe.org/manual/macro-reification-expression.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ExprOf" params="T" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<t path="haxe.macro.Expr"/>
		<haxe_doc>Represents a AST node identical to `Expr`, but it allows constraining the
	type of accepted expressions.
	@see https://haxe.org/manual/macro-ExprOf.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Case" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<values>
				<c path="Array"><t path="haxe.macro.Expr"/></c>
				<haxe_doc>The value expressions of the case.</haxe_doc>
			</values>
			<guard>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional guard expressions of the case, if available.</haxe_doc>
			</guard>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the case, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a switch case.
	@see https://haxe.org/manual/expression-switch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Var" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The type-hint of the variable, if available.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the variable.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Metadata associatied with the variable, if available.</haxe_doc>
			</meta>
			<isFinal>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the variable can be assigned to.</haxe_doc>
			</isFinal>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the variable, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a variable in the AST.
	@see https://haxe.org/manual/expression-var.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Catch" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The type of the catch.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the catch variable.</haxe_doc>
			</name>
			<expr>
				<t path="haxe.macro.Expr"/>
				<haxe_doc>The expression of the catch.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a catch in the AST.
	@see https://haxe.org/manual/expression-try-catch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ObjectField" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<quotes>
				<x path="Null"><e path="haxe.macro.QuoteStatus"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>How the field name is quoted.</haxe_doc>
			</quotes>
			<field>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</field>
			<expr>
				<t path="haxe.macro.Expr"/>
				<haxe_doc>The field expression.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents the field of an object declaration.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypePath" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<sub>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Sub is set on module sub-type access:
		`pack.Module.Type` has `name = "Module"`, `sub = "Type"`, if available.</haxe_doc>
			</sub>
			<params>
				<x path="Null"><c path="Array"><e path="haxe.macro.TypeParam"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Optional parameters of the type path.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>Represents the package of the type path.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type path.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a type path in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeParamDecl" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the type parameter.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type parameter.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the type parameter.</haxe_doc>
			</meta>
			<constraints>
				<x path="Null"><c path="Array"><e path="haxe.macro.ComplexType"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional constraints of the type parameter.</haxe_doc>
			</constraints>
		</a>
		<haxe_doc>Represents a type parameter declaration in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Function" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<ret>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The return type-hint of the function, if available.</haxe_doc>
			</ret>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>An optional list of function parameter type declarations.</haxe_doc>
			</params>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the function body, if available.</haxe_doc>
			</expr>
			<args>
				<c path="Array"><t path="haxe.macro.FunctionArg"/></c>
				<haxe_doc>A list of function arguments.</haxe_doc>
			</args>
		</a>
		<haxe_doc>Represents a function in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.FunctionArg" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<value>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional value of the function argument, if available.</haxe_doc>
			</value>
			<type>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The type-hint of the function argument, if available.</haxe_doc>
			</type>
			<opt>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the function argument is optional.</haxe_doc>
			</opt>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the function argument.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the function argument.</haxe_doc>
			</meta>
		</a>
		<haxe_doc>Represents a function argument in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.MetadataEntry" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the metadata entry.</haxe_doc>
			</pos>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.Expr"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the metadata entry.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the metadata entry.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a metadata entry in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Metadata" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<c path="Array"><t path="haxe.macro.MetadataEntry"/></c>
		<haxe_doc>Represents metadata in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Field" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the field.</haxe_doc>
			</pos>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the field.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.FieldType"/>
				<haxe_doc>The kind of the field.</haxe_doc>
			</kind>
			<doc>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The documentation of the field, if available. If the field has no
		documentation, the value is `null`.</haxe_doc>
			</doc>
			<access>
				<x path="Null"><c path="Array"><e path="haxe.macro.Access"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The access modifiers of the field. By default fields have private access.
		@see https://haxe.org/manual/class-field-access-modifier.html</haxe_doc>
			</access>
		</a>
		<haxe_doc>Represents a field in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeDefinition" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position to the type definition.</haxe_doc>
			</pos>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The parameter type declarations of the type definition.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type definition.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type definition.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the type definition.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.TypeDefKind"/>
				<haxe_doc>The kind of the type definition.</haxe_doc>
			</kind>
			<isExtern>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<fields>
				<c path="Array"><t path="haxe.macro.Field"/></c>
				<haxe_doc>The fields of the type definition.</haxe_doc>
			</fields>
			<doc>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The documentation of the type, if available. If the type has no
		documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>Represents a type definition.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ImportExpr" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<path>
				<c path="Array"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<name><c path="String"/></name>
</a></c>
				<haxe_doc>The path to the import expression.</haxe_doc>
			</path>
			<mode>
				<e path="haxe.macro.ImportMode"/>
				<haxe_doc>The mode of the import expression.</haxe_doc>
			</mode>
		</a>
		<haxe_doc>Represents the import expression.</haxe_doc>
	</typedef>
	<enum path="haxe.zip.ExtraField" params="" file="/usr/local/lib/haxe/std/haxe/zip/Entry.hx" module="haxe.zip.Entry">
		<FUnknown a="tag:bytes">
			<x path="Int"/>
			<c path="haxe.io.Bytes"/>
		</FUnknown>
		<FInfoZipUnicodePath a="name:crc">
			<c path="String"/>
			<x path="Int"/>
		</FInfoZipUnicodePath>
		<FUtf8/>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<typedef path="haxe.zip.Entry" params="" file="/usr/local/lib/haxe/std/haxe/zip/Entry.hx"><a>
	<fileTime><c path="Date"/></fileTime>
	<fileSize><x path="Int"/></fileSize>
	<fileName><c path="String"/></fileName>
	<extraFields>
		<x path="Null"><c path="haxe.ds.List"><e path="haxe.zip.ExtraField"/></c></x>
		<meta><m n=":optional"/></meta>
	</extraFields>
	<dataSize><x path="Int"/></dataSize>
	<data><x path="Null"><c path="haxe.io.Bytes"/></x></data>
	<crc32><x path="Null"><x path="Int"/></x></crc32>
	<compressed><x path="Bool"/></compressed>
</a></typedef>
	<enum path="haxe.zip.Huffman" params="" file="/usr/local/lib/haxe/std/haxe/zip/Huffman.hx">
		<Found a="i"><x path="Int"/></Found>
		<NeedBit a="left:right">
			<e path="haxe.zip.Huffman"/>
			<e path="haxe.zip.Huffman"/>
		</NeedBit>
		<NeedBits a="n:table">
			<x path="Int"/>
			<c path="Array"><e path="haxe.zip.Huffman"/></c>
		</NeedBits>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="haxe.zip.HuffTools" params="" file="/usr/local/lib/haxe/std/haxe/zip/Huffman.hx" module="haxe.zip.Huffman">
		<treeDepth set="method" line="34"><f a="t">
	<e path="haxe.zip.Huffman"/>
	<x path="Int"/>
</f></treeDepth>
		<treeCompress set="method" line="45"><f a="t">
	<e path="haxe.zip.Huffman"/>
	<e path="haxe.zip.Huffman"/>
</f></treeCompress>
		<treeWalk set="method" line="62"><f a="table:p:cd:d:t">
	<c path="Array"><e path="haxe.zip.Huffman"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<e path="haxe.zip.Huffman"/>
	<x path="Void"/>
</f></treeWalk>
		<treeMake set="method" line="75"><f a="bits:maxbits:v:len">
	<c path="haxe.ds.IntMap"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<e path="haxe.zip.Huffman"/>
</f></treeMake>
		<make public="1" set="method" line="86"><f a="lengths:pos:nlengths:maxbits">
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<e path="haxe.zip.Huffman"/>
</f></make>
		<new public="1" set="method" line="32"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.zip._InflateImpl.Window" params="" file="/usr/local/lib/haxe/std/haxe/zip/InflateImpl.hx" private="1" module="haxe.zip.InflateImpl">
		<buffer public="1"><c path="haxe.io.Bytes"/></buffer>
		<pos public="1"><x path="Int"/></pos>
		<crc><c path="haxe.crypto.Adler32"/></crc>
		<slide public="1" set="method" line="44"><f a=""><x path="Void"/></f></slide>
		<addBytes public="1" set="method" line="53"><f a="b:p:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></addBytes>
		<addByte public="1" set="method" line="60"><f a="c">
	<x path="Int"/>
	<x path="Void"/>
</f></addByte>
		<getLastChar public="1" set="method" line="67"><f a=""><x path="Int"/></f></getLastChar>
		<available public="1" set="method" line="71"><f a=""><x path="Int"/></f></available>
		<checksum public="1" set="method" line="75"><f a=""><c path="haxe.crypto.Adler32"/></f></checksum>
		<new public="1" set="method" line="37"><f a="hasCrc">
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<enum path="haxe.zip._InflateImpl.State" params="" file="/usr/local/lib/haxe/std/haxe/zip/InflateImpl.hx" private="1" module="haxe.zip.InflateImpl">
		<Head/>
		<Block/>
		<CData/>
		<Flat/>
		<Crc/>
		<Dist/>
		<DistOne/>
		<Done/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="haxe.zip.InflateImpl" params="" file="/usr/local/lib/haxe/std/haxe/zip/InflateImpl.hx">
		<LEN_EXTRA_BITS_TBL expr="[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1]" line="97" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1]</e></m></meta>
		</LEN_EXTRA_BITS_TBL>
		<LEN_BASE_VAL_TBL expr="[3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258]" line="100" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258]</e></m></meta>
		</LEN_BASE_VAL_TBL>
		<DIST_EXTRA_BITS_TBL expr="[0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1]" line="103" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1]</e></m></meta>
		</DIST_EXTRA_BITS_TBL>
		<DIST_BASE_VAL_TBL expr="[1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577]" line="106" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577]</e></m></meta>
		</DIST_BASE_VAL_TBL>
		<CODE_LENGTHS_POS expr="[16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]" line="109" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]</e></m></meta>
		</CODE_LENGTHS_POS>
		<FIXED_HUFFMAN expr="null" line="127" static="1">
			<e path="haxe.zip.Huffman"/>
			<meta><m n=":value"><e>null</e></m></meta>
		</FIXED_HUFFMAN>
		<nbits><x path="Int"/></nbits>
		<bits><x path="Int"/></bits>
		<state><e path="haxe.zip._InflateImpl.State"/></state>
		<isFinal><x path="Bool"/></isFinal>
		<huffman><e path="haxe.zip.Huffman"/></huffman>
		<huffdist><x path="Null"><e path="haxe.zip.Huffman"/></x></huffdist>
		<htools><c path="haxe.zip.HuffTools"/></htools>
		<len><x path="Int"/></len>
		<dist><x path="Int"/></dist>
		<needed><x path="Int"/></needed>
		<output><c path="haxe.io.Bytes"/></output>
		<outpos><x path="Int"/></outpos>
		<input><c path="haxe.io.Input"/></input>
		<lengths><c path="Array"><x path="Int"/></c></lengths>
		<window><c path="haxe.zip._InflateImpl.Window"/></window>
		<buildFixedHuffman set="method" line="149"><f a=""><e path="haxe.zip.Huffman"/></f></buildFixedHuffman>
		<readBytes public="1" set="method" line="159"><f a="b:pos:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></readBytes>
		<getBits set="method" line="168"><f a="n">
	<x path="Int"/>
	<x path="Int"/>
</f></getBits>
		<getBit set="method" line="179"><f a=""><x path="Bool"/></f></getBit>
		<getRevBits set="method" line="190"><f a="n">
	<x path="Int"/>
	<x path="Int"/>
</f></getRevBits>
		<resetBits set="method" line="199"><f a=""><x path="Void"/></f></resetBits>
		<addBytes set="method" line="204"><f a="b:p:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></addBytes>
		<addByte set="method" line="211"><f a="b">
	<x path="Int"/>
	<x path="Void"/>
</f></addByte>
		<addDistOne set="method" line="218"><f a="n">
	<x path="Int"/>
	<x path="Void"/>
</f></addDistOne>
		<addDist set="method" line="224"><f a="d:len">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></addDist>
		<applyHuffman set="method" line="228"><f a="h">
	<e path="haxe.zip.Huffman"/>
	<x path="Int"/>
</f></applyHuffman>
		<inflateLengths set="method" line="236"><f a="a:max">
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></inflateLengths>
		<inflateLoop set="method" line="268"><f a=""><x path="Bool"/></f></inflateLoop>
		<new public="1" set="method" line="129">
			<f a="i:?header:?crc" v=":true:true">
				<c path="haxe.io.Input"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ crc : true, header : true }</e></m></meta>
		</new>
		<haxe_doc>A pure Haxe implementation of the ZLIB Inflate algorithm which allows reading compressed data without any platform-specific support.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.zip.Reader" params="" file="/projects/May2019/May2020/lime/src/haxe/zip/Reader.hx">
		<readZip public="1" set="method" line="192" static="1"><f a="i">
	<c path="haxe.io.Input"/>
	<t path="List"><t path="haxe.zip.Entry"/></t>
</f></readZip>
		<unzip public="1" set="method" line="198" static="1"><f a="f">
	<t path="haxe.zip.Entry"/>
	<x path="Null"><c path="haxe.io.Bytes"/></x>
</f></unzip>
		<i><c path="haxe.io.Input"/></i>
		<readZipDate set="method" line="37"><f a=""><c path="Date"/></f></readZipDate>
		<readExtraFields set="method" line="50"><f a="length">
	<x path="Int"/>
	<c path="haxe.ds.List"><e path="haxe.zip.ExtraField"/></c>
</f></readExtraFields>
		<readEntryHeader public="1" set="method" line="84"><f a=""><t path="haxe.zip.Entry"/></f></readEntryHeader>
		<read public="1" set="method" line="121"><f a=""><t path="List"><t path="haxe.zip.Entry"/></t></f></read>
		<new public="1" set="method" line="32"><f a="i">
	<c path="haxe.io.Input"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="kitGL.glLime.Pos_Col" params="" file="src/kitGL/glLime/BufferGL.hx" module="kitGL.glLime.BufferGL"><a>
	<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
	<col><t path="lime.graphics.opengl.GLBuffer"/></col>
</a></typedef>
	<class path="kitGL.glLime.BufferGL" params="" file="src/kitGL/glLime/BufferGL.hx">
		<bufferSetup_ public="1" expr="bufferSetup">
			<f a="gl:program:data:?isDynamic">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>bufferSetup</e></m></meta>
		</bufferSetup_>
		<interleaveXY_RGB_ public="1" expr="interleaveXY_RGB">
			<f a="gl:program:data:inPosName:inColName:?isDynamic">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>interleaveXY_RGB</e></m></meta>
		</interleaveXY_RGB_>
		<interleaveXYZ_RGBA_ public="1" expr="interleaveXYZ_RGBA">
			<f a="gl:program:data:inPosName:inColName:?isDynamic">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>interleaveXYZ_RGBA</e></m></meta>
		</interleaveXYZ_RGBA_>
		<colorsXYZ_RGBA_ public="1" expr="colorsXYZ_RGBA">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.glLime.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXYZ_RGBA</e></m></meta>
		</colorsXYZ_RGBA_>
		<colorsXY_RGBA_ public="1" expr="colorsXY_RGBA">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.glLime.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXY_RGBA</e></m></meta>
		</colorsXY_RGBA_>
		<colorsXYZ_RGB_ public="1" expr="colorsXYZ_RGB">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.glLime.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXYZ_RGB</e></m></meta>
		</colorsXYZ_RGB_>
		<colorsXY_RGB_ public="1" expr="colorsXY_RGB">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.glLime.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXY_RGB</e></m></meta>
		</colorsXY_RGB_>
		<posColors_ public="1" expr="posColors">
			<f a="gl:program:positions:colors:inPosName:inColName:noPos:noCols">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="kitGL.glLime.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>posColors</e></m></meta>
		</posColors_>
		<new public="1" set="method" line="160">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.glLime._BufferGL.BufferGL_Fields_" params="" file="src/kitGL/glLime/BufferGL.hx" private="1" module="kitGL.glLime.BufferGL" final="1">
		<bufferSetup public="1" get="inline" set="null" line="13" static="1">
			<f a="gl:program:data:?isDynamic" v=":::false">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ isDynamic : false }</e></m>
			</meta>
		</bufferSetup>
		<interleaveXY_RGB public="1" get="inline" set="null" line="27" static="1">
			<f a="gl:program:data:inPosName:inColName:?isDynamic" v=":::::false">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>{ isDynamic : false }</e></m></meta>
		</interleaveXY_RGB>
		<interleaveXYZ_RGBA public="1" get="inline" set="null" line="58" static="1">
			<f a="gl:program:data:inPosName:inColName:?isDynamic" v=":::::false">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>{ isDynamic : false }</e></m></meta>
		</interleaveXYZ_RGBA>
		<colorsXYZ_RGBA public="1" get="inline" set="null" line="89" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.utils.Float32Array"/>
	<x path="lime.utils.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
		<col><t path="lime.graphics.opengl.GLBuffer"/></col>
	</a>
</f></colorsXYZ_RGBA>
		<colorsXY_RGBA public="1" get="inline" set="null" line="98" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.utils.Float32Array"/>
	<x path="lime.utils.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
		<col><t path="lime.graphics.opengl.GLBuffer"/></col>
	</a>
</f></colorsXY_RGBA>
		<colorsXYZ_RGB public="1" get="inline" set="null" line="107" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.utils.Float32Array"/>
	<x path="lime.utils.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
		<col><t path="lime.graphics.opengl.GLBuffer"/></col>
	</a>
</f></colorsXYZ_RGB>
		<colorsXY_RGB public="1" get="inline" set="null" line="116" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.utils.Float32Array"/>
	<x path="lime.utils.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
		<col><t path="lime.graphics.opengl.GLBuffer"/></col>
	</a>
</f></colorsXY_RGB>
		<posColors public="1" get="inline" set="null" line="125" static="1">
			<f a="gl:program:positions:colors:inPosName:inColName:?noPos:?noCols" v="::::::3:4">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<a>
					<pos><t path="lime.graphics.opengl.GLBuffer"/></pos>
					<col><t path="lime.graphics.opengl.GLBuffer"/></col>
				</a>
			</f>
			<meta><m n=":value"><e>{ noCols : 4, noPos : 3 }</e></m></meta>
		</posColors>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="kitGL.glLime.ColorPositions" params="" file="src/kitGL/glLime/ColorPositions.hx">
		<tri2D_ public="1" expr="tri2D">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>tri2D</e></m></meta>
		</tri2D_>
		<positions_ public="1" expr="positions">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>positions</e></m></meta>
		</positions_>
		<orthogPositions_ public="1" expr="orthogPositions">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>orthogPositions</e></m></meta>
		</orthogPositions_>
		<colors_ public="1" expr="colors">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>colors</e></m></meta>
		</colors_>
		<positions3_ public="1" expr="positions3">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>positions3</e></m></meta>
		</positions3_>
		<colors3_ public="1" expr="colors3">
			<f a=""><x path="lime.utils.Float32Array"/></f>
			<meta><m n=":value"><e>colors3</e></m></meta>
		</colors3_>
		<new public="1" set="method" line="72">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.glLime._ColorPositions.ColorPositions_Fields_" params="" file="src/kitGL/glLime/ColorPositions.hx" private="1" module="kitGL.glLime.ColorPositions" final="1">
		<tri2D public="1" get="inline" set="null" line="4" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></tri2D>
		<positions public="1" get="inline" set="null" line="13" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></positions>
		<orthogPositions public="1" get="inline" set="null" line="21" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></orthogPositions>
		<colors public="1" get="inline" set="null" line="31" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></colors>
		<positions3 public="1" get="inline" set="null" line="40" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></positions3>
		<colors3 public="1" get="inline" set="null" line="57" static="1"><f a=""><x path="lime.utils.Float32Array"/></f></colors3>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="kitGL.glLime.TDataGL" params="" file="src/kitGL/glLime/DataGL.hx" module="kitGL.glLime.DataGL"><a>
	<get_size set="method"><f a=""><x path="Int"/></f></get_size>
	<get_data set="method"><f a=""><x path="lime.utils.Float32Array"/></f></get_data>
</a></typedef>
	<abstract path="kitGL.glLime.DataGL" params="" file="src/kitGL/glLime/DataGL.hx">
		<from><icast><t path="kitGL.glLime.TDataGL"/></icast></from>
		<this><t path="kitGL.glLime.TDataGL"/></this>
		<to><icast><t path="kitGL.glLime.TDataGL"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="kitGL.glLime._DataGL.DataGL_Impl_" params="" file="src/kitGL/glLime/DataGL.hx" private="1" module="kitGL.glLime.DataGL" final="1">
	<_new public="1" get="inline" set="null" line="9" static="1">
		<f a="tDataGL">
			<t path="kitGL.glLime.TDataGL"/>
			<x path="kitGL.glLime.DataGL"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<data public="1" get="accessor" set="null" static="1">
		<x path="lime.utils.Float32Array"/>
		<meta><m n=":impl"/></meta>
	</data>
	<get_data get="inline" set="null" line="13" static="1">
		<f a="this">
			<t path="kitGL.glLime.TDataGL"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_data>
	<size public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</size>
	<get_size get="inline" set="null" line="17" static="1">
		<f a="this">
			<t path="kitGL.glLime.TDataGL"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_size>
</class></impl>
	</abstract>
	<class path="kitGL.glLime._DataGL.DataGL_Impl_" params="" file="src/kitGL/glLime/DataGL.hx" private="1" module="kitGL.glLime.DataGL" final="1">
		<_new public="1" get="inline" set="null" line="9" static="1">
			<f a="tDataGL">
				<t path="kitGL.glLime.TDataGL"/>
				<x path="kitGL.glLime.DataGL"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<data public="1" get="accessor" set="null" static="1">
			<x path="lime.utils.Float32Array"/>
			<meta><m n=":impl"/></meta>
		</data>
		<get_data get="inline" set="null" line="13" static="1">
			<f a="this">
				<t path="kitGL.glLime.TDataGL"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_data>
		<size public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</size>
		<get_size get="inline" set="null" line="17" static="1">
			<f a="this">
				<t path="kitGL.glLime.TDataGL"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_size>
	</class>
	<class path="kitGL.glLime.HelpGL" params="" file="src/kitGL/glLime/HelpGL.hx">
		<clearAll_ public="1" expr="clearAll">
			<f a="gl:width:height">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>clearAll</e></m></meta>
		</clearAll_>
		<programSetup_ public="1" expr="programSetup">
			<f a="gl:strVertex:strFragment">
				<x path="lime.graphics.WebGLRenderContext"/>
				<c path="String"/>
				<c path="String"/>
				<x path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":value"><e>programSetup</e></m></meta>
		</programSetup_>
		<shaderSetup_ public="1" expr="shaderSetup">
			<f a="gl:shaderType:str">
				<x path="lime.graphics.WebGLRenderContext"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":value"><e>shaderSetup</e></m></meta>
		</shaderSetup_>
		<new public="1" set="method" line="48">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.glLime._HelpGL.HelpGL_Fields_" params="" file="src/kitGL/glLime/HelpGL.hx" private="1" module="kitGL.glLime.HelpGL" final="1">
		<clearAll public="1" get="inline" set="null" line="9" static="1"><f a="gl:width:height">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearAll>
		<programSetup public="1" get="inline" set="null" line="15" static="1"><f a="gl:strVertex:strFragment">
	<x path="lime.graphics.WebGLRenderContext"/>
	<c path="String"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLProgram"/>
</f></programSetup>
		<shaderSetup public="1" get="inline" set="null" line="35" static="1"><f a="gl:shaderType:str">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></shaderSetup>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="kitGL.glLime.setup.IAppGL" params="" file="src/kitGL/glLime/setup/IAppGL.hx" interface="1">
		<update public="1" set="method"><f a=""><x path="Void"/></f></update>
		<setup public="1" set="method"><f a="gl">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Void"/>
</f></setup>
		<draw public="1" set="method"><f a=""><x path="Void"/></f></draw>
		<render public="1" set="method"><f a="gl">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Void"/>
</f></render>
		<renderDraw public="1" set="method"><f a=""><x path="Void"/></f></renderDraw>
	</class>
	<class path="kitGL.glLime.Ply" params="" file="src/kitGL/glLime/Ply.hx">
		<implements path="kitGL.glLime.setup.IAppGL"/>
		<program><x path="lime.graphics.opengl.GLProgram"/></program>
		<dataGL public="1"><x path="kitGL.glLime.DataGL"/></dataGL>
		<width public="1"><x path="Int"/></width>
		<height public="1"><x path="Int"/></height>
		<buf public="1"><t path="lime.graphics.opengl.GLBuffer"/></buf>
		<update public="1" set="method" line="30"><f a=""><x path="Void"/></f></update>
		<setup public="1" get="inline" set="null" line="32"><f a="gl">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Void"/>
</f></setup>
		<draw public="1" set="method" line="42"><f a=""><x path="Void"/></f></draw>
		<render public="1" get="inline" set="null" line="45"><f a="gl">
	<x path="lime.graphics.WebGLRenderContext"/>
	<x path="Void"/>
</f></render>
		<renderDraw public="1" set="method" line="55"><f a=""><x path="Void"/></f></renderDraw>
		<new public="1" set="method" line="24"><f a="width_:height_">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="kitGL.glLime.Shader" params="" file="src/kitGL/glLime/Shaders.hx" module="kitGL.glLime.Shaders">
		<vertexSimpleColor_ public="1" expr="vertexSimpleColor">
			<c path="String"/>
			<meta><m n=":value"><e>vertexSimpleColor</e></m></meta>
		</vertexSimpleColor_>
		<fragmentSimpleColor_ public="1" expr="fragmentSimpleColor">
			<c path="String"/>
			<meta><m n=":value"><e>fragmentSimpleColor</e></m></meta>
		</fragmentSimpleColor_>
		<vertexString0_ public="1" expr="vertexString0">
			<c path="String"/>
			<meta><m n=":value"><e>vertexString0</e></m></meta>
		</vertexString0_>
		<fragmentString0_ public="1" expr="fragmentString0">
			<c path="String"/>
			<meta><m n=":value"><e>fragmentString0</e></m></meta>
		</fragmentString0_>
		<vertexColor_ public="1" expr="vertexColor">
			<c path="String"/>
			<meta><m n=":value"><e>vertexColor</e></m></meta>
		</vertexColor_>
		<fragmentColor_ public="1" expr="fragmentColor">
			<c path="String"/>
			<meta><m n=":value"><e>fragmentColor</e></m></meta>
		</fragmentColor_>
		<vertexTexture_ public="1" expr="vertexTexture">
			<c path="String"/>
			<meta><m n=":value"><e>vertexTexture</e></m></meta>
		</vertexTexture_>
		<fragmentTexture_ public="1" expr="fragmentTexture">
			<c path="String"/>
			<meta><m n=":value"><e>fragmentTexture</e></m></meta>
		</fragmentTexture_>
		<new public="1" set="method" line="102">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.glLime._Shaders.Shaders_Fields_" params="" file="src/kitGL/glLime/Shaders.hx" private="1" module="kitGL.glLime.Shaders" final="1">
		<vertexSimpleColor public="1" get="inline" set="null" expr="&quot;attribute vec2 vertexPosition;&quot; + &quot;attribute vec3 vertexColor;&quot; + &quot;varying vec3 vColor;&quot; + &quot;void main() {&quot; + &quot;gl_Position = vec4(vertexPosition, 0.0, 1.0);&quot; + &quot;vColor = vertexColor;&quot; + &quot;}&quot;" line="10" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"attribute vec2 vertexPosition;" + "attribute vec3 vertexColor;" + "varying vec3 vColor;" + "void main() {" + "gl_Position = vec4(vertexPosition, 0.0, 1.0);" + "vColor = vertexColor;" + "}"</e></m></meta>
		</vertexSimpleColor>
		<fragmentSimpleColor public="1" get="inline" set="null" expr="&quot;varying vec3 vColor;&quot; + &quot;void main() {&quot; + &quot;gl_FragColor = vec4( vColor, 1.0 );&quot; + &quot;}&quot;" line="23" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"varying vec3 vColor;" + "void main() {" + "gl_FragColor = vec4( vColor, 1.0 );" + "}"</e></m></meta>
		</fragmentSimpleColor>
		<vertexString0 public="1" get="inline" set="null" expr="&quot;attribute vec3 vertexPosition;&quot; + &quot;attribute vec4 vertexColor;&quot; + &quot;varying vec4 vcol;&quot; + &quot;void main(void) {&quot; + &quot; gl_Position = vec4(vertexPosition, 1.0);&quot; + &quot; vcol = vertexColor;&quot; + &quot;}&quot;" line="34" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"attribute vec3 vertexPosition;" + "attribute vec4 vertexColor;" + "varying vec4 vcol;" + "void main(void) {" + " gl_Position = vec4(vertexPosition, 1.0);" + " vcol = vertexColor;" + "}"</e></m></meta>
		</vertexString0>
		<fragmentString0 public="1" get="inline" set="null" expr="&quot;varying vec4 vcol;&quot; + &quot;void main(void) {&quot; + &quot; gl_FragColor = vcol;&quot; + &quot;}&quot;" line="47" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"varying vec4 vcol;" + "void main(void) {" + " gl_FragColor = vcol;" + "}"</e></m></meta>
		</fragmentString0>
		<vertexColor public="1" get="inline" set="null" expr="&quot;attribute vec3 vertexPosition;&quot; + &quot;attribute vec4 vertexColor;&quot; + &quot;varying vec4 vcol;&quot; + &quot;uniform mat4 modelViewProjection;&quot; + &quot;void main(void) {&quot; + &quot; gl_Position = modelViewProjection * vec4(vertexPosition, 1.);&quot; + &quot; vcol = vertexColor;&quot; + &quot;}&quot;" line="58" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"attribute vec3 vertexPosition;" + "attribute vec4 vertexColor;" + "varying vec4 vcol;" + "uniform mat4 modelViewProjection;" + "void main(void) {" + " gl_Position = modelViewProjection * vec4(vertexPosition, 1.);" + " vcol = vertexColor;" + "}"</e></m></meta>
		</vertexColor>
		<fragmentColor public="1" get="inline" set="null" expr="&quot;varying vec4 vcol;&quot; + &quot;void main(void) {&quot; + &quot;gl_FragColor = vcol;&quot; + &quot;}&quot;" line="72" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"varying vec4 vcol;" + "void main(void) {" + "gl_FragColor = vcol;" + "}"</e></m></meta>
		</fragmentColor>
		<vertexTexture public="1" get="inline" set="null" expr="&quot;attribute vec2 aVertexPosition;&quot; + &quot;attribute vec2 aTexCoord;&quot; + &quot;uniform mat4 uMatrix;&quot; + &quot;varying vec2 vTexCoord;&quot; + &quot;void main (void) {&quot; + &quot;vTexCoord = aTexCoord;&quot; + &quot;gl_Position = uMatrix * vec4 (aVertexPosition, 0.0, 1.0);&quot; + &quot;}&quot;" line="83" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"attribute vec2 aVertexPosition;" + "attribute vec2 aTexCoord;" + "uniform mat4 uMatrix;" + "varying vec2 vTexCoord;" + "void main (void) {" + "vTexCoord = aTexCoord;" + "gl_Position = uMatrix * vec4 (aVertexPosition, 0.0, 1.0);" + "}"</e></m></meta>
		</vertexTexture>
		<fragmentTexture public="1" get="inline" set="null" expr="&quot;varying vec2 vTexCoord;&quot; + &quot;uniform sampler2D uImage0;&quot; + &quot;void main (void) {&quot; + &quot;gl_FragColor = texture2D( uImage0, vTexCoord );&quot; + &quot;}&quot;" line="96" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"varying vec2 vTexCoord;" + "uniform sampler2D uImage0;" + "void main (void) {" + "gl_FragColor = texture2D( uImage0, vTexCoord );" + "}"</e></m></meta>
		</fragmentTexture>
	</class>
	<class path="lime.app.IModule" params="" file="/projects/May2019/May2020/lime/src/lime/app/IModule.hx" interface="1">
		<__registerLimeModule set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":dox"><e>show</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__registerLimeModule>
		<__unregisterLimeModule set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":dox"><e>show</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__unregisterLimeModule>
	</class>
	<class path="lime.app.Module" params="" file="/projects/May2019/May2020/lime/src/lime/app/Module.hx">
		<implements path="lime.app.IModule"/>
		<onExit public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>Exit events are dispatched when the application is exiting</haxe_doc>
		</onExit>
		<__registerLimeModule set="method" line="27">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerLimeModule>
		<__unregisterLimeModule set="method" line="29">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__unregisterLimeModule>
		<new public="1" set="method" line="25">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new `Module` instance</haxe_doc>
		</new>
		<haxe_doc>`Module` instances can be added to a running `Application`,
	simplifying support for adding new components, such as a renderer,
	input handler or higher-level framework.</haxe_doc>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.backend.native.NativeCFFI" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeCFFI.hx">
		<lime_application_create expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_create&quot;, &quot;o&quot;, false))" line="354" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_application_create", "o", false))]]></e></m></meta>
		</lime_application_create>
		<lime_application_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_event_manager_register&quot;, &quot;oov&quot;, false))" line="355" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_application_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_application_event_manager_register>
		<lime_application_exec expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_exec&quot;, &quot;oi&quot;, false))" line="357" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_application_exec", "oi", false))]]></e></m></meta>
		</lime_application_exec>
		<lime_application_init expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_init&quot;, &quot;ov&quot;, false))" line="358" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_application_init", "ov", false))]]></e></m></meta>
		</lime_application_init>
		<lime_application_quit expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_quit&quot;, &quot;oi&quot;, false))" line="359" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_application_quit", "oi", false))]]></e></m></meta>
		</lime_application_quit>
		<lime_application_set_frame_rate expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_set_frame_rate&quot;, &quot;odv&quot;, false))" line="360" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_application_set_frame_rate", "odv", false))]]></e></m></meta>
		</lime_application_set_frame_rate>
		<lime_application_update expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_application_update&quot;, &quot;ob&quot;, false))" line="362" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_application_update", "ob", false))]]></e></m></meta>
		</lime_application_update>
		<lime_audio_load expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_audio_load&quot;, &quot;ooo&quot;, false))" line="363" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_audio_load", "ooo", false))]]></e></m></meta>
		</lime_audio_load>
		<lime_audio_load_bytes expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_audio_load_bytes&quot;, &quot;ooo&quot;, false))" line="364" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_audio_load_bytes", "ooo", false))]]></e></m></meta>
		</lime_audio_load_bytes>
		<lime_audio_load_file expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_audio_load_file&quot;, &quot;ooo&quot;, false))" line="366" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_audio_load_file", "ooo", false))]]></e></m></meta>
		</lime_audio_load_file>
		<lime_bytes_from_data_pointer expr="new cpp.Callable&lt;Float -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_bytes_from_data_pointer&quot;, &quot;dioo&quot;, false))" line="368" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Float"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Float -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_bytes_from_data_pointer", "dioo", false))]]></e></m></meta>
		</lime_bytes_from_data_pointer>
		<lime_bytes_get_data_pointer expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_bytes_get_data_pointer&quot;, &quot;od&quot;, false))" line="370" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_bytes_get_data_pointer", "od", false))]]></e></m></meta>
		</lime_bytes_get_data_pointer>
		<lime_bytes_get_data_pointer_offset expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_bytes_get_data_pointer_offset&quot;, &quot;oid&quot;, false))" line="372" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_bytes_get_data_pointer_offset", "oid", false))]]></e></m></meta>
		</lime_bytes_get_data_pointer_offset>
		<lime_bytes_read_file expr="new cpp.Callable&lt;String -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_bytes_read_file&quot;, &quot;soo&quot;, false))" line="374" static="1">
			<x path="cpp.Callable"><f a=":">
	<c path="String"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_bytes_read_file", "soo", false))]]></e></m></meta>
		</lime_bytes_read_file>
		<lime_cffi_get_native_pointer expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cffi_get_native_pointer&quot;, &quot;od&quot;, false))" line="376" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cffi_get_native_pointer", "od", false))]]></e></m></meta>
		</lime_cffi_get_native_pointer>
		<lime_clipboard_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_clipboard_event_manager_register&quot;, &quot;oov&quot;, false))" line="378" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_clipboard_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_clipboard_event_manager_register>
		<lime_clipboard_get_text expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_clipboard_get_text&quot;, &quot;o&quot;, false))" line="380" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_clipboard_get_text", "o", false))]]></e></m></meta>
		</lime_clipboard_get_text>
		<lime_clipboard_set_text expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_clipboard_set_text&quot;, &quot;sv&quot;, false))" line="381" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_clipboard_set_text", "sv", false))]]></e></m></meta>
		</lime_clipboard_set_text>
		<lime_data_pointer_offset expr="new cpp.Callable&lt;lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_data_pointer_offset&quot;, &quot;did&quot;, false))" line="382" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_data_pointer_offset", "did", false))]]></e></m></meta>
		</lime_data_pointer_offset>
		<lime_deflate_compress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_deflate_compress&quot;, &quot;ooo&quot;, false))" line="384" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_deflate_compress", "ooo", false))]]></e></m></meta>
		</lime_deflate_compress>
		<lime_deflate_decompress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_deflate_decompress&quot;, &quot;ooo&quot;, false))" line="386" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_deflate_decompress", "ooo", false))]]></e></m></meta>
		</lime_deflate_decompress>
		<lime_drop_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_drop_event_manager_register&quot;, &quot;oov&quot;, false))" line="388" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_drop_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_drop_event_manager_register>
		<lime_file_dialog_open_directory expr="new cpp.Callable&lt;String -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_dialog_open_directory&quot;, &quot;ssso&quot;, false))" line="390" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> String -> String>(cpp.Prime._loadPrime("lime", "lime_file_dialog_open_directory", "ssso", false))]]></e></m></meta>
		</lime_file_dialog_open_directory>
		<lime_file_dialog_open_file expr="new cpp.Callable&lt;String -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_dialog_open_file&quot;, &quot;ssso&quot;, false))" line="392" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> String -> String>(cpp.Prime._loadPrime("lime", "lime_file_dialog_open_file", "ssso", false))]]></e></m></meta>
		</lime_file_dialog_open_file>
		<lime_file_dialog_open_files expr="new cpp.Callable&lt;String -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_dialog_open_files&quot;, &quot;ssso&quot;, false))" line="394" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> String -> String>(cpp.Prime._loadPrime("lime", "lime_file_dialog_open_files", "ssso", false))]]></e></m></meta>
		</lime_file_dialog_open_files>
		<lime_file_dialog_save_file expr="new cpp.Callable&lt;String -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_dialog_save_file&quot;, &quot;ssso&quot;, false))" line="396" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> String -> String>(cpp.Prime._loadPrime("lime", "lime_file_dialog_save_file", "ssso", false))]]></e></m></meta>
		</lime_file_dialog_save_file>
		<lime_file_watcher_create expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_watcher_create&quot;, &quot;oo&quot;, false))" line="398" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_file_watcher_create", "oo", false))]]></e></m></meta>
		</lime_file_watcher_create>
		<lime_file_watcher_add_directory expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_watcher_add_directory&quot;, &quot;oobo&quot;, false))" line="400" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_file_watcher_add_directory", "oobo", false))]]></e></m></meta>
		</lime_file_watcher_add_directory>
		<lime_file_watcher_remove_directory expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_watcher_remove_directory&quot;, &quot;oov&quot;, false))" line="402" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_file_watcher_remove_directory", "oov", false))]]></e></m></meta>
		</lime_file_watcher_remove_directory>
		<lime_file_watcher_update expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_file_watcher_update&quot;, &quot;ov&quot;, false))" line="404" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_file_watcher_update", "ov", false))]]></e></m></meta>
		</lime_file_watcher_update>
		<lime_font_get_ascender expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_ascender&quot;, &quot;oi&quot;, false))" line="406" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_ascender", "oi", false))]]></e></m></meta>
		</lime_font_get_ascender>
		<lime_font_get_descender expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_descender&quot;, &quot;oi&quot;, false))" line="407" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_descender", "oi", false))]]></e></m></meta>
		</lime_font_get_descender>
		<lime_font_get_family_name expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_family_name&quot;, &quot;oo&quot;, false))" line="408" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_family_name", "oo", false))]]></e></m></meta>
		</lime_font_get_family_name>
		<lime_font_get_glyph_index expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_glyph_index&quot;, &quot;osi&quot;, false))" line="410" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_font_get_glyph_index", "osi", false))]]></e></m></meta>
		</lime_font_get_glyph_index>
		<lime_font_get_glyph_indices expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_glyph_indices&quot;, &quot;oso&quot;, false))" line="412" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_font_get_glyph_indices", "oso", false))]]></e></m></meta>
		</lime_font_get_glyph_indices>
		<lime_font_get_glyph_metrics expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_glyph_metrics&quot;, &quot;oio&quot;, false))" line="414" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_font_get_glyph_metrics", "oio", false))]]></e></m></meta>
		</lime_font_get_glyph_metrics>
		<lime_font_get_height expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_height&quot;, &quot;oi&quot;, false))" line="416" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_height", "oi", false))]]></e></m></meta>
		</lime_font_get_height>
		<lime_font_get_num_glyphs expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_num_glyphs&quot;, &quot;oi&quot;, false))" line="417" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_num_glyphs", "oi", false))]]></e></m></meta>
		</lime_font_get_num_glyphs>
		<lime_font_get_underline_position expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_underline_position&quot;, &quot;oi&quot;, false))" line="418" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_underline_position", "oi", false))]]></e></m></meta>
		</lime_font_get_underline_position>
		<lime_font_get_underline_thickness expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_underline_thickness&quot;, &quot;oi&quot;, false))" line="420" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_underline_thickness", "oi", false))]]></e></m></meta>
		</lime_font_get_underline_thickness>
		<lime_font_get_units_per_em expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_get_units_per_em&quot;, &quot;oi&quot;, false))" line="422" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_get_units_per_em", "oi", false))]]></e></m></meta>
		</lime_font_get_units_per_em>
		<lime_font_load expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_load&quot;, &quot;oo&quot;, false))" line="423" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_load", "oo", false))]]></e></m></meta>
		</lime_font_load>
		<lime_font_load_bytes expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_load_bytes&quot;, &quot;oo&quot;, false))" line="424" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_load_bytes", "oo", false))]]></e></m></meta>
		</lime_font_load_bytes>
		<lime_font_load_file expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_load_file&quot;, &quot;oo&quot;, false))" line="425" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_load_file", "oo", false))]]></e></m></meta>
		</lime_font_load_file>
		<lime_font_outline_decompose expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_outline_decompose&quot;, &quot;oio&quot;, false))" line="426" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_font_outline_decompose", "oio", false))]]></e></m></meta>
		</lime_font_outline_decompose>
		<lime_font_render_glyph expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_render_glyph&quot;, &quot;oioo&quot;, false))" line="428" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_render_glyph", "oioo", false))]]></e></m></meta>
		</lime_font_render_glyph>
		<lime_font_render_glyphs expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_render_glyphs&quot;, &quot;oooo&quot;, false))" line="430" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_font_render_glyphs", "oooo", false))]]></e></m></meta>
		</lime_font_render_glyphs>
		<lime_font_set_size expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_font_set_size&quot;, &quot;oiv&quot;, false))" line="432" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_font_set_size", "oiv", false))]]></e></m></meta>
		</lime_font_set_size>
		<lime_gamepad_add_mappings expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gamepad_add_mappings&quot;, &quot;ov&quot;, false))" line="433" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gamepad_add_mappings", "ov", false))]]></e></m></meta>
		</lime_gamepad_add_mappings>
		<lime_gamepad_get_device_guid expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gamepad_get_device_guid&quot;, &quot;io&quot;, false))" line="435" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gamepad_get_device_guid", "io", false))]]></e></m></meta>
		</lime_gamepad_get_device_guid>
		<lime_gamepad_get_device_name expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gamepad_get_device_name&quot;, &quot;io&quot;, false))" line="437" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gamepad_get_device_name", "io", false))]]></e></m></meta>
		</lime_gamepad_get_device_name>
		<lime_gamepad_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gamepad_event_manager_register&quot;, &quot;oov&quot;, false))" line="439" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gamepad_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_gamepad_event_manager_register>
		<lime_gzip_compress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gzip_compress&quot;, &quot;ooo&quot;, false))" line="441" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gzip_compress", "ooo", false))]]></e></m></meta>
		</lime_gzip_compress>
		<lime_gzip_decompress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gzip_decompress&quot;, &quot;ooo&quot;, false))" line="443" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gzip_decompress", "ooo", false))]]></e></m></meta>
		</lime_gzip_decompress>
		<lime_haptic_vibrate expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_haptic_vibrate&quot;, &quot;iiv&quot;, false))" line="445" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_haptic_vibrate", "iiv", false))]]></e></m></meta>
		</lime_haptic_vibrate>
		<lime_image_encode expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_encode&quot;, &quot;oiioo&quot;, false))" line="446" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_encode", "oiioo", false))]]></e></m></meta>
		</lime_image_encode>
		<lime_image_load expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_load&quot;, &quot;ooo&quot;, false))" line="448" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_load", "ooo", false))]]></e></m></meta>
		</lime_image_load>
		<lime_image_load_bytes expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_load_bytes&quot;, &quot;ooo&quot;, false))" line="449" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_load_bytes", "ooo", false))]]></e></m></meta>
		</lime_image_load_bytes>
		<lime_image_load_file expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_load_file&quot;, &quot;ooo&quot;, false))" line="451" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_load_file", "ooo", false))]]></e></m></meta>
		</lime_image_load_file>
		<lime_image_data_util_color_transform expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_color_transform&quot;, &quot;ooov&quot;, false))" line="453" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_data_util_color_transform", "ooov", false))]]></e></m></meta>
		</lime_image_data_util_color_transform>
		<lime_image_data_util_copy_channel expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_copy_channel&quot;, &quot;ooooiiv&quot;, false))" line="455" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_copy_channel", "ooooiiv", false))]]></e></m></meta>
		</lime_image_data_util_copy_channel>
		<lime_image_data_util_copy_pixels expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_copy_pixels&quot;, &quot;oooooobv&quot;, false))" line="457" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_image_data_util_copy_pixels", "oooooobv", false))]]></e></m></meta>
		</lime_image_data_util_copy_pixels>
		<lime_image_data_util_fill_rect expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_fill_rect&quot;, &quot;ooiiv&quot;, false))" line="459" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_fill_rect", "ooiiv", false))]]></e></m></meta>
		</lime_image_data_util_fill_rect>
		<lime_image_data_util_flood_fill expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_flood_fill&quot;, &quot;oiiiiv&quot;, false))" line="461" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_flood_fill", "oiiiiv", false))]]></e></m></meta>
		</lime_image_data_util_flood_fill>
		<lime_image_data_util_get_pixels expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_get_pixels&quot;, &quot;ooiov&quot;, false))" line="463" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_data_util_get_pixels", "ooiov", false))]]></e></m></meta>
		</lime_image_data_util_get_pixels>
		<lime_image_data_util_merge expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_merge&quot;, &quot;ooooiiiiv&quot;, false))" line="465" static="1">
			<x path="cpp.Callable"><f a=":::::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_merge", "ooooiiiiv", false))]]></e></m></meta>
		</lime_image_data_util_merge>
		<lime_image_data_util_multiply_alpha expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_multiply_alpha&quot;, &quot;ov&quot;, false))" line="467" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_data_util_multiply_alpha", "ov", false))]]></e></m></meta>
		</lime_image_data_util_multiply_alpha>
		<lime_image_data_util_resize expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_resize&quot;, &quot;ooiiv&quot;, false))" line="469" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_resize", "ooiiv", false))]]></e></m></meta>
		</lime_image_data_util_resize>
		<lime_image_data_util_set_format expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_set_format&quot;, &quot;oiv&quot;, false))" line="471" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_set_format", "oiv", false))]]></e></m></meta>
		</lime_image_data_util_set_format>
		<lime_image_data_util_set_pixels expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_set_pixels&quot;, &quot;oooiiiv&quot;, false))" line="473" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_image_data_util_set_pixels", "oooiiiv", false))]]></e></m></meta>
		</lime_image_data_util_set_pixels>
		<lime_image_data_util_threshold expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_threshold&quot;, &quot;ooooiiiiiiibi&quot;, false))" line="475" static="1">
			<x path="cpp.Callable"><f a=":::::::::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object -> cpp.Object -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Bool>(cpp.Prime._loadPrime("lime", "lime_image_data_util_threshold", "ooooiiiiiiibi", false))]]></e></m></meta>
		</lime_image_data_util_threshold>
		<lime_image_data_util_unmultiply_alpha expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_image_data_util_unmultiply_alpha&quot;, &quot;ov&quot;, false))" line="477" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_image_data_util_unmultiply_alpha", "ov", false))]]></e></m></meta>
		</lime_image_data_util_unmultiply_alpha>
		<lime_joystick_get_device_guid expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_device_guid&quot;, &quot;io&quot;, false))" line="479" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_device_guid", "io", false))]]></e></m></meta>
		</lime_joystick_get_device_guid>
		<lime_joystick_get_device_name expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_device_name&quot;, &quot;io&quot;, false))" line="481" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_device_name", "io", false))]]></e></m></meta>
		</lime_joystick_get_device_name>
		<lime_joystick_get_num_axes expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_num_axes&quot;, &quot;ii&quot;, false))" line="483" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_num_axes", "ii", false))]]></e></m></meta>
		</lime_joystick_get_num_axes>
		<lime_joystick_get_num_buttons expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_num_buttons&quot;, &quot;ii&quot;, false))" line="484" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_num_buttons", "ii", false))]]></e></m></meta>
		</lime_joystick_get_num_buttons>
		<lime_joystick_get_num_hats expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_num_hats&quot;, &quot;ii&quot;, false))" line="485" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_num_hats", "ii", false))]]></e></m></meta>
		</lime_joystick_get_num_hats>
		<lime_joystick_get_num_trackballs expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_get_num_trackballs&quot;, &quot;ii&quot;, false))" line="486" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_joystick_get_num_trackballs", "ii", false))]]></e></m></meta>
		</lime_joystick_get_num_trackballs>
		<lime_joystick_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_joystick_event_manager_register&quot;, &quot;oov&quot;, false))" line="488" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_joystick_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_joystick_event_manager_register>
		<lime_jpeg_decode_bytes expr="new cpp.Callable&lt;cpp.Object -&gt; Bool -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_jpeg_decode_bytes&quot;, &quot;oboo&quot;, false))" line="490" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_jpeg_decode_bytes", "oboo", false))]]></e></m></meta>
		</lime_jpeg_decode_bytes>
		<lime_jpeg_decode_file expr="new cpp.Callable&lt;String -&gt; Bool -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_jpeg_decode_file&quot;, &quot;sboo&quot;, false))" line="492" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> Bool -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_jpeg_decode_file", "sboo", false))]]></e></m></meta>
		</lime_jpeg_decode_file>
		<lime_key_code_from_scan_code expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_key_code_from_scan_code&quot;, &quot;ff&quot;, false))" line="494" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_key_code_from_scan_code", "ff", false))]]></e></m></meta>
		</lime_key_code_from_scan_code>
		<lime_key_code_to_scan_code expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_key_code_to_scan_code&quot;, &quot;ff&quot;, false))" line="496" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_key_code_to_scan_code", "ff", false))]]></e></m></meta>
		</lime_key_code_to_scan_code>
		<lime_key_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_key_event_manager_register&quot;, &quot;oov&quot;, false))" line="498" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_key_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_key_event_manager_register>
		<lime_lzma_compress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_lzma_compress&quot;, &quot;ooo&quot;, false))" line="500" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_lzma_compress", "ooo", false))]]></e></m></meta>
		</lime_lzma_compress>
		<lime_lzma_decompress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_lzma_decompress&quot;, &quot;ooo&quot;, false))" line="502" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_lzma_decompress", "ooo", false))]]></e></m></meta>
		</lime_lzma_decompress>
		<lime_mouse_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_mouse_event_manager_register&quot;, &quot;oov&quot;, false))" line="504" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_mouse_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_mouse_event_manager_register>
		<lime_neko_execute expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_neko_execute&quot;, &quot;sv&quot;, false))" line="506" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_neko_execute", "sv", false))]]></e></m></meta>
		</lime_neko_execute>
		<lime_png_decode_bytes expr="new cpp.Callable&lt;cpp.Object -&gt; Bool -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_png_decode_bytes&quot;, &quot;oboo&quot;, false))" line="507" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_png_decode_bytes", "oboo", false))]]></e></m></meta>
		</lime_png_decode_bytes>
		<lime_png_decode_file expr="new cpp.Callable&lt;String -&gt; Bool -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_png_decode_file&quot;, &quot;sboo&quot;, false))" line="509" static="1">
			<x path="cpp.Callable"><f a="::">
	<c path="String"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> Bool -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_png_decode_file", "sboo", false))]]></e></m></meta>
		</lime_png_decode_file>
		<lime_render_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_render_event_manager_register&quot;, &quot;oov&quot;, false))" line="511" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_render_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_render_event_manager_register>
		<lime_sensor_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_sensor_event_manager_register&quot;, &quot;oov&quot;, false))" line="513" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_sensor_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_sensor_event_manager_register>
		<lime_system_get_allow_screen_timeout expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_allow_screen_timeout&quot;, &quot;b&quot;, false))" line="515" static="1">
			<x path="cpp.Callable"><f a=""><x path="Bool"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_allow_screen_timeout", "b", false))]]></e></m></meta>
		</lime_system_get_allow_screen_timeout>
		<lime_system_set_allow_screen_timeout expr="new cpp.Callable&lt;Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_set_allow_screen_timeout&quot;, &quot;bb&quot;, false))" line="517" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Bool>(cpp.Prime._loadPrime("lime", "lime_system_set_allow_screen_timeout", "bb", false))]]></e></m></meta>
		</lime_system_set_allow_screen_timeout>
		<lime_system_get_device_model expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_device_model&quot;, &quot;o&quot;, false))" line="519" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_device_model", "o", false))]]></e></m></meta>
		</lime_system_get_device_model>
		<lime_system_get_device_vendor expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_device_vendor&quot;, &quot;o&quot;, false))" line="521" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_device_vendor", "o", false))]]></e></m></meta>
		</lime_system_get_device_vendor>
		<lime_system_get_directory expr="new cpp.Callable&lt;Int -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_directory&quot;, &quot;isso&quot;, false))" line="523" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<c path="String"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String -> String>(cpp.Prime._loadPrime("lime", "lime_system_get_directory", "isso", false))]]></e></m></meta>
		</lime_system_get_directory>
		<lime_system_get_display expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_display&quot;, &quot;io&quot;, false))" line="525" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_system_get_display", "io", false))]]></e></m></meta>
		</lime_system_get_display>
		<lime_system_get_ios_tablet expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_ios_tablet&quot;, &quot;b&quot;, false))" line="526" static="1">
			<x path="cpp.Callable"><f a=""><x path="Bool"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_ios_tablet", "b", false))]]></e></m></meta>
		</lime_system_get_ios_tablet>
		<lime_system_get_num_displays expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_num_displays&quot;, &quot;i&quot;, false))" line="527" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_num_displays", "i", false))]]></e></m></meta>
		</lime_system_get_num_displays>
		<lime_system_get_platform_label expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_platform_label&quot;, &quot;o&quot;, false))" line="528" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_platform_label", "o", false))]]></e></m></meta>
		</lime_system_get_platform_label>
		<lime_system_get_platform_name expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_platform_name&quot;, &quot;o&quot;, false))" line="530" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_platform_name", "o", false))]]></e></m></meta>
		</lime_system_get_platform_name>
		<lime_system_get_platform_version expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_platform_version&quot;, &quot;o&quot;, false))" line="532" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_platform_version", "o", false))]]></e></m></meta>
		</lime_system_get_platform_version>
		<lime_system_get_timer expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_get_timer&quot;, &quot;d&quot;, false))" line="534" static="1">
			<x path="cpp.Callable"><f a=""><x path="Float"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_system_get_timer", "d", false))]]></e></m></meta>
		</lime_system_get_timer>
		<lime_system_open_file expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_open_file&quot;, &quot;sv&quot;, false))" line="535" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_system_open_file", "sv", false))]]></e></m></meta>
		</lime_system_open_file>
		<lime_system_open_url expr="new cpp.Callable&lt;String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_system_open_url&quot;, &quot;ssv&quot;, false))" line="536" static="1">
			<x path="cpp.Callable"><f a=":">
	<c path="String"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> String>(cpp.Prime._loadPrime("lime", "lime_system_open_url", "ssv", false))]]></e></m></meta>
		</lime_system_open_url>
		<lime_text_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_text_event_manager_register&quot;, &quot;oov&quot;, false))" line="537" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_text_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_text_event_manager_register>
		<lime_touch_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_touch_event_manager_register&quot;, &quot;oov&quot;, false))" line="539" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_touch_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_touch_event_manager_register>
		<lime_window_alert expr="new cpp.Callable&lt;cpp.Object -&gt; String -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_alert&quot;, &quot;ossv&quot;, false))" line="541" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<c path="String"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String -> String>(cpp.Prime._loadPrime("lime", "lime_window_alert", "ossv", false))]]></e></m></meta>
		</lime_window_alert>
		<lime_window_close expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_close&quot;, &quot;ov&quot;, false))" line="543" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_close", "ov", false))]]></e></m></meta>
		</lime_window_close>
		<lime_window_context_flip expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_context_flip&quot;, &quot;ov&quot;, false))" line="544" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_context_flip", "ov", false))]]></e></m></meta>
		</lime_window_context_flip>
		<lime_window_context_lock expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_context_lock&quot;, &quot;oo&quot;, false))" line="546" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_context_lock", "oo", false))]]></e></m></meta>
		</lime_window_context_lock>
		<lime_window_context_make_current expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_context_make_current&quot;, &quot;ov&quot;, false))" line="548" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_context_make_current", "ov", false))]]></e></m></meta>
		</lime_window_context_make_current>
		<lime_window_context_unlock expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_context_unlock&quot;, &quot;ov&quot;, false))" line="550" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_context_unlock", "ov", false))]]></e></m></meta>
		</lime_window_context_unlock>
		<lime_window_create expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_create&quot;, &quot;oiiiso&quot;, false))" line="552" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int -> String>(cpp.Prime._loadPrime("lime", "lime_window_create", "oiiiso", false))]]></e></m></meta>
		</lime_window_create>
		<lime_window_focus expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_focus&quot;, &quot;ov&quot;, false))" line="554" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_focus", "ov", false))]]></e></m></meta>
		</lime_window_focus>
		<lime_window_get_context expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_context&quot;, &quot;od&quot;, false))" line="555" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_context", "od", false))]]></e></m></meta>
		</lime_window_get_context>
		<lime_window_get_context_type expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_context_type&quot;, &quot;oo&quot;, false))" line="556" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_context_type", "oo", false))]]></e></m></meta>
		</lime_window_get_context_type>
		<lime_window_get_display expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_display&quot;, &quot;oi&quot;, false))" line="558" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_display", "oi", false))]]></e></m></meta>
		</lime_window_get_display>
		<lime_window_get_display_mode expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_display_mode&quot;, &quot;oo&quot;, false))" line="559" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_display_mode", "oo", false))]]></e></m></meta>
		</lime_window_get_display_mode>
		<lime_window_get_height expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_height&quot;, &quot;oi&quot;, false))" line="561" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_height", "oi", false))]]></e></m></meta>
		</lime_window_get_height>
		<lime_window_get_id expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_id&quot;, &quot;oi&quot;, false))" line="562" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_id", "oi", false))]]></e></m></meta>
		</lime_window_get_id>
		<lime_window_get_mouse_lock expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_mouse_lock&quot;, &quot;ob&quot;, false))" line="563" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_mouse_lock", "ob", false))]]></e></m></meta>
		</lime_window_get_mouse_lock>
		<lime_window_get_scale expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_scale&quot;, &quot;od&quot;, false))" line="565" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_scale", "od", false))]]></e></m></meta>
		</lime_window_get_scale>
		<lime_window_get_text_input_enabled expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_text_input_enabled&quot;, &quot;ob&quot;, false))" line="566" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_text_input_enabled", "ob", false))]]></e></m></meta>
		</lime_window_get_text_input_enabled>
		<lime_window_get_width expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_width&quot;, &quot;oi&quot;, false))" line="568" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_width", "oi", false))]]></e></m></meta>
		</lime_window_get_width>
		<lime_window_get_x expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_x&quot;, &quot;oi&quot;, false))" line="569" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_x", "oi", false))]]></e></m></meta>
		</lime_window_get_x>
		<lime_window_get_y expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_get_y&quot;, &quot;oi&quot;, false))" line="570" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_get_y", "oi", false))]]></e></m></meta>
		</lime_window_get_y>
		<lime_window_move expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_move&quot;, &quot;oiiv&quot;, false))" line="571" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_window_move", "oiiv", false))]]></e></m></meta>
		</lime_window_move>
		<lime_window_read_pixels expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_read_pixels&quot;, &quot;oooo&quot;, false))" line="572" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_read_pixels", "oooo", false))]]></e></m></meta>
		</lime_window_read_pixels>
		<lime_window_resize expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_resize&quot;, &quot;oiiv&quot;, false))" line="574" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_window_resize", "oiiv", false))]]></e></m></meta>
		</lime_window_resize>
		<lime_window_set_borderless expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_borderless&quot;, &quot;obb&quot;, false))" line="576" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_borderless", "obb", false))]]></e></m></meta>
		</lime_window_set_borderless>
		<lime_window_set_cursor expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_cursor&quot;, &quot;oiv&quot;, false))" line="578" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_window_set_cursor", "oiv", false))]]></e></m></meta>
		</lime_window_set_cursor>
		<lime_window_set_display_mode expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_display_mode&quot;, &quot;ooo&quot;, false))" line="580" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_set_display_mode", "ooo", false))]]></e></m></meta>
		</lime_window_set_display_mode>
		<lime_window_set_fullscreen expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_fullscreen&quot;, &quot;obb&quot;, false))" line="582" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_fullscreen", "obb", false))]]></e></m></meta>
		</lime_window_set_fullscreen>
		<lime_window_set_icon expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_icon&quot;, &quot;oov&quot;, false))" line="584" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_set_icon", "oov", false))]]></e></m></meta>
		</lime_window_set_icon>
		<lime_window_set_maximized expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_maximized&quot;, &quot;obb&quot;, false))" line="586" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_maximized", "obb", false))]]></e></m></meta>
		</lime_window_set_maximized>
		<lime_window_set_minimized expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_minimized&quot;, &quot;obb&quot;, false))" line="588" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_minimized", "obb", false))]]></e></m></meta>
		</lime_window_set_minimized>
		<lime_window_set_mouse_lock expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_mouse_lock&quot;, &quot;obv&quot;, false))" line="590" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_mouse_lock", "obv", false))]]></e></m></meta>
		</lime_window_set_mouse_lock>
		<lime_window_set_resizable expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_resizable&quot;, &quot;obb&quot;, false))" line="592" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_resizable", "obb", false))]]></e></m></meta>
		</lime_window_set_resizable>
		<lime_window_set_text_input_enabled expr="new cpp.Callable&lt;cpp.Object -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_text_input_enabled&quot;, &quot;obv&quot;, false))" line="594" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Bool>(cpp.Prime._loadPrime("lime", "lime_window_set_text_input_enabled", "obv", false))]]></e></m></meta>
		</lime_window_set_text_input_enabled>
		<lime_window_set_title expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_set_title&quot;, &quot;oso&quot;, false))" line="596" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_window_set_title", "oso", false))]]></e></m></meta>
		</lime_window_set_title>
		<lime_window_warp_mouse expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_warp_mouse&quot;, &quot;oiiv&quot;, false))" line="598" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_window_warp_mouse", "oiiv", false))]]></e></m></meta>
		</lime_window_warp_mouse>
		<lime_window_event_manager_register expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_window_event_manager_register&quot;, &quot;oov&quot;, false))" line="600" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_window_event_manager_register", "oov", false))]]></e></m></meta>
		</lime_window_event_manager_register>
		<lime_zlib_compress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_zlib_compress&quot;, &quot;ooo&quot;, false))" line="602" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_zlib_compress", "ooo", false))]]></e></m></meta>
		</lime_zlib_compress>
		<lime_zlib_decompress expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_zlib_decompress&quot;, &quot;ooo&quot;, false))" line="604" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_zlib_decompress", "ooo", false))]]></e></m></meta>
		</lime_zlib_decompress>
		<lime_al_buffer_data expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_buffer_data&quot;, &quot;oioiiv&quot;, false))" line="1656" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_buffer_data", "oioiiv", false))]]></e></m></meta>
		</lime_al_buffer_data>
		<lime_al_buffer3f expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_buffer3f&quot;, &quot;oifffv&quot;, false))" line="1658" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_buffer3f", "oifffv", false))]]></e></m></meta>
		</lime_al_buffer3f>
		<lime_al_buffer3i expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_buffer3i&quot;, &quot;oiiiiv&quot;, false))" line="1660" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_buffer3i", "oiiiiv", false))]]></e></m></meta>
		</lime_al_buffer3i>
		<lime_al_bufferf expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_bufferf&quot;, &quot;oifv&quot;, false))" line="1662" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_bufferf", "oifv", false))]]></e></m></meta>
		</lime_al_bufferf>
		<lime_al_bufferfv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_bufferfv&quot;, &quot;oiov&quot;, false))" line="1664" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_bufferfv", "oiov", false))]]></e></m></meta>
		</lime_al_bufferfv>
		<lime_al_bufferi expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_bufferi&quot;, &quot;oiiv&quot;, false))" line="1666" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_bufferi", "oiiv", false))]]></e></m></meta>
		</lime_al_bufferi>
		<lime_al_bufferiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_bufferiv&quot;, &quot;oiov&quot;, false))" line="1667" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_bufferiv", "oiov", false))]]></e></m></meta>
		</lime_al_bufferiv>
		<lime_al_cleanup expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_cleanup&quot;, &quot;v&quot;, false))" line="1669" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_cleanup", "v", false))]]></e></m></meta>
		</lime_al_cleanup>
		<lime_al_delete_buffer expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_delete_buffer&quot;, &quot;ov&quot;, false))" line="1670" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_delete_buffer", "ov", false))]]></e></m></meta>
		</lime_al_delete_buffer>
		<lime_al_delete_buffers expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_delete_buffers&quot;, &quot;iov&quot;, false))" line="1671" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_delete_buffers", "iov", false))]]></e></m></meta>
		</lime_al_delete_buffers>
		<lime_al_delete_source expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_delete_source&quot;, &quot;ov&quot;, false))" line="1673" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_delete_source", "ov", false))]]></e></m></meta>
		</lime_al_delete_source>
		<lime_al_delete_sources expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_delete_sources&quot;, &quot;iov&quot;, false))" line="1674" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_delete_sources", "iov", false))]]></e></m></meta>
		</lime_al_delete_sources>
		<lime_al_disable expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_disable&quot;, &quot;iv&quot;, false))" line="1676" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_disable", "iv", false))]]></e></m></meta>
		</lime_al_disable>
		<lime_al_distance_model expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_distance_model&quot;, &quot;iv&quot;, false))" line="1677" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_distance_model", "iv", false))]]></e></m></meta>
		</lime_al_distance_model>
		<lime_al_doppler_factor expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_doppler_factor&quot;, &quot;fv&quot;, false))" line="1678" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_doppler_factor", "fv", false))]]></e></m></meta>
		</lime_al_doppler_factor>
		<lime_al_doppler_velocity expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_doppler_velocity&quot;, &quot;fv&quot;, false))" line="1679" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_doppler_velocity", "fv", false))]]></e></m></meta>
		</lime_al_doppler_velocity>
		<lime_al_enable expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_enable&quot;, &quot;iv&quot;, false))" line="1681" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_enable", "iv", false))]]></e></m></meta>
		</lime_al_enable>
		<lime_al_gen_source expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_source&quot;, &quot;o&quot;, false))" line="1682" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_gen_source", "o", false))]]></e></m></meta>
		</lime_al_gen_source>
		<lime_al_gen_sources expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_sources&quot;, &quot;io&quot;, false))" line="1683" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_gen_sources", "io", false))]]></e></m></meta>
		</lime_al_gen_sources>
		<lime_al_get_boolean expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_boolean&quot;, &quot;ib&quot;, false))" line="1684" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_boolean", "ib", false))]]></e></m></meta>
		</lime_al_get_boolean>
		<lime_al_get_booleanv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_booleanv&quot;, &quot;iio&quot;, false))" line="1685" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_booleanv", "iio", false))]]></e></m></meta>
		</lime_al_get_booleanv>
		<lime_al_gen_buffer expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_buffer&quot;, &quot;o&quot;, false))" line="1686" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_gen_buffer", "o", false))]]></e></m></meta>
		</lime_al_gen_buffer>
		<lime_al_gen_buffers expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_buffers&quot;, &quot;io&quot;, false))" line="1687" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_gen_buffers", "io", false))]]></e></m></meta>
		</lime_al_gen_buffers>
		<lime_al_get_buffer3f expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_buffer3f&quot;, &quot;oio&quot;, false))" line="1688" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_buffer3f", "oio", false))]]></e></m></meta>
		</lime_al_get_buffer3f>
		<lime_al_get_buffer3i expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_buffer3i&quot;, &quot;oio&quot;, false))" line="1690" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_buffer3i", "oio", false))]]></e></m></meta>
		</lime_al_get_buffer3i>
		<lime_al_get_bufferf expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_bufferf&quot;, &quot;oif&quot;, false))" line="1692" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_bufferf", "oif", false))]]></e></m></meta>
		</lime_al_get_bufferf>
		<lime_al_get_bufferfv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_bufferfv&quot;, &quot;oiio&quot;, false))" line="1693" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_bufferfv", "oiio", false))]]></e></m></meta>
		</lime_al_get_bufferfv>
		<lime_al_get_bufferi expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_bufferi&quot;, &quot;oii&quot;, false))" line="1695" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_bufferi", "oii", false))]]></e></m></meta>
		</lime_al_get_bufferi>
		<lime_al_get_bufferiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_bufferiv&quot;, &quot;oiio&quot;, false))" line="1696" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_bufferiv", "oiio", false))]]></e></m></meta>
		</lime_al_get_bufferiv>
		<lime_al_get_double expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_double&quot;, &quot;id&quot;, false))" line="1698" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_double", "id", false))]]></e></m></meta>
		</lime_al_get_double>
		<lime_al_get_doublev expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_doublev&quot;, &quot;iio&quot;, false))" line="1699" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_doublev", "iio", false))]]></e></m></meta>
		</lime_al_get_doublev>
		<lime_al_get_enum_value expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_enum_value&quot;, &quot;si&quot;, false))" line="1700" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_al_get_enum_value", "si", false))]]></e></m></meta>
		</lime_al_get_enum_value>
		<lime_al_get_error expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_error&quot;, &quot;i&quot;, false))" line="1701" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_get_error", "i", false))]]></e></m></meta>
		</lime_al_get_error>
		<lime_al_get_float expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_float&quot;, &quot;if&quot;, false))" line="1702" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_float", "if", false))]]></e></m></meta>
		</lime_al_get_float>
		<lime_al_get_floatv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_floatv&quot;, &quot;iio&quot;, false))" line="1703" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_floatv", "iio", false))]]></e></m></meta>
		</lime_al_get_floatv>
		<lime_al_get_integer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_integer&quot;, &quot;ii&quot;, false))" line="1704" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_integer", "ii", false))]]></e></m></meta>
		</lime_al_get_integer>
		<lime_al_get_integerv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_integerv&quot;, &quot;iio&quot;, false))" line="1705" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_integerv", "iio", false))]]></e></m></meta>
		</lime_al_get_integerv>
		<lime_al_get_listener3f expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listener3f&quot;, &quot;io&quot;, false))" line="1706" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listener3f", "io", false))]]></e></m></meta>
		</lime_al_get_listener3f>
		<lime_al_get_listener3i expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listener3i&quot;, &quot;io&quot;, false))" line="1707" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listener3i", "io", false))]]></e></m></meta>
		</lime_al_get_listener3i>
		<lime_al_get_listenerf expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listenerf&quot;, &quot;if&quot;, false))" line="1708" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listenerf", "if", false))]]></e></m></meta>
		</lime_al_get_listenerf>
		<lime_al_get_listenerfv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listenerfv&quot;, &quot;iio&quot;, false))" line="1709" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listenerfv", "iio", false))]]></e></m></meta>
		</lime_al_get_listenerfv>
		<lime_al_get_listeneri expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listeneri&quot;, &quot;ii&quot;, false))" line="1710" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listeneri", "ii", false))]]></e></m></meta>
		</lime_al_get_listeneri>
		<lime_al_get_listeneriv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_listeneriv&quot;, &quot;iio&quot;, false))" line="1711" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_listeneriv", "iio", false))]]></e></m></meta>
		</lime_al_get_listeneriv>
		<lime_al_get_proc_address expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_proc_address&quot;, &quot;sd&quot;, false))" line="1712" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_al_get_proc_address", "sd", false))]]></e></m></meta>
		</lime_al_get_proc_address>
		<lime_al_get_source3f expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_source3f&quot;, &quot;oio&quot;, false))" line="1713" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_source3f", "oio", false))]]></e></m></meta>
		</lime_al_get_source3f>
		<lime_al_get_source3i expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_source3i&quot;, &quot;oio&quot;, false))" line="1715" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_source3i", "oio", false))]]></e></m></meta>
		</lime_al_get_source3i>
		<lime_al_get_sourcef expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_sourcef&quot;, &quot;oif&quot;, false))" line="1717" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_sourcef", "oif", false))]]></e></m></meta>
		</lime_al_get_sourcef>
		<lime_al_get_sourcefv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_sourcefv&quot;, &quot;oiio&quot;, false))" line="1718" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_sourcefv", "oiio", false))]]></e></m></meta>
		</lime_al_get_sourcefv>
		<lime_al_get_sourcei expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_sourcei&quot;, &quot;oio&quot;, false))" line="1720" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_sourcei", "oio", false))]]></e></m></meta>
		</lime_al_get_sourcei>
		<lime_al_get_sourceiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_sourceiv&quot;, &quot;oiio&quot;, false))" line="1721" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_sourceiv", "oiio", false))]]></e></m></meta>
		</lime_al_get_sourceiv>
		<lime_al_get_string expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_string&quot;, &quot;io&quot;, false))" line="1723" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_get_string", "io", false))]]></e></m></meta>
		</lime_al_get_string>
		<lime_al_is_buffer expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_buffer&quot;, &quot;ob&quot;, false))" line="1724" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_is_buffer", "ob", false))]]></e></m></meta>
		</lime_al_is_buffer>
		<lime_al_is_enabled expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_enabled&quot;, &quot;ib&quot;, false))" line="1725" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_al_is_enabled", "ib", false))]]></e></m></meta>
		</lime_al_is_enabled>
		<lime_al_is_extension_present expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_extension_present&quot;, &quot;sb&quot;, false))" line="1726" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_al_is_extension_present", "sb", false))]]></e></m></meta>
		</lime_al_is_extension_present>
		<lime_al_is_source expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_source&quot;, &quot;ob&quot;, false))" line="1728" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_is_source", "ob", false))]]></e></m></meta>
		</lime_al_is_source>
		<lime_al_listener3f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listener3f&quot;, &quot;ifffv&quot;, false))" line="1729" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_listener3f", "ifffv", false))]]></e></m></meta>
		</lime_al_listener3f>
		<lime_al_listener3i expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listener3i&quot;, &quot;iiiiv&quot;, false))" line="1731" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_listener3i", "iiiiv", false))]]></e></m></meta>
		</lime_al_listener3i>
		<lime_al_listenerf expr="new cpp.Callable&lt;Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listenerf&quot;, &quot;ifv&quot;, false))" line="1732" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_listenerf", "ifv", false))]]></e></m></meta>
		</lime_al_listenerf>
		<lime_al_listenerfv expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listenerfv&quot;, &quot;iov&quot;, false))" line="1733" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_listenerfv", "iov", false))]]></e></m></meta>
		</lime_al_listenerfv>
		<lime_al_listeneri expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listeneri&quot;, &quot;iiv&quot;, false))" line="1734" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_listeneri", "iiv", false))]]></e></m></meta>
		</lime_al_listeneri>
		<lime_al_listeneriv expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_listeneriv&quot;, &quot;iov&quot;, false))" line="1735" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_listeneriv", "iov", false))]]></e></m></meta>
		</lime_al_listeneriv>
		<lime_al_source_pause expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_pause&quot;, &quot;ov&quot;, false))" line="1736" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_pause", "ov", false))]]></e></m></meta>
		</lime_al_source_pause>
		<lime_al_source_pausev expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_pausev&quot;, &quot;iov&quot;, false))" line="1737" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_pausev", "iov", false))]]></e></m></meta>
		</lime_al_source_pausev>
		<lime_al_source_play expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_play&quot;, &quot;ov&quot;, false))" line="1739" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_play", "ov", false))]]></e></m></meta>
		</lime_al_source_play>
		<lime_al_source_playv expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_playv&quot;, &quot;iov&quot;, false))" line="1740" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_playv", "iov", false))]]></e></m></meta>
		</lime_al_source_playv>
		<lime_al_source_queue_buffers expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_queue_buffers&quot;, &quot;oiov&quot;, false))" line="1741" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_queue_buffers", "oiov", false))]]></e></m></meta>
		</lime_al_source_queue_buffers>
		<lime_al_source_rewind expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_rewind&quot;, &quot;ov&quot;, false))" line="1743" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_rewind", "ov", false))]]></e></m></meta>
		</lime_al_source_rewind>
		<lime_al_source_rewindv expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_rewindv&quot;, &quot;iov&quot;, false))" line="1744" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_rewindv", "iov", false))]]></e></m></meta>
		</lime_al_source_rewindv>
		<lime_al_source_stop expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_stop&quot;, &quot;ov&quot;, false))" line="1746" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_stop", "ov", false))]]></e></m></meta>
		</lime_al_source_stop>
		<lime_al_source_stopv expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_stopv&quot;, &quot;iov&quot;, false))" line="1747" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_source_stopv", "iov", false))]]></e></m></meta>
		</lime_al_source_stopv>
		<lime_al_source_unqueue_buffers expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source_unqueue_buffers&quot;, &quot;oio&quot;, false))" line="1748" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_source_unqueue_buffers", "oio", false))]]></e></m></meta>
		</lime_al_source_unqueue_buffers>
		<lime_al_source3f expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source3f&quot;, &quot;oifffv&quot;, false))" line="1750" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_source3f", "oifffv", false))]]></e></m></meta>
		</lime_al_source3f>
		<lime_al_source3i expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_source3i&quot;, &quot;oioiiv&quot;, false))" line="1752" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_source3i", "oioiiv", false))]]></e></m></meta>
		</lime_al_source3i>
		<lime_al_sourcef expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_sourcef&quot;, &quot;oifv&quot;, false))" line="1754" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_sourcef", "oifv", false))]]></e></m></meta>
		</lime_al_sourcef>
		<lime_al_sourcefv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_sourcefv&quot;, &quot;oiov&quot;, false))" line="1756" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_sourcefv", "oiov", false))]]></e></m></meta>
		</lime_al_sourcefv>
		<lime_al_sourcei expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_sourcei&quot;, &quot;oiov&quot;, false))" line="1758" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_sourcei", "oiov", false))]]></e></m></meta>
		</lime_al_sourcei>
		<lime_al_sourceiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_sourceiv&quot;, &quot;oiov&quot;, false))" line="1760" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_sourceiv", "oiov", false))]]></e></m></meta>
		</lime_al_sourceiv>
		<lime_al_speed_of_sound expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_speed_of_sound&quot;, &quot;fv&quot;, false))" line="1762" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_speed_of_sound", "fv", false))]]></e></m></meta>
		</lime_al_speed_of_sound>
		<lime_alc_close_device expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_close_device&quot;, &quot;ob&quot;, false))" line="1763" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_close_device", "ob", false))]]></e></m></meta>
		</lime_alc_close_device>
		<lime_alc_create_context expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_create_context&quot;, &quot;ooo&quot;, false))" line="1764" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_create_context", "ooo", false))]]></e></m></meta>
		</lime_alc_create_context>
		<lime_alc_destroy_context expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_destroy_context&quot;, &quot;ov&quot;, false))" line="1766" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_destroy_context", "ov", false))]]></e></m></meta>
		</lime_alc_destroy_context>
		<lime_alc_get_contexts_device expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_get_contexts_device&quot;, &quot;oo&quot;, false))" line="1768" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_get_contexts_device", "oo", false))]]></e></m></meta>
		</lime_alc_get_contexts_device>
		<lime_alc_get_current_context expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_get_current_context&quot;, &quot;o&quot;, false))" line="1770" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_alc_get_current_context", "o", false))]]></e></m></meta>
		</lime_alc_get_current_context>
		<lime_alc_get_error expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_get_error&quot;, &quot;oi&quot;, false))" line="1772" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_get_error", "oi", false))]]></e></m></meta>
		</lime_alc_get_error>
		<lime_alc_get_integerv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_get_integerv&quot;, &quot;oiio&quot;, false))" line="1773" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_alc_get_integerv", "oiio", false))]]></e></m></meta>
		</lime_alc_get_integerv>
		<lime_alc_get_string expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_get_string&quot;, &quot;oio&quot;, false))" line="1775" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_alc_get_string", "oio", false))]]></e></m></meta>
		</lime_alc_get_string>
		<lime_alc_make_context_current expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_make_context_current&quot;, &quot;ob&quot;, false))" line="1776" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_make_context_current", "ob", false))]]></e></m></meta>
		</lime_alc_make_context_current>
		<lime_alc_open_device expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_open_device&quot;, &quot;so&quot;, false))" line="1778" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_alc_open_device", "so", false))]]></e></m></meta>
		</lime_alc_open_device>
		<lime_alc_pause_device expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_pause_device&quot;, &quot;ov&quot;, false))" line="1779" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_pause_device", "ov", false))]]></e></m></meta>
		</lime_alc_pause_device>
		<lime_alc_process_context expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_process_context&quot;, &quot;ov&quot;, false))" line="1780" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_process_context", "ov", false))]]></e></m></meta>
		</lime_alc_process_context>
		<lime_alc_resume_device expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_resume_device&quot;, &quot;ov&quot;, false))" line="1782" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_resume_device", "ov", false))]]></e></m></meta>
		</lime_alc_resume_device>
		<lime_alc_suspend_context expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_alc_suspend_context&quot;, &quot;ov&quot;, false))" line="1783" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_alc_suspend_context", "ov", false))]]></e></m></meta>
		</lime_alc_suspend_context>
		<lime_al_gen_filter expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_filter&quot;, &quot;o&quot;, false))" line="1785" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_gen_filter", "o", false))]]></e></m></meta>
		</lime_al_gen_filter>
		<lime_al_filteri expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_filteri&quot;, &quot;oiov&quot;, false))" line="1786" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_filteri", "oiov", false))]]></e></m></meta>
		</lime_al_filteri>
		<lime_al_filterf expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_filterf&quot;, &quot;oifv&quot;, false))" line="1788" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_filterf", "oifv", false))]]></e></m></meta>
		</lime_al_filterf>
		<lime_al_remove_direct_filter expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_remove_direct_filter&quot;, &quot;ov&quot;, false))" line="1790" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_remove_direct_filter", "ov", false))]]></e></m></meta>
		</lime_al_remove_direct_filter>
		<lime_al_is_filter expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_filter&quot;, &quot;ob&quot;, false))" line="1792" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_is_filter", "ob", false))]]></e></m></meta>
		</lime_al_is_filter>
		<lime_al_get_filteri expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_get_filteri&quot;, &quot;oii&quot;, false))" line="1793" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_get_filteri", "oii", false))]]></e></m></meta>
		</lime_al_get_filteri>
		<lime_al_gen_effect expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_effect&quot;, &quot;o&quot;, false))" line="1794" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_gen_effect", "o", false))]]></e></m></meta>
		</lime_al_gen_effect>
		<lime_al_effectf expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_effectf&quot;, &quot;oifv&quot;, false))" line="1795" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_effectf", "oifv", false))]]></e></m></meta>
		</lime_al_effectf>
		<lime_al_effectfv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_effectfv&quot;, &quot;oiov&quot;, false))" line="1797" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_effectfv", "oiov", false))]]></e></m></meta>
		</lime_al_effectfv>
		<lime_al_effecti expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_effecti&quot;, &quot;oiiv&quot;, false))" line="1799" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_al_effecti", "oiiv", false))]]></e></m></meta>
		</lime_al_effecti>
		<lime_al_effectiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_effectiv&quot;, &quot;oiov&quot;, false))" line="1800" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_effectiv", "oiov", false))]]></e></m></meta>
		</lime_al_effectiv>
		<lime_al_is_effect expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_effect&quot;, &quot;ob&quot;, false))" line="1802" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_is_effect", "ob", false))]]></e></m></meta>
		</lime_al_is_effect>
		<lime_al_gen_aux expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_gen_aux&quot;, &quot;o&quot;, false))" line="1803" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_al_gen_aux", "o", false))]]></e></m></meta>
		</lime_al_gen_aux>
		<lime_al_auxf expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_auxf&quot;, &quot;oifv&quot;, false))" line="1804" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_al_auxf", "oifv", false))]]></e></m></meta>
		</lime_al_auxf>
		<lime_al_auxfv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_auxfv&quot;, &quot;oiov&quot;, false))" line="1805" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_auxfv", "oiov", false))]]></e></m></meta>
		</lime_al_auxfv>
		<lime_al_auxi expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_auxi&quot;, &quot;oiov&quot;, false))" line="1806" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_auxi", "oiov", false))]]></e></m></meta>
		</lime_al_auxi>
		<lime_al_auxiv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_auxiv&quot;, &quot;oiov&quot;, false))" line="1807" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_auxiv", "oiov", false))]]></e></m></meta>
		</lime_al_auxiv>
		<lime_al_is_aux expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_is_aux&quot;, &quot;ob&quot;, false))" line="1808" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_al_is_aux", "ob", false))]]></e></m></meta>
		</lime_al_is_aux>
		<lime_al_remove_send expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_al_remove_send&quot;, &quot;oiv&quot;, false))" line="1809" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_al_remove_send", "oiv", false))]]></e></m></meta>
		</lime_al_remove_send>
		<lime_cairo_arc expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_arc&quot;, &quot;odddddv&quot;, false))" line="2558" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_arc", "odddddv", false))]]></e></m></meta>
		</lime_cairo_arc>
		<lime_cairo_arc_negative expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_arc_negative&quot;, &quot;odddddv&quot;, false))" line="2560" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_arc_negative", "odddddv", false))]]></e></m></meta>
		</lime_cairo_arc_negative>
		<lime_cairo_clip expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_clip&quot;, &quot;ov&quot;, false))" line="2562" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_clip", "ov", false))]]></e></m></meta>
		</lime_cairo_clip>
		<lime_cairo_clip_preserve expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_clip_preserve&quot;, &quot;ov&quot;, false))" line="2563" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_clip_preserve", "ov", false))]]></e></m></meta>
		</lime_cairo_clip_preserve>
		<lime_cairo_clip_extents expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_clip_extents&quot;, &quot;oddddv&quot;, false))" line="2565" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_clip_extents", "oddddv", false))]]></e></m></meta>
		</lime_cairo_clip_extents>
		<lime_cairo_close_path expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_close_path&quot;, &quot;ov&quot;, false))" line="2567" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_close_path", "ov", false))]]></e></m></meta>
		</lime_cairo_close_path>
		<lime_cairo_copy_page expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_copy_page&quot;, &quot;ov&quot;, false))" line="2568" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_copy_page", "ov", false))]]></e></m></meta>
		</lime_cairo_copy_page>
		<lime_cairo_create expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_create&quot;, &quot;oo&quot;, false))" line="2569" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_create", "oo", false))]]></e></m></meta>
		</lime_cairo_create>
		<lime_cairo_curve_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_curve_to&quot;, &quot;oddddddv&quot;, false))" line="2570" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_curve_to", "oddddddv", false))]]></e></m></meta>
		</lime_cairo_curve_to>
		<lime_cairo_fill expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_fill&quot;, &quot;ov&quot;, false))" line="2572" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_fill", "ov", false))]]></e></m></meta>
		</lime_cairo_fill>
		<lime_cairo_fill_extents expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_fill_extents&quot;, &quot;oddddv&quot;, false))" line="2573" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_fill_extents", "oddddv", false))]]></e></m></meta>
		</lime_cairo_fill_extents>
		<lime_cairo_fill_preserve expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_fill_preserve&quot;, &quot;ov&quot;, false))" line="2575" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_fill_preserve", "ov", false))]]></e></m></meta>
		</lime_cairo_fill_preserve>
		<lime_cairo_get_antialias expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_antialias&quot;, &quot;oi&quot;, false))" line="2577" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_antialias", "oi", false))]]></e></m></meta>
		</lime_cairo_get_antialias>
		<lime_cairo_get_current_point expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_current_point&quot;, &quot;oo&quot;, false))" line="2578" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_current_point", "oo", false))]]></e></m></meta>
		</lime_cairo_get_current_point>
		<lime_cairo_get_dash expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_dash&quot;, &quot;oo&quot;, false))" line="2580" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_dash", "oo", false))]]></e></m></meta>
		</lime_cairo_get_dash>
		<lime_cairo_get_dash_count expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_dash_count&quot;, &quot;oi&quot;, false))" line="2581" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_dash_count", "oi", false))]]></e></m></meta>
		</lime_cairo_get_dash_count>
		<lime_cairo_get_fill_rule expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_fill_rule&quot;, &quot;oi&quot;, false))" line="2582" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_fill_rule", "oi", false))]]></e></m></meta>
		</lime_cairo_get_fill_rule>
		<lime_cairo_get_font_face expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_font_face&quot;, &quot;oo&quot;, false))" line="2583" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_font_face", "oo", false))]]></e></m></meta>
		</lime_cairo_get_font_face>
		<lime_cairo_get_font_options expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_font_options&quot;, &quot;oo&quot;, false))" line="2585" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_font_options", "oo", false))]]></e></m></meta>
		</lime_cairo_get_font_options>
		<lime_cairo_get_group_target expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_group_target&quot;, &quot;oo&quot;, false))" line="2587" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_group_target", "oo", false))]]></e></m></meta>
		</lime_cairo_get_group_target>
		<lime_cairo_get_line_cap expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_line_cap&quot;, &quot;oi&quot;, false))" line="2589" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_line_cap", "oi", false))]]></e></m></meta>
		</lime_cairo_get_line_cap>
		<lime_cairo_get_line_join expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_line_join&quot;, &quot;oi&quot;, false))" line="2590" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_line_join", "oi", false))]]></e></m></meta>
		</lime_cairo_get_line_join>
		<lime_cairo_get_line_width expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_line_width&quot;, &quot;od&quot;, false))" line="2591" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_line_width", "od", false))]]></e></m></meta>
		</lime_cairo_get_line_width>
		<lime_cairo_get_matrix expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_matrix&quot;, &quot;oo&quot;, false))" line="2592" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_matrix", "oo", false))]]></e></m></meta>
		</lime_cairo_get_matrix>
		<lime_cairo_get_miter_limit expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_miter_limit&quot;, &quot;od&quot;, false))" line="2593" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_miter_limit", "od", false))]]></e></m></meta>
		</lime_cairo_get_miter_limit>
		<lime_cairo_get_operator expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_operator&quot;, &quot;oi&quot;, false))" line="2595" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_operator", "oi", false))]]></e></m></meta>
		</lime_cairo_get_operator>
		<lime_cairo_get_source expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_source&quot;, &quot;oo&quot;, false))" line="2596" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_source", "oo", false))]]></e></m></meta>
		</lime_cairo_get_source>
		<lime_cairo_get_target expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_target&quot;, &quot;oo&quot;, false))" line="2597" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_target", "oo", false))]]></e></m></meta>
		</lime_cairo_get_target>
		<lime_cairo_get_tolerance expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_get_tolerance&quot;, &quot;od&quot;, false))" line="2598" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_get_tolerance", "od", false))]]></e></m></meta>
		</lime_cairo_get_tolerance>
		<lime_cairo_has_current_point expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_has_current_point&quot;, &quot;ob&quot;, false))" line="2599" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_has_current_point", "ob", false))]]></e></m></meta>
		</lime_cairo_has_current_point>
		<lime_cairo_identity_matrix expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_identity_matrix&quot;, &quot;ov&quot;, false))" line="2601" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_identity_matrix", "ov", false))]]></e></m></meta>
		</lime_cairo_identity_matrix>
		<lime_cairo_in_clip expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_in_clip&quot;, &quot;oddb&quot;, false))" line="2603" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_in_clip", "oddb", false))]]></e></m></meta>
		</lime_cairo_in_clip>
		<lime_cairo_in_fill expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_in_fill&quot;, &quot;oddb&quot;, false))" line="2605" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_in_fill", "oddb", false))]]></e></m></meta>
		</lime_cairo_in_fill>
		<lime_cairo_in_stroke expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_in_stroke&quot;, &quot;oddb&quot;, false))" line="2607" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_in_stroke", "oddb", false))]]></e></m></meta>
		</lime_cairo_in_stroke>
		<lime_cairo_line_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_line_to&quot;, &quot;oddv&quot;, false))" line="2609" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_line_to", "oddv", false))]]></e></m></meta>
		</lime_cairo_line_to>
		<lime_cairo_mask expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_mask&quot;, &quot;oov&quot;, false))" line="2611" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_mask", "oov", false))]]></e></m></meta>
		</lime_cairo_mask>
		<lime_cairo_mask_surface expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_mask_surface&quot;, &quot;ooddv&quot;, false))" line="2612" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_mask_surface", "ooddv", false))]]></e></m></meta>
		</lime_cairo_mask_surface>
		<lime_cairo_move_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_move_to&quot;, &quot;oddv&quot;, false))" line="2614" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_move_to", "oddv", false))]]></e></m></meta>
		</lime_cairo_move_to>
		<lime_cairo_new_path expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_new_path&quot;, &quot;ov&quot;, false))" line="2616" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_new_path", "ov", false))]]></e></m></meta>
		</lime_cairo_new_path>
		<lime_cairo_paint expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_paint&quot;, &quot;ov&quot;, false))" line="2617" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_paint", "ov", false))]]></e></m></meta>
		</lime_cairo_paint>
		<lime_cairo_paint_with_alpha expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_paint_with_alpha&quot;, &quot;odv&quot;, false))" line="2618" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_paint_with_alpha", "odv", false))]]></e></m></meta>
		</lime_cairo_paint_with_alpha>
		<lime_cairo_pop_group expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pop_group&quot;, &quot;oo&quot;, false))" line="2620" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pop_group", "oo", false))]]></e></m></meta>
		</lime_cairo_pop_group>
		<lime_cairo_pop_group_to_source expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pop_group_to_source&quot;, &quot;ov&quot;, false))" line="2621" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pop_group_to_source", "ov", false))]]></e></m></meta>
		</lime_cairo_pop_group_to_source>
		<lime_cairo_push_group expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_push_group&quot;, &quot;ov&quot;, false))" line="2623" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_push_group", "ov", false))]]></e></m></meta>
		</lime_cairo_push_group>
		<lime_cairo_push_group_with_content expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_push_group_with_content&quot;, &quot;oiv&quot;, false))" line="2624" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_push_group_with_content", "oiv", false))]]></e></m></meta>
		</lime_cairo_push_group_with_content>
		<lime_cairo_rectangle expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_rectangle&quot;, &quot;oddddv&quot;, false))" line="2626" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_rectangle", "oddddv", false))]]></e></m></meta>
		</lime_cairo_rectangle>
		<lime_cairo_rel_curve_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_rel_curve_to&quot;, &quot;oddddddv&quot;, false))" line="2628" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_rel_curve_to", "oddddddv", false))]]></e></m></meta>
		</lime_cairo_rel_curve_to>
		<lime_cairo_rel_line_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_rel_line_to&quot;, &quot;oddv&quot;, false))" line="2630" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_rel_line_to", "oddv", false))]]></e></m></meta>
		</lime_cairo_rel_line_to>
		<lime_cairo_rel_move_to expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_rel_move_to&quot;, &quot;oddv&quot;, false))" line="2632" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_rel_move_to", "oddv", false))]]></e></m></meta>
		</lime_cairo_rel_move_to>
		<lime_cairo_reset_clip expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_reset_clip&quot;, &quot;ov&quot;, false))" line="2634" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_reset_clip", "ov", false))]]></e></m></meta>
		</lime_cairo_reset_clip>
		<lime_cairo_restore expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_restore&quot;, &quot;ov&quot;, false))" line="2635" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_restore", "ov", false))]]></e></m></meta>
		</lime_cairo_restore>
		<lime_cairo_rotate expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_rotate&quot;, &quot;odv&quot;, false))" line="2636" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_rotate", "odv", false))]]></e></m></meta>
		</lime_cairo_rotate>
		<lime_cairo_save expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_save&quot;, &quot;ov&quot;, false))" line="2637" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_save", "ov", false))]]></e></m></meta>
		</lime_cairo_save>
		<lime_cairo_scale expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_scale&quot;, &quot;oddv&quot;, false))" line="2638" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_scale", "oddv", false))]]></e></m></meta>
		</lime_cairo_scale>
		<lime_cairo_set_antialias expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_antialias&quot;, &quot;oiv&quot;, false))" line="2640" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_set_antialias", "oiv", false))]]></e></m></meta>
		</lime_cairo_set_antialias>
		<lime_cairo_set_dash expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_dash&quot;, &quot;oov&quot;, false))" line="2642" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_set_dash", "oov", false))]]></e></m></meta>
		</lime_cairo_set_dash>
		<lime_cairo_set_fill_rule expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_fill_rule&quot;, &quot;oiv&quot;, false))" line="2644" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_set_fill_rule", "oiv", false))]]></e></m></meta>
		</lime_cairo_set_fill_rule>
		<lime_cairo_set_font_face expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_font_face&quot;, &quot;oov&quot;, false))" line="2646" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_set_font_face", "oov", false))]]></e></m></meta>
		</lime_cairo_set_font_face>
		<lime_cairo_set_font_options expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_font_options&quot;, &quot;oov&quot;, false))" line="2648" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_set_font_options", "oov", false))]]></e></m></meta>
		</lime_cairo_set_font_options>
		<lime_cairo_set_font_size expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_font_size&quot;, &quot;odv&quot;, false))" line="2650" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_font_size", "odv", false))]]></e></m></meta>
		</lime_cairo_set_font_size>
		<lime_cairo_set_line_cap expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_line_cap&quot;, &quot;oiv&quot;, false))" line="2652" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_set_line_cap", "oiv", false))]]></e></m></meta>
		</lime_cairo_set_line_cap>
		<lime_cairo_set_line_join expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_line_join&quot;, &quot;oiv&quot;, false))" line="2654" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_set_line_join", "oiv", false))]]></e></m></meta>
		</lime_cairo_set_line_join>
		<lime_cairo_set_line_width expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_line_width&quot;, &quot;odv&quot;, false))" line="2656" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_line_width", "odv", false))]]></e></m></meta>
		</lime_cairo_set_line_width>
		<lime_cairo_set_matrix expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_matrix&quot;, &quot;oddddddv&quot;, false))" line="2658" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_matrix", "oddddddv", false))]]></e></m></meta>
		</lime_cairo_set_matrix>
		<lime_cairo_set_miter_limit expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_miter_limit&quot;, &quot;odv&quot;, false))" line="2660" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_miter_limit", "odv", false))]]></e></m></meta>
		</lime_cairo_set_miter_limit>
		<lime_cairo_set_operator expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_operator&quot;, &quot;oiv&quot;, false))" line="2662" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_set_operator", "oiv", false))]]></e></m></meta>
		</lime_cairo_set_operator>
		<lime_cairo_set_source expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_source&quot;, &quot;oov&quot;, false))" line="2664" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_set_source", "oov", false))]]></e></m></meta>
		</lime_cairo_set_source>
		<lime_cairo_set_source_rgb expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_source_rgb&quot;, &quot;odddv&quot;, false))" line="2666" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_source_rgb", "odddv", false))]]></e></m></meta>
		</lime_cairo_set_source_rgb>
		<lime_cairo_set_source_rgba expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_source_rgba&quot;, &quot;oddddv&quot;, false))" line="2668" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_source_rgba", "oddddv", false))]]></e></m></meta>
		</lime_cairo_set_source_rgba>
		<lime_cairo_set_source_surface expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_source_surface&quot;, &quot;ooddv&quot;, false))" line="2670" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_source_surface", "ooddv", false))]]></e></m></meta>
		</lime_cairo_set_source_surface>
		<lime_cairo_set_tolerance expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_set_tolerance&quot;, &quot;odv&quot;, false))" line="2672" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_set_tolerance", "odv", false))]]></e></m></meta>
		</lime_cairo_set_tolerance>
		<lime_cairo_show_glyphs expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_show_glyphs&quot;, &quot;oov&quot;, false))" line="2674" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_show_glyphs", "oov", false))]]></e></m></meta>
		</lime_cairo_show_glyphs>
		<lime_cairo_show_page expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_show_page&quot;, &quot;ov&quot;, false))" line="2676" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_show_page", "ov", false))]]></e></m></meta>
		</lime_cairo_show_page>
		<lime_cairo_show_text expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_show_text&quot;, &quot;osv&quot;, false))" line="2677" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_cairo_show_text", "osv", false))]]></e></m></meta>
		</lime_cairo_show_text>
		<lime_cairo_status expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_status&quot;, &quot;oi&quot;, false))" line="2679" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_status", "oi", false))]]></e></m></meta>
		</lime_cairo_status>
		<lime_cairo_stroke expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_stroke&quot;, &quot;ov&quot;, false))" line="2680" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_stroke", "ov", false))]]></e></m></meta>
		</lime_cairo_stroke>
		<lime_cairo_stroke_extents expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_stroke_extents&quot;, &quot;oddddv&quot;, false))" line="2681" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_stroke_extents", "oddddv", false))]]></e></m></meta>
		</lime_cairo_stroke_extents>
		<lime_cairo_stroke_preserve expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_stroke_preserve&quot;, &quot;ov&quot;, false))" line="2683" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_stroke_preserve", "ov", false))]]></e></m></meta>
		</lime_cairo_stroke_preserve>
		<lime_cairo_text_path expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_text_path&quot;, &quot;osv&quot;, false))" line="2685" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_cairo_text_path", "osv", false))]]></e></m></meta>
		</lime_cairo_text_path>
		<lime_cairo_transform expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_transform&quot;, &quot;oov&quot;, false))" line="2687" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_transform", "oov", false))]]></e></m></meta>
		</lime_cairo_transform>
		<lime_cairo_translate expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_translate&quot;, &quot;oddv&quot;, false))" line="2689" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_translate", "oddv", false))]]></e></m></meta>
		</lime_cairo_translate>
		<lime_cairo_version expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_version&quot;, &quot;i&quot;, false))" line="2691" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_cairo_version", "i", false))]]></e></m></meta>
		</lime_cairo_version>
		<lime_cairo_version_string expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_version_string&quot;, &quot;s&quot;, false))" line="2692" static="1">
			<x path="cpp.Callable"><f a=""><c path="String"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_cairo_version_string", "s", false))]]></e></m></meta>
		</lime_cairo_version_string>
		<lime_cairo_font_face_status expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_face_status&quot;, &quot;oi&quot;, false))" line="2693" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_font_face_status", "oi", false))]]></e></m></meta>
		</lime_cairo_font_face_status>
		<lime_cairo_font_options_create expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_create&quot;, &quot;o&quot;, false))" line="2695" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_create", "o", false))]]></e></m></meta>
		</lime_cairo_font_options_create>
		<lime_cairo_font_options_get_antialias expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_get_antialias&quot;, &quot;oi&quot;, false))" line="2697" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_get_antialias", "oi", false))]]></e></m></meta>
		</lime_cairo_font_options_get_antialias>
		<lime_cairo_font_options_get_hint_metrics expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_get_hint_metrics&quot;, &quot;oi&quot;, false))" line="2699" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_get_hint_metrics", "oi", false))]]></e></m></meta>
		</lime_cairo_font_options_get_hint_metrics>
		<lime_cairo_font_options_get_hint_style expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_get_hint_style&quot;, &quot;oi&quot;, false))" line="2701" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_get_hint_style", "oi", false))]]></e></m></meta>
		</lime_cairo_font_options_get_hint_style>
		<lime_cairo_font_options_get_subpixel_order expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_get_subpixel_order&quot;, &quot;oi&quot;, false))" line="2703" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_get_subpixel_order", "oi", false))]]></e></m></meta>
		</lime_cairo_font_options_get_subpixel_order>
		<lime_cairo_font_options_set_antialias expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_set_antialias&quot;, &quot;oiv&quot;, false))" line="2705" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_set_antialias", "oiv", false))]]></e></m></meta>
		</lime_cairo_font_options_set_antialias>
		<lime_cairo_font_options_set_hint_metrics expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_set_hint_metrics&quot;, &quot;oiv&quot;, false))" line="2707" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_set_hint_metrics", "oiv", false))]]></e></m></meta>
		</lime_cairo_font_options_set_hint_metrics>
		<lime_cairo_font_options_set_hint_style expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_set_hint_style&quot;, &quot;oiv&quot;, false))" line="2709" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_set_hint_style", "oiv", false))]]></e></m></meta>
		</lime_cairo_font_options_set_hint_style>
		<lime_cairo_font_options_set_subpixel_order expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_font_options_set_subpixel_order&quot;, &quot;oiv&quot;, false))" line="2711" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_font_options_set_subpixel_order", "oiv", false))]]></e></m></meta>
		</lime_cairo_font_options_set_subpixel_order>
		<lime_cairo_ft_font_face_create expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_ft_font_face_create&quot;, &quot;oio&quot;, false))" line="2713" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_ft_font_face_create", "oio", false))]]></e></m></meta>
		</lime_cairo_ft_font_face_create>
		<lime_cairo_image_surface_create expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_create&quot;, &quot;iiio&quot;, false))" line="2715" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_create", "iiio", false))]]></e></m></meta>
		</lime_cairo_image_surface_create>
		<lime_cairo_image_surface_create_for_data expr="new cpp.Callable&lt;lime.utils.DataPointer -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_create_for_data&quot;, &quot;diiiio&quot;, false))" line="2717" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<lime.utils.DataPointer -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_create_for_data", "diiiio", false))]]></e></m></meta>
		</lime_cairo_image_surface_create_for_data>
		<lime_cairo_image_surface_get_data expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_get_data&quot;, &quot;od&quot;, false))" line="2719" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="lime.utils.DataPointer"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_get_data", "od", false))]]></e></m></meta>
		</lime_cairo_image_surface_get_data>
		<lime_cairo_image_surface_get_format expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_get_format&quot;, &quot;oi&quot;, false))" line="2721" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_get_format", "oi", false))]]></e></m></meta>
		</lime_cairo_image_surface_get_format>
		<lime_cairo_image_surface_get_height expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_get_height&quot;, &quot;oi&quot;, false))" line="2723" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_get_height", "oi", false))]]></e></m></meta>
		</lime_cairo_image_surface_get_height>
		<lime_cairo_image_surface_get_stride expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_get_stride&quot;, &quot;oi&quot;, false))" line="2725" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_get_stride", "oi", false))]]></e></m></meta>
		</lime_cairo_image_surface_get_stride>
		<lime_cairo_image_surface_get_width expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_image_surface_get_width&quot;, &quot;oi&quot;, false))" line="2727" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_image_surface_get_width", "oi", false))]]></e></m></meta>
		</lime_cairo_image_surface_get_width>
		<lime_cairo_pattern_add_color_stop_rgb expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_add_color_stop_rgb&quot;, &quot;oddddv&quot;, false))" line="2729" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_add_color_stop_rgb", "oddddv", false))]]></e></m></meta>
		</lime_cairo_pattern_add_color_stop_rgb>
		<lime_cairo_pattern_add_color_stop_rgba expr="new cpp.Callable&lt;cpp.Object -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_add_color_stop_rgba&quot;, &quot;odddddv&quot;, false))" line="2731" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_add_color_stop_rgba", "odddddv", false))]]></e></m></meta>
		</lime_cairo_pattern_add_color_stop_rgba>
		<lime_cairo_pattern_create_for_surface expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_create_for_surface&quot;, &quot;oo&quot;, false))" line="2733" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_create_for_surface", "oo", false))]]></e></m></meta>
		</lime_cairo_pattern_create_for_surface>
		<lime_cairo_pattern_create_linear expr="new cpp.Callable&lt;Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_create_linear&quot;, &quot;ddddo&quot;, false))" line="2735" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_create_linear", "ddddo", false))]]></e></m></meta>
		</lime_cairo_pattern_create_linear>
		<lime_cairo_pattern_create_radial expr="new cpp.Callable&lt;Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_create_radial&quot;, &quot;ddddddo&quot;, false))" line="2737" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Float -> Float -> Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_create_radial", "ddddddo", false))]]></e></m></meta>
		</lime_cairo_pattern_create_radial>
		<lime_cairo_pattern_create_rgb expr="new cpp.Callable&lt;Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_create_rgb&quot;, &quot;dddo&quot;, false))" line="2739" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_create_rgb", "dddo", false))]]></e></m></meta>
		</lime_cairo_pattern_create_rgb>
		<lime_cairo_pattern_create_rgba expr="new cpp.Callable&lt;Float -&gt; Float -&gt; Float -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_create_rgba&quot;, &quot;ddddo&quot;, false))" line="2741" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Float -> Float -> Float -> Float>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_create_rgba", "ddddo", false))]]></e></m></meta>
		</lime_cairo_pattern_create_rgba>
		<lime_cairo_pattern_get_color_stop_count expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_get_color_stop_count&quot;, &quot;oi&quot;, false))" line="2743" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_get_color_stop_count", "oi", false))]]></e></m></meta>
		</lime_cairo_pattern_get_color_stop_count>
		<lime_cairo_pattern_get_extend expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_get_extend&quot;, &quot;oi&quot;, false))" line="2745" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_get_extend", "oi", false))]]></e></m></meta>
		</lime_cairo_pattern_get_extend>
		<lime_cairo_pattern_get_filter expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_get_filter&quot;, &quot;oi&quot;, false))" line="2747" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_get_filter", "oi", false))]]></e></m></meta>
		</lime_cairo_pattern_get_filter>
		<lime_cairo_pattern_get_matrix expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_get_matrix&quot;, &quot;oo&quot;, false))" line="2749" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_get_matrix", "oo", false))]]></e></m></meta>
		</lime_cairo_pattern_get_matrix>
		<lime_cairo_pattern_set_extend expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_set_extend&quot;, &quot;oiv&quot;, false))" line="2751" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_set_extend", "oiv", false))]]></e></m></meta>
		</lime_cairo_pattern_set_extend>
		<lime_cairo_pattern_set_filter expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_set_filter&quot;, &quot;oiv&quot;, false))" line="2753" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_set_filter", "oiv", false))]]></e></m></meta>
		</lime_cairo_pattern_set_filter>
		<lime_cairo_pattern_set_matrix expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_pattern_set_matrix&quot;, &quot;oov&quot;, false))" line="2755" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_pattern_set_matrix", "oov", false))]]></e></m></meta>
		</lime_cairo_pattern_set_matrix>
		<lime_cairo_surface_flush expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_cairo_surface_flush&quot;, &quot;ov&quot;, false))" line="2757" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_cairo_surface_flush", "ov", false))]]></e></m></meta>
		</lime_cairo_surface_flush>
		<lime_curl_getdate expr="new cpp.Callable&lt;String -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_getdate&quot;, &quot;sdd&quot;, false))" line="3340" static="1">
			<x path="cpp.Callable"><f a=":">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String -> Float>(cpp.Prime._loadPrime("lime", "lime_curl_getdate", "sdd", false))]]></e></m></meta>
		</lime_curl_getdate>
		<lime_curl_global_cleanup expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_global_cleanup&quot;, &quot;v&quot;, false))" line="3341" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_curl_global_cleanup", "v", false))]]></e></m></meta>
		</lime_curl_global_cleanup>
		<lime_curl_global_init expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_global_init&quot;, &quot;ii&quot;, false))" line="3342" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_curl_global_init", "ii", false))]]></e></m></meta>
		</lime_curl_global_init>
		<lime_curl_version expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_version&quot;, &quot;o&quot;, false))" line="3343" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_curl_version", "o", false))]]></e></m></meta>
		</lime_curl_version>
		<lime_curl_version_info expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_version_info&quot;, &quot;io&quot;, false))" line="3344" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_curl_version_info", "io", false))]]></e></m></meta>
		</lime_curl_version_info>
		<lime_curl_easy_cleanup expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_cleanup&quot;, &quot;ov&quot;, false))" line="3345" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_cleanup", "ov", false))]]></e></m></meta>
		</lime_curl_easy_cleanup>
		<lime_curl_easy_duphandle expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_duphandle&quot;, &quot;oo&quot;, false))" line="3346" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_duphandle", "oo", false))]]></e></m></meta>
		</lime_curl_easy_duphandle>
		<lime_curl_easy_escape expr="new cpp.Callable&lt;cpp.Object -&gt; String -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_escape&quot;, &quot;osio&quot;, false))" line="3348" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<c path="String"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_escape", "osio", false))]]></e></m></meta>
		</lime_curl_easy_escape>
		<lime_curl_easy_flush expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_flush&quot;, &quot;ov&quot;, false))" line="3350" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_flush", "ov", false))]]></e></m></meta>
		</lime_curl_easy_flush>
		<lime_curl_easy_getinfo expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_getinfo&quot;, &quot;oio&quot;, false))" line="3351" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_getinfo", "oio", false))]]></e></m></meta>
		</lime_curl_easy_getinfo>
		<lime_curl_easy_init expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_init&quot;, &quot;o&quot;, false))" line="3353" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_curl_easy_init", "o", false))]]></e></m></meta>
		</lime_curl_easy_init>
		<lime_curl_easy_pause expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_pause&quot;, &quot;oii&quot;, false))" line="3354" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_pause", "oii", false))]]></e></m></meta>
		</lime_curl_easy_pause>
		<lime_curl_easy_perform expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_perform&quot;, &quot;oi&quot;, false))" line="3355" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_perform", "oi", false))]]></e></m></meta>
		</lime_curl_easy_perform>
		<lime_curl_easy_recv expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_recv&quot;, &quot;ooiii&quot;, false))" line="3356" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_recv", "ooiii", false))]]></e></m></meta>
		</lime_curl_easy_recv>
		<lime_curl_easy_reset expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_reset&quot;, &quot;ov&quot;, false))" line="3358" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_reset", "ov", false))]]></e></m></meta>
		</lime_curl_easy_reset>
		<lime_curl_easy_send expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_send&quot;, &quot;ooiii&quot;, false))" line="3359" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_send", "ooiii", false))]]></e></m></meta>
		</lime_curl_easy_send>
		<lime_curl_easy_setopt expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_setopt&quot;, &quot;oiooi&quot;, false))" line="3361" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_easy_setopt", "oiooi", false))]]></e></m></meta>
		</lime_curl_easy_setopt>
		<lime_curl_easy_strerror expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_strerror&quot;, &quot;io&quot;, false))" line="3363" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_strerror", "io", false))]]></e></m></meta>
		</lime_curl_easy_strerror>
		<lime_curl_easy_unescape expr="new cpp.Callable&lt;cpp.Object -&gt; String -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_easy_unescape&quot;, &quot;osiio&quot;, false))" line="3364" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_easy_unescape", "osiio", false))]]></e></m></meta>
		</lime_curl_easy_unescape>
		<lime_curl_multi_init expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_init&quot;, &quot;o&quot;, false))" line="3366" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_curl_multi_init", "o", false))]]></e></m></meta>
		</lime_curl_multi_init>
		<lime_curl_multi_add_handle expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_add_handle&quot;, &quot;oooi&quot;, false))" line="3367" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_add_handle", "oooi", false))]]></e></m></meta>
		</lime_curl_multi_add_handle>
		<lime_curl_multi_get_running_handles expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_get_running_handles&quot;, &quot;oi&quot;, false))" line="3369" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_get_running_handles", "oi", false))]]></e></m></meta>
		</lime_curl_multi_get_running_handles>
		<lime_curl_multi_info_read expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_info_read&quot;, &quot;oo&quot;, false))" line="3371" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_info_read", "oo", false))]]></e></m></meta>
		</lime_curl_multi_info_read>
		<lime_curl_multi_perform expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_perform&quot;, &quot;oi&quot;, false))" line="3373" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_perform", "oi", false))]]></e></m></meta>
		</lime_curl_multi_perform>
		<lime_curl_multi_remove_handle expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_remove_handle&quot;, &quot;ooi&quot;, false))" line="3374" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_remove_handle", "ooi", false))]]></e></m></meta>
		</lime_curl_multi_remove_handle>
		<lime_curl_multi_setopt expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_setopt&quot;, &quot;oioi&quot;, false))" line="3376" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_curl_multi_setopt", "oioi", false))]]></e></m></meta>
		</lime_curl_multi_setopt>
		<lime_curl_multi_wait expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_curl_multi_wait&quot;, &quot;oii&quot;, false))" line="3378" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_curl_multi_wait", "oii", false))]]></e></m></meta>
		</lime_curl_multi_wait>
		<lime_gl_active_texture expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_active_texture&quot;, &quot;iv&quot;, false))" line="4092" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_active_texture", "iv", false))]]></e></m></meta>
		</lime_gl_active_texture>
		<lime_gl_attach_shader expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_attach_shader&quot;, &quot;iiv&quot;, false))" line="4093" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_attach_shader", "iiv", false))]]></e></m></meta>
		</lime_gl_attach_shader>
		<lime_gl_begin_query expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_begin_query&quot;, &quot;iiv&quot;, false))" line="4094" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_begin_query", "iiv", false))]]></e></m></meta>
		</lime_gl_begin_query>
		<lime_gl_begin_transform_feedback expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_begin_transform_feedback&quot;, &quot;iv&quot;, false))" line="4095" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_begin_transform_feedback", "iv", false))]]></e></m></meta>
		</lime_gl_begin_transform_feedback>
		<lime_gl_bind_attrib_location expr="new cpp.Callable&lt;Int -&gt; Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_attrib_location&quot;, &quot;iisv&quot;, false))" line="4097" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_bind_attrib_location", "iisv", false))]]></e></m></meta>
		</lime_gl_bind_attrib_location>
		<lime_gl_bind_buffer expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_buffer&quot;, &quot;iiv&quot;, false))" line="4099" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_buffer", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_buffer>
		<lime_gl_bind_buffer_base expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_buffer_base&quot;, &quot;iiiv&quot;, false))" line="4100" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_buffer_base", "iiiv", false))]]></e></m></meta>
		</lime_gl_bind_buffer_base>
		<lime_gl_bind_buffer_range expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_buffer_range&quot;, &quot;iiidiv&quot;, false))" line="4102" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_buffer_range", "iiidiv", false))]]></e></m></meta>
		</lime_gl_bind_buffer_range>
		<lime_gl_bind_framebuffer expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_framebuffer&quot;, &quot;iiv&quot;, false))" line="4104" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_framebuffer", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_framebuffer>
		<lime_gl_bind_renderbuffer expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_renderbuffer&quot;, &quot;iiv&quot;, false))" line="4105" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_renderbuffer", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_renderbuffer>
		<lime_gl_bind_sampler expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_sampler&quot;, &quot;iiv&quot;, false))" line="4107" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_sampler", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_sampler>
		<lime_gl_bind_texture expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_texture&quot;, &quot;iiv&quot;, false))" line="4108" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_texture", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_texture>
		<lime_gl_bind_transform_feedback expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_transform_feedback&quot;, &quot;iiv&quot;, false))" line="4109" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_transform_feedback", "iiv", false))]]></e></m></meta>
		</lime_gl_bind_transform_feedback>
		<lime_gl_bind_vertex_array expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_bind_vertex_array&quot;, &quot;iv&quot;, false))" line="4111" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_bind_vertex_array", "iv", false))]]></e></m></meta>
		</lime_gl_bind_vertex_array>
		<lime_gl_blend_color expr="new cpp.Callable&lt;cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blend_color&quot;, &quot;ffffv&quot;, false))" line="4112" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32 -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_blend_color", "ffffv", false))]]></e></m></meta>
		</lime_gl_blend_color>
		<lime_gl_blend_equation expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blend_equation&quot;, &quot;iv&quot;, false))" line="4114" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_blend_equation", "iv", false))]]></e></m></meta>
		</lime_gl_blend_equation>
		<lime_gl_blend_equation_separate expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blend_equation_separate&quot;, &quot;iiv&quot;, false))" line="4115" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_blend_equation_separate", "iiv", false))]]></e></m></meta>
		</lime_gl_blend_equation_separate>
		<lime_gl_blend_func expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blend_func&quot;, &quot;iiv&quot;, false))" line="4117" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_blend_func", "iiv", false))]]></e></m></meta>
		</lime_gl_blend_func>
		<lime_gl_blend_func_separate expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blend_func_separate&quot;, &quot;iiiiv&quot;, false))" line="4118" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_blend_func_separate", "iiiiv", false))]]></e></m></meta>
		</lime_gl_blend_func_separate>
		<lime_gl_blit_framebuffer expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_blit_framebuffer&quot;, &quot;iiiiiiiiiiv&quot;, false))" line="4120" static="1">
			<x path="cpp.Callable"><f a=":::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_blit_framebuffer", "iiiiiiiiiiv", false))]]></e></m></meta>
		</lime_gl_blit_framebuffer>
		<lime_gl_buffer_data expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_buffer_data&quot;, &quot;iidiv&quot;, false))" line="4122" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_buffer_data", "iidiv", false))]]></e></m></meta>
		</lime_gl_buffer_data>
		<lime_gl_buffer_sub_data expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_buffer_sub_data&quot;, &quot;iiidv&quot;, false))" line="4124" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_buffer_sub_data", "iiidv", false))]]></e></m></meta>
		</lime_gl_buffer_sub_data>
		<lime_gl_check_framebuffer_status expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_check_framebuffer_status&quot;, &quot;ii&quot;, false))" line="4126" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_check_framebuffer_status", "ii", false))]]></e></m></meta>
		</lime_gl_check_framebuffer_status>
		<lime_gl_clear expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear&quot;, &quot;iv&quot;, false))" line="4128" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_clear", "iv", false))]]></e></m></meta>
		</lime_gl_clear>
		<lime_gl_clear_bufferfi expr="new cpp.Callable&lt;Int -&gt; Int -&gt; cpp.Float32 -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_bufferfi&quot;, &quot;iifiv&quot;, false))" line="4129" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> cpp.Float32 -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_clear_bufferfi", "iifiv", false))]]></e></m></meta>
		</lime_gl_clear_bufferfi>
		<lime_gl_clear_bufferfv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_bufferfv&quot;, &quot;iidv&quot;, false))" line="4131" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_clear_bufferfv", "iidv", false))]]></e></m></meta>
		</lime_gl_clear_bufferfv>
		<lime_gl_clear_bufferiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_bufferiv&quot;, &quot;iidv&quot;, false))" line="4133" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_clear_bufferiv", "iidv", false))]]></e></m></meta>
		</lime_gl_clear_bufferiv>
		<lime_gl_clear_bufferuiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_bufferuiv&quot;, &quot;iidv&quot;, false))" line="4135" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_clear_bufferuiv", "iidv", false))]]></e></m></meta>
		</lime_gl_clear_bufferuiv>
		<lime_gl_client_wait_sync expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_client_wait_sync&quot;, &quot;oiiii&quot;, false))" line="4137" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_client_wait_sync", "oiiii", false))]]></e></m></meta>
		</lime_gl_client_wait_sync>
		<lime_gl_clear_color expr="new cpp.Callable&lt;cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_color&quot;, &quot;ffffv&quot;, false))" line="4139" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32 -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_clear_color", "ffffv", false))]]></e></m></meta>
		</lime_gl_clear_color>
		<lime_gl_clear_depthf expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_depthf&quot;, &quot;fv&quot;, false))" line="4141" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_clear_depthf", "fv", false))]]></e></m></meta>
		</lime_gl_clear_depthf>
		<lime_gl_clear_stencil expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_clear_stencil&quot;, &quot;iv&quot;, false))" line="4142" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_clear_stencil", "iv", false))]]></e></m></meta>
		</lime_gl_clear_stencil>
		<lime_gl_color_mask expr="new cpp.Callable&lt;Bool -&gt; Bool -&gt; Bool -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_color_mask&quot;, &quot;bbbbv&quot;, false))" line="4143" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Bool -> Bool -> Bool -> Bool>(cpp.Prime._loadPrime("lime", "lime_gl_color_mask", "bbbbv", false))]]></e></m></meta>
		</lime_gl_color_mask>
		<lime_gl_compile_shader expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_compile_shader&quot;, &quot;iv&quot;, false))" line="4145" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_compile_shader", "iv", false))]]></e></m></meta>
		</lime_gl_compile_shader>
		<lime_gl_compressed_tex_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_compressed_tex_image_2d&quot;, &quot;iiiiiiidv&quot;, false))" line="4146" static="1">
			<x path="cpp.Callable"><f a=":::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_compressed_tex_image_2d", "iiiiiiidv", false))]]></e></m></meta>
		</lime_gl_compressed_tex_image_2d>
		<lime_gl_compressed_tex_image_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_compressed_tex_image_3d&quot;, &quot;iiiiiiiidv&quot;, false))" line="4148" static="1">
			<x path="cpp.Callable"><f a="::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_compressed_tex_image_3d", "iiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_compressed_tex_image_3d>
		<lime_gl_compressed_tex_sub_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_compressed_tex_sub_image_2d&quot;, &quot;iiiiiiiidv&quot;, false))" line="4150" static="1">
			<x path="cpp.Callable"><f a="::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_compressed_tex_sub_image_2d", "iiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_compressed_tex_sub_image_2d>
		<lime_gl_compressed_tex_sub_image_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_compressed_tex_sub_image_3d&quot;, &quot;iiiiiiiiiidv&quot;, false))" line="4152" static="1">
			<x path="cpp.Callable"><f a="::::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_compressed_tex_sub_image_3d", "iiiiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_compressed_tex_sub_image_3d>
		<lime_gl_copy_buffer_sub_data expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_copy_buffer_sub_data&quot;, &quot;iiddiv&quot;, false))" line="4154" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_copy_buffer_sub_data", "iiddiv", false))]]></e></m></meta>
		</lime_gl_copy_buffer_sub_data>
		<lime_gl_copy_tex_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_copy_tex_image_2d&quot;, &quot;iiiiiiiiv&quot;, false))" line="4156" static="1">
			<x path="cpp.Callable"><f a=":::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_copy_tex_image_2d", "iiiiiiiiv", false))]]></e></m></meta>
		</lime_gl_copy_tex_image_2d>
		<lime_gl_copy_tex_sub_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_copy_tex_sub_image_2d&quot;, &quot;iiiiiiiiv&quot;, false))" line="4158" static="1">
			<x path="cpp.Callable"><f a=":::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_copy_tex_sub_image_2d", "iiiiiiiiv", false))]]></e></m></meta>
		</lime_gl_copy_tex_sub_image_2d>
		<lime_gl_copy_tex_sub_image_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_copy_tex_sub_image_3d&quot;, &quot;iiiiiiiiiv&quot;, false))" line="4160" static="1">
			<x path="cpp.Callable"><f a="::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_copy_tex_sub_image_3d", "iiiiiiiiiv", false))]]></e></m></meta>
		</lime_gl_copy_tex_sub_image_3d>
		<lime_gl_create_buffer expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_buffer&quot;, &quot;i&quot;, false))" line="4162" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_buffer", "i", false))]]></e></m></meta>
		</lime_gl_create_buffer>
		<lime_gl_create_framebuffer expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_framebuffer&quot;, &quot;i&quot;, false))" line="4163" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_framebuffer", "i", false))]]></e></m></meta>
		</lime_gl_create_framebuffer>
		<lime_gl_create_program expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_program&quot;, &quot;i&quot;, false))" line="4164" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_program", "i", false))]]></e></m></meta>
		</lime_gl_create_program>
		<lime_gl_create_query expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_query&quot;, &quot;i&quot;, false))" line="4165" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_query", "i", false))]]></e></m></meta>
		</lime_gl_create_query>
		<lime_gl_create_renderbuffer expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_renderbuffer&quot;, &quot;i&quot;, false))" line="4166" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_renderbuffer", "i", false))]]></e></m></meta>
		</lime_gl_create_renderbuffer>
		<lime_gl_create_sampler expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_sampler&quot;, &quot;i&quot;, false))" line="4167" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_sampler", "i", false))]]></e></m></meta>
		</lime_gl_create_sampler>
		<lime_gl_create_shader expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_shader&quot;, &quot;ii&quot;, false))" line="4168" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_create_shader", "ii", false))]]></e></m></meta>
		</lime_gl_create_shader>
		<lime_gl_create_texture expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_texture&quot;, &quot;i&quot;, false))" line="4169" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_texture", "i", false))]]></e></m></meta>
		</lime_gl_create_texture>
		<lime_gl_create_transform_feedback expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_transform_feedback&quot;, &quot;i&quot;, false))" line="4170" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_transform_feedback", "i", false))]]></e></m></meta>
		</lime_gl_create_transform_feedback>
		<lime_gl_create_vertex_array expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_create_vertex_array&quot;, &quot;i&quot;, false))" line="4172" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_create_vertex_array", "i", false))]]></e></m></meta>
		</lime_gl_create_vertex_array>
		<lime_gl_cull_face expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_cull_face&quot;, &quot;iv&quot;, false))" line="4173" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_cull_face", "iv", false))]]></e></m></meta>
		</lime_gl_cull_face>
		<lime_gl_delete_buffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_buffer&quot;, &quot;iv&quot;, false))" line="4174" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_buffer", "iv", false))]]></e></m></meta>
		</lime_gl_delete_buffer>
		<lime_gl_delete_framebuffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_framebuffer&quot;, &quot;iv&quot;, false))" line="4175" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_framebuffer", "iv", false))]]></e></m></meta>
		</lime_gl_delete_framebuffer>
		<lime_gl_delete_program expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_program&quot;, &quot;iv&quot;, false))" line="4176" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_program", "iv", false))]]></e></m></meta>
		</lime_gl_delete_program>
		<lime_gl_delete_query expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_query&quot;, &quot;iv&quot;, false))" line="4177" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_query", "iv", false))]]></e></m></meta>
		</lime_gl_delete_query>
		<lime_gl_delete_renderbuffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_renderbuffer&quot;, &quot;iv&quot;, false))" line="4178" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_renderbuffer", "iv", false))]]></e></m></meta>
		</lime_gl_delete_renderbuffer>
		<lime_gl_delete_sampler expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_sampler&quot;, &quot;iv&quot;, false))" line="4179" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_sampler", "iv", false))]]></e></m></meta>
		</lime_gl_delete_sampler>
		<lime_gl_delete_shader expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_shader&quot;, &quot;iv&quot;, false))" line="4180" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_shader", "iv", false))]]></e></m></meta>
		</lime_gl_delete_shader>
		<lime_gl_delete_sync expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_sync&quot;, &quot;ov&quot;, false))" line="4181" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_delete_sync", "ov", false))]]></e></m></meta>
		</lime_gl_delete_sync>
		<lime_gl_delete_texture expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_texture&quot;, &quot;iv&quot;, false))" line="4182" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_texture", "iv", false))]]></e></m></meta>
		</lime_gl_delete_texture>
		<lime_gl_delete_transform_feedback expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_transform_feedback&quot;, &quot;iv&quot;, false))" line="4183" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_transform_feedback", "iv", false))]]></e></m></meta>
		</lime_gl_delete_transform_feedback>
		<lime_gl_delete_vertex_array expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_delete_vertex_array&quot;, &quot;iv&quot;, false))" line="4185" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_delete_vertex_array", "iv", false))]]></e></m></meta>
		</lime_gl_delete_vertex_array>
		<lime_gl_depth_func expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_depth_func&quot;, &quot;iv&quot;, false))" line="4186" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_depth_func", "iv", false))]]></e></m></meta>
		</lime_gl_depth_func>
		<lime_gl_depth_mask expr="new cpp.Callable&lt;Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_depth_mask&quot;, &quot;bv&quot;, false))" line="4187" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Bool>(cpp.Prime._loadPrime("lime", "lime_gl_depth_mask", "bv", false))]]></e></m></meta>
		</lime_gl_depth_mask>
		<lime_gl_depth_rangef expr="new cpp.Callable&lt;cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_depth_rangef&quot;, &quot;ffv&quot;, false))" line="4188" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_depth_rangef", "ffv", false))]]></e></m></meta>
		</lime_gl_depth_rangef>
		<lime_gl_detach_shader expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_detach_shader&quot;, &quot;iiv&quot;, false))" line="4190" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_detach_shader", "iiv", false))]]></e></m></meta>
		</lime_gl_detach_shader>
		<lime_gl_disable expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_disable&quot;, &quot;iv&quot;, false))" line="4191" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_disable", "iv", false))]]></e></m></meta>
		</lime_gl_disable>
		<lime_gl_disable_vertex_attrib_array expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_disable_vertex_attrib_array&quot;, &quot;iv&quot;, false))" line="4192" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_disable_vertex_attrib_array", "iv", false))]]></e></m></meta>
		</lime_gl_disable_vertex_attrib_array>
		<lime_gl_draw_arrays expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_arrays&quot;, &quot;iiiv&quot;, false))" line="4194" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_draw_arrays", "iiiv", false))]]></e></m></meta>
		</lime_gl_draw_arrays>
		<lime_gl_draw_arrays_instanced expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_arrays_instanced&quot;, &quot;iiiiv&quot;, false))" line="4195" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_draw_arrays_instanced", "iiiiv", false))]]></e></m></meta>
		</lime_gl_draw_arrays_instanced>
		<lime_gl_draw_buffers expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_buffers&quot;, &quot;ov&quot;, false))" line="4197" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_draw_buffers", "ov", false))]]></e></m></meta>
		</lime_gl_draw_buffers>
		<lime_gl_draw_elements expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_elements&quot;, &quot;iiidv&quot;, false))" line="4198" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_draw_elements", "iiidv", false))]]></e></m></meta>
		</lime_gl_draw_elements>
		<lime_gl_draw_elements_instanced expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_elements_instanced&quot;, &quot;iiidiv&quot;, false))" line="4200" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_draw_elements_instanced", "iiidiv", false))]]></e></m></meta>
		</lime_gl_draw_elements_instanced>
		<lime_gl_draw_range_elements expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_draw_range_elements&quot;, &quot;iiiiidv&quot;, false))" line="4202" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_draw_range_elements", "iiiiidv", false))]]></e></m></meta>
		</lime_gl_draw_range_elements>
		<lime_gl_enable expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_enable&quot;, &quot;iv&quot;, false))" line="4204" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_enable", "iv", false))]]></e></m></meta>
		</lime_gl_enable>
		<lime_gl_enable_vertex_attrib_array expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_enable_vertex_attrib_array&quot;, &quot;iv&quot;, false))" line="4205" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_enable_vertex_attrib_array", "iv", false))]]></e></m></meta>
		</lime_gl_enable_vertex_attrib_array>
		<lime_gl_end_query expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_end_query&quot;, &quot;iv&quot;, false))" line="4207" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_end_query", "iv", false))]]></e></m></meta>
		</lime_gl_end_query>
		<lime_gl_end_transform_feedback expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_end_transform_feedback&quot;, &quot;v&quot;, false))" line="4208" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_end_transform_feedback", "v", false))]]></e></m></meta>
		</lime_gl_end_transform_feedback>
		<lime_gl_fence_sync expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_fence_sync&quot;, &quot;iio&quot;, false))" line="4210" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_fence_sync", "iio", false))]]></e></m></meta>
		</lime_gl_fence_sync>
		<lime_gl_finish expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_finish&quot;, &quot;v&quot;, false))" line="4211" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_finish", "v", false))]]></e></m></meta>
		</lime_gl_finish>
		<lime_gl_flush expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_flush&quot;, &quot;v&quot;, false))" line="4212" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_flush", "v", false))]]></e></m></meta>
		</lime_gl_flush>
		<lime_gl_framebuffer_renderbuffer expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_framebuffer_renderbuffer&quot;, &quot;iiiiv&quot;, false))" line="4213" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_framebuffer_renderbuffer", "iiiiv", false))]]></e></m></meta>
		</lime_gl_framebuffer_renderbuffer>
		<lime_gl_framebuffer_texture2D expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_framebuffer_texture2D&quot;, &quot;iiiiiv&quot;, false))" line="4215" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_framebuffer_texture2D", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_framebuffer_texture2D>
		<lime_gl_framebuffer_texture_layer expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_framebuffer_texture_layer&quot;, &quot;iiiiiv&quot;, false))" line="4217" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_framebuffer_texture_layer", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_framebuffer_texture_layer>
		<lime_gl_front_face expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_front_face&quot;, &quot;iv&quot;, false))" line="4219" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_front_face", "iv", false))]]></e></m></meta>
		</lime_gl_front_face>
		<lime_gl_generate_mipmap expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_generate_mipmap&quot;, &quot;iv&quot;, false))" line="4220" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_generate_mipmap", "iv", false))]]></e></m></meta>
		</lime_gl_generate_mipmap>
		<lime_gl_get_active_attrib expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_attrib&quot;, &quot;iio&quot;, false))" line="4221" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_attrib", "iio", false))]]></e></m></meta>
		</lime_gl_get_active_attrib>
		<lime_gl_get_active_uniform expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_uniform&quot;, &quot;iio&quot;, false))" line="4223" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_uniform", "iio", false))]]></e></m></meta>
		</lime_gl_get_active_uniform>
		<lime_gl_get_active_uniform_blocki expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_uniform_blocki&quot;, &quot;iiii&quot;, false))" line="4225" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_uniform_blocki", "iiii", false))]]></e></m></meta>
		</lime_gl_get_active_uniform_blocki>
		<lime_gl_get_active_uniform_blockiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_uniform_blockiv&quot;, &quot;iiidv&quot;, false))" line="4227" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_uniform_blockiv", "iiidv", false))]]></e></m></meta>
		</lime_gl_get_active_uniform_blockiv>
		<lime_gl_get_active_uniform_block_name expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_uniform_block_name&quot;, &quot;iio&quot;, false))" line="4229" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_uniform_block_name", "iio", false))]]></e></m></meta>
		</lime_gl_get_active_uniform_block_name>
		<lime_gl_get_active_uniformsiv expr="new cpp.Callable&lt;Int -&gt; cpp.Object -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_active_uniformsiv&quot;, &quot;ioidv&quot;, false))" line="4231" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_active_uniformsiv", "ioidv", false))]]></e></m></meta>
		</lime_gl_get_active_uniformsiv>
		<lime_gl_get_attached_shaders expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_attached_shaders&quot;, &quot;io&quot;, false))" line="4233" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_attached_shaders", "io", false))]]></e></m></meta>
		</lime_gl_get_attached_shaders>
		<lime_gl_get_attrib_location expr="new cpp.Callable&lt;Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_attrib_location&quot;, &quot;isi&quot;, false))" line="4235" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_get_attrib_location", "isi", false))]]></e></m></meta>
		</lime_gl_get_attrib_location>
		<lime_gl_get_boolean expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_boolean&quot;, &quot;ib&quot;, false))" line="4237" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_boolean", "ib", false))]]></e></m></meta>
		</lime_gl_get_boolean>
		<lime_gl_get_booleanv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_booleanv&quot;, &quot;idv&quot;, false))" line="4238" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_booleanv", "idv", false))]]></e></m></meta>
		</lime_gl_get_booleanv>
		<lime_gl_get_buffer_parameteri expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_buffer_parameteri&quot;, &quot;iii&quot;, false))" line="4240" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_buffer_parameteri", "iii", false))]]></e></m></meta>
		</lime_gl_get_buffer_parameteri>
		<lime_gl_get_buffer_parameteri64v expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_buffer_parameteri64v&quot;, &quot;iidv&quot;, false))" line="4242" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_buffer_parameteri64v", "iidv", false))]]></e></m></meta>
		</lime_gl_get_buffer_parameteri64v>
		<lime_gl_get_buffer_parameteriv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_buffer_parameteriv&quot;, &quot;iidv&quot;, false))" line="4244" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_buffer_parameteriv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_buffer_parameteriv>
		<lime_gl_get_buffer_pointerv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_buffer_pointerv&quot;, &quot;iid&quot;, false))" line="4246" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_buffer_pointerv", "iid", false))]]></e></m></meta>
		</lime_gl_get_buffer_pointerv>
		<lime_gl_get_buffer_sub_data expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_buffer_sub_data&quot;, &quot;ididv&quot;, false))" line="4248" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_buffer_sub_data", "ididv", false))]]></e></m></meta>
		</lime_gl_get_buffer_sub_data>
		<lime_gl_get_context_attributes expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_context_attributes&quot;, &quot;o&quot;, false))" line="4250" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_get_context_attributes", "o", false))]]></e></m></meta>
		</lime_gl_get_context_attributes>
		<lime_gl_get_error expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_error&quot;, &quot;i&quot;, false))" line="4252" static="1">
			<x path="cpp.Callable"><f a=""><x path="Int"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_get_error", "i", false))]]></e></m></meta>
		</lime_gl_get_error>
		<lime_gl_get_extension expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_extension&quot;, &quot;so&quot;, false))" line="4253" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_gl_get_extension", "so", false))]]></e></m></meta>
		</lime_gl_get_extension>
		<lime_gl_get_float expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_float&quot;, &quot;if&quot;, false))" line="4254" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_float", "if", false))]]></e></m></meta>
		</lime_gl_get_float>
		<lime_gl_get_floatv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_floatv&quot;, &quot;idv&quot;, false))" line="4255" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_floatv", "idv", false))]]></e></m></meta>
		</lime_gl_get_floatv>
		<lime_gl_get_frag_data_location expr="new cpp.Callable&lt;Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_frag_data_location&quot;, &quot;isi&quot;, false))" line="4257" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_get_frag_data_location", "isi", false))]]></e></m></meta>
		</lime_gl_get_frag_data_location>
		<lime_gl_get_framebuffer_attachment_parameteri expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_framebuffer_attachment_parameteri&quot;, &quot;iiii&quot;, false))" line="4259" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_framebuffer_attachment_parameteri", "iiii", false))]]></e></m></meta>
		</lime_gl_get_framebuffer_attachment_parameteri>
		<lime_gl_get_framebuffer_attachment_parameteriv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_framebuffer_attachment_parameteriv&quot;, &quot;iiidv&quot;, false))" line="4261" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_framebuffer_attachment_parameteriv", "iiidv", false))]]></e></m></meta>
		</lime_gl_get_framebuffer_attachment_parameteriv>
		<lime_gl_get_integer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_integer&quot;, &quot;ii&quot;, false))" line="4263" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_integer", "ii", false))]]></e></m></meta>
		</lime_gl_get_integer>
		<lime_gl_get_integer64v expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_integer64v&quot;, &quot;idv&quot;, false))" line="4264" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_integer64v", "idv", false))]]></e></m></meta>
		</lime_gl_get_integer64v>
		<lime_gl_get_integer64i_v expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_integer64i_v&quot;, &quot;iidv&quot;, false))" line="4266" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_integer64i_v", "iidv", false))]]></e></m></meta>
		</lime_gl_get_integer64i_v>
		<lime_gl_get_integerv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_integerv&quot;, &quot;idv&quot;, false))" line="4268" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_integerv", "idv", false))]]></e></m></meta>
		</lime_gl_get_integerv>
		<lime_gl_get_integeri_v expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_integeri_v&quot;, &quot;iidv&quot;, false))" line="4270" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_integeri_v", "iidv", false))]]></e></m></meta>
		</lime_gl_get_integeri_v>
		<lime_gl_get_internalformativ expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_internalformativ&quot;, &quot;iiiidv&quot;, false))" line="4272" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_internalformativ", "iiiidv", false))]]></e></m></meta>
		</lime_gl_get_internalformativ>
		<lime_gl_get_program_binary expr="new cpp.Callable&lt;Int -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_program_binary&quot;, &quot;iiov&quot;, false))" line="4274" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_get_program_binary", "iiov", false))]]></e></m></meta>
		</lime_gl_get_program_binary>
		<lime_gl_get_program_info_log expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_program_info_log&quot;, &quot;io&quot;, false))" line="4276" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_program_info_log", "io", false))]]></e></m></meta>
		</lime_gl_get_program_info_log>
		<lime_gl_get_programi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_programi&quot;, &quot;iii&quot;, false))" line="4278" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_programi", "iii", false))]]></e></m></meta>
		</lime_gl_get_programi>
		<lime_gl_get_programiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_programiv&quot;, &quot;iidv&quot;, false))" line="4279" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_programiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_programiv>
		<lime_gl_get_queryi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_queryi&quot;, &quot;iii&quot;, false))" line="4281" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_queryi", "iii", false))]]></e></m></meta>
		</lime_gl_get_queryi>
		<lime_gl_get_queryiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_queryiv&quot;, &quot;iidv&quot;, false))" line="4282" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_queryiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_queryiv>
		<lime_gl_get_query_objectui expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_query_objectui&quot;, &quot;iii&quot;, false))" line="4284" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_query_objectui", "iii", false))]]></e></m></meta>
		</lime_gl_get_query_objectui>
		<lime_gl_get_query_objectuiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_query_objectuiv&quot;, &quot;iidv&quot;, false))" line="4285" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_query_objectuiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_query_objectuiv>
		<lime_gl_get_renderbuffer_parameteri expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_renderbuffer_parameteri&quot;, &quot;iii&quot;, false))" line="4287" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_renderbuffer_parameteri", "iii", false))]]></e></m></meta>
		</lime_gl_get_renderbuffer_parameteri>
		<lime_gl_get_renderbuffer_parameteriv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_renderbuffer_parameteriv&quot;, &quot;iidv&quot;, false))" line="4289" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_renderbuffer_parameteriv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_renderbuffer_parameteriv>
		<lime_gl_get_sampler_parameterf expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sampler_parameterf&quot;, &quot;iif&quot;, false))" line="4291" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_sampler_parameterf", "iif", false))]]></e></m></meta>
		</lime_gl_get_sampler_parameterf>
		<lime_gl_get_sampler_parameterfv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sampler_parameterfv&quot;, &quot;iidv&quot;, false))" line="4293" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_sampler_parameterfv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_sampler_parameterfv>
		<lime_gl_get_sampler_parameteri expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sampler_parameteri&quot;, &quot;iii&quot;, false))" line="4295" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_sampler_parameteri", "iii", false))]]></e></m></meta>
		</lime_gl_get_sampler_parameteri>
		<lime_gl_get_sampler_parameteriv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sampler_parameteriv&quot;, &quot;iidv&quot;, false))" line="4297" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_sampler_parameteriv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_sampler_parameteriv>
		<lime_gl_get_shader_info_log expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_shader_info_log&quot;, &quot;io&quot;, false))" line="4299" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_shader_info_log", "io", false))]]></e></m></meta>
		</lime_gl_get_shader_info_log>
		<lime_gl_get_shaderi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_shaderi&quot;, &quot;iii&quot;, false))" line="4301" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_shaderi", "iii", false))]]></e></m></meta>
		</lime_gl_get_shaderi>
		<lime_gl_get_shaderiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_shaderiv&quot;, &quot;iidv&quot;, false))" line="4302" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_shaderiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_shaderiv>
		<lime_gl_get_shader_precision_format expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_shader_precision_format&quot;, &quot;iio&quot;, false))" line="4304" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_shader_precision_format", "iio", false))]]></e></m></meta>
		</lime_gl_get_shader_precision_format>
		<lime_gl_get_shader_source expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_shader_source&quot;, &quot;io&quot;, false))" line="4306" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_shader_source", "io", false))]]></e></m></meta>
		</lime_gl_get_shader_source>
		<lime_gl_get_string expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_string&quot;, &quot;io&quot;, false))" line="4307" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_string", "io", false))]]></e></m></meta>
		</lime_gl_get_string>
		<lime_gl_get_stringi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_stringi&quot;, &quot;iio&quot;, false))" line="4308" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_stringi", "iio", false))]]></e></m></meta>
		</lime_gl_get_stringi>
		<lime_gl_get_sync_parameteri expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sync_parameteri&quot;, &quot;oii&quot;, false))" line="4309" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_sync_parameteri", "oii", false))]]></e></m></meta>
		</lime_gl_get_sync_parameteri>
		<lime_gl_get_sync_parameteriv expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_sync_parameteriv&quot;, &quot;oidv&quot;, false))" line="4311" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_sync_parameteriv", "oidv", false))]]></e></m></meta>
		</lime_gl_get_sync_parameteriv>
		<lime_gl_get_tex_parameterf expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_tex_parameterf&quot;, &quot;iif&quot;, false))" line="4313" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_tex_parameterf", "iif", false))]]></e></m></meta>
		</lime_gl_get_tex_parameterf>
		<lime_gl_get_tex_parameterfv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_tex_parameterfv&quot;, &quot;iidv&quot;, false))" line="4315" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_tex_parameterfv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_tex_parameterfv>
		<lime_gl_get_tex_parameteri expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_tex_parameteri&quot;, &quot;iii&quot;, false))" line="4317" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_tex_parameteri", "iii", false))]]></e></m></meta>
		</lime_gl_get_tex_parameteri>
		<lime_gl_get_tex_parameteriv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_tex_parameteriv&quot;, &quot;iidv&quot;, false))" line="4318" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_tex_parameteriv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_tex_parameteriv>
		<lime_gl_get_transform_feedback_varying expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_transform_feedback_varying&quot;, &quot;iio&quot;, false))" line="4320" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_transform_feedback_varying", "iio", false))]]></e></m></meta>
		</lime_gl_get_transform_feedback_varying>
		<lime_gl_get_uniformf expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformf&quot;, &quot;iif&quot;, false))" line="4322" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformf", "iif", false))]]></e></m></meta>
		</lime_gl_get_uniformf>
		<lime_gl_get_uniformfv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformfv&quot;, &quot;iidv&quot;, false))" line="4323" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformfv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_uniformfv>
		<lime_gl_get_uniformi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformi&quot;, &quot;iii&quot;, false))" line="4325" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformi", "iii", false))]]></e></m></meta>
		</lime_gl_get_uniformi>
		<lime_gl_get_uniformiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformiv&quot;, &quot;iidv&quot;, false))" line="4326" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_uniformiv>
		<lime_gl_get_uniformui expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformui&quot;, &quot;iii&quot;, false))" line="4328" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformui", "iii", false))]]></e></m></meta>
		</lime_gl_get_uniformui>
		<lime_gl_get_uniformuiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniformuiv&quot;, &quot;iidv&quot;, false))" line="4329" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniformuiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_uniformuiv>
		<lime_gl_get_uniform_block_index expr="new cpp.Callable&lt;Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniform_block_index&quot;, &quot;isi&quot;, false))" line="4331" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniform_block_index", "isi", false))]]></e></m></meta>
		</lime_gl_get_uniform_block_index>
		<lime_gl_get_uniform_location expr="new cpp.Callable&lt;Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_uniform_location&quot;, &quot;isi&quot;, false))" line="4333" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_get_uniform_location", "isi", false))]]></e></m></meta>
		</lime_gl_get_uniform_location>
		<lime_gl_get_vertex_attribf expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribf&quot;, &quot;iif&quot;, false))" line="4335" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribf", "iif", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribf>
		<lime_gl_get_vertex_attribfv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribfv&quot;, &quot;iidv&quot;, false))" line="4337" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribfv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribfv>
		<lime_gl_get_vertex_attribi expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribi&quot;, &quot;iii&quot;, false))" line="4339" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribi", "iii", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribi>
		<lime_gl_get_vertex_attribiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribiv&quot;, &quot;iidv&quot;, false))" line="4340" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribiv>
		<lime_gl_get_vertex_attribii expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribii&quot;, &quot;iii&quot;, false))" line="4342" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribii", "iii", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribii>
		<lime_gl_get_vertex_attribiiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribiiv&quot;, &quot;iidv&quot;, false))" line="4344" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribiiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribiiv>
		<lime_gl_get_vertex_attribiui expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribiui&quot;, &quot;iii&quot;, false))" line="4346" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribiui", "iii", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribiui>
		<lime_gl_get_vertex_attribiuiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attribiuiv&quot;, &quot;iidv&quot;, false))" line="4348" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attribiuiv", "iidv", false))]]></e></m></meta>
		</lime_gl_get_vertex_attribiuiv>
		<lime_gl_get_vertex_attrib_pointerv expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_get_vertex_attrib_pointerv&quot;, &quot;iid&quot;, false))" line="4350" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_get_vertex_attrib_pointerv", "iid", false))]]></e></m></meta>
		</lime_gl_get_vertex_attrib_pointerv>
		<lime_gl_hint expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_hint&quot;, &quot;iiv&quot;, false))" line="4352" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_hint", "iiv", false))]]></e></m></meta>
		</lime_gl_hint>
		<lime_gl_invalidate_framebuffer expr="new cpp.Callable&lt;Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_invalidate_framebuffer&quot;, &quot;iov&quot;, false))" line="4353" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_invalidate_framebuffer", "iov", false))]]></e></m></meta>
		</lime_gl_invalidate_framebuffer>
		<lime_gl_invalidate_sub_framebuffer expr="new cpp.Callable&lt;Int -&gt; cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_invalidate_sub_framebuffer&quot;, &quot;ioiiiiv&quot;, false))" line="4355" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_invalidate_sub_framebuffer", "ioiiiiv", false))]]></e></m></meta>
		</lime_gl_invalidate_sub_framebuffer>
		<lime_gl_is_buffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_buffer&quot;, &quot;ib&quot;, false))" line="4357" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_buffer", "ib", false))]]></e></m></meta>
		</lime_gl_is_buffer>
		<lime_gl_is_enabled expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_enabled&quot;, &quot;ib&quot;, false))" line="4358" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_enabled", "ib", false))]]></e></m></meta>
		</lime_gl_is_enabled>
		<lime_gl_is_framebuffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_framebuffer&quot;, &quot;ib&quot;, false))" line="4359" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_framebuffer", "ib", false))]]></e></m></meta>
		</lime_gl_is_framebuffer>
		<lime_gl_is_program expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_program&quot;, &quot;ib&quot;, false))" line="4360" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_program", "ib", false))]]></e></m></meta>
		</lime_gl_is_program>
		<lime_gl_is_query expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_query&quot;, &quot;ib&quot;, false))" line="4361" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_query", "ib", false))]]></e></m></meta>
		</lime_gl_is_query>
		<lime_gl_is_renderbuffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_renderbuffer&quot;, &quot;ib&quot;, false))" line="4362" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_renderbuffer", "ib", false))]]></e></m></meta>
		</lime_gl_is_renderbuffer>
		<lime_gl_is_sampler expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_sampler&quot;, &quot;ib&quot;, false))" line="4363" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_sampler", "ib", false))]]></e></m></meta>
		</lime_gl_is_sampler>
		<lime_gl_is_shader expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_shader&quot;, &quot;ib&quot;, false))" line="4364" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_shader", "ib", false))]]></e></m></meta>
		</lime_gl_is_shader>
		<lime_gl_is_sync expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_sync&quot;, &quot;ob&quot;, false))" line="4365" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_is_sync", "ob", false))]]></e></m></meta>
		</lime_gl_is_sync>
		<lime_gl_is_texture expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_texture&quot;, &quot;ib&quot;, false))" line="4366" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_texture", "ib", false))]]></e></m></meta>
		</lime_gl_is_texture>
		<lime_gl_is_transform_feedback expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_transform_feedback&quot;, &quot;ib&quot;, false))" line="4367" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_transform_feedback", "ib", false))]]></e></m></meta>
		</lime_gl_is_transform_feedback>
		<lime_gl_is_vertex_array expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_is_vertex_array&quot;, &quot;ib&quot;, false))" line="4368" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_is_vertex_array", "ib", false))]]></e></m></meta>
		</lime_gl_is_vertex_array>
		<lime_gl_line_width expr="new cpp.Callable&lt;cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_line_width&quot;, &quot;fv&quot;, false))" line="4369" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_line_width", "fv", false))]]></e></m></meta>
		</lime_gl_line_width>
		<lime_gl_link_program expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_link_program&quot;, &quot;iv&quot;, false))" line="4370" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_link_program", "iv", false))]]></e></m></meta>
		</lime_gl_link_program>
		<lime_gl_map_buffer_range expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_map_buffer_range&quot;, &quot;idiid&quot;, false))" line="4371" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_map_buffer_range", "idiid", false))]]></e></m></meta>
		</lime_gl_map_buffer_range>
		<lime_gl_object_deregister expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_object_deregister&quot;, &quot;ov&quot;, false))" line="4373" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_object_deregister", "ov", false))]]></e></m></meta>
		</lime_gl_object_deregister>
		<lime_gl_object_from_id expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_object_from_id&quot;, &quot;iio&quot;, false))" line="4375" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_object_from_id", "iio", false))]]></e></m></meta>
		</lime_gl_object_from_id>
		<lime_gl_object_register expr="new cpp.Callable&lt;Int -&gt; Int -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_object_register&quot;, &quot;iioo&quot;, false))" line="4376" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_gl_object_register", "iioo", false))]]></e></m></meta>
		</lime_gl_object_register>
		<lime_gl_pause_transform_feedback expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_pause_transform_feedback&quot;, &quot;v&quot;, false))" line="4378" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_pause_transform_feedback", "v", false))]]></e></m></meta>
		</lime_gl_pause_transform_feedback>
		<lime_gl_pixel_storei expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_pixel_storei&quot;, &quot;iiv&quot;, false))" line="4380" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_pixel_storei", "iiv", false))]]></e></m></meta>
		</lime_gl_pixel_storei>
		<lime_gl_polygon_offset expr="new cpp.Callable&lt;cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_polygon_offset&quot;, &quot;ffv&quot;, false))" line="4381" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_polygon_offset", "ffv", false))]]></e></m></meta>
		</lime_gl_polygon_offset>
		<lime_gl_program_binary expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_program_binary&quot;, &quot;iidiv&quot;, false))" line="4383" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_program_binary", "iidiv", false))]]></e></m></meta>
		</lime_gl_program_binary>
		<lime_gl_program_parameteri expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_program_parameteri&quot;, &quot;iiiv&quot;, false))" line="4385" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_program_parameteri", "iiiv", false))]]></e></m></meta>
		</lime_gl_program_parameteri>
		<lime_gl_read_buffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_read_buffer&quot;, &quot;iv&quot;, false))" line="4387" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_read_buffer", "iv", false))]]></e></m></meta>
		</lime_gl_read_buffer>
		<lime_gl_read_pixels expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_read_pixels&quot;, &quot;iiiiiidv&quot;, false))" line="4388" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_read_pixels", "iiiiiidv", false))]]></e></m></meta>
		</lime_gl_read_pixels>
		<lime_gl_release_shader_compiler expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_release_shader_compiler&quot;, &quot;v&quot;, false))" line="4390" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_release_shader_compiler", "v", false))]]></e></m></meta>
		</lime_gl_release_shader_compiler>
		<lime_gl_renderbuffer_storage expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_renderbuffer_storage&quot;, &quot;iiiiv&quot;, false))" line="4392" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_renderbuffer_storage", "iiiiv", false))]]></e></m></meta>
		</lime_gl_renderbuffer_storage>
		<lime_gl_renderbuffer_storage_multisample expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_renderbuffer_storage_multisample&quot;, &quot;iiiiiv&quot;, false))" line="4394" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_renderbuffer_storage_multisample", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_renderbuffer_storage_multisample>
		<lime_gl_resume_transform_feedback expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_resume_transform_feedback&quot;, &quot;v&quot;, false))" line="4396" static="1">
			<x path="cpp.Callable"><f a=""><c path="cpp.Void"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_gl_resume_transform_feedback", "v", false))]]></e></m></meta>
		</lime_gl_resume_transform_feedback>
		<lime_gl_sample_coverage expr="new cpp.Callable&lt;cpp.Float32 -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_sample_coverage&quot;, &quot;fbv&quot;, false))" line="4398" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="cpp.Float32"/>
	<x path="Bool"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Float32 -> Bool>(cpp.Prime._loadPrime("lime", "lime_gl_sample_coverage", "fbv", false))]]></e></m></meta>
		</lime_gl_sample_coverage>
		<lime_gl_sampler_parameterf expr="new cpp.Callable&lt;Int -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_sampler_parameterf&quot;, &quot;iifv&quot;, false))" line="4400" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_sampler_parameterf", "iifv", false))]]></e></m></meta>
		</lime_gl_sampler_parameterf>
		<lime_gl_sampler_parameteri expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_sampler_parameteri&quot;, &quot;iiiv&quot;, false))" line="4402" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_sampler_parameteri", "iiiv", false))]]></e></m></meta>
		</lime_gl_sampler_parameteri>
		<lime_gl_scissor expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_scissor&quot;, &quot;iiiiv&quot;, false))" line="4404" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_scissor", "iiiiv", false))]]></e></m></meta>
		</lime_gl_scissor>
		<lime_gl_shader_binary expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; lime.utils.DataPointer -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_shader_binary&quot;, &quot;oidiv&quot;, false))" line="4405" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> lime.utils.DataPointer -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_shader_binary", "oidiv", false))]]></e></m></meta>
		</lime_gl_shader_binary>
		<lime_gl_shader_source expr="new cpp.Callable&lt;Int -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_shader_source&quot;, &quot;isv&quot;, false))" line="4407" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<c path="String"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> String>(cpp.Prime._loadPrime("lime", "lime_gl_shader_source", "isv", false))]]></e></m></meta>
		</lime_gl_shader_source>
		<lime_gl_stencil_func expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_func&quot;, &quot;iiiv&quot;, false))" line="4408" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_func", "iiiv", false))]]></e></m></meta>
		</lime_gl_stencil_func>
		<lime_gl_stencil_func_separate expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_func_separate&quot;, &quot;iiiiv&quot;, false))" line="4409" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_func_separate", "iiiiv", false))]]></e></m></meta>
		</lime_gl_stencil_func_separate>
		<lime_gl_stencil_mask expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_mask&quot;, &quot;iv&quot;, false))" line="4411" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_mask", "iv", false))]]></e></m></meta>
		</lime_gl_stencil_mask>
		<lime_gl_stencil_mask_separate expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_mask_separate&quot;, &quot;iiv&quot;, false))" line="4412" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_mask_separate", "iiv", false))]]></e></m></meta>
		</lime_gl_stencil_mask_separate>
		<lime_gl_stencil_op expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_op&quot;, &quot;iiiv&quot;, false))" line="4414" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_op", "iiiv", false))]]></e></m></meta>
		</lime_gl_stencil_op>
		<lime_gl_stencil_op_separate expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_stencil_op_separate&quot;, &quot;iiiiv&quot;, false))" line="4415" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_stencil_op_separate", "iiiiv", false))]]></e></m></meta>
		</lime_gl_stencil_op_separate>
		<lime_gl_tex_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_image_2d&quot;, &quot;iiiiiiiidv&quot;, false))" line="4417" static="1">
			<x path="cpp.Callable"><f a="::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_tex_image_2d", "iiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_tex_image_2d>
		<lime_gl_tex_image_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_image_3d&quot;, &quot;iiiiiiiiidv&quot;, false))" line="4419" static="1">
			<x path="cpp.Callable"><f a=":::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_tex_image_3d", "iiiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_tex_image_3d>
		<lime_gl_tex_parameterf expr="new cpp.Callable&lt;Int -&gt; Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_parameterf&quot;, &quot;iifv&quot;, false))" line="4421" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_tex_parameterf", "iifv", false))]]></e></m></meta>
		</lime_gl_tex_parameterf>
		<lime_gl_tex_parameteri expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_parameteri&quot;, &quot;iiiv&quot;, false))" line="4423" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_tex_parameteri", "iiiv", false))]]></e></m></meta>
		</lime_gl_tex_parameteri>
		<lime_gl_tex_storage_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_storage_2d&quot;, &quot;iiiiiv&quot;, false))" line="4425" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_tex_storage_2d", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_tex_storage_2d>
		<lime_gl_tex_storage_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_storage_3d&quot;, &quot;iiiiiiv&quot;, false))" line="4427" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_tex_storage_3d", "iiiiiiv", false))]]></e></m></meta>
		</lime_gl_tex_storage_3d>
		<lime_gl_tex_sub_image_2d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_sub_image_2d&quot;, &quot;iiiiiiiidv&quot;, false))" line="4429" static="1">
			<x path="cpp.Callable"><f a="::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_tex_sub_image_2d", "iiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_tex_sub_image_2d>
		<lime_gl_tex_sub_image_3d expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_tex_sub_image_3d&quot;, &quot;iiiiiiiiiidv&quot;, false))" line="4431" static="1">
			<x path="cpp.Callable"><f a="::::::::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_tex_sub_image_3d", "iiiiiiiiiidv", false))]]></e></m></meta>
		</lime_gl_tex_sub_image_3d>
		<lime_gl_transform_feedback_varyings expr="new cpp.Callable&lt;Int -&gt; cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_transform_feedback_varyings&quot;, &quot;ioiv&quot;, false))" line="4433" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_transform_feedback_varyings", "ioiv", false))]]></e></m></meta>
		</lime_gl_transform_feedback_varyings>
		<lime_gl_uniform1f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1f&quot;, &quot;ifv&quot;, false))" line="4435" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1f", "ifv", false))]]></e></m></meta>
		</lime_gl_uniform1f>
		<lime_gl_uniform1fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1fv&quot;, &quot;iidv&quot;, false))" line="4436" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1fv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform1fv>
		<lime_gl_uniform1i expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1i&quot;, &quot;iiv&quot;, false))" line="4438" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1i", "iiv", false))]]></e></m></meta>
		</lime_gl_uniform1i>
		<lime_gl_uniform1iv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1iv&quot;, &quot;iidv&quot;, false))" line="4439" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1iv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform1iv>
		<lime_gl_uniform1ui expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1ui&quot;, &quot;iiv&quot;, false))" line="4441" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1ui", "iiv", false))]]></e></m></meta>
		</lime_gl_uniform1ui>
		<lime_gl_uniform1uiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform1uiv&quot;, &quot;iidv&quot;, false))" line="4442" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform1uiv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform1uiv>
		<lime_gl_uniform2f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2f&quot;, &quot;iffv&quot;, false))" line="4444" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2f", "iffv", false))]]></e></m></meta>
		</lime_gl_uniform2f>
		<lime_gl_uniform2fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2fv&quot;, &quot;iidv&quot;, false))" line="4446" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2fv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform2fv>
		<lime_gl_uniform2i expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2i&quot;, &quot;iiiv&quot;, false))" line="4448" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2i", "iiiv", false))]]></e></m></meta>
		</lime_gl_uniform2i>
		<lime_gl_uniform2iv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2iv&quot;, &quot;iidv&quot;, false))" line="4449" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2iv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform2iv>
		<lime_gl_uniform2ui expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2ui&quot;, &quot;iiiv&quot;, false))" line="4451" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2ui", "iiiv", false))]]></e></m></meta>
		</lime_gl_uniform2ui>
		<lime_gl_uniform2uiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform2uiv&quot;, &quot;iidv&quot;, false))" line="4452" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform2uiv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform2uiv>
		<lime_gl_uniform3f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3f&quot;, &quot;ifffv&quot;, false))" line="4454" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3f", "ifffv", false))]]></e></m></meta>
		</lime_gl_uniform3f>
		<lime_gl_uniform3fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3fv&quot;, &quot;iidv&quot;, false))" line="4456" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3fv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform3fv>
		<lime_gl_uniform3i expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3i&quot;, &quot;iiiiv&quot;, false))" line="4458" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3i", "iiiiv", false))]]></e></m></meta>
		</lime_gl_uniform3i>
		<lime_gl_uniform3iv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3iv&quot;, &quot;iidv&quot;, false))" line="4459" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3iv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform3iv>
		<lime_gl_uniform3ui expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3ui&quot;, &quot;iiiiv&quot;, false))" line="4461" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3ui", "iiiiv", false))]]></e></m></meta>
		</lime_gl_uniform3ui>
		<lime_gl_uniform3uiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform3uiv&quot;, &quot;iidv&quot;, false))" line="4462" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform3uiv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform3uiv>
		<lime_gl_uniform4f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4f&quot;, &quot;iffffv&quot;, false))" line="4464" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4f", "iffffv", false))]]></e></m></meta>
		</lime_gl_uniform4f>
		<lime_gl_uniform4fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4fv&quot;, &quot;iidv&quot;, false))" line="4466" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4fv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform4fv>
		<lime_gl_uniform4i expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4i&quot;, &quot;iiiiiv&quot;, false))" line="4468" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4i", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_uniform4i>
		<lime_gl_uniform4iv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4iv&quot;, &quot;iidv&quot;, false))" line="4470" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4iv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform4iv>
		<lime_gl_uniform4ui expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4ui&quot;, &quot;iiiiiv&quot;, false))" line="4472" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4ui", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_uniform4ui>
		<lime_gl_uniform4uiv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform4uiv&quot;, &quot;iidv&quot;, false))" line="4474" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform4uiv", "iidv", false))]]></e></m></meta>
		</lime_gl_uniform4uiv>
		<lime_gl_uniform_block_binding expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_block_binding&quot;, &quot;iiiv&quot;, false))" line="4476" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_block_binding", "iiiv", false))]]></e></m></meta>
		</lime_gl_uniform_block_binding>
		<lime_gl_uniform_matrix2fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix2fv&quot;, &quot;iibdv&quot;, false))" line="4478" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix2fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix2fv>
		<lime_gl_uniform_matrix2x3fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix2x3fv&quot;, &quot;iibdv&quot;, false))" line="4480" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix2x3fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix2x3fv>
		<lime_gl_uniform_matrix2x4fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix2x4fv&quot;, &quot;iibdv&quot;, false))" line="4482" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix2x4fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix2x4fv>
		<lime_gl_uniform_matrix3fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix3fv&quot;, &quot;iibdv&quot;, false))" line="4484" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix3fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix3fv>
		<lime_gl_uniform_matrix3x2fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix3x2fv&quot;, &quot;iibdv&quot;, false))" line="4486" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix3x2fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix3x2fv>
		<lime_gl_uniform_matrix3x4fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix3x4fv&quot;, &quot;iibdv&quot;, false))" line="4488" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix3x4fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix3x4fv>
		<lime_gl_uniform_matrix4fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix4fv&quot;, &quot;iibdv&quot;, false))" line="4490" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix4fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix4fv>
		<lime_gl_uniform_matrix4x2fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix4x2fv&quot;, &quot;iibdv&quot;, false))" line="4492" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix4x2fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix4x2fv>
		<lime_gl_uniform_matrix4x3fv expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Bool -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_uniform_matrix4x3fv&quot;, &quot;iibdv&quot;, false))" line="4494" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Bool -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_uniform_matrix4x3fv", "iibdv", false))]]></e></m></meta>
		</lime_gl_uniform_matrix4x3fv>
		<lime_gl_unmap_buffer expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_unmap_buffer&quot;, &quot;ib&quot;, false))" line="4496" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_unmap_buffer", "ib", false))]]></e></m></meta>
		</lime_gl_unmap_buffer>
		<lime_gl_use_program expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_use_program&quot;, &quot;iv&quot;, false))" line="4497" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_use_program", "iv", false))]]></e></m></meta>
		</lime_gl_use_program>
		<lime_gl_validate_program expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_validate_program&quot;, &quot;iv&quot;, false))" line="4498" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_gl_validate_program", "iv", false))]]></e></m></meta>
		</lime_gl_validate_program>
		<lime_gl_vertex_attrib1f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib1f&quot;, &quot;ifv&quot;, false))" line="4499" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib1f", "ifv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib1f>
		<lime_gl_vertex_attrib1fv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib1fv&quot;, &quot;idv&quot;, false))" line="4501" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib1fv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib1fv>
		<lime_gl_vertex_attrib2f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib2f&quot;, &quot;iffv&quot;, false))" line="4503" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib2f", "iffv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib2f>
		<lime_gl_vertex_attrib2fv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib2fv&quot;, &quot;idv&quot;, false))" line="4505" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib2fv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib2fv>
		<lime_gl_vertex_attrib3f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib3f&quot;, &quot;ifffv&quot;, false))" line="4507" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib3f", "ifffv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib3f>
		<lime_gl_vertex_attrib3fv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib3fv&quot;, &quot;idv&quot;, false))" line="4509" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib3fv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib3fv>
		<lime_gl_vertex_attrib4f expr="new cpp.Callable&lt;Int -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32 -&gt; cpp.Float32&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib4f&quot;, &quot;iffffv&quot;, false))" line="4511" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<x path="cpp.Float32"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> cpp.Float32 -> cpp.Float32 -> cpp.Float32 -> cpp.Float32>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib4f", "iffffv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib4f>
		<lime_gl_vertex_attrib4fv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib4fv&quot;, &quot;idv&quot;, false))" line="4513" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib4fv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib4fv>
		<lime_gl_vertex_attribi4i expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attribi4i&quot;, &quot;iiiiiv&quot;, false))" line="4515" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attribi4i", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_vertex_attribi4i>
		<lime_gl_vertex_attribi4iv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attribi4iv&quot;, &quot;idv&quot;, false))" line="4517" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attribi4iv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attribi4iv>
		<lime_gl_vertex_attribi4ui expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attribi4ui&quot;, &quot;iiiiiv&quot;, false))" line="4519" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attribi4ui", "iiiiiv", false))]]></e></m></meta>
		</lime_gl_vertex_attribi4ui>
		<lime_gl_vertex_attribi4uiv expr="new cpp.Callable&lt;Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attribi4uiv&quot;, &quot;idv&quot;, false))" line="4521" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attribi4uiv", "idv", false))]]></e></m></meta>
		</lime_gl_vertex_attribi4uiv>
		<lime_gl_vertex_attrib_divisor expr="new cpp.Callable&lt;Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib_divisor&quot;, &quot;iiv&quot;, false))" line="4523" static="1">
			<x path="cpp.Callable"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib_divisor", "iiv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib_divisor>
		<lime_gl_vertex_attrib_ipointer expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib_ipointer&quot;, &quot;iiiidv&quot;, false))" line="4525" static="1">
			<x path="cpp.Callable"><f a="::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib_ipointer", "iiiidv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib_ipointer>
		<lime_gl_vertex_attrib_pointer expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Bool -&gt; Int -&gt; lime.utils.DataPointer&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_vertex_attrib_pointer&quot;, &quot;iiibidv&quot;, false))" line="4527" static="1">
			<x path="cpp.Callable"><f a=":::::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Bool -> Int -> lime.utils.DataPointer>(cpp.Prime._loadPrime("lime", "lime_gl_vertex_attrib_pointer", "iiibidv", false))]]></e></m></meta>
		</lime_gl_vertex_attrib_pointer>
		<lime_gl_viewport expr="new cpp.Callable&lt;Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_viewport&quot;, &quot;iiiiv&quot;, false))" line="4529" static="1">
			<x path="cpp.Callable"><f a=":::">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_viewport", "iiiiv", false))]]></e></m></meta>
		</lime_gl_viewport>
		<lime_gl_wait_sync expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_gl_wait_sync&quot;, &quot;oiiiv&quot;, false))" line="4530" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_gl_wait_sync", "oiiiv", false))]]></e></m></meta>
		</lime_gl_wait_sync>
		<lime_hb_blob_create expr="new cpp.Callable&lt;lime.utils.DataPointer -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_create&quot;, &quot;diio&quot;, false))" line="5846" static="1">
			<x path="cpp.Callable"><f a="::">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<lime.utils.DataPointer -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_blob_create", "diio", false))]]></e></m></meta>
		</lime_hb_blob_create>
		<lime_hb_blob_create_sub_blob expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_create_sub_blob&quot;, &quot;oiio&quot;, false))" line="5848" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_blob_create_sub_blob", "oiio", false))]]></e></m></meta>
		</lime_hb_blob_create_sub_blob>
		<lime_hb_blob_get_data expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_get_data&quot;, &quot;od&quot;, false))" line="5850" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_blob_get_data", "od", false))]]></e></m></meta>
		</lime_hb_blob_get_data>
		<lime_hb_blob_get_data_writable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_get_data_writable&quot;, &quot;od&quot;, false))" line="5851" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_blob_get_data_writable", "od", false))]]></e></m></meta>
		</lime_hb_blob_get_data_writable>
		<lime_hb_blob_get_empty expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_get_empty&quot;, &quot;o&quot;, false))" line="5853" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_blob_get_empty", "o", false))]]></e></m></meta>
		</lime_hb_blob_get_empty>
		<lime_hb_blob_get_length expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_get_length&quot;, &quot;oi&quot;, false))" line="5854" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_blob_get_length", "oi", false))]]></e></m></meta>
		</lime_hb_blob_get_length>
		<lime_hb_blob_is_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_is_immutable&quot;, &quot;ob&quot;, false))" line="5855" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_blob_is_immutable", "ob", false))]]></e></m></meta>
		</lime_hb_blob_is_immutable>
		<lime_hb_blob_make_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_blob_make_immutable&quot;, &quot;ov&quot;, false))" line="5856" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_blob_make_immutable", "ov", false))]]></e></m></meta>
		</lime_hb_blob_make_immutable>
		<lime_hb_buffer_add expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_add&quot;, &quot;oiiv&quot;, false))" line="5858" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_add", "oiiv", false))]]></e></m></meta>
		</lime_hb_buffer_add>
		<lime_hb_buffer_add_codepoints expr="new cpp.Callable&lt;cpp.Object -&gt; lime.utils.DataPointer -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_add_codepoints&quot;, &quot;odiiiv&quot;, false))" line="5860" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> lime.utils.DataPointer -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_add_codepoints", "odiiiv", false))]]></e></m></meta>
		</lime_hb_buffer_add_codepoints>
		<lime_hb_buffer_add_utf8 expr="new cpp.Callable&lt;cpp.Object -&gt; String -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_add_utf8&quot;, &quot;osiiv&quot;, false))" line="5862" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_add_utf8", "osiiv", false))]]></e></m></meta>
		</lime_hb_buffer_add_utf8>
		<lime_hb_buffer_add_utf16 expr="new cpp.Callable&lt;cpp.Object -&gt; lime.utils.DataPointer -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_add_utf16&quot;, &quot;odiiiv&quot;, false))" line="5864" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> lime.utils.DataPointer -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_add_utf16", "odiiiv", false))]]></e></m></meta>
		</lime_hb_buffer_add_utf16>
		<lime_hb_buffer_add_utf32 expr="new cpp.Callable&lt;cpp.Object -&gt; lime.utils.DataPointer -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_add_utf32&quot;, &quot;odiiiv&quot;, false))" line="5866" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> lime.utils.DataPointer -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_add_utf32", "odiiiv", false))]]></e></m></meta>
		</lime_hb_buffer_add_utf32>
		<lime_hb_buffer_allocation_successful expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_allocation_successful&quot;, &quot;ob&quot;, false))" line="5868" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_allocation_successful", "ob", false))]]></e></m></meta>
		</lime_hb_buffer_allocation_successful>
		<lime_hb_buffer_clear_contents expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_clear_contents&quot;, &quot;ov&quot;, false))" line="5870" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_clear_contents", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_clear_contents>
		<lime_hb_buffer_create expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_create&quot;, &quot;o&quot;, false))" line="5872" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_create", "o", false))]]></e></m></meta>
		</lime_hb_buffer_create>
		<lime_hb_buffer_get_cluster_level expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_cluster_level&quot;, &quot;oi&quot;, false))" line="5873" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_cluster_level", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_cluster_level>
		<lime_hb_buffer_get_content_type expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_content_type&quot;, &quot;oi&quot;, false))" line="5875" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_content_type", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_content_type>
		<lime_hb_buffer_get_direction expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_direction&quot;, &quot;oi&quot;, false))" line="5877" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_direction", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_direction>
		<lime_hb_buffer_get_empty expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_empty&quot;, &quot;o&quot;, false))" line="5879" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_empty", "o", false))]]></e></m></meta>
		</lime_hb_buffer_get_empty>
		<lime_hb_buffer_get_flags expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_flags&quot;, &quot;oi&quot;, false))" line="5880" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_flags", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_flags>
		<lime_hb_buffer_get_glyph_infos expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_glyph_infos&quot;, &quot;ooo&quot;, false))" line="5881" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_glyph_infos", "ooo", false))]]></e></m></meta>
		</lime_hb_buffer_get_glyph_infos>
		<lime_hb_buffer_get_glyph_positions expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_glyph_positions&quot;, &quot;ooo&quot;, false))" line="5883" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_glyph_positions", "ooo", false))]]></e></m></meta>
		</lime_hb_buffer_get_glyph_positions>
		<lime_hb_buffer_get_language expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_language&quot;, &quot;oo&quot;, false))" line="5885" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_language", "oo", false))]]></e></m></meta>
		</lime_hb_buffer_get_language>
		<lime_hb_buffer_get_length expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_length&quot;, &quot;oi&quot;, false))" line="5887" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_length", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_length>
		<lime_hb_buffer_get_replacement_codepoint expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_replacement_codepoint&quot;, &quot;oi&quot;, false))" line="5888" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_replacement_codepoint", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_replacement_codepoint>
		<lime_hb_buffer_get_script expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_script&quot;, &quot;oi&quot;, false))" line="5890" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_script", "oi", false))]]></e></m></meta>
		</lime_hb_buffer_get_script>
		<lime_hb_buffer_get_segment_properties expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_get_segment_properties&quot;, &quot;oov&quot;, false))" line="5891" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_get_segment_properties", "oov", false))]]></e></m></meta>
		</lime_hb_buffer_get_segment_properties>
		<lime_hb_buffer_guess_segment_properties expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_guess_segment_properties&quot;, &quot;ov&quot;, false))" line="5893" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_guess_segment_properties", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_guess_segment_properties>
		<lime_hb_buffer_normalize_glyphs expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_normalize_glyphs&quot;, &quot;ov&quot;, false))" line="5895" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_normalize_glyphs", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_normalize_glyphs>
		<lime_hb_buffer_preallocate expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_preallocate&quot;, &quot;oib&quot;, false))" line="5897" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_preallocate", "oib", false))]]></e></m></meta>
		</lime_hb_buffer_preallocate>
		<lime_hb_buffer_reset expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_reset&quot;, &quot;ov&quot;, false))" line="5899" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_reset", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_reset>
		<lime_hb_buffer_reverse expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_reverse&quot;, &quot;ov&quot;, false))" line="5900" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_reverse", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_reverse>
		<lime_hb_buffer_reverse_clusters expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_reverse_clusters&quot;, &quot;ov&quot;, false))" line="5901" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_reverse_clusters", "ov", false))]]></e></m></meta>
		</lime_hb_buffer_reverse_clusters>
		<lime_hb_buffer_serialize_format_from_string expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_serialize_format_from_string&quot;, &quot;si&quot;, false))" line="5903" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_serialize_format_from_string", "si", false))]]></e></m></meta>
		</lime_hb_buffer_serialize_format_from_string>
		<lime_hb_buffer_serialize_format_to_string expr="new cpp.Callable&lt;Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_serialize_format_to_string&quot;, &quot;io&quot;, false))" line="5905" static="1">
			<x path="cpp.Callable"><f a="">
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_serialize_format_to_string", "io", false))]]></e></m></meta>
		</lime_hb_buffer_serialize_format_to_string>
		<lime_hb_buffer_serialize_list_formats expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_serialize_list_formats&quot;, &quot;o&quot;, false))" line="5907" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_serialize_list_formats", "o", false))]]></e></m></meta>
		</lime_hb_buffer_serialize_list_formats>
		<lime_hb_buffer_set_cluster_level expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_cluster_level&quot;, &quot;oiv&quot;, false))" line="5909" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_cluster_level", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_cluster_level>
		<lime_hb_buffer_set_content_type expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_content_type&quot;, &quot;oiv&quot;, false))" line="5911" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_content_type", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_content_type>
		<lime_hb_buffer_set_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_direction&quot;, &quot;oiv&quot;, false))" line="5913" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_direction", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_direction>
		<lime_hb_buffer_set_flags expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_flags&quot;, &quot;oiv&quot;, false))" line="5915" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_flags", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_flags>
		<lime_hb_buffer_set_language expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_language&quot;, &quot;oov&quot;, false))" line="5917" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_language", "oov", false))]]></e></m></meta>
		</lime_hb_buffer_set_language>
		<lime_hb_buffer_set_length expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_length&quot;, &quot;oib&quot;, false))" line="5919" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_length", "oib", false))]]></e></m></meta>
		</lime_hb_buffer_set_length>
		<lime_hb_buffer_set_replacement_codepoint expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_replacement_codepoint&quot;, &quot;oiv&quot;, false))" line="5921" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_replacement_codepoint", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_replacement_codepoint>
		<lime_hb_buffer_set_script expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_script&quot;, &quot;oiv&quot;, false))" line="5923" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_script", "oiv", false))]]></e></m></meta>
		</lime_hb_buffer_set_script>
		<lime_hb_buffer_set_segment_properties expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_buffer_set_segment_properties&quot;, &quot;oov&quot;, false))" line="5925" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_buffer_set_segment_properties", "oov", false))]]></e></m></meta>
		</lime_hb_buffer_set_segment_properties>
		<lime_hb_face_create expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_create&quot;, &quot;oio&quot;, false))" line="5927" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_face_create", "oio", false))]]></e></m></meta>
		</lime_hb_face_create>
		<lime_hb_face_get_empty expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_get_empty&quot;, &quot;o&quot;, false))" line="5928" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_face_get_empty", "o", false))]]></e></m></meta>
		</lime_hb_face_get_empty>
		<lime_hb_face_get_glyph_count expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_get_glyph_count&quot;, &quot;oi&quot;, false))" line="5929" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_get_glyph_count", "oi", false))]]></e></m></meta>
		</lime_hb_face_get_glyph_count>
		<lime_hb_face_get_index expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_get_index&quot;, &quot;oi&quot;, false))" line="5931" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_get_index", "oi", false))]]></e></m></meta>
		</lime_hb_face_get_index>
		<lime_hb_face_get_upem expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_get_upem&quot;, &quot;oi&quot;, false))" line="5932" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_get_upem", "oi", false))]]></e></m></meta>
		</lime_hb_face_get_upem>
		<lime_hb_face_is_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_is_immutable&quot;, &quot;ob&quot;, false))" line="5933" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_is_immutable", "ob", false))]]></e></m></meta>
		</lime_hb_face_is_immutable>
		<lime_hb_face_make_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_make_immutable&quot;, &quot;ov&quot;, false))" line="5934" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_make_immutable", "ov", false))]]></e></m></meta>
		</lime_hb_face_make_immutable>
		<lime_hb_face_reference_blob expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_reference_blob&quot;, &quot;oo&quot;, false))" line="5936" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_face_reference_blob", "oo", false))]]></e></m></meta>
		</lime_hb_face_reference_blob>
		<lime_hb_face_reference_table expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_reference_table&quot;, &quot;oio&quot;, false))" line="5938" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_face_reference_table", "oio", false))]]></e></m></meta>
		</lime_hb_face_reference_table>
		<lime_hb_face_set_glyph_count expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_set_glyph_count&quot;, &quot;oiv&quot;, false))" line="5940" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_face_set_glyph_count", "oiv", false))]]></e></m></meta>
		</lime_hb_face_set_glyph_count>
		<lime_hb_face_set_index expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_set_index&quot;, &quot;oiv&quot;, false))" line="5942" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_face_set_index", "oiv", false))]]></e></m></meta>
		</lime_hb_face_set_index>
		<lime_hb_face_set_upem expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_face_set_upem&quot;, &quot;oiv&quot;, false))" line="5944" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_face_set_upem", "oiv", false))]]></e></m></meta>
		</lime_hb_face_set_upem>
		<lime_hb_feature_from_string expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_feature_from_string&quot;, &quot;so&quot;, false))" line="5946" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_hb_feature_from_string", "so", false))]]></e></m></meta>
		</lime_hb_feature_from_string>
		<lime_hb_feature_to_string expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_feature_to_string&quot;, &quot;oo&quot;, false))" line="5948" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_feature_to_string", "oo", false))]]></e></m></meta>
		</lime_hb_feature_to_string>
		<lime_hb_font_add_glyph_origin_for_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_add_glyph_origin_for_direction&quot;, &quot;oiiiiv&quot;, false))" line="5950" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_add_glyph_origin_for_direction", "oiiiiv", false))]]></e></m></meta>
		</lime_hb_font_add_glyph_origin_for_direction>
		<lime_hb_font_create expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_create&quot;, &quot;oo&quot;, false))" line="5952" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_create", "oo", false))]]></e></m></meta>
		</lime_hb_font_create>
		<lime_hb_font_create_sub_font expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_create_sub_font&quot;, &quot;oo&quot;, false))" line="5953" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_create_sub_font", "oo", false))]]></e></m></meta>
		</lime_hb_font_create_sub_font>
		<lime_hb_font_get_empty expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_empty&quot;, &quot;o&quot;, false))" line="5955" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_empty", "o", false))]]></e></m></meta>
		</lime_hb_font_get_empty>
		<lime_hb_font_get_face expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_face&quot;, &quot;oo&quot;, false))" line="5956" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_face", "oo", false))]]></e></m></meta>
		</lime_hb_font_get_face>
		<lime_hb_font_get_glyph_advance_for_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_glyph_advance_for_direction&quot;, &quot;oiio&quot;, false))" line="5957" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_glyph_advance_for_direction", "oiio", false))]]></e></m></meta>
		</lime_hb_font_get_glyph_advance_for_direction>
		<lime_hb_font_get_glyph_kerning_for_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_glyph_kerning_for_direction&quot;, &quot;oiiio&quot;, false))" line="5959" static="1">
			<x path="cpp.Callable"><f a=":::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_glyph_kerning_for_direction", "oiiio", false))]]></e></m></meta>
		</lime_hb_font_get_glyph_kerning_for_direction>
		<lime_hb_font_get_glyph_origin_for_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_glyph_origin_for_direction&quot;, &quot;oiio&quot;, false))" line="5961" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_glyph_origin_for_direction", "oiio", false))]]></e></m></meta>
		</lime_hb_font_get_glyph_origin_for_direction>
		<lime_hb_font_get_parent expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_parent&quot;, &quot;oo&quot;, false))" line="5963" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_parent", "oo", false))]]></e></m></meta>
		</lime_hb_font_get_parent>
		<lime_hb_font_get_ppem expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_ppem&quot;, &quot;oo&quot;, false))" line="5965" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_ppem", "oo", false))]]></e></m></meta>
		</lime_hb_font_get_ppem>
		<lime_hb_font_get_scale expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_get_scale&quot;, &quot;oo&quot;, false))" line="5966" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_get_scale", "oo", false))]]></e></m></meta>
		</lime_hb_font_get_scale>
		<lime_hb_font_glyph_from_string expr="new cpp.Callable&lt;cpp.Object -&gt; String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_glyph_from_string&quot;, &quot;osi&quot;, false))" line="5967" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<c path="String"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> String>(cpp.Prime._loadPrime("lime", "lime_hb_font_glyph_from_string", "osi", false))]]></e></m></meta>
		</lime_hb_font_glyph_from_string>
		<lime_hb_font_glyph_to_string expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_glyph_to_string&quot;, &quot;oio&quot;, false))" line="5969" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_glyph_to_string", "oio", false))]]></e></m></meta>
		</lime_hb_font_glyph_to_string>
		<lime_hb_font_is_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_is_immutable&quot;, &quot;ob&quot;, false))" line="5971" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_is_immutable", "ob", false))]]></e></m></meta>
		</lime_hb_font_is_immutable>
		<lime_hb_font_make_immutable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_make_immutable&quot;, &quot;ov&quot;, false))" line="5972" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_font_make_immutable", "ov", false))]]></e></m></meta>
		</lime_hb_font_make_immutable>
		<lime_hb_font_set_ppem expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_set_ppem&quot;, &quot;oiiv&quot;, false))" line="5974" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_set_ppem", "oiiv", false))]]></e></m></meta>
		</lime_hb_font_set_ppem>
		<lime_hb_font_set_scale expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_set_scale&quot;, &quot;oiiv&quot;, false))" line="5976" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_set_scale", "oiiv", false))]]></e></m></meta>
		</lime_hb_font_set_scale>
		<lime_hb_font_subtract_glyph_origin_for_direction expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_font_subtract_glyph_origin_for_direction&quot;, &quot;oiiiiv&quot;, false))" line="5978" static="1">
			<x path="cpp.Callable"><f a="::::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_font_subtract_glyph_origin_for_direction", "oiiiiv", false))]]></e></m></meta>
		</lime_hb_font_subtract_glyph_origin_for_direction>
		<lime_hb_ft_font_create expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_ft_font_create&quot;, &quot;oo&quot;, false))" line="5980" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_ft_font_create", "oo", false))]]></e></m></meta>
		</lime_hb_ft_font_create>
		<lime_hb_ft_font_create_referenced expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_ft_font_create_referenced&quot;, &quot;oo&quot;, false))" line="5981" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_ft_font_create_referenced", "oo", false))]]></e></m></meta>
		</lime_hb_ft_font_create_referenced>
		<lime_hb_ft_font_get_load_flags expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_ft_font_get_load_flags&quot;, &quot;oi&quot;, false))" line="5983" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_ft_font_get_load_flags", "oi", false))]]></e></m></meta>
		</lime_hb_ft_font_get_load_flags>
		<lime_hb_ft_font_set_load_flags expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_ft_font_set_load_flags&quot;, &quot;oiv&quot;, false))" line="5985" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_ft_font_set_load_flags", "oiv", false))]]></e></m></meta>
		</lime_hb_ft_font_set_load_flags>
		<lime_hb_language_from_string expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_language_from_string&quot;, &quot;so&quot;, false))" line="5987" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_hb_language_from_string", "so", false))]]></e></m></meta>
		</lime_hb_language_from_string>
		<lime_hb_language_get_default expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_language_get_default&quot;, &quot;o&quot;, false))" line="5989" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_language_get_default", "o", false))]]></e></m></meta>
		</lime_hb_language_get_default>
		<lime_hb_language_to_string expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_language_to_string&quot;, &quot;oo&quot;, false))" line="5991" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_language_to_string", "oo", false))]]></e></m></meta>
		</lime_hb_language_to_string>
		<lime_hb_segment_properties_equal expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_segment_properties_equal&quot;, &quot;oob&quot;, false))" line="5993" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_segment_properties_equal", "oob", false))]]></e></m></meta>
		</lime_hb_segment_properties_equal>
		<lime_hb_segment_properties_hash expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_segment_properties_hash&quot;, &quot;oi&quot;, false))" line="5995" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_segment_properties_hash", "oi", false))]]></e></m></meta>
		</lime_hb_segment_properties_hash>
		<lime_hb_set_add expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_add&quot;, &quot;oiv&quot;, false))" line="5997" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_set_add", "oiv", false))]]></e></m></meta>
		</lime_hb_set_add>
		<lime_hb_set_add_range expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_add_range&quot;, &quot;oiiv&quot;, false))" line="5998" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_set_add_range", "oiiv", false))]]></e></m></meta>
		</lime_hb_set_add_range>
		<lime_hb_set_allocation_successful expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_allocation_successful&quot;, &quot;ob&quot;, false))" line="6000" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_allocation_successful", "ob", false))]]></e></m></meta>
		</lime_hb_set_allocation_successful>
		<lime_hb_set_clear expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_clear&quot;, &quot;ov&quot;, false))" line="6002" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_clear", "ov", false))]]></e></m></meta>
		</lime_hb_set_clear>
		<lime_hb_set_create expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_create&quot;, &quot;o&quot;, false))" line="6003" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_set_create", "o", false))]]></e></m></meta>
		</lime_hb_set_create>
		<lime_hb_set_del expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_del&quot;, &quot;oiv&quot;, false))" line="6004" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_set_del", "oiv", false))]]></e></m></meta>
		</lime_hb_set_del>
		<lime_hb_set_del_range expr="new cpp.Callable&lt;cpp.Object -&gt; Int -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_del_range&quot;, &quot;oiiv&quot;, false))" line="6005" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_set_del_range", "oiiv", false))]]></e></m></meta>
		</lime_hb_set_del_range>
		<lime_hb_set_get_empty expr="new cpp.Callable&lt;Void&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_get_empty&quot;, &quot;o&quot;, false))" line="6007" static="1">
			<x path="cpp.Callable"><f a=""><t path="cpp.Object"/></f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<Void>(cpp.Prime._loadPrime("lime", "lime_hb_set_get_empty", "o", false))]]></e></m></meta>
		</lime_hb_set_get_empty>
		<lime_hb_set_get_max expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_get_max&quot;, &quot;oi&quot;, false))" line="6008" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_get_max", "oi", false))]]></e></m></meta>
		</lime_hb_set_get_max>
		<lime_hb_set_get_min expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_get_min&quot;, &quot;oi&quot;, false))" line="6009" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_get_min", "oi", false))]]></e></m></meta>
		</lime_hb_set_get_min>
		<lime_hb_set_get_population expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_get_population&quot;, &quot;oi&quot;, false))" line="6010" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_get_population", "oi", false))]]></e></m></meta>
		</lime_hb_set_get_population>
		<lime_hb_set_has expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_has&quot;, &quot;oib&quot;, false))" line="6011" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_hb_set_has", "oib", false))]]></e></m></meta>
		</lime_hb_set_has>
		<lime_hb_set_intersect expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_intersect&quot;, &quot;oov&quot;, false))" line="6012" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_intersect", "oov", false))]]></e></m></meta>
		</lime_hb_set_intersect>
		<lime_hb_set_invert expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_invert&quot;, &quot;ov&quot;, false))" line="6014" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_invert", "ov", false))]]></e></m></meta>
		</lime_hb_set_invert>
		<lime_hb_set_is_empty expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_is_empty&quot;, &quot;ob&quot;, false))" line="6015" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_is_empty", "ob", false))]]></e></m></meta>
		</lime_hb_set_is_empty>
		<lime_hb_set_is_equal expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_is_equal&quot;, &quot;oob&quot;, false))" line="6016" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_is_equal", "oob", false))]]></e></m></meta>
		</lime_hb_set_is_equal>
		<lime_hb_set_next expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_next&quot;, &quot;oi&quot;, false))" line="6018" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_next", "oi", false))]]></e></m></meta>
		</lime_hb_set_next>
		<lime_hb_set_next_range expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_next_range&quot;, &quot;oo&quot;, false))" line="6019" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_next_range", "oo", false))]]></e></m></meta>
		</lime_hb_set_next_range>
		<lime_hb_set_set expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_set&quot;, &quot;oov&quot;, false))" line="6020" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_set", "oov", false))]]></e></m></meta>
		</lime_hb_set_set>
		<lime_hb_set_subtract expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_subtract&quot;, &quot;oov&quot;, false))" line="6021" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_subtract", "oov", false))]]></e></m></meta>
		</lime_hb_set_subtract>
		<lime_hb_set_symmetric_difference expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_symmetric_difference&quot;, &quot;oov&quot;, false))" line="6023" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_symmetric_difference", "oov", false))]]></e></m></meta>
		</lime_hb_set_symmetric_difference>
		<lime_hb_set_union expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_set_union&quot;, &quot;oov&quot;, false))" line="6025" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_set_union", "oov", false))]]></e></m></meta>
		</lime_hb_set_union>
		<lime_hb_shape expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_hb_shape&quot;, &quot;ooov&quot;, false))" line="6026" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_hb_shape", "ooov", false))]]></e></m></meta>
		</lime_hb_shape>
		<lime_vorbis_file_bitrate expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_bitrate&quot;, &quot;oii&quot;, false))" line="6650" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_bitrate", "oii", false))]]></e></m></meta>
		</lime_vorbis_file_bitrate>
		<lime_vorbis_file_bitrate_instant expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_bitrate_instant&quot;, &quot;oi&quot;, false))" line="6652" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_bitrate_instant", "oi", false))]]></e></m></meta>
		</lime_vorbis_file_bitrate_instant>
		<lime_vorbis_file_clear expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_clear&quot;, &quot;ov&quot;, false))" line="6654" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<c path="cpp.Void"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_clear", "ov", false))]]></e></m></meta>
		</lime_vorbis_file_clear>
		<lime_vorbis_file_comment expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_comment&quot;, &quot;oio&quot;, false))" line="6655" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_comment", "oio", false))]]></e></m></meta>
		</lime_vorbis_file_comment>
		<lime_vorbis_file_crosslap expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_crosslap&quot;, &quot;ooo&quot;, false))" line="6657" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_crosslap", "ooo", false))]]></e></m></meta>
		</lime_vorbis_file_crosslap>
		<lime_vorbis_file_from_bytes expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_from_bytes&quot;, &quot;oo&quot;, false))" line="6659" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_from_bytes", "oo", false))]]></e></m></meta>
		</lime_vorbis_file_from_bytes>
		<lime_vorbis_file_from_file expr="new cpp.Callable&lt;String&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_from_file&quot;, &quot;so&quot;, false))" line="6661" static="1">
			<x path="cpp.Callable"><f a="">
	<c path="String"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<String>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_from_file", "so", false))]]></e></m></meta>
		</lime_vorbis_file_from_file>
		<lime_vorbis_file_info expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_info&quot;, &quot;oio&quot;, false))" line="6663" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_info", "oio", false))]]></e></m></meta>
		</lime_vorbis_file_info>
		<lime_vorbis_file_pcm_seek expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_seek&quot;, &quot;oooi&quot;, false))" line="6665" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_seek", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_seek>
		<lime_vorbis_file_pcm_seek_lap expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_seek_lap&quot;, &quot;oooi&quot;, false))" line="6667" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_seek_lap", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_seek_lap>
		<lime_vorbis_file_pcm_seek_page expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_seek_page&quot;, &quot;oooi&quot;, false))" line="6669" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_seek_page", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_seek_page>
		<lime_vorbis_file_pcm_seek_page_lap expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_seek_page_lap&quot;, &quot;oooi&quot;, false))" line="6671" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_seek_page_lap", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_seek_page_lap>
		<lime_vorbis_file_raw_seek expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_raw_seek&quot;, &quot;oooi&quot;, false))" line="6673" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_raw_seek", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_raw_seek>
		<lime_vorbis_file_raw_seek_lap expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_raw_seek_lap&quot;, &quot;oooi&quot;, false))" line="6675" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_raw_seek_lap", "oooi", false))]]></e></m></meta>
		</lime_vorbis_file_raw_seek_lap>
		<lime_vorbis_file_pcm_tell expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_tell&quot;, &quot;oo&quot;, false))" line="6677" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_tell", "oo", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_tell>
		<lime_vorbis_file_pcm_total expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_pcm_total&quot;, &quot;oio&quot;, false))" line="6679" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_pcm_total", "oio", false))]]></e></m></meta>
		</lime_vorbis_file_pcm_total>
		<lime_vorbis_file_raw_tell expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_raw_tell&quot;, &quot;oo&quot;, false))" line="6681" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_raw_tell", "oo", false))]]></e></m></meta>
		</lime_vorbis_file_raw_tell>
		<lime_vorbis_file_raw_total expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_raw_total&quot;, &quot;oio&quot;, false))" line="6683" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_raw_total", "oio", false))]]></e></m></meta>
		</lime_vorbis_file_raw_total>
		<lime_vorbis_file_read expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int -&gt; Int -&gt; Bool -&gt; Int -&gt; Bool&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_read&quot;, &quot;ooiibibo&quot;, false))" line="6685" static="1">
			<x path="cpp.Callable"><f a="::::::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int -> Int -> Bool -> Int -> Bool>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_read", "ooiibibo", false))]]></e></m></meta>
		</lime_vorbis_file_read>
		<lime_vorbis_file_read_float expr="new cpp.Callable&lt;cpp.Object -&gt; cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_read_float&quot;, &quot;ooio&quot;, false))" line="6687" static="1">
			<x path="cpp.Callable"><f a="::">
	<t path="cpp.Object"/>
	<t path="cpp.Object"/>
	<x path="Int"/>
	<t path="cpp.Object"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_read_float", "ooio", false))]]></e></m></meta>
		</lime_vorbis_file_read_float>
		<lime_vorbis_file_seekable expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_seekable&quot;, &quot;ob&quot;, false))" line="6689" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Bool"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_seekable", "ob", false))]]></e></m></meta>
		</lime_vorbis_file_seekable>
		<lime_vorbis_file_serial_number expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_serial_number&quot;, &quot;oii&quot;, false))" line="6690" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_serial_number", "oii", false))]]></e></m></meta>
		</lime_vorbis_file_serial_number>
		<lime_vorbis_file_streams expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_streams&quot;, &quot;oi&quot;, false))" line="6692" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_streams", "oi", false))]]></e></m></meta>
		</lime_vorbis_file_streams>
		<lime_vorbis_file_time_seek expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_seek&quot;, &quot;odi&quot;, false))" line="6693" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_seek", "odi", false))]]></e></m></meta>
		</lime_vorbis_file_time_seek>
		<lime_vorbis_file_time_seek_lap expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_seek_lap&quot;, &quot;odi&quot;, false))" line="6695" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_seek_lap", "odi", false))]]></e></m></meta>
		</lime_vorbis_file_time_seek_lap>
		<lime_vorbis_file_time_seek_page expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_seek_page&quot;, &quot;odi&quot;, false))" line="6697" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_seek_page", "odi", false))]]></e></m></meta>
		</lime_vorbis_file_time_seek_page>
		<lime_vorbis_file_time_seek_page_lap expr="new cpp.Callable&lt;cpp.Object -&gt; Float&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_seek_page_lap&quot;, &quot;odi&quot;, false))" line="6699" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Float"/>
	<x path="Int"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Float>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_seek_page_lap", "odi", false))]]></e></m></meta>
		</lime_vorbis_file_time_seek_page_lap>
		<lime_vorbis_file_time_tell expr="new cpp.Callable&lt;cpp.Object&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_tell&quot;, &quot;od&quot;, false))" line="6701" static="1">
			<x path="cpp.Callable"><f a="">
	<t path="cpp.Object"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_tell", "od", false))]]></e></m></meta>
		</lime_vorbis_file_time_tell>
		<lime_vorbis_file_time_total expr="new cpp.Callable&lt;cpp.Object -&gt; Int&gt;(cpp.Prime._loadPrime(&quot;lime&quot;, &quot;lime_vorbis_file_time_total&quot;, &quot;oid&quot;, false))" line="6703" static="1">
			<x path="cpp.Callable"><f a=":">
	<t path="cpp.Object"/>
	<x path="Int"/>
	<x path="Float"/>
</f></x>
			<meta><m n=":value"><e><![CDATA[new cpp.Callable<cpp.Object -> Int>(cpp.Prime._loadPrime("lime", "lime_vorbis_file_time_total", "oid", false))]]></e></m></meta>
		</lime_vorbis_file_time_total>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.backend.native.NativeApplication" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx">
		<applicationEventInfo expr="new ApplicationEventInfo(UPDATE)">
			<c path="lime._internal.backend.native.ApplicationEventInfo"/>
			<meta><m n=":value"><e>new ApplicationEventInfo(UPDATE)</e></m></meta>
		</applicationEventInfo>
		<clipboardEventInfo expr="new ClipboardEventInfo()">
			<c path="lime._internal.backend.native.ClipboardEventInfo"/>
			<meta><m n=":value"><e>new ClipboardEventInfo()</e></m></meta>
		</clipboardEventInfo>
		<currentTouches expr="new Map&lt;Int,Touch&gt;()">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Touch"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Touch>()]]></e></m></meta>
		</currentTouches>
		<dropEventInfo expr="new DropEventInfo()">
			<c path="lime._internal.backend.native.DropEventInfo"/>
			<meta><m n=":value"><e>new DropEventInfo()</e></m></meta>
		</dropEventInfo>
		<gamepadEventInfo expr="new GamepadEventInfo()">
			<c path="lime._internal.backend.native.GamepadEventInfo"/>
			<meta><m n=":value"><e>new GamepadEventInfo()</e></m></meta>
		</gamepadEventInfo>
		<joystickEventInfo expr="new JoystickEventInfo()">
			<c path="lime._internal.backend.native.JoystickEventInfo"/>
			<meta><m n=":value"><e>new JoystickEventInfo()</e></m></meta>
		</joystickEventInfo>
		<keyEventInfo expr="new KeyEventInfo()">
			<c path="lime._internal.backend.native.KeyEventInfo"/>
			<meta><m n=":value"><e>new KeyEventInfo()</e></m></meta>
		</keyEventInfo>
		<mouseEventInfo expr="new MouseEventInfo()">
			<c path="lime._internal.backend.native.MouseEventInfo"/>
			<meta><m n=":value"><e>new MouseEventInfo()</e></m></meta>
		</mouseEventInfo>
		<renderEventInfo expr="new RenderEventInfo(RENDER)">
			<c path="lime._internal.backend.native.RenderEventInfo"/>
			<meta><m n=":value"><e>new RenderEventInfo(RENDER)</e></m></meta>
		</renderEventInfo>
		<sensorEventInfo expr="new SensorEventInfo()">
			<c path="lime._internal.backend.native.SensorEventInfo"/>
			<meta><m n=":value"><e>new SensorEventInfo()</e></m></meta>
		</sensorEventInfo>
		<textEventInfo expr="new TextEventInfo()">
			<c path="lime._internal.backend.native.TextEventInfo"/>
			<meta><m n=":value"><e>new TextEventInfo()</e></m></meta>
		</textEventInfo>
		<touchEventInfo expr="new TouchEventInfo()">
			<c path="lime._internal.backend.native.TouchEventInfo"/>
			<meta><m n=":value"><e>new TouchEventInfo()</e></m></meta>
		</touchEventInfo>
		<unusedTouchesPool expr="new List&lt;Touch&gt;()">
			<c path="haxe.ds.List"><c path="lime.ui.Touch"/></c>
			<meta><m n=":value"><e><![CDATA[new List<Touch>()]]></e></m></meta>
		</unusedTouchesPool>
		<windowEventInfo expr="new WindowEventInfo()">
			<c path="lime._internal.backend.native.WindowEventInfo"/>
			<meta><m n=":value"><e>new WindowEventInfo()</e></m></meta>
		</windowEventInfo>
		<handle public="1"><d/></handle>
		<pauseTimer><x path="Int"/></pauseTimer>
		<parent><c path="lime.app.Application"/></parent>
		<toggleFullscreen><x path="Bool"/></toggleFullscreen>
		<advanceTimer set="method" line="90"><f a=""><x path="Void"/></f></advanceTimer>
		<exec public="1" set="method" line="105"><f a=""><x path="Int"/></f></exec>
		<exit public="1" set="method" line="159"><f a=""><x path="Void"/></f></exit>
		<handleApplicationEvent set="method" line="168"><f a=""><x path="Void"/></f></handleApplicationEvent>
		<handleClipboardEvent set="method" line="181"><f a=""><x path="Void"/></f></handleClipboardEvent>
		<handleDropEvent set="method" line="186"><f a=""><x path="Void"/></f></handleDropEvent>
		<handleGamepadEvent set="method" line="194"><f a=""><x path="Void"/></f></handleGamepadEvent>
		<handleJoystickEvent set="method" line="218"><f a=""><x path="Void"/></f></handleJoystickEvent>
		<handleKeyEvent set="method" line="250"><f a=""><x path="Void"/></f></handleKeyEvent>
		<handleMouseEvent set="method" line="328"><f a=""><x path="Void"/></f></handleMouseEvent>
		<handleRenderEvent set="method" line="354"><f a=""><x path="Void"/></f></handleRenderEvent>
		<handleSensorEvent set="method" line="409"><f a=""><x path="Void"/></f></handleSensorEvent>
		<handleTextEvent set="method" line="419"><f a=""><x path="Void"/></f></handleTextEvent>
		<handleTouchEvent set="method" line="439"><f a=""><x path="Void"/></f></handleTouchEvent>
		<handleWindowEvent set="method" line="501"><f a=""><x path="Void"/></f></handleWindowEvent>
		<updateTimer set="method" line="567"><f a=""><x path="Void"/></f></updateTimer>
		<new public="1" set="method" line="73"><f a="parent">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>haxe.Timer</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeOpenGLRenderContext</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeWindow</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.graphics.opengl.GL</e></m>
			<m n=":access"><e>lime.graphics.OpenGLRenderContext</e></m>
			<m n=":access"><e>lime.graphics.Renderer</e></m>
			<m n=":access"><e>lime.system.Clipboard</e></m>
			<m n=":access"><e>lime.system.Sensor</e></m>
			<m n=":access"><e>lime.ui.Gamepad</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.app.Application" params="" file="/projects/May2019/May2020/lime/src/lime/app/Application.hx">
		<extends path="lime.app.Module"/>
		<current public="1" set="null" static="1">
			<c path="lime.app.Application"/>
			<haxe_doc>The current Application instance that is executing</haxe_doc>
		</current>
		<meta public="1">
			<t path="Map">
				<c path="String"/>
				<c path="String"/>
			</t>
			<haxe_doc>Meta-data values for the application, such as a version or a package name</haxe_doc>
		</meta>
		<modules public="1" set="null">
			<c path="Array"><c path="lime.app.IModule"/></c>
			<haxe_doc>A list of currently attached Module instances</haxe_doc>
		</modules>
		<onUpdate public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>Update events are dispatched each frame (usually just before rendering)</haxe_doc>
		</onUpdate>
		<onCreateWindow public="1" expr="new Event&lt;Window&gt;()">
			<c path="lime.app._Event_lime_ui_Window_Void"><f a="">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Window>()]]></e></m></meta>
			<haxe_doc>Dispatched when a new window has been created by this application</haxe_doc>
		</onCreateWindow>
		<preloader public="1" get="accessor" set="null">
			<c path="lime.utils.Preloader"/>
			<haxe_doc>The Preloader for the current Application</haxe_doc>
		</preloader>
		<window public="1" get="accessor" set="null">
			<c path="lime.ui.Window"/>
			<haxe_doc>The Window associated with this Application, or the first Window
		if there are multiple Windows active</haxe_doc>
		</window>
		<windows public="1" get="accessor" set="null">
			<c path="Array"><c path="lime.ui.Window"/></c>
			<haxe_doc>A list of active Window instances associated with this Application</haxe_doc>
		</windows>
		<__backend>
			<t path="lime.app._Application.ApplicationBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</__backend>
		<__preloader>
			<c path="lime.utils.Preloader"/>
			<meta><m n=":noCompletion"/></meta>
		</__preloader>
		<__window>
			<c path="lime.ui.Window"/>
			<meta><m n=":noCompletion"/></meta>
		</__window>
		<__windowByID>
			<t path="Map">
				<x path="Int"/>
				<c path="lime.ui.Window"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</__windowByID>
		<__windows>
			<c path="Array"><c path="lime.ui.Window"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__windows>
		<addModule public="1" set="method" line="123">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds a new module to the Application
		@param	module	A module to add</haxe_doc>
		</addModule>
		<createWindow public="1" set="method" line="133">
			<f a="attributes">
				<t path="lime.ui.WindowAttributes"/>
				<c path="lime.ui.Window"/>
			</f>
			<haxe_doc>Creates a new Window and adds it to the Application
		@param	attributes	A set of parameters to initialize the window</haxe_doc>
		</createWindow>
		<exec public="1" set="method" line="146">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Execute the Application. On native platforms, this method
		blocks until the application is finished running. On other
		platforms, it will return immediately
		@return	An exit code, 0 if there was no error</haxe_doc>
		</exec>
		<onGamepadAxisMove public="1" set="method" line="159">
			<f a="gamepad:axis:value">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadAxis"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad axis move event is fired
		@param	gamepad	The current gamepad
		@param	axis	The axis that was moved
		@param	value	The axis value (between 0 and 1)</haxe_doc>
		</onGamepadAxisMove>
		<onGamepadButtonDown public="1" set="method" line="166">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad button down event is fired
		@param	gamepad	The current gamepad
		@param	button	The button that was pressed</haxe_doc>
		</onGamepadButtonDown>
		<onGamepadButtonUp public="1" set="method" line="173">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad button up event is fired
		@param	gamepad	The current gamepad
		@param	button	The button that was released</haxe_doc>
		</onGamepadButtonUp>
		<onGamepadConnect public="1" set="method" line="179">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad is connected
		@param	gamepad	The gamepad that was connected</haxe_doc>
		</onGamepadConnect>
		<onGamepadDisconnect public="1" set="method" line="185">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad is disconnected
		@param	gamepad	The gamepad that was disconnected</haxe_doc>
		</onGamepadDisconnect>
		<onJoystickAxisMove public="1" set="method" line="193">
			<f a="joystick:axis:value">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick axis move event is fired
		@param	joystick	The current joystick
		@param	axis	The axis that was moved
		@param	value	The axis value (between 0 and 1)</haxe_doc>
		</onJoystickAxisMove>
		<onJoystickButtonDown public="1" set="method" line="200">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick button down event is fired
		@param	joystick	The current joystick
		@param	button	The button that was pressed</haxe_doc>
		</onJoystickButtonDown>
		<onJoystickButtonUp public="1" set="method" line="207">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick button up event is fired
		@param	joystick	The current joystick
		@param	button	The button that was released</haxe_doc>
		</onJoystickButtonUp>
		<onJoystickConnect public="1" set="method" line="213">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick is connected
		@param	joystick	The joystick that was connected</haxe_doc>
		</onJoystickConnect>
		<onJoystickDisconnect public="1" set="method" line="219">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick is disconnected
		@param	joystick	The joystick that was disconnected</haxe_doc>
		</onJoystickDisconnect>
		<onJoystickHatMove public="1" set="method" line="227">
			<f a="joystick:hat:position">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick hat move event is fired
		@param	joystick	The current joystick
		@param	hat	The hat that was moved
		@param	position	The current hat position</haxe_doc>
		</onJoystickHatMove>
		<onJoystickTrackballMove public="1" set="method" line="236">
			<f a="joystick:trackball:x:y">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick axis move event is fired
		@param	joystick	The current joystick
		@param	trackball	The trackball that was moved
		@param	x	The x movement of the trackball (between 0 and 1)
		@param	y	The y movement of the trackball (between 0 and 1)</haxe_doc>
		</onJoystickTrackballMove>
		<onKeyDown public="1" set="method" line="243">
			<f a="keyCode:modifier">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a key down event is fired on the primary window
		@param	keyCode	The code of the key that was pressed
		@param	modifier	The modifier of the key that was pressed</haxe_doc>
		</onKeyDown>
		<onKeyUp public="1" set="method" line="250">
			<f a="keyCode:modifier">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a key up event is fired on the primary window
		@param	keyCode	The code of the key that was released
		@param	modifier	The modifier of the key that was released</haxe_doc>
		</onKeyUp>
		<onModuleExit public="1" set="method" line="255">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when the module is exiting</haxe_doc>
		</onModuleExit>
		<onMouseDown public="1" set="method" line="263">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.ui.MouseButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse down event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse
		@param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseDown>
		<onMouseMove public="1" set="method" line="270">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse move event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse</haxe_doc>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="method" line="277">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse move relative event is fired on the primary window
		@param	x	The x movement of the mouse
		@param	y	The y movement of the mouse</haxe_doc>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="method" line="285">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.ui.MouseButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse up event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse
		@param	button	The ID of the button that was released</haxe_doc>
		</onMouseUp>
		<onMouseWheel public="1" set="method" line="293">
			<f a="deltaX:deltaY:deltaMode">
				<x path="Float"/>
				<x path="Float"/>
				<e path="lime.ui.MouseWheelMode"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse wheel event is fired on the primary window
		@param	deltaX	The amount of horizontal scrolling (if applicable)
		@param	deltaY	The amount of vertical scrolling (if applicable)
		@param	deltaMode	The units of measurement used</haxe_doc>
		</onMouseWheel>
		<onPreloadComplete public="1" set="method" line="298">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a preload complete event is fired</haxe_doc>
		</onPreloadComplete>
		<onPreloadProgress public="1" set="method" line="305">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a preload progress event is fired
		@param	loaded	The number of items that are loaded
		@param	total	The total number of items will be loaded</haxe_doc>
		</onPreloadProgress>
		<onRenderContextLost public="1" set="method" line="310">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a render context is lost on the primary window</haxe_doc>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="method" line="316">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a render context is restored on the primary window
		@param	context	The render context relevant to the event</haxe_doc>
		</onRenderContextRestored>
		<onTextEdit public="1" set="method" line="324">
			<f a="text:start:length">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a text edit event is fired on the primary window
		@param	text	The current replacement text
		@param	start	The starting index for the edit
		@param	length	The length of the edit</haxe_doc>
		</onTextEdit>
		<onTextInput public="1" set="method" line="330">
			<f a="text">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a text input event is fired on the primary window
		@param	text	The current input text</haxe_doc>
		</onTextInput>
		<onTouchCancel public="1" set="method" line="336">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch cancel event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchCancel>
		<onTouchEnd public="1" set="method" line="342">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch end event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchEnd>
		<onTouchMove public="1" set="method" line="348">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch move event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchMove>
		<onTouchStart public="1" set="method" line="354">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch start event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchStart>
		<onWindowActivate public="1" set="method" line="359">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window activate event is fired on the primary window</haxe_doc>
		</onWindowActivate>
		<onWindowClose public="1" set="method" line="364">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window close event is fired on the primary window</haxe_doc>
		</onWindowClose>
		<onWindowCreate public="1" set="method" line="369">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is created</haxe_doc>
		</onWindowCreate>
		<onWindowDeactivate public="1" set="method" line="374">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window deactivate event is fired on the primary window</haxe_doc>
		</onWindowDeactivate>
		<onWindowDropFile public="1" set="method" line="379">
			<f a="file">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window drop file event is fired on the primary window</haxe_doc>
		</onWindowDropFile>
		<onWindowEnter public="1" set="method" line="384">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window enter event is fired on the primary window</haxe_doc>
		</onWindowEnter>
		<onWindowExpose public="1" set="method" line="389">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window expose event is fired on the primary window</haxe_doc>
		</onWindowExpose>
		<onWindowFocusIn public="1" set="method" line="394">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window focus in event is fired on the primary window</haxe_doc>
		</onWindowFocusIn>
		<onWindowFocusOut public="1" set="method" line="399">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window focus out event is fired on the primary window</haxe_doc>
		</onWindowFocusOut>
		<onWindowFullscreen public="1" set="method" line="404">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window enters fullscreen</haxe_doc>
		</onWindowFullscreen>
		<onWindowLeave public="1" set="method" line="409">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window leave event is fired on the primary window</haxe_doc>
		</onWindowLeave>
		<onWindowMove public="1" set="method" line="416">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window move event is fired on the primary window
		@param	x	The x position of the window in desktop coordinates
		@param	y	The y position of the window in desktop coordinates</haxe_doc>
		</onWindowMove>
		<onWindowMinimize public="1" set="method" line="421">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is minimized</haxe_doc>
		</onWindowMinimize>
		<onWindowResize public="1" set="method" line="428">
			<f a="width:height">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window resize event is fired on the primary window
		@param	width	The width of the window
		@param	height	The height of the window</haxe_doc>
		</onWindowResize>
		<onWindowRestore public="1" set="method" line="433">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is restored from being minimized or fullscreen</haxe_doc>
		</onWindowRestore>
		<removeModule public="1" set="method" line="439">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes a module from the Application
		@param	module	A module to remove</haxe_doc>
		</removeModule>
		<render public="1" set="method" line="452">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a render event is fired on the primary window
		@param	context	The render context ready to be rendered</haxe_doc>
		</render>
		<update public="1" set="method" line="458">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when an update event is fired on the primary window
		@param	deltaTime	The amount of time in milliseconds that has elapsed since the last update</haxe_doc>
		</update>
		<__addWindow set="method" line="460">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__addWindow>
		<__createWindow set="method" line="506">
			<f a="attributes">
				<t path="lime.ui.WindowAttributes"/>
				<c path="lime.ui.Window"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__createWindow>
		<__registerLimeModule set="method" line="513" override="1">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerLimeModule>
		<__removeWindow set="method" line="539">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__removeWindow>
		<__onGamepadConnect set="method" line="561">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onGamepadConnect>
		<__onJoystickConnect set="method" line="571">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onJoystickConnect>
		<__onModuleExit set="method" line="583">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onModuleExit>
		<__onWindowClose set="method" line="588">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onWindowClose>
		<__unregisterLimeModule set="method" line="598" override="1">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__unregisterLimeModule>
		<get_preloader get="inline" set="null" line="615">
			<f a=""><c path="lime.utils.Preloader"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_preloader>
		<get_window get="inline" set="null" line="620">
			<f a=""><c path="lime.ui.Window"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_window>
		<get_windows get="inline" set="null" line="625">
			<f a=""><c path="Array"><c path="lime.ui.Window"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_windows>
		<new public="1" set="method" line="96">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Application instance</haxe_doc>
		</new>
		<haxe_doc>The Application class forms the foundation for most Lime projects.
	It is common to extend this class in a main class. It is then possible
	to override "on" functions in the class in order to handle standard events
	that are relevant.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.ui.Window</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="kitGL.glLime.setup.MainLime" params="" file="src/kitGL/glLime/setup/MainLime.hx">
		<extends path="lime.app.Application"/>
		<ready expr="false">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
		</ready>
		<runSeconds expr="0">
			<x path="Float"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</runSeconds>
		<other><c path="kitGL.glLime.setup.NonGL"/></other>
		<appGL><c path="kitGL.glLime.setup.IAppGL"/></appGL>
		<width><x path="Int"/></width>
		<height><x path="Int"/></height>
		<appCreate public="1"><f a="width:heigh">
	<x path="Float"/>
	<x path="Float"/>
	<c path="kitGL.glLime.setup.IAppGL"/>
</f></appCreate>
		<onWindowCreate public="1" set="method" line="20" override="1"><f a=""><x path="Void"/></f></onWindowCreate>
		<update public="1" set="method" line="33" override="1"><f a="deltaTime">
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<render public="1" set="method" line="40" override="1"><f a="context">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></render>
		<new public="1" set="method" line="17"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="kitGL.glLime.setup.NonGL" params="" file="src/kitGL/glLime/setup/NonGL.hx">
		<width><x path="Int"/></width>
		<height><x path="Int"/></height>
		<update public="1" get="inline" set="null" line="11"><f a=""><x path="Void"/></f></update>
		<setup public="1" get="inline" set="null" line="15"><f a="context">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></setup>
		<render public="1" get="inline" set="null" line="23"><f a="context">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></render>
		<new public="1" set="method" line="7"><f a="width_:height_">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="kitGL.gluon.Animate" params="" file="src/kitGL/gluon/Animate.hx">
		<speedDelta public="1" expr="0.01">
			<x path="Float"/>
			<meta><m n=":value"><e>0.01</e></m></meta>
		</speedDelta>
		<onEnterFrame public="1"><f a=""><x path="Void"/></f></onEnterFrame>
		<onStop public="1"><f a=""><x path="Void"/></f></onStop>
		<onStart public="1"><f a=""><x path="Void"/></f></onStart>
		<lastT public="1" expr="0">
			<x path="Float"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</lastT>
		<mainLoopHandle public="1"><c path="haxe.MainEvent"/></mainLoopHandle>
		<start public="1" set="method" line="18"><f a=""><x path="Void"/></f></start>
		<mainLoop public="1" set="method" line="22"><f a=""><x path="Void"/></f></mainLoop>
		<stop public="1" set="method" line="29"><f a=""><x path="Void"/></f></stop>
		<new public="1" set="method" line="13"><f a=""><x path="Void"/></f></new>
	</class>
	<typedef path="kitGL.gluon.Pos_Col" params="" file="src/kitGL/gluon/BufferGL.cpp.hx" module="kitGL.gluon.BufferGL"><a>
	<pos><t path="gluon.webgl.GLBuffer"/></pos>
	<col><t path="gluon.webgl.GLBuffer"/></col>
</a></typedef>
	<class path="kitGL.gluon.BufferGL" params="" file="src/kitGL/gluon/BufferGL.cpp.hx">
		<bufferSetup_ public="1" expr="bufferSetup">
			<f a="gl:program:data:?isDynamic">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>bufferSetup</e></m></meta>
		</bufferSetup_>
		<interleaveXY_RGB_ public="1" expr="interleaveXY_RGB">
			<f a="gl:program:data:inPosName:inColName:?isDynamic">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>interleaveXY_RGB</e></m></meta>
		</interleaveXY_RGB_>
		<interleaveXYZ_RGBA_ public="1" expr="interleaveXYZ_RGBA">
			<f a="gl:program:data:inPosName:inColName:?isDynamic">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>interleaveXYZ_RGBA</e></m></meta>
		</interleaveXYZ_RGBA_>
		<colorsXYZ_RGBA_ public="1" expr="colorsXYZ_RGBA">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.gluon.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXYZ_RGBA</e></m></meta>
		</colorsXYZ_RGBA_>
		<colorsXY_RGBA_ public="1" expr="colorsXY_RGBA">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.gluon.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXY_RGBA</e></m></meta>
		</colorsXY_RGBA_>
		<colorsXYZ_RGB_ public="1" expr="colorsXYZ_RGB">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.gluon.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXYZ_RGB</e></m></meta>
		</colorsXYZ_RGB_>
		<colorsXY_RGB_ public="1" expr="colorsXY_RGB">
			<f a="gl:program:positions:colors:inPosName:inColName">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<t path="kitGL.gluon.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>colorsXY_RGB</e></m></meta>
		</colorsXY_RGB_>
		<posColors_ public="1" expr="posColors">
			<f a="gl:program:positions:colors:inPosName:inColName:noPos:noCols">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="kitGL.gluon.Pos_Col"/>
			</f>
			<meta><m n=":value"><e>posColors</e></m></meta>
		</posColors_>
		<new public="1" set="method" line="191">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.gluon._BufferGL.BufferGL_Fields_" params="" file="src/kitGL/gluon/BufferGL.cpp.hx" private="1" module="kitGL.gluon.BufferGL" final="1">
		<bufferSetup public="1" get="inline" set="null" line="17" static="1">
			<f a="gl:program:data:?isDynamic" v=":::false">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>{ isDynamic : false }</e></m></meta>
		</bufferSetup>
		<interleaveXY_RGB public="1" get="inline" set="null" line="31" static="1">
			<f a="gl:program:data:inPosName:inColName:?isDynamic" v=":::::false">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>{ isDynamic : false }</e></m></meta>
		</interleaveXY_RGB>
		<interleaveXYZ_RGBA_reconnect public="1" get="inline" set="null" line="62" static="1"><f a="gl:program:inPosName:inColName">
	<x path="gluon.webgl.GLContext"/>
	<t path="gluon.webgl.GLProgram"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></interleaveXYZ_RGBA_reconnect>
		<interleaveXYZ_RGBA public="1" get="inline" set="null" line="90" static="1">
			<f a="gl:program:data:inPosName:inColName:?isDynamic" v=":::::false">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<t path="gluon.webgl.GLBuffer"/>
			</f>
			<meta><m n=":value"><e>{ isDynamic : false }</e></m></meta>
		</interleaveXYZ_RGBA>
		<colorsXYZ_RGBA public="1" get="inline" set="null" line="121" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="gluon.webgl.GLContext"/>
	<t path="gluon.webgl.GLProgram"/>
	<x path="typedarray.Float32Array"/>
	<x path="typedarray.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="gluon.webgl.GLBuffer"/></pos>
		<col><t path="gluon.webgl.GLBuffer"/></col>
	</a>
</f></colorsXYZ_RGBA>
		<colorsXY_RGBA public="1" get="inline" set="null" line="130" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="gluon.webgl.GLContext"/>
	<t path="gluon.webgl.GLProgram"/>
	<x path="typedarray.Float32Array"/>
	<x path="typedarray.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="gluon.webgl.GLBuffer"/></pos>
		<col><t path="gluon.webgl.GLBuffer"/></col>
	</a>
</f></colorsXY_RGBA>
		<colorsXYZ_RGB public="1" get="inline" set="null" line="139" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="gluon.webgl.GLContext"/>
	<t path="gluon.webgl.GLProgram"/>
	<x path="typedarray.Float32Array"/>
	<x path="typedarray.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="gluon.webgl.GLBuffer"/></pos>
		<col><t path="gluon.webgl.GLBuffer"/></col>
	</a>
</f></colorsXYZ_RGB>
		<colorsXY_RGB public="1" get="inline" set="null" line="148" static="1"><f a="gl:program:positions:colors:inPosName:inColName">
	<x path="gluon.webgl.GLContext"/>
	<t path="gluon.webgl.GLProgram"/>
	<x path="typedarray.Float32Array"/>
	<x path="typedarray.Float32Array"/>
	<c path="String"/>
	<c path="String"/>
	<a>
		<pos><t path="gluon.webgl.GLBuffer"/></pos>
		<col><t path="gluon.webgl.GLBuffer"/></col>
	</a>
</f></colorsXY_RGB>
		<posColors public="1" get="inline" set="null" line="157" static="1">
			<f a="gl:program:positions:colors:inPosName:inColName:?noPos:?noCols" v="::::::3:4">
				<x path="gluon.webgl.GLContext"/>
				<t path="gluon.webgl.GLProgram"/>
				<x path="typedarray.Float32Array"/>
				<x path="typedarray.Float32Array"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<a>
					<pos><t path="gluon.webgl.GLBuffer"/></pos>
					<col><t path="gluon.webgl.GLBuffer"/></col>
				</a>
			</f>
			<meta><m n=":value"><e>{ noCols : 4, noPos : 3 }</e></m></meta>
		</posColors>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="kitGL.gluon.ColorPositions" params="" file="src/kitGL/gluon/ColorPositions.cpp.hx">
		<tri2D_ public="1" expr="tri2D">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>tri2D</e></m></meta>
		</tri2D_>
		<positions_ public="1" expr="positions">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>positions</e></m></meta>
		</positions_>
		<orthogPositions_ public="1" expr="orthogPositions">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>orthogPositions</e></m></meta>
		</orthogPositions_>
		<colors_ public="1" expr="colors">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>colors</e></m></meta>
		</colors_>
		<positions3_ public="1" expr="positions3">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>positions3</e></m></meta>
		</positions3_>
		<colors3_ public="1" expr="colors3">
			<f a=""><x path="typedarray.Float32Array"/></f>
			<meta><m n=":value"><e>colors3</e></m></meta>
		</colors3_>
		<new public="1" set="method" line="72">
			<f a=""><x path="Void"/></f>
			<meta><m n=":compilerGenerated"/></meta>
		</new>
	</class>
	<class path="kitGL.gluon._ColorPositions.ColorPositions_Fields_" params="" file="src/kitGL/gluon/ColorPositions.cpp.hx" private="1" module="kitGL.gluon.ColorPositions" final="1">
		<tri2D public="1" get="inline" set="null" line="4" static="1"><f a=""><x path="typedarray.Float32Array"/></f></tri2D>
		<positions public="1" get="inline" set="null" line="13" static="1"><f a=""><x path="typedarray.Float32Array"/></f></positions>
		<orthogPositions public="1" get="inline" set="null" line="21" static="1"><f a=""><x path="typedarray.Float32Array"/></f></orthogPositions>
		<colors public="1" get="inline" set="null" line="31" static="1"><f a=""><x path="typedarray.Float32Array"/></f></colors>
		<positions3 public="1" get="inline" set="null" line="40" static="1"><f a=""><x path="typedarray.Float32Array"/></f></positions3>
		<colors3 public="1" get="inline" set="null" line="57" static="1"><f a=""><x path="typedarray.Float32Array"/></f></colors3>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="kitGL.gluon.TDataGL" params="" file="src/kitGL/gluon/DataGL.hx" module="kitGL.gluon.DataGL"><a>
	<get_size set="method"><f a=""><x path="Int"/></f></get_size>
	<get_data set="method"><f a=""><x path="typedarray.Float32Array"/></f></get_data>
</a></typedef>
	<abstract path="kitGL.gluon.DataGL" params="" file="src/kitGL/gluon/DataGL.hx">
		<from><icast><t path="kitGL.gluon.TDataGL"/></icast></from>
		<this><t path="kitGL.gluon.TDataGL"/></this>
		<to><icast><t path="kitGL.gluon.TDataGL"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="kitGL.gluon._DataGL.DataGL_Impl_" params="" file="src/kitGL/gluon/DataGL.hx" private="1" module="kitGL.gluon.DataGL" final="1">
	<_new public="1" get="inline" set="null" line="9" static="1">
		<f a="tDataGL">
			<t path="kitGL.gluon.TDataGL"/>
			<x path="kitGL.gluon.DataGL"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<data public="1" get="accessor" set="null" static="1">
		<x path="typedarray.Float32Array"/>
		<meta><m n=":impl"/></meta>
	</data>
	<get_data get="inline" set="null" line="13" static="1">
		<f a="this">
			<t path="kitGL.gluon.TDataGL"/>
			<x path="typedarray.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_data>
	<size public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</size>
	<get_size get="inline" set="null" line="17" static="1">
		<f a="this">
			<t path="kitGL.gluon.TDataGL"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_size>
</class></impl>
	</abstract>
	<class path="kitGL.gluon._DataGL.DataGL_Impl_" params="" file="src/kitGL/gluon/DataGL.hx" private="1" module="kitGL.gluon.DataGL" final="1">
		<_new public="1" get="inline" set="null" line="9" static="1">
			<f a="tDataGL">
				<t path="kitGL.gluon.TDataGL"/>
				<x path="kitGL.gluon.DataGL"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<data public="1" get="accessor" set="null" static="1">
			<x path="typedarray.Float32Array"/>
			<meta><m n=":impl"/></meta>
		</data>
		<get_data get="inline" set="null" line="13" static="1">
			<f a="this">
				<t path="kitGL.gluon.TDataGL"/>
				<x path="typedarray.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_data>
		<size public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</size>
		<get_size get="inline" set="null" line="17" static="1">
			<f a="this">
				<t path="kitGL.gluon.TDataGL"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_size>
	</class>
	<class path="kitGL.gluon.Glwrapper" params="" file="src/kitGL/gluon/Glwrapper.hx">
		<startupFullscreen final="1" expr="false">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
		</startupFullscreen>
		<window><c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c></window>
		<pixelRatio expr="1">
			<x path="Float"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</pixelRatio>
		<initFail expr="&quot;Could not initialize GLFW&quot;">
			<c path="String"/>
			<meta><m n=":value"><e>"Could not initialize GLFW"</e></m></meta>
		</initFail>
		<windowFail expr="&quot;Could not create GLFW window&quot;">
			<c path="String"/>
			<meta><m n=":value"><e>"Could not create GLFW window"</e></m></meta>
		</windowFail>
		<onFrame public="1"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onFrame>
		<onStop public="1"><f a=""><x path="Void"/></f></onStop>
		<gl public="1"><c path="gluon.webgl.native.GLContext"/></gl>
		<videoSizeString get="inline" set="null" line="61"><f a="videoMode_">
	<a><value set="null"><a>
	<width set="null"><c path="String"/></width>
	<height set="null"><c path="String"/></height>
</a></value></a>
	<c path="String"/>
</f></videoSizeString>
		<refreshString get="inline" set="null" line="66"><f a="videoMode_">
	<a><value set="null"><a><refreshRate set="null"><c path="String"/></refreshRate></a></value></a>
	<c path="String"/>
</f></refreshString>
		<glfwHints get="inline" set="null" line="71"><f a=""><x path="Void"/></f></glfwHints>
		<terminate set="method" line="82"><f a=""><x path="Void"/></f></terminate>
		<mainLoop public="1" set="method" line="87"><f a=""><x path="Void"/></f></mainLoop>
		<onGLFWError set="method" line="105"><f a="code:message">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></onGLFWError>
		<onResize set="method" line="106"><f a="window:width:height">
	<c path="cpp.Pointer"><c path="glfw.GLFWwindow"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onResize>
		<onKey set="method" line="113"><f a="key:scanCode:action:mods">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onKey>
		<onMousePosChange set="method" line="114"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></onMousePosChange>
		<onMouseButton set="method" line="115"><f a="button:action:mods">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onMouseButton>
		<getWindowSize get="inline" set="null" line="116"><f a=""><a>
	<width><x path="Int"/></width>
	<height><x path="Int"/></height>
</a></f></getWindowSize>
		<getScreenBufferSize get="inline" set="null" line="128"><f a=""><a>
	<width><x path="Int"/></width>
	<height><x path="Int"/></height>
</a></f></getScreenBufferSize>
		<getPixelRatio get="inline" set="null" line="140"><f a=""><x path="cpp.Float32"/></f></getPixelRatio>
		<new public="1" set="method" line="22"><f a=""><x path="Void"/></f></new>
		<haxe_doc>*  Creates a glfw window and uses Demo to call OpenGL commands
 *  created by haxiomic, formatting and modifications by nanjizal</haxe_doc>
	</class>
	<class path="kitGL.gluon._HelpGL.HelpGL_Fields_" params="" file="src/kitGL/gluon/HelpGL.cpp.hx" private="1" module="kitGL.gluon.HelpGL" final="1">
		<clearAll public="1" get="inline" set="null" line="11" static="1"><f a="gl:width:height">
	<x path="gluon.webgl.GLContext"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearAll>
		<programSetup public="1" get="inline" set="null" line="17" static="1"><f a="gl:strVertex:strFragment">
	<x path="gluon.webgl.GLContext"/>
	<c path="String"/>
	<c path="String"/>
	<t path="gluon.webgl.GLProgram"/>
</f></programSetup>
		<shaderSetup public="1" get="inline" set="null" line="38" static="1"><f a="gl:shaderType:str">
	<x path="gluon.webgl.GLContext"/>
	<x path="Int"/>
	<c path="String"/>
	<t path="gluon.webgl.GLShader"/>
</f></shaderSetup>
	</class>
	<class path="kitGL.gluon.Ply" params="" file="src/kitGL/gluon/Ply.hx">
		<dataGL public="1"><x path="kitGL.gluon.DataGL"/></dataGL>
		<posLoc public="1"><x path="Int"/></posLoc>
		<colorLoc public="1"><x path="Int"/></colorLoc>
		<gl final="1"><x path="gluon.webgl.GLContext"/></gl>
		<program public="1"><t path="gluon.webgl.GLProgram"/></program>
		<buf public="1"><t path="gluon.webgl.GLBuffer"/></buf>
		<setup public="1" get="inline" set="null" line="26"><f a=""><x path="Void"/></f></setup>
		<draw public="1" set="method" line="40"><f a=""><x path="Void"/></f></draw>
		<render public="1" get="inline" set="null" line="42"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></render>
		<renderDraw public="1" set="method" line="57"><f a=""><x path="Void"/></f></renderDraw>
		<new public="1" set="method" line="21"><f a="gl">
	<x path="gluon.webgl.GLContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="kitGL.gluon.Shaders" params="" file="src/kitGL/gluon/Shaders.cpp.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="kitGL.gluon._Shaders.Shaders_Impl_" params="" file="src/kitGL/gluon/Shaders.cpp.hx" private="1" module="kitGL.gluon.Shaders" extern="1" final="1">
	<vertexString0_ public="1" get="inline" set="null" expr="cast vertexString0" line="21" static="1">
		<x path="kitGL.gluon.Shaders"/>
		<meta>
			<m n=":value"><e>cast vertexString0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</vertexString0_>
	<fragmentString0_ public="1" get="inline" set="null" expr="cast fragmentString0" line="22" static="1">
		<x path="kitGL.gluon.Shaders"/>
		<meta>
			<m n=":value"><e>cast fragmentString0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</fragmentString0_>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="kitGL.gluon._Shaders.Shaders_Impl_" params="" file="src/kitGL/gluon/Shaders.cpp.hx" private="1" module="kitGL.gluon.Shaders" extern="1" final="1">
		<vertexString0_ public="1" get="inline" set="null" expr="cast vertexString0" line="21" static="1">
			<x path="kitGL.gluon.Shaders"/>
			<meta>
				<m n=":value"><e>cast vertexString0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</vertexString0_>
		<fragmentString0_ public="1" get="inline" set="null" expr="cast fragmentString0" line="22" static="1">
			<x path="kitGL.gluon.Shaders"/>
			<meta>
				<m n=":value"><e>cast fragmentString0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</fragmentString0_>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="kitGL.gluon._Shaders.Shaders_Fields_" params="" file="src/kitGL/gluon/Shaders.cpp.hx" private="1" module="kitGL.gluon.Shaders" final="1">
		<vertexString0 public="1" get="inline" set="null" expr="&quot;attribute vec3 vertexPosition;&quot; + &quot;attribute vec4 vertexColor;&quot; + &quot;varying vec4 vcol;&quot; + &quot;void main() {&quot; + &quot; gl_Position = vec4(vertexPosition, 1.0);&quot; + &quot; vcol = vertexColor;&quot; + &quot;}&quot;" line="5" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"attribute vec3 vertexPosition;" + "attribute vec4 vertexColor;" + "varying vec4 vcol;" + "void main() {" + " gl_Position = vec4(vertexPosition, 1.0);" + " vcol = vertexColor;" + "}"</e></m></meta>
		</vertexString0>
		<fragmentString0 public="1" get="inline" set="null" expr="&quot;varying vec4 vcol;&quot; + &quot;void main() {&quot; + &quot; gl_FragColor = vcol;&quot; + &quot;}&quot;" line="14" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"varying vec4 vcol;" + "void main() {" + " gl_FragColor = vcol;" + "}"</e></m></meta>
		</fragmentString0>
	</class>
	<class path="kitGL.upkeep.Doc" params="" file="src/kitGL/upkeep/Doc.cpp.hx">
		<main public="1" set="method" line="33" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":keep"/></meta>
		</main>
		<new public="1" set="method" line="36"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="lime._internal.backend.native.ApplicationEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<deltaTime public="1"><x path="Int"/></deltaTime>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/></type>
		<clone public="1" set="method" line="617"><f a=""><c path="lime._internal.backend.native.ApplicationEventInfo"/></f></clone>
		<new public="1" set="method" line="611">
			<f a="?type:?deltaTime" v="null:0">
				<x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ deltaTime : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.ApplicationEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.ApplicationEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<UPDATE public="1" get="inline" set="null" expr="cast 0" line="625" static="1">
		<x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPDATE>
	<EXIT public="1" get="inline" set="null" expr="cast 1" line="626" static="1">
		<x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXIT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.ApplicationEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<UPDATE public="1" get="inline" set="null" expr="cast 0" line="625" static="1">
			<x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPDATE>
		<EXIT public="1" get="inline" set="null" expr="cast 1" line="626" static="1">
			<x path="lime._internal.backend.native._NativeApplication.ApplicationEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXIT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.ClipboardEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.ClipboardEventType"/></type>
		<clone public="1" set="method" line="638"><f a=""><c path="lime._internal.backend.native.ClipboardEventInfo"/></f></clone>
		<new public="1" set="method" line="633">
			<f a="?type" v="null">
				<x path="lime._internal.backend.native._NativeApplication.ClipboardEventType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.ClipboardEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.ClipboardEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<UPDATE public="1" get="inline" set="null" expr="cast 0" line="646" static="1">
		<x path="lime._internal.backend.native._NativeApplication.ClipboardEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPDATE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.ClipboardEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<UPDATE public="1" get="inline" set="null" expr="cast 0" line="646" static="1">
			<x path="lime._internal.backend.native._NativeApplication.ClipboardEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPDATE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.DropEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<file public="1"><c path="String"/></file>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.DropEventType"/></type>
		<clone public="1" set="method" line="660"><f a=""><c path="lime._internal.backend.native.DropEventInfo"/></f></clone>
		<new public="1" set="method" line="654">
			<f a="?type:?file" v="null:null">
				<x path="lime._internal.backend.native._NativeApplication.DropEventType"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ file : null, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.DropEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.DropEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<DROP_FILE public="1" get="inline" set="null" expr="cast 0" line="668" static="1">
		<x path="lime._internal.backend.native._NativeApplication.DropEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DROP_FILE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.DropEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<DROP_FILE public="1" get="inline" set="null" expr="cast 0" line="668" static="1">
			<x path="lime._internal.backend.native._NativeApplication.DropEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DROP_FILE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.GamepadEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<axis public="1"><x path="Int"/></axis>
		<button public="1"><x path="Int"/></button>
		<id public="1"><x path="Int"/></id>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/></type>
		<axisValue public="1"><x path="Float"/></axisValue>
		<clone public="1" set="method" line="688"><f a=""><c path="lime._internal.backend.native.GamepadEventInfo"/></f></clone>
		<new public="1" set="method" line="679">
			<f a="?type:?id:?button:?axis:?value" v="null:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : 0, axis : 0, button : 0, id : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.GamepadEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.GamepadEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<AXIS_MOVE public="1" get="inline" set="null" expr="cast 0" line="696" static="1">
		<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AXIS_MOVE>
	<BUTTON_DOWN public="1" get="inline" set="null" expr="cast 1" line="697" static="1">
		<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTTON_DOWN>
	<BUTTON_UP public="1" get="inline" set="null" expr="cast 2" line="698" static="1">
		<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTTON_UP>
	<CONNECT public="1" get="inline" set="null" expr="cast 3" line="699" static="1">
		<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT>
	<DISCONNECT public="1" get="inline" set="null" expr="cast 4" line="700" static="1">
		<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISCONNECT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.GamepadEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<AXIS_MOVE public="1" get="inline" set="null" expr="cast 0" line="696" static="1">
			<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AXIS_MOVE>
		<BUTTON_DOWN public="1" get="inline" set="null" expr="cast 1" line="697" static="1">
			<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTTON_DOWN>
		<BUTTON_UP public="1" get="inline" set="null" expr="cast 2" line="698" static="1">
			<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTTON_UP>
		<CONNECT public="1" get="inline" set="null" expr="cast 3" line="699" static="1">
			<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT>
		<DISCONNECT public="1" get="inline" set="null" expr="cast 4" line="700" static="1">
			<x path="lime._internal.backend.native._NativeApplication.GamepadEventType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISCONNECT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.JoystickEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<id public="1"><x path="Int"/></id>
		<index public="1"><x path="Int"/></index>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/></type>
		<eventValue public="1"><x path="Int"/></eventValue>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="722"><f a=""><c path="lime._internal.backend.native.JoystickEventInfo"/></f></clone>
		<new public="1" set="method" line="712">
			<f a="?type:?id:?index:?value:?x:?y" v="null:0:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0, value : 0, index : 0, id : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.JoystickEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.JoystickEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<AXIS_MOVE public="1" get="inline" set="null" expr="cast 0" line="730" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AXIS_MOVE>
	<HAT_MOVE public="1" get="inline" set="null" expr="cast 1" line="731" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HAT_MOVE>
	<TRACKBALL_MOVE public="1" get="inline" set="null" expr="cast 2" line="732" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRACKBALL_MOVE>
	<BUTTON_DOWN public="1" get="inline" set="null" expr="cast 3" line="733" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTTON_DOWN>
	<BUTTON_UP public="1" get="inline" set="null" expr="cast 4" line="734" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTTON_UP>
	<CONNECT public="1" get="inline" set="null" expr="cast 5" line="735" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT>
	<DISCONNECT public="1" get="inline" set="null" expr="cast 6" line="736" static="1">
		<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISCONNECT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.JoystickEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<AXIS_MOVE public="1" get="inline" set="null" expr="cast 0" line="730" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AXIS_MOVE>
		<HAT_MOVE public="1" get="inline" set="null" expr="cast 1" line="731" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HAT_MOVE>
		<TRACKBALL_MOVE public="1" get="inline" set="null" expr="cast 2" line="732" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRACKBALL_MOVE>
		<BUTTON_DOWN public="1" get="inline" set="null" expr="cast 3" line="733" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTTON_DOWN>
		<BUTTON_UP public="1" get="inline" set="null" expr="cast 4" line="734" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTTON_UP>
		<CONNECT public="1" get="inline" set="null" expr="cast 5" line="735" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT>
		<DISCONNECT public="1" get="inline" set="null" expr="cast 6" line="736" static="1">
			<x path="lime._internal.backend.native._NativeApplication.JoystickEventType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISCONNECT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.KeyEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<keyCode public="1"><x path="Int"/></keyCode>
		<modifier public="1"><x path="Int"/></modifier>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.KeyEventType"/></type>
		<windowID public="1"><x path="Int"/></windowID>
		<clone public="1" set="method" line="754"><f a=""><c path="lime._internal.backend.native.KeyEventInfo"/></f></clone>
		<new public="1" set="method" line="746">
			<f a="?type:?windowID:?keyCode:?modifier" v="null:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.KeyEventType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ modifier : 0, keyCode : 0, windowID : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.KeyEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.KeyEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<KEY_DOWN public="1" get="inline" set="null" expr="cast 0" line="762" static="1">
		<x path="lime._internal.backend.native._NativeApplication.KeyEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEY_DOWN>
	<KEY_UP public="1" get="inline" set="null" expr="cast 1" line="763" static="1">
		<x path="lime._internal.backend.native._NativeApplication.KeyEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEY_UP>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.KeyEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<KEY_DOWN public="1" get="inline" set="null" expr="cast 0" line="762" static="1">
			<x path="lime._internal.backend.native._NativeApplication.KeyEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEY_DOWN>
		<KEY_UP public="1" get="inline" set="null" expr="cast 1" line="763" static="1">
			<x path="lime._internal.backend.native._NativeApplication.KeyEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEY_UP>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.MouseEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<button public="1"><x path="Int"/></button>
		<movementX public="1"><x path="Float"/></movementX>
		<movementY public="1"><x path="Float"/></movementY>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.MouseEventType"/></type>
		<windowID public="1"><x path="Int"/></windowID>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="787"><f a=""><c path="lime._internal.backend.native.MouseEventInfo"/></f></clone>
		<new public="1" set="method" line="776">
			<f a="?type:?windowID:?x:?y:?button:?movementX:?movementY" v="null:0:0:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ movementY : 0, movementX : 0, button : 0, y : 0, x : 0, windowID : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.MouseEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.MouseEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<MOUSE_DOWN public="1" get="inline" set="null" expr="cast 0" line="795" static="1">
		<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_DOWN>
	<MOUSE_UP public="1" get="inline" set="null" expr="cast 1" line="796" static="1">
		<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_UP>
	<MOUSE_MOVE public="1" get="inline" set="null" expr="cast 2" line="797" static="1">
		<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_MOVE>
	<MOUSE_WHEEL public="1" get="inline" set="null" expr="cast 3" line="798" static="1">
		<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_WHEEL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.MouseEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<MOUSE_DOWN public="1" get="inline" set="null" expr="cast 0" line="795" static="1">
			<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_DOWN>
		<MOUSE_UP public="1" get="inline" set="null" expr="cast 1" line="796" static="1">
			<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_UP>
		<MOUSE_MOVE public="1" get="inline" set="null" expr="cast 2" line="797" static="1">
			<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_MOVE>
		<MOUSE_WHEEL public="1" get="inline" set="null" expr="cast 3" line="798" static="1">
			<x path="lime._internal.backend.native._NativeApplication.MouseEventType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_WHEEL>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.RenderEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.RenderEventType"/></type>
		<clone public="1" set="method" line="810"><f a=""><c path="lime._internal.backend.native.RenderEventInfo"/></f></clone>
		<new public="1" set="method" line="805">
			<f a="?type" v="null">
				<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.RenderEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.RenderEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<RENDER public="1" get="inline" set="null" expr="cast 0" line="818" static="1">
		<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER>
	<RENDER_CONTEXT_LOST public="1" get="inline" set="null" expr="cast 1" line="819" static="1">
		<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER_CONTEXT_LOST>
	<RENDER_CONTEXT_RESTORED public="1" get="inline" set="null" expr="cast 2" line="820" static="1">
		<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER_CONTEXT_RESTORED>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.RenderEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<RENDER public="1" get="inline" set="null" expr="cast 0" line="818" static="1">
			<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER>
		<RENDER_CONTEXT_LOST public="1" get="inline" set="null" expr="cast 1" line="819" static="1">
			<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER_CONTEXT_LOST>
		<RENDER_CONTEXT_RESTORED public="1" get="inline" set="null" expr="cast 2" line="820" static="1">
			<x path="lime._internal.backend.native._NativeApplication.RenderEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER_CONTEXT_RESTORED>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.SensorEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<id public="1"><x path="Int"/></id>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.SensorEventType"/></type>
		<clone public="1" set="method" line="840"><f a=""><c path="lime._internal.backend.native.SensorEventInfo"/></f></clone>
		<new public="1" set="method" line="831">
			<f a="?type:?id:?x:?y:?z" v="null:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.SensorEventType"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ z : 0, y : 0, x : 0, id : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.SensorEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.SensorEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<ACCELEROMETER public="1" get="inline" set="null" expr="cast 0" line="848" static="1">
		<x path="lime._internal.backend.native._NativeApplication.SensorEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACCELEROMETER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.SensorEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<ACCELEROMETER public="1" get="inline" set="null" expr="cast 0" line="848" static="1">
			<x path="lime._internal.backend.native._NativeApplication.SensorEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACCELEROMETER>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.TextEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<id public="1"><x path="Int"/></id>
		<length public="1"><x path="Int"/></length>
		<start public="1"><x path="Int"/></start>
		<text public="1"><c path="String"/></text>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.TextEventType"/></type>
		<windowID public="1"><x path="Int"/></windowID>
		<clone public="1" set="method" line="869"><f a=""><c path="lime._internal.backend.native.TextEventInfo"/></f></clone>
		<new public="1" set="method" line="860">
			<f a="?type:?windowID:?text:?start:?length" v="null:0:null:0:0">
				<x path="lime._internal.backend.native._NativeApplication.TextEventType"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ length : 0, start : 0, text : null, windowID : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.TextEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.TextEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<TEXT_INPUT public="1" get="inline" set="null" expr="cast 0" line="877" static="1">
		<x path="lime._internal.backend.native._NativeApplication.TextEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT_INPUT>
	<TEXT_EDIT public="1" get="inline" set="null" expr="cast 1" line="878" static="1">
		<x path="lime._internal.backend.native._NativeApplication.TextEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT_EDIT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.TextEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<TEXT_INPUT public="1" get="inline" set="null" expr="cast 0" line="877" static="1">
			<x path="lime._internal.backend.native._NativeApplication.TextEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT_INPUT>
		<TEXT_EDIT public="1" get="inline" set="null" expr="cast 1" line="878" static="1">
			<x path="lime._internal.backend.native._NativeApplication.TextEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT_EDIT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.TouchEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<device public="1"><x path="Int"/></device>
		<dx public="1"><x path="Float"/></dx>
		<dy public="1"><x path="Float"/></dy>
		<id public="1"><x path="Int"/></id>
		<pressure public="1"><x path="Float"/></pressure>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.TouchEventType"/></type>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="904"><f a=""><c path="lime._internal.backend.native.TouchEventInfo"/></f></clone>
		<new public="1" set="method" line="892">
			<f a="?type:?x:?y:?id:?dx:?dy:?pressure:?device" v="null:0:0:0:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ device : 0, pressure : 0, dy : 0, dx : 0, id : 0, y : 0, x : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.TouchEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.TouchEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<TOUCH_START public="1" get="inline" set="null" expr="cast 0" line="912" static="1">
		<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_START>
	<TOUCH_END public="1" get="inline" set="null" expr="cast 1" line="913" static="1">
		<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_END>
	<TOUCH_MOVE public="1" get="inline" set="null" expr="cast 2" line="914" static="1">
		<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_MOVE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.TouchEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<TOUCH_START public="1" get="inline" set="null" expr="cast 0" line="912" static="1">
			<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_START>
		<TOUCH_END public="1" get="inline" set="null" expr="cast 1" line="913" static="1">
			<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_END>
		<TOUCH_MOVE public="1" get="inline" set="null" expr="cast 2" line="914" static="1">
			<x path="lime._internal.backend.native._NativeApplication.TouchEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_MOVE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.WindowEventInfo" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" module="lime._internal.backend.native.NativeApplication">
		<height public="1"><x path="Int"/></height>
		<type public="1"><x path="lime._internal.backend.native._NativeApplication.WindowEventType"/></type>
		<width public="1"><x path="Int"/></width>
		<windowID public="1"><x path="Int"/></windowID>
		<x public="1"><x path="Int"/></x>
		<y public="1"><x path="Int"/></y>
		<clone public="1" set="method" line="936"><f a=""><c path="lime._internal.backend.native.WindowEventInfo"/></f></clone>
		<new public="1" set="method" line="926">
			<f a="?type:?windowID:?width:?height:?x:?y" v="null:0:0:0:0:0">
				<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0, height : 0, width : 0, windowID : 0, type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeApplication.WindowEventType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeApplication.WindowEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
	<WINDOW_ACTIVATE public="1" get="inline" set="null" expr="cast 0" line="944" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_ACTIVATE>
	<WINDOW_CLOSE public="1" get="inline" set="null" expr="cast 1" line="945" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_CLOSE>
	<WINDOW_DEACTIVATE public="1" get="inline" set="null" expr="cast 2" line="946" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_DEACTIVATE>
	<WINDOW_ENTER public="1" get="inline" set="null" expr="cast 3" line="947" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_ENTER>
	<WINDOW_EXPOSE public="1" get="inline" set="null" expr="cast 4" line="948" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_EXPOSE>
	<WINDOW_FOCUS_IN public="1" get="inline" set="null" expr="cast 5" line="949" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FOCUS_IN>
	<WINDOW_FOCUS_OUT public="1" get="inline" set="null" expr="cast 6" line="950" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FOCUS_OUT>
	<WINDOW_LEAVE public="1" get="inline" set="null" expr="cast 7" line="951" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_LEAVE>
	<WINDOW_MAXIMIZE public="1" get="inline" set="null" expr="cast 8" line="952" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_MAXIMIZE>
	<WINDOW_MINIMIZE public="1" get="inline" set="null" expr="cast 9" line="953" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_MINIMIZE>
	<WINDOW_MOVE public="1" get="inline" set="null" expr="cast 10" line="954" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_MOVE>
	<WINDOW_RESIZE public="1" get="inline" set="null" expr="cast 11" line="955" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_RESIZE>
	<WINDOW_RESTORE public="1" get="inline" set="null" expr="cast 12" line="956" static="1">
		<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_RESTORE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeApplication.WindowEventType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeApplication.hx" private="1" module="lime._internal.backend.native.NativeApplication" extern="1" final="1">
		<WINDOW_ACTIVATE public="1" get="inline" set="null" expr="cast 0" line="944" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_ACTIVATE>
		<WINDOW_CLOSE public="1" get="inline" set="null" expr="cast 1" line="945" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_CLOSE>
		<WINDOW_DEACTIVATE public="1" get="inline" set="null" expr="cast 2" line="946" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_DEACTIVATE>
		<WINDOW_ENTER public="1" get="inline" set="null" expr="cast 3" line="947" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_ENTER>
		<WINDOW_EXPOSE public="1" get="inline" set="null" expr="cast 4" line="948" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_EXPOSE>
		<WINDOW_FOCUS_IN public="1" get="inline" set="null" expr="cast 5" line="949" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FOCUS_IN>
		<WINDOW_FOCUS_OUT public="1" get="inline" set="null" expr="cast 6" line="950" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FOCUS_OUT>
		<WINDOW_LEAVE public="1" get="inline" set="null" expr="cast 7" line="951" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_LEAVE>
		<WINDOW_MAXIMIZE public="1" get="inline" set="null" expr="cast 8" line="952" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_MAXIMIZE>
		<WINDOW_MINIMIZE public="1" get="inline" set="null" expr="cast 9" line="953" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_MINIMIZE>
		<WINDOW_MOVE public="1" get="inline" set="null" expr="cast 10" line="954" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_MOVE>
		<WINDOW_RESIZE public="1" get="inline" set="null" expr="cast 11" line="955" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_RESIZE>
		<WINDOW_RESTORE public="1" get="inline" set="null" expr="cast 12" line="956" static="1">
			<x path="lime._internal.backend.native._NativeApplication.WindowEventType"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_RESTORE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.backend.native.NativeOpenGLRenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeOpenGLRenderContext.hx">
		<__extensionObjects static="1"><t path="Map">
	<c path="String"/>
	<d/>
</t></__extensionObjects>
		<__extensionObjectConstructors expr="new Map&lt;String,Void&gt;()" line="39" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<f a=""><d/></f>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,Void>()]]></e></m></meta>
		</__extensionObjectConstructors>
		<__lastContextID expr="0" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</__lastContextID>
		<__supportedExtensions static="1"><c path="Array"><c path="String"/></c></__supportedExtensions>
		<DEPTH_BUFFER_BIT public="1" expr="0x00000100">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" expr="0x00000400">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" expr="0x00004000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" expr="0x0000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</POINTS>
		<LINES public="1" expr="0x0001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LINES>
		<LINE_LOOP public="1" expr="0x0002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" expr="0x0003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" expr="0x0004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" expr="0x0005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" expr="0x0006">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR public="1" expr="0x0300">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0300</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" expr="0x0301">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0301</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" expr="0x0302">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0302</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" expr="0x0303">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0303</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" expr="0x0304">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0304</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" expr="0x0305">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0305</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" expr="0x0306">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0306</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" expr="0x0307">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0307</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" expr="0x0308">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0308</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" expr="0x8006">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8006</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" expr="0x8009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" expr="0x8009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" expr="0x883D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x883D</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" expr="0x800A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800A</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" expr="0x800B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800B</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" expr="0x80C8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C8</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" expr="0x80C9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C9</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" expr="0x80CA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CA</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" expr="0x80CB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CB</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" expr="0x8001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" expr="0x8002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8002</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" expr="0x8003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8003</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" expr="0x8004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8004</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" expr="0x8005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8005</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" expr="0x8892">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8892</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" expr="0x8893">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8893</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" expr="0x8894">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8894</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" expr="0x8895">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8895</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" expr="0x88E0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E0</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" expr="0x88E4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E4</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" expr="0x88E8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E8</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" expr="0x8764">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8764</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" expr="0x8765">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8765</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" expr="0x8626">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8626</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" expr="0x0404">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0404</e></m></meta>
		</FRONT>
		<BACK public="1" expr="0x0405">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0405</e></m></meta>
		</BACK>
		<FRONT_AND_BACK public="1" expr="0x0408">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0408</e></m></meta>
		</FRONT_AND_BACK>
		<TEXTURE_2D public="1" expr="0x0DE1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0DE1</e></m></meta>
		</TEXTURE_2D>
		<CULL_FACE public="1" expr="0x0B44">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B44</e></m></meta>
		</CULL_FACE>
		<BLEND public="1" expr="0x0BE2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BE2</e></m></meta>
		</BLEND>
		<DITHER public="1" expr="0x0BD0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BD0</e></m></meta>
		</DITHER>
		<STENCIL_TEST public="1" expr="0x0B90">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B90</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" expr="0x0B71">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B71</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" expr="0x0C11">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C11</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" expr="0x8037">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8037</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" expr="0x809E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x809E</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" expr="0x80A0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A0</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" expr="0x0500">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0500</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" expr="0x0501">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0501</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" expr="0x0502">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0502</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" expr="0x0505">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0505</e></m></meta>
		</OUT_OF_MEMORY>
		<CW public="1" expr="0x0900">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0900</e></m></meta>
		</CW>
		<CCW public="1" expr="0x0901">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0901</e></m></meta>
		</CCW>
		<LINE_WIDTH public="1" expr="0x0B21">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B21</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" expr="0x846D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846D</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" expr="0x846E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846E</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" expr="0x0B45">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B45</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" expr="0x0B46">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B46</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" expr="0x0B70">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B70</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" expr="0x0B72">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B72</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" expr="0x0B73">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B73</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" expr="0x0B74">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B74</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" expr="0x0B91">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B91</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" expr="0x0B92">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B92</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" expr="0x0B94">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B94</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" expr="0x0B95">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B95</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" expr="0x0B96">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B96</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" expr="0x0B97">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B97</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" expr="0x0B93">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B93</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" expr="0x0B98">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B98</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" expr="0x8800">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8800</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" expr="0x8801">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8801</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" expr="0x8802">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8802</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" expr="0x8803">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8803</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" expr="0x8CA3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA3</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" expr="0x8CA4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA4</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" expr="0x8CA5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA5</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" expr="0x0BA2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BA2</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" expr="0x0C10">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C10</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" expr="0x0C22">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C22</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" expr="0x0C23">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C23</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" expr="0x0CF5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF5</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" expr="0x0D05">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D05</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" expr="0x0D33">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D33</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" expr="0x0D3A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D3A</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" expr="0x0D50">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D50</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" expr="0x0D52">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D52</e></m></meta>
		</RED_BITS>
		<GREEN_BITS public="1" expr="0x0D53">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D53</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" expr="0x0D54">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D54</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" expr="0x0D55">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D55</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" expr="0x0D56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D56</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" expr="0x0D57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D57</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" expr="0x2A00">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2A00</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" expr="0x8038">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8038</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" expr="0x8069">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8069</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" expr="0x80A8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A8</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" expr="0x80A9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A9</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" expr="0x80AA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AA</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" expr="0x80AB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AB</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<NUM_COMPRESSED_TEXTURE_FORMATS public="1" expr="0x86A2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A2</e></m></meta>
		</NUM_COMPRESSED_TEXTURE_FORMATS>
		<COMPRESSED_TEXTURE_FORMATS public="1" expr="0x86A3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A3</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" expr="0x1100">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</DONT_CARE>
		<FASTEST public="1" expr="0x1101">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FASTEST>
		<NICEST public="1" expr="0x1102">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" expr="0x8192">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8192</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" expr="0x1400">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1400</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" expr="0x1401">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1401</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" expr="0x1402">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1402</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" expr="0x1403">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1403</e></m></meta>
		</UNSIGNED_SHORT>
		<INT public="1" expr="0x1404">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1404</e></m></meta>
		</INT>
		<UNSIGNED_INT public="1" expr="0x1405">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" expr="0x1406">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1406</e></m></meta>
		</FLOAT>
		<FIXED public="1" expr="0x0140C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0140C</e></m></meta>
		</FIXED>
		<DEPTH_COMPONENT public="1" expr="0x1902">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1902</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" expr="0x1906">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1906</e></m></meta>
		</ALPHA>
		<RGB public="1" expr="0x1907">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1907</e></m></meta>
		</RGB>
		<RGBA public="1" expr="0x1908">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1908</e></m></meta>
		</RGBA>
		<LUMINANCE public="1" expr="0x1909">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1909</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" expr="0x190A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x190A</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" expr="0x8033">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8033</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" expr="0x8034">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8034</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" expr="0x8363">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8363</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" expr="0x8B30">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B30</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" expr="0x8B31">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B31</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" expr="0x8869">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8869</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" expr="0x8DFB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFB</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" expr="0x8DFC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFC</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" expr="0x8B4D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4D</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" expr="0x8B4C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4C</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" expr="0x8872">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8872</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" expr="0x8DFD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFD</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" expr="0x8B4F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4F</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" expr="0x8B80">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B80</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" expr="0x8B82">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B82</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" expr="0x8B83">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B83</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" expr="0x8B85">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B85</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" expr="0x8B86">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B86</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_UNIFORMS_MAX_LENGTH public="1" expr="0x8B87">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B87</e></m></meta>
		</ACTIVE_UNIFORMS_MAX_LENGTH>
		<ACTIVE_ATTRIBUTES public="1" expr="0x8B89">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B89</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<ACTIVE_ATTRIBUTES_MAX_LENGTH public="1" expr="0x8B8A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8A</e></m></meta>
		</ACTIVE_ATTRIBUTES_MAX_LENGTH>
		<SHADING_LANGUAGE_VERSION public="1" expr="0x8B8C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8C</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" expr="0x8B8D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8D</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" expr="0x0200">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</NEVER>
		<LESS public="1" expr="0x0201">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0201</e></m></meta>
		</LESS>
		<EQUAL public="1" expr="0x0202">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0202</e></m></meta>
		</EQUAL>
		<LEQUAL public="1" expr="0x0203">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0203</e></m></meta>
		</LEQUAL>
		<GREATER public="1" expr="0x0204">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0204</e></m></meta>
		</GREATER>
		<NOTEQUAL public="1" expr="0x0205">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0205</e></m></meta>
		</NOTEQUAL>
		<GEQUAL public="1" expr="0x0206">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0206</e></m></meta>
		</GEQUAL>
		<ALWAYS public="1" expr="0x0207">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0207</e></m></meta>
		</ALWAYS>
		<KEEP public="1" expr="0x1E00">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E00</e></m></meta>
		</KEEP>
		<REPLACE public="1" expr="0x1E01">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E01</e></m></meta>
		</REPLACE>
		<INCR public="1" expr="0x1E02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E02</e></m></meta>
		</INCR>
		<DECR public="1" expr="0x1E03">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E03</e></m></meta>
		</DECR>
		<INVERT public="1" expr="0x150A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x150A</e></m></meta>
		</INVERT>
		<INCR_WRAP public="1" expr="0x8507">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8507</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" expr="0x8508">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8508</e></m></meta>
		</DECR_WRAP>
		<VENDOR public="1" expr="0x1F00">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F00</e></m></meta>
		</VENDOR>
		<RENDERER public="1" expr="0x1F01">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F01</e></m></meta>
		</RENDERER>
		<VERSION public="1" expr="0x1F02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F02</e></m></meta>
		</VERSION>
		<EXTENSIONS public="1" expr="0x1F03">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F03</e></m></meta>
		</EXTENSIONS>
		<NEAREST public="1" expr="0x2600">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2600</e></m></meta>
		</NEAREST>
		<LINEAR public="1" expr="0x2601">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2601</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" expr="0x2700">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2700</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" expr="0x2701">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2701</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" expr="0x2702">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2702</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" expr="0x2703">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2703</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" expr="0x2800">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2800</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" expr="0x2801">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2801</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" expr="0x2802">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2802</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" expr="0x2803">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2803</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE public="1" expr="0x1702">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1702</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" expr="0x8513">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8513</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" expr="0x8514">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8514</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" expr="0x8515">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8515</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" expr="0x8516">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8516</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" expr="0x8517">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8517</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" expr="0x8518">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8518</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" expr="0x8519">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8519</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" expr="0x851A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851A</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" expr="0x851C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851C</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" expr="0x84C0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C0</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" expr="0x84C1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C1</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" expr="0x84C2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C2</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" expr="0x84C3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C3</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" expr="0x84C4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C4</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" expr="0x84C5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C5</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" expr="0x84C6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C6</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" expr="0x84C7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C7</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" expr="0x84C8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C8</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" expr="0x84C9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C9</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" expr="0x84CA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CA</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" expr="0x84CB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CB</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" expr="0x84CC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CC</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" expr="0x84CD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CD</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" expr="0x84CE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CE</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" expr="0x84CF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CF</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" expr="0x84D0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D0</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" expr="0x84D1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D1</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" expr="0x84D2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D2</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" expr="0x84D3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D3</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" expr="0x84D4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D4</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" expr="0x84D5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D5</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" expr="0x84D6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D6</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" expr="0x84D7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D7</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" expr="0x84D8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D8</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" expr="0x84D9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D9</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" expr="0x84DA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DA</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" expr="0x84DB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DB</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" expr="0x84DC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DC</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" expr="0x84DD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DD</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" expr="0x84DE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DE</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" expr="0x84DF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DF</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" expr="0x84E0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E0</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" expr="0x2901">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2901</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" expr="0x812F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x812F</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" expr="0x8370">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8370</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" expr="0x8B50">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B50</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" expr="0x8B51">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B51</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" expr="0x8B52">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B52</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" expr="0x8B53">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B53</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" expr="0x8B54">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B54</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" expr="0x8B55">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B55</e></m></meta>
		</INT_VEC4>
		<BOOL public="1" expr="0x8B56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B56</e></m></meta>
		</BOOL>
		<BOOL_VEC2 public="1" expr="0x8B57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B57</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" expr="0x8B58">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B58</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" expr="0x8B59">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B59</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" expr="0x8B5A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5A</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" expr="0x8B5B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5B</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" expr="0x8B5C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5C</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" expr="0x8B5E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5E</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" expr="0x8B60">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B60</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" expr="0x8622">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8622</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" expr="0x8623">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8623</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" expr="0x8624">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8624</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" expr="0x8625">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8625</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" expr="0x886A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x886A</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" expr="0x8645">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8645</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" expr="0x889F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x889F</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" expr="0x8B9A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9A</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" expr="0x8B9B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9B</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<VERTEX_PROGRAM_POINT_SIZE public="1" expr="0x8642">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8642</e></m></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" expr="0x8861">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8861</e></m></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" expr="0x8B81">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B81</e></m></meta>
		</COMPILE_STATUS>
		<INFO_LOG_LENGTH public="1" expr="0x8B84">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B84</e></m></meta>
		</INFO_LOG_LENGTH>
		<SHADER_SOURCE_LENGTH public="1" expr="0x8B88">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B88</e></m></meta>
		</SHADER_SOURCE_LENGTH>
		<SHADER_COMPILER public="1" expr="0x8DFA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFA</e></m></meta>
		</SHADER_COMPILER>
		<SHADER_BINARY_FORMATS public="1" expr="0x8DF8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF8</e></m></meta>
		</SHADER_BINARY_FORMATS>
		<NUM_SHADER_BINARY_FORMATS public="1" expr="0x8DF9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF9</e></m></meta>
		</NUM_SHADER_BINARY_FORMATS>
		<LOW_FLOAT public="1" expr="0x8DF0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF0</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" expr="0x8DF1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF1</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" expr="0x8DF2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF2</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" expr="0x8DF3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF3</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" expr="0x8DF4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF4</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" expr="0x8DF5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF5</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" expr="0x8D40">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D40</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" expr="0x8D41">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D41</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" expr="0x8056">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4>
		<RGB5_A1 public="1" expr="0x8057">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1>
		<RGB565 public="1" expr="0x8D62">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" expr="0x81A5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" expr="0x1901">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1901</e></m></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" expr="0x8D48">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D48</e></m></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" expr="0x84F9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" expr="0x8D42">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D42</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" expr="0x8D43">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D43</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" expr="0x8D44">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D44</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" expr="0x8D50">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D50</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" expr="0x8D51">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D51</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" expr="0x8D52">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D52</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" expr="0x8D53">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D53</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" expr="0x8D54">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D54</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" expr="0x8D55">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D55</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" expr="0x8CD0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD0</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" expr="0x8CD1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD1</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" expr="0x8CD2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD2</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" expr="0x8CD3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" expr="0x8CE0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" expr="0x8D00">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D00</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" expr="0x8D20">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D20</e></m></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" expr="0x821A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x821A</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" expr="0x8CD5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD5</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" expr="0x8CD6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD6</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" expr="0x8CD7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD7</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" expr="0x8CD9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD9</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" expr="0x8CDD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDD</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" expr="0x8CA6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" expr="0x8CA7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA7</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" expr="0x84E8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E8</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" expr="0x0506">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0506</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" expr="0x9240">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9240</e></m></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" expr="0x9241">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9241</e></m></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" expr="0x9242">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9242</e></m></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" expr="0x9243">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9243</e></m></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" expr="0x9244">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9244</e></m></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" expr="0x0C02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" expr="0x0CF2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF2</e></m></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" expr="0x0CF3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF3</e></m></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" expr="0x0CF4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF4</e></m></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" expr="0x0D02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D02</e></m></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" expr="0x0D03">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D03</e></m></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" expr="0x0D04">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D04</e></m></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" expr="0x806A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806A</e></m></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" expr="0x806D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806D</e></m></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" expr="0x806E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806E</e></m></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" expr="0x8073">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8073</e></m></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" expr="0x80E8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E8</e></m></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" expr="0x80E9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E9</e></m></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" expr="0x84FD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FD</e></m></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" expr="0x8B49">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B49</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" expr="0x8B4A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4A</e></m></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" expr="0x88FF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FF</e></m></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" expr="0x8904">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8904</e></m></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" expr="0x8905">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8905</e></m></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" expr="0x8B4B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4B</e></m></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" expr="0x8B8B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8B</e></m></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" expr="0x8C89">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C89</e></m></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" expr="0x85B5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85B5</e></m></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" expr="0x9122">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9122</e></m></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" expr="0x9125">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9125</e></m></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" expr="0x9111">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9111</e></m></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" expr="0x8D6B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6B</e></m></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" expr="0x1903">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1903</e></m></meta>
		</RED>
		<RGB8 public="1" expr="0x8051">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8>
		<RGBA8 public="1" expr="0x8058">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8>
		<RGB10_A2 public="1" expr="0x8059">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" expr="0x806F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806F</e></m></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" expr="0x8072">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8072</e></m></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" expr="0x813A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813A</e></m></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" expr="0x813B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813B</e></m></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" expr="0x813C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813C</e></m></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" expr="0x813D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813D</e></m></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" expr="0x884C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884C</e></m></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" expr="0x884D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884D</e></m></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" expr="0x8C40">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C40</e></m></meta>
		</SRGB>
		<SRGB8 public="1" expr="0x8C41">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C41</e></m></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" expr="0x8C43">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C43</e></m></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" expr="0x884E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884E</e></m></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" expr="0x8814">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8814</e></m></meta>
		</RGBA32F>
		<RGB32F public="1" expr="0x8815">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8815</e></m></meta>
		</RGB32F>
		<RGBA16F public="1" expr="0x881A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F>
		<RGB16F public="1" expr="0x881B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" expr="0x8C1A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1A</e></m></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" expr="0x8C1D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1D</e></m></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" expr="0x8C3A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3A</e></m></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" expr="0x8C3D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3D</e></m></meta>
		</RGB9_E5>
		<RGBA32UI public="1" expr="0x8D70">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D70</e></m></meta>
		</RGBA32UI>
		<RGB32UI public="1" expr="0x8D71">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D71</e></m></meta>
		</RGB32UI>
		<RGBA16UI public="1" expr="0x8D76">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D76</e></m></meta>
		</RGBA16UI>
		<RGB16UI public="1" expr="0x8D77">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D77</e></m></meta>
		</RGB16UI>
		<RGBA8UI public="1" expr="0x8D7C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7C</e></m></meta>
		</RGBA8UI>
		<RGB8UI public="1" expr="0x8D7D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7D</e></m></meta>
		</RGB8UI>
		<RGBA32I public="1" expr="0x8D82">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D82</e></m></meta>
		</RGBA32I>
		<RGB32I public="1" expr="0x8D83">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D83</e></m></meta>
		</RGB32I>
		<RGBA16I public="1" expr="0x8D88">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D88</e></m></meta>
		</RGBA16I>
		<RGB16I public="1" expr="0x8D89">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D89</e></m></meta>
		</RGB16I>
		<RGBA8I public="1" expr="0x8D8E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8E</e></m></meta>
		</RGBA8I>
		<RGB8I public="1" expr="0x8D8F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8F</e></m></meta>
		</RGB8I>
		<RED_INTEGER public="1" expr="0x8D94">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D94</e></m></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" expr="0x8D98">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D98</e></m></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" expr="0x8D99">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D99</e></m></meta>
		</RGBA_INTEGER>
		<R8 public="1" expr="0x8229">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8>
		<RG8 public="1" expr="0x822B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8>
		<R16F public="1" expr="0x822D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822D</e></m></meta>
		</R16F>
		<R32F public="1" expr="0x822E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822E</e></m></meta>
		</R32F>
		<RG16F public="1" expr="0x822F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822F</e></m></meta>
		</RG16F>
		<RG32F public="1" expr="0x8230">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8230</e></m></meta>
		</RG32F>
		<R8I public="1" expr="0x8231">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8231</e></m></meta>
		</R8I>
		<R8UI public="1" expr="0x8232">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8232</e></m></meta>
		</R8UI>
		<R16I public="1" expr="0x8233">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8233</e></m></meta>
		</R16I>
		<R16UI public="1" expr="0x8234">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8234</e></m></meta>
		</R16UI>
		<R32I public="1" expr="0x8235">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8235</e></m></meta>
		</R32I>
		<R32UI public="1" expr="0x8236">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8236</e></m></meta>
		</R32UI>
		<RG8I public="1" expr="0x8237">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8237</e></m></meta>
		</RG8I>
		<RG8UI public="1" expr="0x8238">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8238</e></m></meta>
		</RG8UI>
		<RG16I public="1" expr="0x8239">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8239</e></m></meta>
		</RG16I>
		<RG16UI public="1" expr="0x823A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823A</e></m></meta>
		</RG16UI>
		<RG32I public="1" expr="0x823B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823B</e></m></meta>
		</RG32I>
		<RG32UI public="1" expr="0x823C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823C</e></m></meta>
		</RG32UI>
		<R8_SNORM public="1" expr="0x8F94">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F94</e></m></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" expr="0x8F95">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F95</e></m></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" expr="0x8F96">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F96</e></m></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" expr="0x8F97">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F97</e></m></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" expr="0x906F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x906F</e></m></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" expr="0x912F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x912F</e></m></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" expr="0x82DF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82DF</e></m></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" expr="0x8368">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8368</e></m></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" expr="0x8C3B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3B</e></m></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" expr="0x8C3E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3E</e></m></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" expr="0x8DAD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DAD</e></m></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" expr="0x84FA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" expr="0x140B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x140B</e></m></meta>
		</HALF_FLOAT>
		<RG public="1" expr="0x8227">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8227</e></m></meta>
		</RG>
		<RG_INTEGER public="1" expr="0x8228">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8228</e></m></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" expr="0x8D9F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D9F</e></m></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" expr="0x8865">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8865</e></m></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" expr="0x8866">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8866</e></m></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" expr="0x8867">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8867</e></m></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" expr="0x8C2F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C2F</e></m></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" expr="0x8D6A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6A</e></m></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" expr="0x8824">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8824</e></m></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" expr="0x8825">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8825</e></m></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" expr="0x8826">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8826</e></m></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" expr="0x8827">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8827</e></m></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" expr="0x8828">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8828</e></m></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" expr="0x8829">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8829</e></m></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" expr="0x882A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882A</e></m></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" expr="0x882B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882B</e></m></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" expr="0x882C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882C</e></m></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" expr="0x882D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882D</e></m></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" expr="0x882E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882E</e></m></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" expr="0x882F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882F</e></m></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" expr="0x8830">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8830</e></m></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" expr="0x8831">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8831</e></m></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" expr="0x8832">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8832</e></m></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" expr="0x8833">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8833</e></m></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" expr="0x8834">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8834</e></m></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" expr="0x8CDF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDF</e></m></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" expr="0x8CE1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" expr="0x8CE2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" expr="0x8CE3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" expr="0x8CE4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" expr="0x8CE5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" expr="0x8CE6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" expr="0x8CE7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" expr="0x8CE8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" expr="0x8CE9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" expr="0x8CEA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" expr="0x8CEB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" expr="0x8CEC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" expr="0x8CED">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" expr="0x8CEE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" expr="0x8CEF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" expr="0x8B5F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5F</e></m></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" expr="0x8B62">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B62</e></m></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" expr="0x8DC1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC1</e></m></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" expr="0x8DC4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC4</e></m></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" expr="0x8DC5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC5</e></m></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" expr="0x8DCA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCA</e></m></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" expr="0x8DCB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCB</e></m></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" expr="0x8DCC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCC</e></m></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" expr="0x8DCF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCF</e></m></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" expr="0x8DD2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD2</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" expr="0x8DD3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD3</e></m></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" expr="0x8DD4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD4</e></m></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" expr="0x8DD7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD7</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" expr="0x8D57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" expr="0x8919">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8919</e></m></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" expr="0x88EB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EB</e></m></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" expr="0x88EC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EC</e></m></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" expr="0x88ED">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88ED</e></m></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" expr="0x88EF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EF</e></m></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" expr="0x8F36">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" expr="0x8F37">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" expr="0x8F36">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" expr="0x8F37">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" expr="0x8B65">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B65</e></m></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" expr="0x8B66">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B66</e></m></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" expr="0x8B67">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B67</e></m></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" expr="0x8B68">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B68</e></m></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" expr="0x8B69">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B69</e></m></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" expr="0x8B6A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B6A</e></m></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" expr="0x8DC6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC6</e></m></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" expr="0x8DC7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC7</e></m></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" expr="0x8DC8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC8</e></m></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" expr="0x8C17">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C17</e></m></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" expr="0x8F9C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F9C</e></m></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" expr="0x88FD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FD</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" expr="0x88FE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FE</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" expr="0x8C7F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C7F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" expr="0x8C80">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C80</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" expr="0x8C83">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C83</e></m></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" expr="0x8C84">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C84</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" expr="0x8C85">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C85</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" expr="0x8C88">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C88</e></m></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" expr="0x8C8A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8A</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" expr="0x8C8B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8B</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" expr="0x8C8C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8C</e></m></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" expr="0x8C8D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8D</e></m></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" expr="0x8C8E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8E</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" expr="0x8C8F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" expr="0x8E22">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E22</e></m></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" expr="0x8E23">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E23</e></m></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" expr="0x8E24">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E24</e></m></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" expr="0x8E25">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E25</e></m></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" expr="0x8210">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8210</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" expr="0x8211">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8211</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" expr="0x8212">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8212</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" expr="0x8213">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8213</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" expr="0x8214">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8214</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" expr="0x8215">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8215</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" expr="0x8216">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8216</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" expr="0x8217">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8217</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" expr="0x8218">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8218</e></m></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" expr="0x88F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" expr="0x8CA6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" expr="0x8CA8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" expr="0x8CA9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" expr="0x8CAA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" expr="0x8CAB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" expr="0x8CD4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD4</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" expr="0x8D56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" expr="0x8A11">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A11</e></m></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" expr="0x8A28">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A28</e></m></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" expr="0x8A29">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A29</e></m></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" expr="0x8A2A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2A</e></m></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" expr="0x8A2B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2B</e></m></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" expr="0x8A2D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2D</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" expr="0x8A2E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2E</e></m></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" expr="0x8A2F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2F</e></m></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" expr="0x8A30">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A30</e></m></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" expr="0x8A31">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A31</e></m></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" expr="0x8A33">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A33</e></m></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" expr="0x8A34">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A34</e></m></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" expr="0x8A36">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A36</e></m></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" expr="0x8A37">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A37</e></m></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" expr="0x8A38">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A38</e></m></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" expr="0x8A3A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3A</e></m></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" expr="0x8A3B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3B</e></m></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" expr="0x8A3C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3C</e></m></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" expr="0x8A3D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3D</e></m></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" expr="0x8A3E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3E</e></m></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" expr="0x8A3F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3F</e></m></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" expr="0x8A40">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A40</e></m></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" expr="0x8A42">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A42</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" expr="0x8A43">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A43</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" expr="0x8A44">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A44</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" expr="0x8A46">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A46</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" expr="0x9112">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9112</e></m></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" expr="0x9113">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9113</e></m></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" expr="0x9114">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9114</e></m></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" expr="0x9115">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9115</e></m></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" expr="0x9116">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9116</e></m></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" expr="0x9117">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9117</e></m></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" expr="0x9118">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9118</e></m></meta>
		</UNSIGNALED>
		<SIGNALED public="1" expr="0x9119">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9119</e></m></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" expr="0x911A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911A</e></m></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" expr="0x911B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911B</e></m></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" expr="0x911C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911C</e></m></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" expr="0x911D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911D</e></m></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" expr="0x00000001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" expr="0x1800">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1800</e></m></meta>
		</COLOR>
		<DEPTH public="1" expr="0x1801">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1801</e></m></meta>
		</DEPTH>
		<STENCIL public="1" expr="0x1802">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1802</e></m></meta>
		</STENCIL>
		<MIN public="1" expr="0x8007">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8007</e></m></meta>
		</MIN>
		<MAX public="1" expr="0x8008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8008</e></m></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" expr="0x81A6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" expr="0x88E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E1</e></m></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" expr="0x88E2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E2</e></m></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" expr="0x88E5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E5</e></m></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" expr="0x88E6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E6</e></m></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" expr="0x88E9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E9</e></m></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" expr="0x88EA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EA</e></m></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" expr="0x8CAC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAC</e></m></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" expr="0x8CAD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAD</e></m></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" expr="0xFFFFFFFF">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" expr="-1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" expr="0x9247">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9247</e></m></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<type public="1" set="null"><x path="lime.graphics.RenderContextType"/></type>
		<version public="1" set="null"><x path="Float"/></version>
		<__arrayBufferBinding><t path="lime.graphics.opengl.GLBuffer"/></__arrayBufferBinding>
		<__elementBufferBinding><t path="lime.graphics.opengl.GLBuffer"/></__elementBufferBinding>
		<__contextID><x path="Int"/></__contextID>
		<__currentProgram><x path="lime.graphics.opengl.GLProgram"/></__currentProgram>
		<__framebufferBinding><t path="lime.graphics.opengl.GLFramebuffer"/></__framebufferBinding>
		<__initialized><x path="Bool"/></__initialized>
		<__isContextLost><x path="Bool"/></__isContextLost>
		<__renderbufferBinding><t path="lime.graphics.opengl.GLRenderbuffer"/></__renderbufferBinding>
		<__texture2DBinding><t path="lime.graphics.opengl.GLTexture"/></__texture2DBinding>
		<__textureCubeMapBinding><t path="lime.graphics.opengl.GLTexture"/></__textureCubeMapBinding>
		<activeTexture public="1" set="method" line="660"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method" line="667"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<beginQuery public="1" set="method" line="686"><f a="target:query">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></beginQuery>
		<beginTransformFeedback public="1" set="method" line="693"><f a="primitiveNode">
	<x path="Int"/>
	<x path="Void"/>
</f></beginTransformFeedback>
		<bindAttribLocation public="1" set="method" line="700"><f a="program:index:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method" line="707"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindBufferBase public="1" set="method" line="717"><f a="target:index:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBufferBase>
		<bindBufferRange public="1" set="method" line="724"><f a="target:index:buffer:offset:size">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bindBufferRange>
		<bindFramebuffer public="1" set="method" line="731"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method" line="740"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindSampler public="1" set="method" line="749"><f a="unit:sampler">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></bindSampler>
		<bindTexture public="1" set="method" line="756"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<bindTransformFeedback public="1" set="method" line="766"><f a="target:transformFeedback">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></bindTransformFeedback>
		<bindVertexArray public="1" set="method" line="773"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></bindVertexArray>
		<blendColor public="1" set="method" line="780"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method" line="787"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method" line="794"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method" line="801"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method" line="808"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<blitFramebuffer public="1" set="method" line="815"><f a="srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blitFramebuffer>
		<bufferData public="1" set="method" line="822"><f a="target:size:srcData:usage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<bufferSubData public="1" set="method" line="829"><f a="target:dstByteOffset:size:srcData">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" set="method" line="836"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method" line="845"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearBufferfi public="1" set="method" line="852"><f a="buffer:drawbuffer:depth:stencil">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfi>
		<clearBufferfv public="1" set="method" line="859"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferfv>
		<clearBufferiv public="1" set="method" line="866"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferiv>
		<clearBufferuiv public="1" set="method" line="873"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferuiv>
		<clearColor public="1" set="method" line="880"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepthf public="1" set="method" line="887"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepthf>
		<clearStencil public="1" set="method" line="894"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<clientWaitSync public="1" set="method" line="901"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></clientWaitSync>
		<colorMask public="1" set="method" line="910"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method" line="917"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method" line="924"><f a="target:level:internalformat:width:height:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexImage3D public="1" set="method" line="931"><f a="target:level:internalformat:width:height:depth:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage3D>
		<compressedTexSubImage2D public="1" set="method" line="939"><f a="target:level:xoffset:yoffset:width:height:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" set="method" line="947"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage3D>
		<copyBufferSubData public="1" set="method" line="955"><f a="readTarget:writeTarget:readOffset:writeOffset:size">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyBufferSubData>
		<copyTexImage2D public="1" set="method" line="962"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method" line="969"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<copyTexSubImage3D public="1" set="method" line="976"><f a="target:level:xoffset:yoffset:zoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage3D>
		<createBuffer public="1" set="method" line="983"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method" line="996"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method" line="1009"><f a=""><x path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createQuery public="1" set="method" line="1022"><f a=""><t path="lime.graphics.opengl.GLQuery"/></f></createQuery>
		<createRenderbuffer public="1" set="method" line="1035"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createSampler public="1" set="method" line="1048"><f a=""><t path="lime.graphics.opengl.GLSampler"/></f></createSampler>
		<createShader public="1" set="method" line="1061"><f a="type">
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" set="method" line="1074"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<createTransformFeedback public="1" set="method" line="1087"><f a=""><t path="lime.graphics.opengl.GLTransformFeedback"/></f></createTransformFeedback>
		<createVertexArray public="1" set="method" line="1100"><f a=""><t path="lime.graphics.opengl.GLVertexArrayObject"/></f></createVertexArray>
		<cullFace public="1" set="method" line="1113"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method" line="1120"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method" line="1128"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method" line="1136"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteQuery public="1" set="method" line="1144"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></deleteQuery>
		<deleteRenderbuffer public="1" set="method" line="1152"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteSampler public="1" set="method" line="1160"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></deleteSampler>
		<deleteShader public="1" set="method" line="1168"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteSync public="1" set="method" line="1176"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Void"/>
</f></deleteSync>
		<deleteTexture public="1" set="method" line="1183"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<deleteTransformFeedback public="1" set="method" line="1191"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></deleteTransformFeedback>
		<deleteVertexArray public="1" set="method" line="1199"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></deleteVertexArray>
		<depthFunc public="1" set="method" line="1207"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method" line="1214"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRangef public="1" set="method" line="1221"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRangef>
		<detachShader public="1" set="method" line="1228"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method" line="1240"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method" line="1247"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method" line="1254"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawArraysInstanced public="1" set="method" line="1261"><f a="mode:first:count:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstanced>
		<drawBuffers public="1" set="method" line="1268"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></drawBuffers>
		<drawElements public="1" set="method" line="1281"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawElements>
		<drawElementsInstanced public="1" set="method" line="1288"><f a="mode:count:type:offset:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstanced>
		<drawRangeElements public="1" set="method" line="1295"><f a="mode:start:end:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawRangeElements>
		<enable public="1" set="method" line="1302"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method" line="1309"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<endQuery public="1" set="method" line="1316"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></endQuery>
		<endTransformFeedback public="1" set="method" line="1323"><f a=""><x path="Void"/></f></endTransformFeedback>
		<fenceSync public="1" set="method" line="1330"><f a="condition:flags">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSync"/>
</f></fenceSync>
		<finish public="1" set="method" line="1339"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method" line="1346"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method" line="1353"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method" line="1360"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<framebufferTextureLayer public="1" set="method" line="1367"><f a="target:attachment:texture:level:layer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTextureLayer>
		<frontFace public="1" set="method" line="1374"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method" line="1381"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method" line="1388"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method" line="1413"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getActiveUniformBlocki public="1" set="method" line="1438"><f a="program:uniformBlockIndex:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" set="method" line="1447"><f a="program:uniformBlockIndex:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" set="method" line="1454"><f a="program:uniformBlockIndex">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
</f></getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" set="method" line="1467"><f a="program:uniformBlockIndex:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getActiveUniformBlockParameter>
		<getActiveUniforms public="1" set="method" line="1474"><f a="program:uniformIndices:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<d/>
</f></getActiveUniforms>
		<getActiveUniformsiv public="1" set="method" line="1481"><f a="program:uniformIndices:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformsiv>
		<getAttachedShaders public="1" set="method" line="1494"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" set="method" line="1512"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBoolean public="1" set="method" line="1521"><f a="pname">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="1530"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBooleanv>
		<getBufferParameter public="1" set="method" line="1537"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getBufferParameteri public="1" set="method" line="1542"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferParameteri>
		<getBufferParameteri64v public="1" set="method" line="1551"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteri64v>
		<getBufferParameteriv public="1" set="method" line="1558"><f a="target:pname:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteriv>
		<getBufferPointerv public="1" set="method" line="1565"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getBufferPointerv>
		<getBufferSubData public="1" set="method" line="1574"><f a="target:offset:size:data">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferSubData>
		<getContextAttributes public="1" set="method" line="1581"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method" line="1593"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" set="method" line="1602"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFloat public="1" set="method" line="1640"><f a="pname">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="1649"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFloatv>
		<getFragDataLocation public="1" set="method" line="1656"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" set="method" line="1665"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getFramebufferAttachmentParameteri public="1" set="method" line="1681"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" set="method" line="1690"><f a="target:attachment:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFramebufferAttachmentParameteriv>
		<getIndexedParameter public="1" set="method" line="1697"><f a="target:index">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getIndexedParameter>
		<getInteger public="1" set="method" line="1704"><f a="pname">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getInteger64 public="1" set="method" line="1713"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64>
		<getInteger64i public="1" set="method" line="1724"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64i>
		<getInteger64i_v public="1" set="method" line="1735"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64i_v>
		<getInteger64v public="1" set="method" line="1742"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64v>
		<getIntegeri_v public="1" set="method" line="1749"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegeri_v>
		<getIntegerv public="1" set="method" line="1756"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegerv>
		<getInternalformati public="1" set="method" line="1763"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInternalformati>
		<getInternalformativ public="1" set="method" line="1774"><f a="target:internalformat:pname:bufSize:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInternalformativ>
		<getInternalformatParameter public="1" set="method" line="1781"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getInternalformatParameter>
		<getParameter public="1" set="method" line="1788"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgrami public="1" set="method" line="1873"><f a="program:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getProgrami>
		<getProgramiv public="1" set="method" line="1882"><f a="program:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getProgramiv>
		<getProgramBinary public="1" set="method" line="1889"><f a="program:binaryFormat">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></getProgramBinary>
		<getProgramInfoLog public="1" set="method" line="1900"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method" line="1913"><f a="program:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getQuery public="1" set="method" line="1918"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
</f></getQuery>
		<getQueryi public="1" set="method" line="1923"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryi>
		<getQueryiv public="1" set="method" line="1932"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryiv>
		<getQueryObjectui public="1" set="method" line="1939"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryObjectui>
		<getQueryObjectuiv public="1" set="method" line="1948"><f a="query:pname:params">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryObjectuiv>
		<getQueryParameter public="1" set="method" line="1955"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<d/>
</f></getQueryParameter>
		<getRenderbufferParameter public="1" set="method" line="1962"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getRenderbufferParameteri public="1" set="method" line="1967"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" set="method" line="1976"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getRenderbufferParameteriv>
		<getSamplerParameter public="1" set="method" line="1983"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<d/>
</f></getSamplerParameter>
		<getSamplerParameterf public="1" set="method" line="1990"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSamplerParameterf>
		<getSamplerParameterfv public="1" set="method" line="1999"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameterfv>
		<getSamplerParameteri public="1" set="method" line="2006"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSamplerParameteri>
		<getSamplerParameteriv public="1" set="method" line="2015"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameteriv>
		<getShaderi public="1" set="method" line="2022"><f a="shader:pname">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getShaderi>
		<getShaderiv public="1" set="method" line="2031"><f a="shader:pname:params">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getShaderiv>
		<getShaderInfoLog public="1" set="method" line="2038"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method" line="2051"><f a="shader:pname">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method" line="2056"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method" line="2065"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getString public="1" set="method" line="2078"><f a="name">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<getStringi public="1" set="method" line="2091"><f a="name:index">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getStringi>
		<getSupportedExtensions public="1" set="method" line="2104"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getSyncParameter public="1" set="method" line="2134"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
</f></getSyncParameter>
		<getSyncParameteri public="1" set="method" line="2141"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSyncParameteri>
		<getSyncParameteriv public="1" set="method" line="2148"><f a="sync:pname:params">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSyncParameteriv>
		<getTexParameter public="1" set="method" line="2153"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getTexParameterf public="1" set="method" line="2168"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getTexParameterf>
		<getTexParameterfv public="1" set="method" line="2177"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameterfv>
		<getTexParameteri public="1" set="method" line="2184"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getTexParameteri>
		<getTexParameteriv public="1" set="method" line="2193"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameteriv>
		<getTransformFeedbackVarying public="1" set="method" line="2200"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getTransformFeedbackVarying>
		<getUniform public="1" set="method" line="2226"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformf public="1" set="method" line="2328"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
</f></getUniformf>
		<getUniformfv public="1" set="method" line="2337"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformfv>
		<getUniformi public="1" set="method" line="2344"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformi>
		<getUniformiv public="1" set="method" line="2353"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformiv>
		<getUniformui public="1" set="method" line="2360"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformui>
		<getUniformuiv public="1" set="method" line="2369"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformuiv>
		<getUniformBlockIndex public="1" set="method" line="2376"><f a="program:uniformBlockName">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getUniformBlockIndex>
		<getUniformIndices public="1" set="method" line="2385"><f a="program:uniformNames">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getUniformIndices>
		<getUniformLocation public="1" set="method" line="2392"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method" line="2401"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribf public="1" set="method" line="2406"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getVertexAttribf>
		<getVertexAttribfv public="1" set="method" line="2415"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribfv>
		<getVertexAttribi public="1" set="method" line="2422"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribi>
		<getVertexAttribIi public="1" set="method" line="2431"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIi>
		<getVertexAttribIiv public="1" set="method" line="2440"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIiv>
		<getVertexAttribIui public="1" set="method" line="2447"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIui>
		<getVertexAttribIuiv public="1" set="method" line="2456"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIuiv>
		<getVertexAttribiv public="1" set="method" line="2463"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribiv>
		<getVertexAttribPointerv public="1" set="method" line="2470"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getVertexAttribPointerv>
		<hint public="1" set="method" line="2479"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<invalidateFramebuffer public="1" set="method" line="2486"><f a="target:attachments">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" set="method" line="2499"><f a="target:attachments:x:y:width:height">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></invalidateSubFramebuffer>
		<isBuffer public="1" set="method" line="2512"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" set="method" line="2521"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" set="method" line="2526"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method" line="2535"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method" line="2544"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isQuery public="1" set="method" line="2553"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Bool"/>
</f></isQuery>
		<isRenderbuffer public="1" set="method" line="2562"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isSampler public="1" set="method" line="2571"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Bool"/>
</f></isSampler>
		<isShader public="1" set="method" line="2580"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isSync public="1" set="method" line="2589"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Bool"/>
</f></isSync>
		<isTexture public="1" set="method" line="2598"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<isTransformFeedback public="1" set="method" line="2607"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Bool"/>
</f></isTransformFeedback>
		<isVertexArray public="1" set="method" line="2616"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Bool"/>
</f></isVertexArray>
		<lineWidth public="1" set="method" line="2625"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method" line="2632"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<mapBufferRange public="1" set="method" line="2639"><f a="target:offset:length:access">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></mapBufferRange>
		<pauseTransformFeedback public="1" set="method" line="2648"><f a=""><x path="Void"/></f></pauseTransformFeedback>
		<pixelStorei public="1" set="method" line="2655"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method" line="2662"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<programBinary public="1" set="method" line="2669"><f a="program:binaryFormat:binary:length">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programBinary>
		<programParameteri public="1" set="method" line="2676"><f a="program:pname:value">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programParameteri>
		<readBuffer public="1" set="method" line="2683"><f a="src">
	<x path="Int"/>
	<x path="Void"/>
</f></readBuffer>
		<readPixels public="1" set="method" line="2690"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" set="method" line="2697"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" set="method" line="2704"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<renderbufferStorageMultisample public="1" set="method" line="2711"><f a="target:samples:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" set="method" line="2718"><f a=""><x path="Void"/></f></resumeTransformFeedback>
		<sampleCoverage public="1" set="method" line="2725"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<samplerParameterf public="1" set="method" line="2732"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></samplerParameterf>
		<samplerParameteri public="1" set="method" line="2739"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></samplerParameteri>
		<scissor public="1" set="method" line="2746"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderBinary public="1" set="method" line="2753"><f a="shaders:binaryformat:binary:length">
	<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></shaderBinary>
		<shaderSource public="1" set="method" line="2766"><f a="shader:source">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method" line="2773"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method" line="2780"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method" line="2787"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method" line="2794"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method" line="2801"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method" line="2808"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method" line="2815"><f a="target:level:internalformat:width:height:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage2D>
		<texImage3D public="1" set="method" line="2822"><f a="target:level:internalformat:width:height:depth:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage3D>
		<texStorage2D public="1" set="method" line="2830"><f a="target:level:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage2D>
		<texStorage3D public="1" set="method" line="2837"><f a="target:level:internalformat:width:height:depth">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage3D>
		<texParameterf public="1" set="method" line="2844"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method" line="2851"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method" line="2858"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage2D>
		<texSubImage3D public="1" set="method" line="2865"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage3D>
		<toString public="1" set="method" line="2873">
			<f a=""><c path="String"/></f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</toString>
		<transformFeedbackVaryings public="1" set="method" line="2878"><f a="program:varyings:bufferMode">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></transformFeedbackVaryings>
		<uniform1f public="1" set="method" line="2891"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method" line="2898"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method" line="2905"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method" line="2912"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform1ui public="1" set="method" line="2919"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ui>
		<uniform1uiv public="1" set="method" line="2926"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1uiv>
		<uniform2f public="1" set="method" line="2933"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method" line="2940"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method" line="2947"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method" line="2954"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform2ui public="1" set="method" line="2961"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ui>
		<uniform2uiv public="1" set="method" line="2968"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2uiv>
		<uniform3f public="1" set="method" line="2975"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method" line="2982"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method" line="2989"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method" line="2996"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform3ui public="1" set="method" line="3003"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ui>
		<uniform3uiv public="1" set="method" line="3010"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3uiv>
		<uniform4f public="1" set="method" line="3017"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method" line="3024"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method" line="3031"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method" line="3038"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniform4ui public="1" set="method" line="3045"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ui>
		<uniform4uiv public="1" set="method" line="3052"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4uiv>
		<uniformBlockBinding public="1" set="method" line="3059"><f a="program:uniformBlockIndex:uniformBlockBinding">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformBlockBinding>
		<uniformMatrix2fv public="1" set="method" line="3066"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" set="method" line="3073"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" set="method" line="3080"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" set="method" line="3087"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" set="method" line="3094"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" set="method" line="3101"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" set="method" line="3108"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" set="method" line="3115"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" set="method" line="3122"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x3fv>
		<unmapBuffer public="1" set="method" line="3129"><f a="target">
	<x path="Int"/>
	<x path="Bool"/>
</f></unmapBuffer>
		<useProgram public="1" set="method" line="3138"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method" line="3147"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method" line="3154"><f a="index:v0">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method" line="3161"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method" line="3168"><f a="index:v0:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method" line="3175"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method" line="3182"><f a="index:v0:v1:v2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method" line="3189"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method" line="3196"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method" line="3203"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribDivisor public="1" set="method" line="3210"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisor>
		<vertexAttribI4i public="1" set="method" line="3217"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4i>
		<vertexAttribI4iv public="1" set="method" line="3226"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4iv>
		<vertexAttribI4ui public="1" set="method" line="3233"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4ui>
		<vertexAttribI4uiv public="1" set="method" line="3242"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4uiv>
		<vertexAttribIPointer public="1" set="method" line="3249"><f a="index:size:type:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribIPointer>
		<vertexAttribPointer public="1" set="method" line="3256"><f a="index:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method" line="3263"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<waitSync public="1" set="method" line="3270"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Void"/>
</f></waitSync>
		<__contextLost set="method" line="3277"><f a=""><x path="Void"/></f></__contextLost>
		<__createObject set="method" line="3290"><f a="id">
	<x path="Int"/>
	<c path="lime.graphics.opengl.GLObject"/>
</f></__createObject>
		<__getObjectID set="method" line="3295"><f a="object">
	<c path="lime.graphics.opengl.GLObject"/>
	<x path="Int"/>
</f></__getObjectID>
		<__initialize set="method" line="3301"><f a=""><x path="Void"/></f></__initialize>
		<new set="method" line="629"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":allow"><e>lime.ui.Window</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.opengl</e></m>
		</meta>
	</class>
	<class path="lime._internal.backend.native.NativeWindow" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx">
		<handle public="1"><d/></handle>
		<closing><x path="Bool"/></closing>
		<cursor><e path="lime.ui.MouseCursor"/></cursor>
		<displayMode><c path="lime.system.DisplayMode"/></displayMode>
		<frameRate><x path="Float"/></frameRate>
		<mouseLock><x path="Bool"/></mouseLock>
		<parent><c path="lime.ui.Window"/></parent>
		<useHardware><x path="Bool"/></useHardware>
		<cacheLock><d/></cacheLock>
		<cairo><c path="lime.graphics.cairo.Cairo"/></cairo>
		<primarySurface><x path="lime.graphics.cairo.CairoSurface"/></primarySurface>
		<alert public="1" set="method" line="181"><f a="message:title">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></alert>
		<close public="1" set="method" line="191"><f a=""><x path="Void"/></f></close>
		<contextFlip public="1" set="method" line="215"><f a=""><x path="Void"/></f></contextFlip>
		<focus public="1" set="method" line="233"><f a=""><x path="Void"/></f></focus>
		<getCursor public="1" set="method" line="243"><f a=""><e path="lime.ui.MouseCursor"/></f></getCursor>
		<getDisplay public="1" set="method" line="248"><f a=""><c path="lime.system.Display"/></f></getDisplay>
		<getDisplayMode public="1" set="method" line="265"><f a=""><c path="lime.system.DisplayMode"/></f></getDisplayMode>
		<getFrameRate public="1" set="method" line="285"><f a=""><x path="Float"/></f></getFrameRate>
		<getMouseLock public="1" set="method" line="290"><f a=""><x path="Bool"/></f></getMouseLock>
		<getTextInputEnabled public="1" set="method" line="302"><f a=""><x path="Bool"/></f></getTextInputEnabled>
		<move public="1" set="method" line="314"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<readPixels public="1" set="method" line="324"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.graphics.Image"/>
</f></readPixels>
		<render public="1" set="method" line="407"><f a=""><x path="Void"/></f></render>
		<resize public="1" set="method" line="442"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setBorderless public="1" set="method" line="452"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setBorderless>
		<setCursor public="1" set="method" line="464"><f a="value">
	<e path="lime.ui.MouseCursor"/>
	<e path="lime.ui.MouseCursor"/>
</f></setCursor>
		<setDisplayMode public="1" set="method" line="503"><f a="value">
	<c path="lime.system.DisplayMode"/>
	<c path="lime.system.DisplayMode"/>
</f></setDisplayMode>
		<setMouseLock public="1" set="method" line="523"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMouseLock>
		<setTextInputEnabled public="1" set="method" line="537"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setTextInputEnabled>
		<setFrameRate public="1" set="method" line="549"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setFrameRate>
		<setFullscreen public="1" set="method" line="563"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setFullscreen>
		<setIcon public="1" set="method" line="585"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<setMaximized public="1" set="method" line="595"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMaximized>
		<setMinimized public="1" set="method" line="607"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMinimized>
		<setResizable public="1" set="method" line="619"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setResizable>
		<setTitle public="1" set="method" line="636"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></setTitle>
		<warpMouse public="1" set="method" line="648"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></warpMouse>
		<new public="1" set="method" line="56"><f a="parent">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeOpenGLRenderContext</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.graphics.cairo.Cairo</e></m>
			<m n=":access"><e>lime.graphics.opengl.GL</e></m>
			<m n=":access"><e>lime.graphics.OpenGLRenderContext</e></m>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":access"><e>lime.system.DisplayMode</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeWindow.MouseCursorType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeWindow.MouseCursorType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow" extern="1" final="1">
	<HIDDEN public="1" get="inline" set="null" expr="cast 0" line="658" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HIDDEN>
	<ARROW public="1" get="inline" set="null" expr="cast 1" line="659" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARROW>
	<CROSSHAIR public="1" get="inline" set="null" expr="cast 2" line="660" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CROSSHAIR>
	<DEFAULT public="1" get="inline" set="null" expr="cast 3" line="661" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<MOVE public="1" get="inline" set="null" expr="cast 4" line="662" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOVE>
	<POINTER public="1" get="inline" set="null" expr="cast 5" line="663" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POINTER>
	<RESIZE_NESW public="1" get="inline" set="null" expr="cast 6" line="664" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESIZE_NESW>
	<RESIZE_NS public="1" get="inline" set="null" expr="cast 7" line="665" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESIZE_NS>
	<RESIZE_NWSE public="1" get="inline" set="null" expr="cast 8" line="666" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESIZE_NWSE>
	<RESIZE_WE public="1" get="inline" set="null" expr="cast 9" line="667" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESIZE_WE>
	<TEXT public="1" get="inline" set="null" expr="cast 10" line="668" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<WAIT public="1" get="inline" set="null" expr="cast 11" line="669" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WAIT>
	<WAIT_ARROW public="1" get="inline" set="null" expr="cast 12" line="670" static="1">
		<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WAIT_ARROW>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeWindow.MouseCursorType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow" extern="1" final="1">
		<HIDDEN public="1" get="inline" set="null" expr="cast 0" line="658" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HIDDEN>
		<ARROW public="1" get="inline" set="null" expr="cast 1" line="659" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARROW>
		<CROSSHAIR public="1" get="inline" set="null" expr="cast 2" line="660" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CROSSHAIR>
		<DEFAULT public="1" get="inline" set="null" expr="cast 3" line="661" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<MOVE public="1" get="inline" set="null" expr="cast 4" line="662" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOVE>
		<POINTER public="1" get="inline" set="null" expr="cast 5" line="663" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POINTER>
		<RESIZE_NESW public="1" get="inline" set="null" expr="cast 6" line="664" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESIZE_NESW>
		<RESIZE_NS public="1" get="inline" set="null" expr="cast 7" line="665" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESIZE_NS>
		<RESIZE_NWSE public="1" get="inline" set="null" expr="cast 8" line="666" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESIZE_NWSE>
		<RESIZE_WE public="1" get="inline" set="null" expr="cast 9" line="667" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESIZE_WE>
		<TEXT public="1" get="inline" set="null" expr="cast 10" line="668" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<WAIT public="1" get="inline" set="null" expr="cast 11" line="669" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WAIT>
		<WAIT_ARROW public="1" get="inline" set="null" expr="cast 12" line="670" static="1">
			<x path="lime._internal.backend.native._NativeWindow.MouseCursorType"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WAIT_ARROW>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime._internal.backend.native._NativeWindow.WindowFlags" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._internal.backend.native._NativeWindow.WindowFlags_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow" extern="1" final="1">
	<WINDOW_FLAG_FULLSCREEN public="1" get="inline" set="null" expr="cast 0x00000001" line="675" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000001</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_FULLSCREEN>
	<WINDOW_FLAG_BORDERLESS public="1" get="inline" set="null" expr="cast 0x00000002" line="676" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000002</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_BORDERLESS>
	<WINDOW_FLAG_RESIZABLE public="1" get="inline" set="null" expr="cast 0x00000004" line="677" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000004</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_RESIZABLE>
	<WINDOW_FLAG_HARDWARE public="1" get="inline" set="null" expr="cast 0x00000008" line="678" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000008</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HARDWARE>
	<WINDOW_FLAG_VSYNC public="1" get="inline" set="null" expr="cast 0x00000010" line="679" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000010</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_VSYNC>
	<WINDOW_FLAG_HW_AA public="1" get="inline" set="null" expr="cast 0x00000020" line="680" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000020</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HW_AA>
	<WINDOW_FLAG_HW_AA_HIRES public="1" get="inline" set="null" expr="cast 0x00000060" line="681" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000060</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HW_AA_HIRES>
	<WINDOW_FLAG_ALLOW_SHADERS public="1" get="inline" set="null" expr="cast 0x00000080" line="682" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000080</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_ALLOW_SHADERS>
	<WINDOW_FLAG_REQUIRE_SHADERS public="1" get="inline" set="null" expr="cast 0x00000100" line="683" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000100</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_REQUIRE_SHADERS>
	<WINDOW_FLAG_DEPTH_BUFFER public="1" get="inline" set="null" expr="cast 0x00000200" line="684" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000200</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_DEPTH_BUFFER>
	<WINDOW_FLAG_STENCIL_BUFFER public="1" get="inline" set="null" expr="cast 0x00000400" line="685" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000400</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_STENCIL_BUFFER>
	<WINDOW_FLAG_ALLOW_HIGHDPI public="1" get="inline" set="null" expr="cast 0x00000800" line="686" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00000800</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_ALLOW_HIGHDPI>
	<WINDOW_FLAG_HIDDEN public="1" get="inline" set="null" expr="cast 0x00001000" line="687" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00001000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HIDDEN>
	<WINDOW_FLAG_MINIMIZED public="1" get="inline" set="null" expr="cast 0x00002000" line="688" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00002000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_MINIMIZED>
	<WINDOW_FLAG_MAXIMIZED public="1" get="inline" set="null" expr="cast 0x00004000" line="689" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00004000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_MAXIMIZED>
	<WINDOW_FLAG_ALWAYS_ON_TOP public="1" get="inline" set="null" expr="cast 0x00008000" line="690" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00008000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_ALWAYS_ON_TOP>
	<WINDOW_FLAG_COLOR_DEPTH_32_BIT public="1" get="inline" set="null" expr="cast 0x00010000" line="691" static="1">
		<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
		<meta>
			<m n=":value"><e>cast 0x00010000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_COLOR_DEPTH_32_BIT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.backend.native._NativeWindow.WindowFlags_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/backend/native/NativeWindow.hx" private="1" module="lime._internal.backend.native.NativeWindow" extern="1" final="1">
		<WINDOW_FLAG_FULLSCREEN public="1" get="inline" set="null" expr="cast 0x00000001" line="675" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000001</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_FULLSCREEN>
		<WINDOW_FLAG_BORDERLESS public="1" get="inline" set="null" expr="cast 0x00000002" line="676" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000002</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_BORDERLESS>
		<WINDOW_FLAG_RESIZABLE public="1" get="inline" set="null" expr="cast 0x00000004" line="677" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000004</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_RESIZABLE>
		<WINDOW_FLAG_HARDWARE public="1" get="inline" set="null" expr="cast 0x00000008" line="678" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000008</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HARDWARE>
		<WINDOW_FLAG_VSYNC public="1" get="inline" set="null" expr="cast 0x00000010" line="679" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000010</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_VSYNC>
		<WINDOW_FLAG_HW_AA public="1" get="inline" set="null" expr="cast 0x00000020" line="680" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000020</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HW_AA>
		<WINDOW_FLAG_HW_AA_HIRES public="1" get="inline" set="null" expr="cast 0x00000060" line="681" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000060</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HW_AA_HIRES>
		<WINDOW_FLAG_ALLOW_SHADERS public="1" get="inline" set="null" expr="cast 0x00000080" line="682" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000080</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_ALLOW_SHADERS>
		<WINDOW_FLAG_REQUIRE_SHADERS public="1" get="inline" set="null" expr="cast 0x00000100" line="683" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000100</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_REQUIRE_SHADERS>
		<WINDOW_FLAG_DEPTH_BUFFER public="1" get="inline" set="null" expr="cast 0x00000200" line="684" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000200</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_DEPTH_BUFFER>
		<WINDOW_FLAG_STENCIL_BUFFER public="1" get="inline" set="null" expr="cast 0x00000400" line="685" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000400</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_STENCIL_BUFFER>
		<WINDOW_FLAG_ALLOW_HIGHDPI public="1" get="inline" set="null" expr="cast 0x00000800" line="686" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00000800</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_ALLOW_HIGHDPI>
		<WINDOW_FLAG_HIDDEN public="1" get="inline" set="null" expr="cast 0x00001000" line="687" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00001000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HIDDEN>
		<WINDOW_FLAG_MINIMIZED public="1" get="inline" set="null" expr="cast 0x00002000" line="688" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00002000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_MINIMIZED>
		<WINDOW_FLAG_MAXIMIZED public="1" get="inline" set="null" expr="cast 0x00004000" line="689" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00004000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_MAXIMIZED>
		<WINDOW_FLAG_ALWAYS_ON_TOP public="1" get="inline" set="null" expr="cast 0x00008000" line="690" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00008000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_ALWAYS_ON_TOP>
		<WINDOW_FLAG_COLOR_DEPTH_32_BIT public="1" get="inline" set="null" expr="cast 0x00010000" line="691" static="1">
			<x path="lime._internal.backend.native._NativeWindow.WindowFlags"/>
			<meta>
				<m n=":value"><e>cast 0x00010000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_COLOR_DEPTH_32_BIT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.format.BMP" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/BMP.hx">
		<encode public="1" set="method" line="13" static="1">
			<f a="image:?type" v=":null">
				<c path="lime.graphics.Image"/>
				<e path="lime._internal.format.BMPType"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime._internal.format.BMPType" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/BMP.hx" module="lime._internal.format.BMP">
		<RGB/>
		<BITFIELD/>
		<ICO/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime._internal.format.Base64" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/Base64.hx">
		<DICTIONARY expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;.split(&quot;&quot;)" line="8" static="1">
			<c path="Array"><c path="String"/></c>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("")</e></m></meta>
		</DICTIONARY>
		<EXTENDED_DICTIONARY expr="{
	var result = new Array&lt;String&gt;();
	for (a  in  DICTIONARY) {
		for (b  in  DICTIONARY) {
			result.push(a + b);
		};
	};
	result;
}" line="10" static="1">
			<c path="Array"><c path="String"/></c>
			<meta><m n=":value"><e><![CDATA[{
	var result = new Array<String>();
	for (a  in  DICTIONARY) {
		for (b  in  DICTIONARY) {
			result.push(a + b);
		};
	};
	result;
}]]></e></m></meta>
		</EXTENDED_DICTIONARY>
		<decode public="1" set="method" line="22" static="1"><f a="source">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></decode>
		<encode public="1" set="method" line="27" static="1"><f a="source">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></encode>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._internal.format.Deflate" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/Deflate.hx">
		<compress public="1" set="method" line="16" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="46" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.GZip" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/GZip.hx">
		<compress public="1" set="method" line="13" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="35" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.JPEG" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/JPEG.hx">
		<decodeBytes public="1" set="method" line="29" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="54" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="79" static="1"><f a="image:quality">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.LZMA" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/LZMA.hx">
		<compress public="1" set="method" line="17" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="40" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.PNG" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/PNG.hx">
		<decodeBytes public="1" set="method" line="29" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="54" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="79" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.Zlib" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/format/Zlib.hx">
		<compress public="1" set="method" line="16" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="46" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics.ImageCanvasUtil" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageCanvasUtil.hx">
		<colorTransform public="1" set="method" line="22" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<convertToCanvas public="1" set="method" line="29" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToCanvas>
		<convertToData public="1" set="method" line="78" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToData>
		<copyChannel public="1" set="method" line="118" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="127" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<createCanvas public="1" set="method" line="179" static="1"><f a="image:width:height">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></createCanvas>
		<createImageData public="1" set="method" line="203" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></createImageData>
		<fillRect public="1" set="method" line="225" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="270" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="277" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="284" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="291" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="298" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<resize public="1" set="method" line="307" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<scroll public="1" set="method" line="332" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<setPixel public="1" set="method" line="347" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="354" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="361" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<sync public="1" set="method" line="368" static="1"><f a="image:clear">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sync>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics.ImageDataUtil" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageDataUtil.hx">
		<displaceMap public="1" set="method" line="32" static="1"><f a="target:source:map:mapPoint:componentX:componentY:smooth">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></displaceMap>
		<bilinear set="method" line="137" static="1"><f a="s1:s2:s3:s4:su:sv">
	<x path="lime.math.RGBA"/>
	<x path="lime.math.RGBA"/>
	<x path="lime.math.RGBA"/>
	<x path="lime.math.RGBA"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.RGBA"/>
</f></bilinear>
		<lerpRGBA set="method" line="142" static="1"><f a="v0:v1:x">
	<x path="lime.math.RGBA"/>
	<x path="lime.math.RGBA"/>
	<x path="Float"/>
	<x path="lime.math.RGBA"/>
</f></lerpRGBA>
		<lerp4f set="method" line="153" static="1"><f a="v0:v1:x">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
	<c path="lime.math.Vector4"/>
</f></lerp4f>
		<lerp set="method" line="158" static="1"><f a="v0:v1:x">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></lerp>
		<colorTransform public="1" set="method" line="163" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="204" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="293" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<fillRect public="1" set="method" line="506" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="556" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<gaussianBlur public="1" set="method" line="639" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?blurX:?blurY:?quality:?strength:?color" v="::::4:4:1:1:null">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ color : null, strength : 1, quality : 1, blurY : 4, blurX : 4 }</e></m></meta>
		</gaussianBlur>
		<getColorBoundsRect public="1" set="method" line="666" static="1"><f a="image:mask:color:findColor:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="lime.math.Rectangle"/>
</f></getColorBoundsRect>
		<getPixel public="1" set="method" line="810" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="829" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="847" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="899" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<multiplyAlpha public="1" set="method" line="949" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></multiplyAlpha>
		<resize public="1" set="method" line="975" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<resizeBuffer public="1" set="method" line="1064" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resizeBuffer>
		<setFormat public="1" set="method" line="1100" static="1"><f a="image:format">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setFormat>
		<setPixel public="1" set="method" line="1178" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="1206" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="1228" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<threshold public="1" set="method" line="1285" static="1"><f a="image:sourceImage:sourceRect:destPoint:operation:threshold:color:mask:copySource:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></threshold>
		<unmultiplyAlpha public="1" set="method" line="1399" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></unmultiplyAlpha>
		<__boxBlur set="method" line="1425" static="1"><f a="imgA:imgB:w:h:bx:by">
	<x path="lime.utils.UInt8Array"/>
	<x path="lime.utils.UInt8Array"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__boxBlur>
		<__boxBlurH get="inline" set="null" line="1445" static="1"><f a="imgA:imgB:w:h:r:off">
	<x path="lime.utils.UInt8Array"/>
	<x path="lime.utils.UInt8Array"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></__boxBlurH>
		<__boxBlurT get="inline" set="null" line="1492" static="1"><f a="imgA:imgB:w:h:r:off">
	<x path="lime.utils.UInt8Array"/>
	<x path="lime.utils.UInt8Array"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></__boxBlurT>
		<__calculateSourceOffset get="inline" set="null" line="1544" static="1">
			<f a="sourceRect:destPoint:destX:destY">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns: the offset for translated coordinate in the source image or -1 if the source the coordinate out of the source or destination bounds
	 * Note: destX and destY should be valid coordinates</haxe_doc>
		</__calculateSourceOffset>
		<__getBoxesForGaussianBlur set="method" line="1563" static="1"><f a="sigma:n">
	<x path="Float"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></__getBoxesForGaussianBlur>
		<__pixelCompare get="inline" set="null" line="1582" static="1"><f a="n1:n2">
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Int"/>
</f></__pixelCompare>
		<__translatePixel get="inline" set="null" line="1630" static="1"><f a="imgB:sourceRect:destRect:destPoint:destX:destY:strength">
	<x path="lime.utils.UInt8Array"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__translatePixel>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
			<m n=":access"><e>lime.math.RGBA</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics._ImageDataUtil.ImageDataView" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil">
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<height public="1" set="null"><x path="Int"/></height>
		<width public="1" set="null"><x path="Int"/></width>
		<byteOffset><x path="Int"/></byteOffset>
		<image><c path="lime.graphics.Image"/></image>
		<rect><c path="lime.math.Rectangle"/></rect>
		<stride><x path="Int"/></stride>
		<tempRect><c path="lime.math.Rectangle"/></tempRect>
		<clip public="1" set="method" line="1689"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clip>
		<hasRow public="1" get="inline" set="null" line="1698"><f a="y">
	<x path="Int"/>
	<x path="Bool"/>
</f></hasRow>
		<offset public="1" set="method" line="1703"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></offset>
		<row public="1" get="inline" set="null" line="1730"><f a="y">
	<x path="Int"/>
	<x path="Int"/>
</f></row>
		<__update set="method" line="1735"><f a=""><x path="Void"/></f></__update>
		<new public="1" set="method" line="1665">
			<f a="image:?rect" v=":null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="lime._internal.graphics._ImageDataUtil.ThresholdOperation" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime._internal.graphics._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil" extern="1" final="1">
	<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1747" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_EQUALS>
	<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1748" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1749" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1750" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN_OR_EQUAL_TO>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1751" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1752" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN_OR_EQUAL_TO>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.graphics._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil" extern="1" final="1">
		<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1747" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_EQUALS>
		<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1748" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1749" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1750" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN_OR_EQUAL_TO>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1751" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1752" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN_OR_EQUAL_TO>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime._internal.graphics.StackBlur" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/StackBlur.hx">
		<MUL_TABLE expr="[1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1]" line="10" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271, 267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339, 337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1]</e></m></meta>
		</MUL_TABLE>
		<SHG_TABLE expr="[0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9]" line="21" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>[0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14, 9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16, 17, 16, 17, 9]</e></m></meta>
		</SHG_TABLE>
		<blur public="1" set="method" line="31" static="1"><f a="dest:source:sourceRect:destPoint:blurX:blurY:quality">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blur>
		<__stackBlurCanvasRGBA set="method" line="37" static="1"><f a="image:width:height:blurX:blurY:quality">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></__stackBlurCanvasRGBA>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._internal.graphics.BlurStack" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/graphics/StackBlur.hx" module="lime._internal.graphics.StackBlur">
		<r public="1"><x path="Int"/></r>
		<g public="1"><x path="Int"/></g>
		<b public="1"><x path="Int"/></b>
		<a public="1"><x path="Int"/></a>
		<n public="1"><c path="lime._internal.graphics.BlurStack"/></n>
		<new public="1" set="method" line="247"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._internal.macros.AssetsMacro" params="" file="/projects/May2019/May2020/lime/src/lime/_internal/macros/AssetsMacro.hx"><cacheVersion public="1" set="method" static="1"><f a=""><d/></f></cacheVersion></class>
	<typedef path="lime.app._Application.ApplicationBackend" params="" file="/projects/May2019/May2020/lime/src/lime/app/Application.hx" private="1" module="lime.app.Application">
		<c path="lime._internal.backend.native.NativeApplication"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<class path="lime.app.Event" params="T" file="/projects/May2019/May2020/lime/src/lime/app/Event.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__listeners public="1">
			<c path="Array"><c path="lime.app.Event.T"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__listeners>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app.Event.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<dispatch public="1">
			<d/>
			<haxe_doc><![CDATA[Dispatches a new event callback to all listeners. The signature for the
		`dispatch` method depends upon the type of the `Event`. For example, an
		`Event` of type `Int->Int->Void` will create a `dispatch` method that
		takes two `Int` arguments, like `dispatch (1, 2);`]]></haxe_doc>
		</dispatch>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app.Event.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app.Event.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<haxe_doc><![CDATA[Event is a strictly-typed signals and slots implementation, used for
	core event dispatching.

	For example:

	```haxe
	var event = new Event<Int->Void> ();
	event.add (function (value:Int):Void { trace (value); });
	event.dispatch (100);

	var event = new Event<Void->Void> ();
	event.add (function () { trace ("callback"); });
	event.dispatch ();
	```]]></haxe_doc>
		<meta>
			<m n=":genericBuild"><e>lime._internal.macros.EventMacro.build()</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Future" params="T" file="/projects/May2019/May2020/lime/src/lime/app/Future.hx">
		<ofEvents public="1" params="T" set="method" line="104" static="1">
			<f a="onComplete:?onError:?onProgress" v=":null:null">
				<c path="lime.app._Event_ofEvents_T_Void"><f a="">
	<c path="ofEvents.T"/>
	<x path="Void"/>
</f></c>
				<x path="Null"><c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c></x>
				<x path="Null"><c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></x>
				<c path="lime.app.Future"><c path="ofEvents.T"/></c>
			</f>
			<meta><m n=":value"><e>{ onProgress : null, onError : null }</e></m></meta>
			<haxe_doc>Create a new `Future` instance based on complete and (optionally) error and/or progress `Event` instances</haxe_doc>
		</ofEvents>
		<withError public="1" set="method" line="295" static="1">
			<f a="error">
				<d/>
				<c path="lime.app.Future"><d/></c>
			</f>
			<haxe_doc>Creates a `Future` instance which has finished with an error value
		@param	error	The error value to set
		@return	A new `Future` instance</haxe_doc>
		</withError>
		<withValue public="1" params="T" set="method" line="308" static="1">
			<f a="value">
				<c path="withValue.T"/>
				<c path="lime.app.Future"><c path="withValue.T"/></c>
			</f>
			<haxe_doc>Creates a `Future` instance which has finished with a completion value
		@param	error	The completion value to set
		@return	A new `Future` instance</haxe_doc>
		</withValue>
		<error public="1" set="null">
			<d/>
			<haxe_doc>If the `Future` has finished with an error state, the `error` value</haxe_doc>
		</error>
		<isComplete public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Future` finished with a completion state</haxe_doc>
		</isComplete>
		<isError public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Future` finished with an error state</haxe_doc>
		</isError>
		<value public="1" set="null">
			<c path="lime.app.Future.T"/>
			<haxe_doc>If the `Future` has finished with a completion state, the completion `value`</haxe_doc>
		</value>
		<__completeListeners>
			<c path="Array"><f a="">
	<c path="lime.app.Future.T"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__completeListeners>
		<__errorListeners>
			<c path="Array"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__errorListeners>
		<__progressListeners>
			<c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__progressListeners>
		<onComplete public="1" set="method" line="122">
			<f a="listener">
				<f a="">
					<c path="lime.app.Future.T"/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` completes.

		If the `Future` has already completed, this is called immediately with the result
		@param	listener	A callback method to receive the result value
		@return	The current `Future`</haxe_doc>
		</onComplete>
		<onError public="1" set="method" line="151">
			<f a="listener">
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` ends with an error state.

		If the `Future` has already ended with an error, this is called immediately with the error value
		@param	listener	A callback method to receive the error value
		@return	The current `Future`</haxe_doc>
		</onError>
		<onProgress public="1" set="method" line="180">
			<f a="listener">
				<f a=":">
					<x path="Int"/>
					<x path="Int"/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` updates progress.

		If the `Future` is already completed, this will not be called.
		@param	listener	A callback method to receive the progress value
		@return	The current `Future`</haxe_doc>
		</onProgress>
		<ready public="1" set="method" line="200">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
			<haxe_doc>Attempts to block on an asynchronous `Future`, returning when it is completed.
		@param	waitTime	(Optional) A timeout before this call will stop blocking
		@return	This current `Future`</haxe_doc>
		</ready>
		<result public="1" set="method" line="241">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<x path="Null"><c path="lime.app.Future.T"/></x>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
			<haxe_doc>Attempts to block on an asynchronous `Future`, returning the completion value when it is finished.
		@param	waitTime	(Optional) A timeout before this call will stop blocking
		@return	The completion value, or `null` if the request timed out or blocking is not possible</haxe_doc>
		</result>
		<then public="1" params="U" set="method" line="259">
			<f a="next">
				<f a="">
					<c path="lime.app.Future.T"/>
					<c path="lime.app.Future"><c path="then.U"/></c>
				</f>
				<c path="lime.app.Future"><c path="then.U"/></c>
			</f>
			<haxe_doc>Chains two `Future` instances together, passing the result from the first
		as input for creating/returning a new `Future` instance of a new or the same type</haxe_doc>
		</then>
		<new public="1" set="method" line="74">
			<f a="?work:?async" v="null:false">
				<f a=""><c path="lime.app.Future.T"/></f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ async : false, work : null }</e></m></meta>
			<haxe_doc>Create a new `Future` instance
		@param	work	(Optional) A function to execute
		@param	async	(Optional) If a function is specified, whether to execute it asynchronously where supported</haxe_doc>
		</new>
		<haxe_doc>`Future` is an implementation of Futures and Promises, with the exception that
	in addition to "success" and "failure" states (represented as "complete" and "error"),
	Lime `Future` introduces "progress" feedback as well to increase the value of
	`Future` values.

	```haxe
	var future = Image.loadFromFile ("image.png");
	future.onComplete (function (image) { trace ("Image loaded"); });
	future.onProgress (function (loaded, total) { trace ("Loading: " + loaded + ", " + total); });
	future.onError (function (error) { trace (error); });

	Image.loadFromFile ("image.png").then (function (image) {

		return Future.withValue (image.width);

	}).onComplete (function (width) { trace (width); })
	```

	`Future` values can be chained together for asynchronous processing of values.

	If an error occurs earlier in the chain, the error is propagated to all `onError` callbacks.

	`Future` will call `onComplete` callbacks, even if completion occurred before registering the
	callback. This resolves race conditions, so even functions that return immediately can return
	values using `Future`.

	`Future` values are meant to be immutable, if you wish to update a `Future`, you should create one
	using a `Promise`, and use the `Promise` interface to influence the error, complete or progress state
	of a `Future`.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Promise</e></m>
		</meta>
	</class>
	<class path="lime.app._Future.FutureWork" params="" file="/projects/May2019/May2020/lime/src/lime/app/Future.hx" private="1" module="lime.app.Future">
		<threadPool static="1"><c path="lime.system.ThreadPool"/></threadPool>
		<queue public="1" set="method" line="325" static="1">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<threadPool_doWork set="method" line="339" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_doWork>
		<threadPool_onComplete set="method" line="352" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onComplete>
		<threadPool_onError set="method" line="357" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onError>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.app.Promise" params="T" file="/projects/May2019/May2020/lime/src/lime/app/Promise.hx">
		<future public="1" set="null">
			<c path="lime.app.Future"><c path="lime.app.Promise.T"/></c>
			<haxe_doc>The `Future` associated with this `Promise`.

		All subsequent calls to set an error, completion or progress state
		will update the status and notify listeners to this `Future`</haxe_doc>
		</future>
		<isComplete public="1" get="accessor" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Promise` (and related `Future`) has finished with a completion state.
		This will be `false` if the `Promise` has not been resolved with a completion or error state.</haxe_doc>
		</isComplete>
		<isError public="1" get="accessor" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Promise` (and related `Future`) has finished with an error state.
		This will be `false` if the `Promise` has not been resolved with a completion or error state.</haxe_doc>
		</isError>
		<complete public="1" set="method" line="97">
			<f a="data">
				<c path="lime.app.Promise.T"/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with a completion state
		@param	data	The completion value
		@return	The current `Promise`</haxe_doc>
		</complete>
		<completeWith public="1" set="method" line="124">
			<f a="future">
				<c path="lime.app.Future"><c path="lime.app.Promise.T"/></c>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with the complete, error and/or progress state
		of another `Future`
		@param	future	The `Future` to use to resolve this `Promise`
		@return	The current `Promise`</haxe_doc>
		</completeWith>
		<error public="1" set="method" line="138">
			<f a="msg">
				<d/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with an error state
		@param	msg	The error value
		@return	The current `Promise`</haxe_doc>
		</error>
		<progress public="1" set="method" line="165">
			<f a="progress:total">
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Sends progress updates to the related `Future`
		@param	progress	A progress value
		@param	total	A total value. This should be equal or greater to the `progress` value
		@return	The current `Promise`</haxe_doc>
		</progress>
		<get_isComplete set="method" line="182">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_isComplete>
		<get_isError set="method" line="187">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_isError>
		<new public="1" set="method" line="87">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Create a new `Promise` instance</haxe_doc>
		</new>
		<haxe_doc><![CDATA[`Promise` is an implementation of Futures and Promises, with the exception that
	in addition to "success" and "failure" states (represented as "complete" and "error"),
	Lime `Future` introduces "progress" feedback as well to increase the value of
	`Future` values.

	While `Future` is meant to be read-only, `Promise` can be used to set the state of a future
	for receipients of it's `Future` object. For example:

	```haxe
	function examplePromise ():Future<String> {

		var promise = new Promise<String> ();

		var progress = 0, total = 10;
		var timer = new Timer (100);
		timer.run = function () {

			promise.progress (progress, total);
			progress++;

			if (progress == total) {

				promise.complete ("Done!");
				timer.stop ();

			}

		};

		return promise.future;

	}

	var future = examplePromise ();
	future.onComplete (function (message) { trace (message); });
	future.onProgress (function (loaded, total) { trace ("Progress: " + loaded + ", " + total); });
	```]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Future</e></m>
			<m n=":generic"/>
		</meta>
	</class>
	<class path="lime.app._Event_Dynamic_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/system/ThreadPool.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<d/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="25"><f a="a">
	<d/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Float_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/system/Sensor.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="15"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Int_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="73"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="71"><f a="a:a1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="70"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="74"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Float_Float_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="29"><f a="a:a1:a2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Float_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="24"><f a="a:a1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Int_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="79"><f a="a:a1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="25"><f a="a">
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="28"><f a="a:a1">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_String_Int_Int_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="81"><f a="a:a1:a2">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_String_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="59"><f a="a">
	<c path="String"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Void_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=""><x path="Void"/></f></c></__listeners>
		<dispatch public="1" set="method" line="64"><f a=""><x path="Void"/></f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_graphics_RenderContext_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="76"><f a="a">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_GamepadAxis_Float_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="21"><f a="a:a1">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_GamepadButton_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="22"><f a="a">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Gamepad_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="15"><f a="a">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Joystick_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="14"><f a="a">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="65"><f a="a:a1">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Touch_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/ui/Touch.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="11"><f a="a">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Window_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/app/Application.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="55"><f a="a">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_ofEvents_T_Void" params="T" file="/projects/May2019/May2020/lime/src/lime/app/Future.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="57">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="80">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="126">
			<f a="listener">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="142">
			<f a="listener">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.app._Event_ofEvents_T_Void.T"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="104"><f a="a">
	<c path="lime.app._Event_ofEvents_T_Void.T"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.graphics.CairoRenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/CairoRenderContext.hx">
		<from>
			<icast><c path="lime.graphics.cairo.Cairo"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><c path="lime.graphics.cairo.Cairo"/></this>
		<to><icast><c path="lime.graphics.cairo.Cairo"/></icast></to>
		<haxe_doc>The `CairoRenderContext` represents the primary `lime.graphics.Cairo` instance when Cairo
	is the render context type of the `Window`.

	You can convert from `lime.graphics.RenderContext` to `CairoRenderContext` directly
	if desired:

	```haxe
	var cairo:CairoRenderContext = window.context;
	```</haxe_doc>
		<meta>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics._CairoRenderContext.CairoRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/CairoRenderContext.hx" private="1" module="lime.graphics.CairoRenderContext" final="1">
	<fromRenderContext set="method" line="21" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.CairoRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._CairoRenderContext.CairoRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/CairoRenderContext.hx" private="1" module="lime.graphics.CairoRenderContext" final="1">
		<fromRenderContext set="method" line="21" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.CairoRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
	</class>
	<class path="lime.graphics.Image" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/Image.hx">
		<fromBase64 public="1" set="method" line="612" static="1">
			<f a="base64:type">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts a Base64-encoded `String` into an `Image`, or returns `null` if this is not possible
		@param	base64	A Base64-encoded `String`
		@param	type	A mime-type to describe the image data (such as "image/png")
		@return	A new `Image`, or `null` if conversion was not possible</haxe_doc>
		</fromBase64>
		<fromBytes public="1" set="method" line="651" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts a `Bytes` object to an `Image` instance

		Some platforms (such as Flash and HTML5) cannot convert `Bytes` to an
		`Image` synchronously, and may not work properly.

		`Image.loadFromBytes` works asynchronously, and should work
		consistently on all platforms.
		@param	bytes	A `Bytes` holding encoded image data
		@return	A new `Image` instance</haxe_doc>
		</fromBytes>
		<fromFile public="1" set="method" line="694" static="1">
			<f a="path">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Loads an `Image` from a path synchronously.

		Some platforms, such as Flash and HTML5, cannot load
		images synchronously.

		`Image.loadFromFile` works asynchronously, and should
		behave consistently on all platforms.
		@param	path	The source file path or URL of an encoded image file
		@return	A new `Image` instance</haxe_doc>
		</fromFile>
		<loadFromBase64 public="1" set="method" line="917" static="1">
			<f a="base64:type">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from a Base64-encoded `String`, asynchronously
		@param	base64	A Base64-encoded string representing encoded image data
		@param	type	The mime type of the encoded data (such as "image/png")
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromBase64>
		<loadFromBytes public="1" set="method" line="940" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from image-encoded `Bytes`, loaded asynchronously
		@param	bytes	A `Bytes` instance
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="1006" static="1">
			<f a="path">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from a file path or URL, loaded asynchronously
		@param	path	A file path or URL containing an encoded image
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromFile>
		<__isGIF set="method" line="1710" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isGIF>
		<__isJPG set="method" line="1718" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isJPG>
		<__isPNG set="method" line="1728" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isPNG>
		<__isWebP set="method" line="1736" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isWebP>
		<buffer public="1">
			<c path="lime.graphics.ImageBuffer"/>
			<haxe_doc>The `ImageBuffer` store that backs the `Image`</haxe_doc>
		</buffer>
		<data public="1" get="accessor" set="accessor">
			<x path="lime.utils.UInt8Array"/>
			<haxe_doc>Retrieves `UInt8Array` data from the `ImageBuffer`. If the `ImageBuffer`
		is not in a data format, it will be converted.</haxe_doc>
		</data>
		<dirty public="1">
			<x path="Bool"/>
			<haxe_doc>Whether the `Image` is dirty. This is set to `true` when pixel operations
		have been performed on the underlying `buffer`, and can be set to `false`
		again by your own renderer.</haxe_doc>
		</dirty>
		<format public="1" get="accessor" set="accessor">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>Get or set the `PixelFormat` for the underlying `ImageBuffer`. This can be
		used to convert the `ImageBuffer` to a new format.</haxe_doc>
		</format>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>The logical height of the `Image`. This can be smaller than the `height`
		of the underlying `buffer`.</haxe_doc>
		</height>
		<offsetX public="1">
			<x path="Int"/>
			<haxe_doc>The offset X position of the `Image`, from the source `buffer`,
		when the `Image` is smaller than the full size of the source `buffer`</haxe_doc>
		</offsetX>
		<offsetY public="1">
			<x path="Int"/>
			<haxe_doc>The offset Y position of the `Image`, from the source `buffer`,
		when the `Image` is smaller than the full size of the source `buffer`</haxe_doc>
		</offsetY>
		<powerOfTwo public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether the `ImageBuffer` dimensions are both a power-of-two
		(such as 2, 4, 8, 16, so on). Setting this value may resize the underlying
		`buffer`</haxe_doc>
		</powerOfTwo>
		<premultiplied public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether this `Image` has premultiplied alpha. Setting this value
		may multiply or unmultiply data if the underlying `ImageBuffer` uses a
		different format.</haxe_doc>
		</premultiplied>
		<rect public="1" get="accessor" set="null">
			<c path="lime.math.Rectangle"/>
			<haxe_doc>The offset, width and height of this image as a `Rectangle`</haxe_doc>
		</rect>
		<src public="1" get="accessor" set="accessor">
			<d/>
			<haxe_doc>A higher-level representation of the source `ImageBuffer`. This might be an
		HTML5 Image, CanvasElement or a Flash BitmapData instance.</haxe_doc>
		</src>
		<transparent public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether the underlying `ImageBuffer` is transparent.</haxe_doc>
		</transparent>
		<type public="1">
			<e path="lime.graphics.ImageType"/>
			<haxe_doc>The current `ImageType`, representing what is being used to store the `Image`'s graphics</haxe_doc>
		</type>
		<version public="1">
			<x path="Int"/>
			<haxe_doc>The `version` of the `Image` increases each time it is modified, helpful to determining
		whether a cache is out-of-date.</haxe_doc>
		</version>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>The logical width of the `Image`. This can be smaller than the `width`
		of the underlying `buffer`.</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>A convenience property, unused internally, which may be helpful for different renderer
		implementations</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>A convenience property, unused internally, which may be helpful for different renderer
		implementations</haxe_doc>
		</y>
		<clone public="1" set="method" line="285">
			<f a=""><c path="lime.graphics.Image"/></f>
			<haxe_doc>Creates a duplicate copy of this `Image` and `ImageBuffer`
		@return	A new `Image` instance</haxe_doc>
		</clone>
		<colorTransform public="1" set="method" line="315">
			<f a="rect:colorMatrix">
				<c path="lime.math.Rectangle"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Applies a color transform to the underlying `ImageBuffer` data
		@param	rect	The target rectangle to transform
		@param	colorMatrix	A `ColorMatrix` for color offset and/or multiplication</haxe_doc>
		</colorTransform>
		<copyChannel public="1" set="method" line="348">
			<f a="sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<e path="lime.graphics.ImageChannel"/>
				<e path="lime.graphics.ImageChannel"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copy a color channel from one `Image` to another. This can also be within the same `Image` instance.
		@param	sourceImage	The `Image` to copy from
		@param	sourceRect	The source rectangle to copy from in the `sourceImage`
		@param	destPoint	The destination point to apply the channel in the current `Image`
		@param	sourceChannel	The source color channel to copy the data from
		@param	destChannel	The destination color channel to apply the data into</haxe_doc>
		</copyChannel>
		<copyPixels public="1" set="method" line="406">
			<f a="sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v=":::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
			<haxe_doc>Copies pixels from one `Image` to another. The source `Image` can also be this `Image`
		@param	sourceImage	The source `Image` to copy from
		@param	sourceRect	The source rectangle to use when copying
		@param	destPoint	The destination point to use when copying
		@param	alphaImage	(Optional) A different `Image` to use as the alpha channel while copying
		@param	alphaPoint	(Optional) A point in the alpha image to use when copying
		@param	mergeAlpha	(Optional) Whether to blend the source and destination alpha (`true`), or to replace the destination alpha (`false`)</haxe_doc>
		</copyPixels>
		<encode public="1" set="method" line="506">
			<f a="?format:?quality" v="null:90">
				<e path="lime.graphics.ImageFileFormat"/>
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ quality : 90, format : null }</e></m></meta>
			<haxe_doc>Encodes this `Image` into an image file format, such as PNG or JPEG.
		@param	format	(Optional) An `ImageFileFormat` to encode into (default is `PNG`)
		@param	quality	(Optional) A quality value to use when encoding as JPEG (from 0 to 100)
		@return	`Bytes` for the encoded `Image`, or `null` if encoding was not successful</haxe_doc>
		</encode>
		<fillRect public="1" set="method" line="531">
			<f a="rect:color:?format" v="::null">
				<c path="lime.math.Rectangle"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Fill a rectangle in the `Image` with a solid color
		@param	rect	A destination rectangle in this `Image` to fill
		@param	color	The color to use when filling this `Image`
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</fillRect>
		<floodFill public="1" set="method" line="576">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Applies a flood fill to this `Image`, starting with the point specified.

		A flood fill behaves similarly to the "paint can" tool in many image editors,
		the fill will apply the chosen color to neighboring pixels of the same color.
		@param	x	The target x coordinate within the `Image` to use with the fill
		@param	y	The target y coordinate within the `Image` to use with the fill
		@param	color	The color to use when performing the fill
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</floodFill>
		<getColorBoundsRect public="1" set="method" line="735">
			<f a="mask:color:?findColor:?format" v="::true:null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ format : null, findColor : true }</e></m></meta>
			<haxe_doc>Finds a region in the `Image` that includes pixels all of a certain color (when `findColor` is `true`) or
		excludes a certain color (`findColor` is `false`)
		@param	mask	A hexadecimal mask to use when comparing colors. You can use this to compare all of a color, or only certain color channels
		@param	color	The color value to use in comparisons
		@param	findColor	(Optional) Whether to find a region that does match the color (`true`) or excludes it (`false`)
		@param	format	(Optional) The `PixelFormat` that the `color` and `mask` are encoded in (default is `RGBA`)
		@return	The matching bounds `Rectangle`, or `null` if no matching region is found</haxe_doc>
		</getColorBoundsRect>
		<getPixel public="1" set="method" line="767">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a 24-bit pixel from the `Image` (red, green and blue, but no alpha)
		@param	x	The `x` location to fetch
		@param	y	The `y` location to fetch
		@param	format	(Optional) The `PixelFormat` to encode the return value in (default is `RGBA`)
		@return	The specified pixel, or `0` if it is out-of-bounds</haxe_doc>
		</getPixel>
		<getPixel32 public="1" set="method" line="809">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a 32-bit pixel from the `Image`, including alpha
		@param	x	The `x` location to fetch
		@param	y	The `y` location to fetch
		@param	format	(Optional) The `PixelFormat` to encode the return value in (default is `RGBA`)
		@return	The specified pixel, or `0` if it is out-of-bounds</haxe_doc>
		</getPixel32>
		<getPixels public="1" set="method" line="850">
			<f a="rect:?format" v=":null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a region of pixels from the `Image`, as `Bytes`
		@param	rect	The source `Rectangle` to read from
		@param	format	(Optional) The `PixelFormat` to use when writing to the `Bytes` object (default is `RGBA`)
		@return	A `Bytes` object representing the region, or `null` if it is not possible to read</haxe_doc>
		</getPixels>
		<merge public="1" set="method" line="1078">
			<f a="sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Blits a second `Image` onto this one, using optional color multipliers
		@param	sourceImage	An `Image` instance to copy from
		@param	sourceRect	The source rectangle to use when copying
		@param	destPoint	The destination point in this `Image` to copy into
		@param	redMultiplier	A red multiplier to use when blitting
		@param	greenMultiplier	A red multiplier to use when blitting
		@param	blueMultiplier	A red multiplier to use when blitting
		@param	alphaMultiplier	A red multiplier to use when blitting</haxe_doc>
		</merge>
		<resize public="1" set="method" line="1113">
			<f a="newWidth:newHeight">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Resizes the current `Image`, reallocating the `ImageBuffer` to a new size.
		The resize algorithm for most platforms is bilinear.
		@param	newWidth	A new width for the `Image`
		@param	newHeight	A new height for the `Image`</haxe_doc>
		</resize>
		<scroll public="1" set="method" line="1153">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scrolls the content of this `Image`.

		Pixels on the edges of the scroll will remain repeated, while others
		within the scroll area will be shifted

		@param	x	The amount of horizontal scroll to apply
		@param	y	The amount of vertical scroll to apply</haxe_doc>
		</scroll>
		<setPixel public="1" set="method" line="1179">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Sets a pixel in the current `Image` in 24-bit color format (red, green, blue, no alpha)
		@param	x	The x coordinate of the pixel
		@param	y	The y coordinate of the pixel
		@param	color	The color to use
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</setPixel>
		<setPixel32 public="1" set="method" line="1216">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Sets a pixel in the current `Image` in 32-bit color format (includes alpha)
		@param	x	The x coordinate of the pixel
		@param	y	The y coordinate of the pixel
		@param	color	The color to use
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</setPixel32>
		<setPixels public="1" set="method" line="1253">
			<f a="rect:bytePointer:?format:?endian" v="::null:null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.utils.BytePointer"/>
				<x path="lime.graphics.PixelFormat"/>
				<e path="lime.system.Endian"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endian : null, format : null }</e></m></meta>
			<haxe_doc>Sets a region of pixels at once using a `BytePointer`
		@param	rect	The region of pixels in this `Image` to replace with the incoming bytes
		@param	bytePointer	A `BytePointer` object referencing the `Bytes` and position to read from
		@param	format	(Optional) The `PixelFormat` that the pixels are encoded in (default is `RGBA`)
		@param	endian (Optional) The endianness of the incoming bytes (default is the system endianness)</haxe_doc>
		</setPixels>
		<threshold public="1" set="method" line="1359">
			<f a="sourceImage:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource:?format" v=":::::0x00000000:0xFFFFFFFF:false:null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null, copySource : false, mask : 0xFFFFFFFF, color : 0x00000000 }</e></m></meta>
			<haxe_doc><![CDATA[Tests pixel values in an image against a specified threshold and sets
		pixels that pass the test to new color values. Using the
		`threshold()` method, you can isolate and replace color ranges
		in an image and perform other logical operations on image pixels.

		The `threshold()` method's test logic is as follows:

		 1. If `((pixelValue & mask) operation(threshold & mask))`,
		then set the pixel to `color`;
		 2. Otherwise, if `copySource == true`, then set the pixel to
		corresponding pixel value from `sourceBitmap`.

		The `operation` parameter specifies the comparison operator
		to use for the threshold test. For example, by using "==" as the
		`operation` parameter, you can isolate a specific color value
		in an image. Or by using `{operation: "<", mask: 0xFF000000,
		threshold: 0x7F000000, color: 0x00000000}`, you can set all
		destination pixels to be fully transparent when the source image pixel's
		alpha is less than 0x7F. You can use this technique for animated
		transitions and other effects.

		@param	sourceImage	The input bitmap image to use. The source image can be a different `Image` object or it can refer to the current `Image` instance.
		@param	sourceRect	A rectangle that defines the area of the source image to use as input.
		@param	destPoint	The point within the destination image (the current `Image` instance) that corresponds to the upper-left corner of the source rectangle.
		@param	operation	One of the following comparison operators, passed as a `String`: "<", "<=", ">", ">=", "==", "!="
		@param	threshold	The value that each pixel is tested against to see if it meets or exceeds the threshhold.
		@param	color	The color value that a pixel is set to if the threshold test succeeds. The default value is 0x00000000.
		@param	mask	The mask to use to isolate a color component.
		@param	copySource	If the value is `true`, pixel values from the source image are copied to the destination when the threshold test fails. If the value is `false`, the source image is not copied when the threshold test fails.
		@return	The number of pixels that were changed.]]></haxe_doc>
		</threshold>
		<__clipRect set="method" line="1401">
			<f a="r">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__clipRect>
		<__fromBase64 set="method" line="1438">
			<f a="base64:type:?onload" v="::null">
				<c path="String"/>
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromBase64>
		<__fromBytes set="method" line="1473">
			<f a="bytes:?onload" v=":null">
				<c path="haxe.io.Bytes"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":value"><e>{ onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromBytes>
		<__fromFile set="method" line="1530">
			<f a="path:?onload:?onerror" v=":null:null">
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<f a=""><x path="Void"/></f>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":value"><e>{ onerror : null, onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromFile>
		<__fromImageBuffer set="method" line="1692">
			<f a="buffer">
				<c path="lime.graphics.ImageBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromImageBuffer>
		<get_data set="method" line="1744">
			<f a=""><x path="lime.utils.UInt8Array"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_data>
		<set_data set="method" line="1759">
			<f a="value">
				<x path="lime.utils.UInt8Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_data>
		<get_format set="method" line="1764">
			<f a=""><x path="lime.graphics.PixelFormat"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_format>
		<set_format set="method" line="1769">
			<f a="value">
				<x path="lime.graphics.PixelFormat"/>
				<x path="lime.graphics.PixelFormat"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_format>
		<get_powerOfTwo set="method" line="1785">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_powerOfTwo>
		<set_powerOfTwo set="method" line="1792">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_powerOfTwo>
		<get_premultiplied set="method" line="1842">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_premultiplied>
		<set_premultiplied set="method" line="1847">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_premultiplied>
		<get_rect set="method" line="1883">
			<f a=""><c path="lime.math.Rectangle"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_rect>
		<get_src set="method" line="1888">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="1900">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<get_transparent set="method" line="1905">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_transparent>
		<set_transparent set="method" line="1911">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_transparent>
		<new public="1" set="method" line="219">
			<f a="?buffer:?offsetX:?offsetY:?width:?height:?color:?type" v="null:0:0:-1:-1:null:null">
				<c path="lime.graphics.ImageBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<e path="lime.graphics.ImageType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null, color : null, height : -1, width : -1, offsetY : 0, offsetX : 0, buffer : null }</e></m></meta>
			<haxe_doc>Creates a new `Image` instance.

		If `buffer` is null, but `width` and `height` are set, a new `ImageBuffer` is allocated matching the `color` requested.
		@param	buffer	(Optional) The `ImageBuffer` this `Image` represents
		@param	offsetX	(Optional) A logical offset value within the `ImageBuffer` dimensions
		@param	offsetY	(Optional) A logical offset value within the `ImageBuffer` dimensions
		@param	width	(Optional) A logical width value within the `ImageBuffer` dimensions
		@param	height	(Optional) A logical height value within the `ImageBuffer` dimensions
		@param	color	(Optional) A fill color to use if the `buffer` property is `null`
		@param	type	(Optional) An `ImageType` to use for this `Image`</haxe_doc>
		</new>
		<haxe_doc>`Image` is a convenience class for working with bitmap images in Lime.

	Although `ImageBuffer` holds the actual bitmap data, `Image` includes convenience methods for
	loading from files, loading from bytes, and performing many pixel operations over an
	`ImageBuffer` instance.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":autoBuild"><e>lime._internal.macros.AssetsMacro.embedImage()</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":allow"><e>lime._internal.graphics.ImageCanvasUtil</e></m>
			<m n=":allow"><e>lime._internal.graphics.ImageDataUtil</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.math.ColorMatrix</e></m>
			<m n=":access"><e>lime.math.Rectangle</e></m>
			<m n=":access"><e>lime.math.Vector2</e></m>
		</meta>
	</class>
	<class path="lime.graphics.ImageBuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/ImageBuffer.hx">
		<bitsPerPixel public="1">
			<x path="Int"/>
			<haxe_doc>The number of bits per pixel in this image data</haxe_doc>
		</bitsPerPixel>
		<data public="1">
			<x path="lime.utils.UInt8Array"/>
			<haxe_doc>The data for this image, represented as a `UInt8Array`</haxe_doc>
		</data>
		<format public="1">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>The `PixelFormat` for this image data</haxe_doc>
		</format>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>The height of this image data</haxe_doc>
		</height>
		<premultiplied public="1">
			<x path="Bool"/>
			<haxe_doc>Whether the image data has premultiplied alpha</haxe_doc>
		</premultiplied>
		<src public="1" get="accessor" set="accessor">
			<d/>
			<haxe_doc>The data for this image, represented as a `js.html.CanvasElement`, `js.html.Image` or `flash.display.BitmapData`</haxe_doc>
		</src>
		<stride public="1" get="accessor" set="null">
			<x path="Int"/>
			<haxe_doc>The stride, or number of data values (in bytes) per row in the image data</haxe_doc>
		</stride>
		<transparent public="1">
			<x path="Bool"/>
			<haxe_doc>Whether this image data is transparent</haxe_doc>
		</transparent>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>The width of this image data</haxe_doc>
		</width>
		<__srcBitmapData>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBitmapData>
		<__srcCanvas>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCanvas>
		<__srcContext>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcContext>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcImage>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImage>
		<__srcImageData>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImageData>
		<clone public="1" set="method" line="127">
			<f a=""><c path="lime.graphics.ImageBuffer"/></f>
			<haxe_doc>Creates a duplicate of this `ImageBuffer`

		If the current `ImageBuffer` has `data` or `src` information, this will be
		cloned as well.
		@return	A new `ImageBuffer` with duplicate values</haxe_doc>
		</clone>
		<get_src set="method" line="189">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="201">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<get_stride set="method" line="222">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_stride>
		<new public="1" set="method" line="109">
			<f a="?data:?width:?height:?bitsPerPixel:?format" v="null:0:0:32:null">
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null, bitsPerPixel : 32, height : 0, width : 0, data : null }</e></m></meta>
			<haxe_doc>Creates a new `ImageBuffer` instance
		@param	data	(Optional) Initial `UInt8Array` data
		@param	width	(Optional) An initial `width` value
		@param	height	(Optional) An initial `height` value
		@param	bitsPerPixel	(Optional) The `bitsPerPixel` of the data (default is 32)
		@param	format	(Optional) The `PixelFormat` of this image buffer</haxe_doc>
		</new>
		<haxe_doc>`ImageBuffer` is a simple object for storing image data.

	For higher-level operations, use the `Image` class.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.graphics.Image</e></m>
		</meta>
	</class>
	<enum path="lime.graphics.ImageChannel" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/ImageChannel.hx">
		<RED><haxe_doc>The red color channel</haxe_doc></RED>
		<GREEN><haxe_doc>The green color channel</haxe_doc></GREEN>
		<BLUE><haxe_doc>The blue color channel</haxe_doc></BLUE>
		<ALPHA><haxe_doc>The alpha color channel</haxe_doc></ALPHA>
		<haxe_doc>An enum with values for standard image color channels</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<enum path="lime.graphics.ImageFileFormat" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/ImageFileFormat.hx">
		<BMP><haxe_doc>An image file encoded in the BMP file format</haxe_doc></BMP>
		<JPEG><haxe_doc>An image file encoded in the JPEG file format</haxe_doc></JPEG>
		<PNG><haxe_doc>An image file encoded in the PNG file format</haxe_doc></PNG>
		<haxe_doc>An enum with values for image encoding formats</haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="lime.graphics.ImageType" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/ImageType.hx">
		<CANVAS><haxe_doc>The source image data is stored in a `js.html.Image` or `js.html.CanvasElement`</haxe_doc></CANVAS>
		<DATA><haxe_doc>The source image data is stored in a `UInt8Array`</haxe_doc></DATA>
		<FLASH><haxe_doc>The source image data is stored in a `flash.display.BitmapData`</haxe_doc></FLASH>
		<CUSTOM><haxe_doc>The source image data is stored in a custom format</haxe_doc></CUSTOM>
		<haxe_doc>An enum containing values for the underlying image type
	represented by an `ImageBuffer`</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.graphics.OpenGLES2RenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES2RenderContext.hx">
		<from>
			<icast><x path="lime.graphics.OpenGLES3RenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><x path="lime.graphics.OpenGLES3RenderContext"/></this>
		<haxe_doc>The `OpenGLES2RenderContext` allows access to OpenGL ES 2.0 features when OpenGL or
	OpenGL ES is the render context type of the `Window`.

	Using an OpenGL ES context on a desktop platform enables support for cross-platform
	code that should run on the majority of desktop and mobile platforms (when using
	hardware acceleration).

	Platforms supporting an OpenGL ES context are compatible with the Lime
	`WebGLRenderContext` if you would prefer to write WebGL-style code, or support web
	browsers with the same code.

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.OpenGLES3RenderContext`, `lime.graphics.opengl.GL`, and can convert to
	`lime.graphics.WebGLRenderContext` directly if desired:

	```haxe
	var gles2:OpenGLES2RenderContext = window.context;
	var gles2:OpenGLES2RenderContext = gl;
	var gles2:OpenGLES2RenderContext = gles3;
	var gles2:OpenGLES2RenderContext = GL;

	var webgl:WebGLRenderContext = gles2;
	```</haxe_doc>
		<meta><m n=":forward">
	<e>ACTIVE_ATTRIBUTES</e>
	<e>ACTIVE_TEXTURE</e>
	<e>ACTIVE_UNIFORMS</e>
	<e>ALIASED_LINE_WIDTH_RANGE</e>
	<e>ALIASED_POINT_SIZE_RANGE</e>
	<e>ALPHA</e>
	<e>ALPHA_BITS</e>
	<e>ALWAYS</e>
	<e>ARRAY_BUFFER</e>
	<e>ARRAY_BUFFER_BINDING</e>
	<e>ATTACHED_SHADERS</e>
	<e>BACK</e>
	<e>BLEND</e>
	<e>BLEND_COLOR</e>
	<e>BLEND_DST_ALPHA</e>
	<e>BLEND_DST_RGB</e>
	<e>BLEND_EQUATION</e>
	<e>BLEND_EQUATION_ALPHA</e>
	<e>BLEND_EQUATION_RGB</e>
	<e>BLEND_SRC_ALPHA</e>
	<e>BLEND_SRC_RGB</e>
	<e>BLUE_BITS</e>
	<e>BOOL</e>
	<e>BOOL_VEC2</e>
	<e>BOOL_VEC3</e>
	<e>BOOL_VEC4</e>
	<e>BROWSER_DEFAULT_WEBGL</e>
	<e>BUFFER_SIZE</e>
	<e>BUFFER_USAGE</e>
	<e>BYTE</e>
	<e>CCW</e>
	<e>CLAMP_TO_EDGE</e>
	<e>COLOR_ATTACHMENT0</e>
	<e>COLOR_BUFFER_BIT</e>
	<e>COLOR_CLEAR_VALUE</e>
	<e>COLOR_WRITEMASK</e>
	<e>COMPILE_STATUS</e>
	<e>COMPRESSED_TEXTURE_FORMATS</e>
	<e>CONSTANT_ALPHA</e>
	<e>CONSTANT_COLOR</e>
	<e>CULL_FACE</e>
	<e>CULL_FACE_MODE</e>
	<e>CURRENT_PROGRAM</e>
	<e>CURRENT_VERTEX_ATTRIB</e>
	<e>CW</e>
	<e>DECR</e>
	<e>DECR_WRAP</e>
	<e>DELETE_STATUS</e>
	<e>DEPTH_ATTACHMENT</e>
	<e>DEPTH_BITS</e>
	<e>DEPTH_BUFFER_BIT</e>
	<e>DEPTH_CLEAR_VALUE</e>
	<e>DEPTH_COMPONENT</e>
	<e>DEPTH_COMPONENT16</e>
	<e>DEPTH_FUNC</e>
	<e>DEPTH_RANGE</e>
	<e>DEPTH_STENCIL</e>
	<e>DEPTH_STENCIL_ATTACHMENT</e>
	<e>DEPTH_TEST</e>
	<e>DEPTH_WRITEMASK</e>
	<e>DITHER</e>
	<e>DONT_CARE</e>
	<e>DST_ALPHA</e>
	<e>DST_COLOR</e>
	<e>DYNAMIC_DRAW</e>
	<e>ELEMENT_ARRAY_BUFFER</e>
	<e>ELEMENT_ARRAY_BUFFER_BINDING</e>
	<e>EQUAL</e>
	<e>FASTEST</e>
	<e>FLOAT</e>
	<e>FLOAT_MAT2</e>
	<e>FLOAT_MAT3</e>
	<e>FLOAT_MAT4</e>
	<e>FLOAT_VEC2</e>
	<e>FLOAT_VEC3</e>
	<e>FLOAT_VEC4</e>
	<e>FRAGMENT_SHADER</e>
	<e>FRAMEBUFFER</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e>
	<e>FRAMEBUFFER_BINDING</e>
	<e>FRAMEBUFFER_COMPLETE</e>
	<e>FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e>
	<e>FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e>
	<e>FRAMEBUFFER_UNSUPPORTED</e>
	<e>FRONT</e>
	<e>FRONT_AND_BACK</e>
	<e>FRONT_FACE</e>
	<e>FUNC_ADD</e>
	<e>FUNC_REVERSE_SUBTRACT</e>
	<e>FUNC_SUBTRACT</e>
	<e>GENERATE_MIPMAP_HINT</e>
	<e>GEQUAL</e>
	<e>GREATER</e>
	<e>GREEN_BITS</e>
	<e>HIGH_FLOAT</e>
	<e>HIGH_INT</e>
	<e>INCR</e>
	<e>INCR_WRAP</e>
	<e>INT</e>
	<e>INT_VEC2</e>
	<e>INT_VEC3</e>
	<e>INT_VEC4</e>
	<e>INVALID_ENUM</e>
	<e>INVALID_FRAMEBUFFER_OPERATION</e>
	<e>INVALID_OPERATION</e>
	<e>INVALID_VALUE</e>
	<e>INVERT</e>
	<e>KEEP</e>
	<e>LEQUAL</e>
	<e>LESS</e>
	<e>LINEAR</e>
	<e>LINEAR_MIPMAP_LINEAR</e>
	<e>LINEAR_MIPMAP_NEAREST</e>
	<e>LINES</e>
	<e>LINE_LOOP</e>
	<e>LINE_STRIP</e>
	<e>LINE_WIDTH</e>
	<e>LINK_STATUS</e>
	<e>LOW_FLOAT</e>
	<e>LOW_INT</e>
	<e>LUMINANCE</e>
	<e>LUMINANCE_ALPHA</e>
	<e>MAX_COMBINED_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_CUBE_MAP_TEXTURE_SIZE</e>
	<e>MAX_FRAGMENT_UNIFORM_VECTORS</e>
	<e>MAX_RENDERBUFFER_SIZE</e>
	<e>MAX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_TEXTURE_SIZE</e>
	<e>MAX_VARYING_VECTORS</e>
	<e>MAX_VERTEX_ATTRIBS</e>
	<e>MAX_VERTEX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_VERTEX_UNIFORM_VECTORS</e>
	<e>MAX_VIEWPORT_DIMS</e>
	<e>MEDIUM_FLOAT</e>
	<e>MEDIUM_INT</e>
	<e>MIRRORED_REPEAT</e>
	<e>NEAREST</e>
	<e>NEAREST_MIPMAP_LINEAR</e>
	<e>NEAREST_MIPMAP_NEAREST</e>
	<e>NEVER</e>
	<e>NICEST</e>
	<e>NONE</e>
	<e>NOTEQUAL</e>
	<e>NO_ERROR</e>
	<e>ONE</e>
	<e>ONE_MINUS_CONSTANT_ALPHA</e>
	<e>ONE_MINUS_CONSTANT_COLOR</e>
	<e>ONE_MINUS_DST_ALPHA</e>
	<e>ONE_MINUS_DST_COLOR</e>
	<e>ONE_MINUS_SRC_ALPHA</e>
	<e>ONE_MINUS_SRC_COLOR</e>
	<e>OUT_OF_MEMORY</e>
	<e>PACK_ALIGNMENT</e>
	<e>POINTS</e>
	<e>POLYGON_OFFSET_FACTOR</e>
	<e>POLYGON_OFFSET_FILL</e>
	<e>POLYGON_OFFSET_UNITS</e>
	<e>RED_BITS</e>
	<e>RENDERBUFFER</e>
	<e>RENDERBUFFER_ALPHA_SIZE</e>
	<e>RENDERBUFFER_BINDING</e>
	<e>RENDERBUFFER_BLUE_SIZE</e>
	<e>RENDERBUFFER_DEPTH_SIZE</e>
	<e>RENDERBUFFER_GREEN_SIZE</e>
	<e>RENDERBUFFER_HEIGHT</e>
	<e>RENDERBUFFER_INTERNAL_FORMAT</e>
	<e>RENDERBUFFER_RED_SIZE</e>
	<e>RENDERBUFFER_STENCIL_SIZE</e>
	<e>RENDERBUFFER_WIDTH</e>
	<e>RENDERER</e>
	<e>REPEAT</e>
	<e>REPLACE</e>
	<e>RGB</e>
	<e>RGB565</e>
	<e>RGB5_A1</e>
	<e>RGBA</e>
	<e>RGBA4</e>
	<e>SAMPLER_2D</e>
	<e>SAMPLER_CUBE</e>
	<e>SAMPLES</e>
	<e>SAMPLE_ALPHA_TO_COVERAGE</e>
	<e>SAMPLE_BUFFERS</e>
	<e>SAMPLE_COVERAGE</e>
	<e>SAMPLE_COVERAGE_INVERT</e>
	<e>SAMPLE_COVERAGE_VALUE</e>
	<e>SCISSOR_BOX</e>
	<e>SCISSOR_TEST</e>
	<e>SHADER_TYPE</e>
	<e>SHADING_LANGUAGE_VERSION</e>
	<e>SHORT</e>
	<e>SRC_ALPHA</e>
	<e>SRC_ALPHA_SATURATE</e>
	<e>SRC_COLOR</e>
	<e>STATIC_DRAW</e>
	<e>STENCIL_ATTACHMENT</e>
	<e>STENCIL_BACK_FAIL</e>
	<e>STENCIL_BACK_FUNC</e>
	<e>STENCIL_BACK_PASS_DEPTH_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_PASS</e>
	<e>STENCIL_BACK_REF</e>
	<e>STENCIL_BACK_VALUE_MASK</e>
	<e>STENCIL_BACK_WRITEMASK</e>
	<e>STENCIL_BITS</e>
	<e>STENCIL_BUFFER_BIT</e>
	<e>STENCIL_CLEAR_VALUE</e>
	<e>STENCIL_FAIL</e>
	<e>STENCIL_FUNC</e>
	<e>STENCIL_INDEX</e>
	<e>STENCIL_INDEX8</e>
	<e>STENCIL_PASS_DEPTH_FAIL</e>
	<e>STENCIL_PASS_DEPTH_PASS</e>
	<e>STENCIL_REF</e>
	<e>STENCIL_TEST</e>
	<e>STENCIL_VALUE_MASK</e>
	<e>STENCIL_WRITEMASK</e>
	<e>STREAM_DRAW</e>
	<e>SUBPIXEL_BITS</e>
	<e>TEXTURE</e>
	<e>TEXTURE0</e>
	<e>TEXTURE1</e>
	<e>TEXTURE10</e>
	<e>TEXTURE11</e>
	<e>TEXTURE12</e>
	<e>TEXTURE13</e>
	<e>TEXTURE14</e>
	<e>TEXTURE15</e>
	<e>TEXTURE16</e>
	<e>TEXTURE17</e>
	<e>TEXTURE18</e>
	<e>TEXTURE19</e>
	<e>TEXTURE2</e>
	<e>TEXTURE20</e>
	<e>TEXTURE21</e>
	<e>TEXTURE22</e>
	<e>TEXTURE23</e>
	<e>TEXTURE24</e>
	<e>TEXTURE25</e>
	<e>TEXTURE26</e>
	<e>TEXTURE27</e>
	<e>TEXTURE28</e>
	<e>TEXTURE29</e>
	<e>TEXTURE3</e>
	<e>TEXTURE30</e>
	<e>TEXTURE31</e>
	<e>TEXTURE4</e>
	<e>TEXTURE5</e>
	<e>TEXTURE6</e>
	<e>TEXTURE7</e>
	<e>TEXTURE8</e>
	<e>TEXTURE9</e>
	<e>TEXTURE_2D</e>
	<e>TEXTURE_BINDING_2D</e>
	<e>TEXTURE_BINDING_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_X</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Z</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_X</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Z</e>
	<e>TEXTURE_MAG_FILTER</e>
	<e>TEXTURE_MIN_FILTER</e>
	<e>TEXTURE_WRAP_S</e>
	<e>TEXTURE_WRAP_T</e>
	<e>TRIANGLES</e>
	<e>TRIANGLE_FAN</e>
	<e>TRIANGLE_STRIP</e>
	<e>UNPACK_ALIGNMENT</e>
	<e>UNSIGNED_BYTE</e>
	<e>UNSIGNED_INT</e>
	<e>UNSIGNED_SHORT</e>
	<e>UNSIGNED_SHORT_4_4_4_4</e>
	<e>UNSIGNED_SHORT_5_5_5_1</e>
	<e>UNSIGNED_SHORT_5_6_5</e>
	<e>VALIDATE_STATUS</e>
	<e>VENDOR</e>
	<e>VERSION</e>
	<e>VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e>
	<e>VERTEX_ATTRIB_ARRAY_ENABLED</e>
	<e>VERTEX_ATTRIB_ARRAY_NORMALIZED</e>
	<e>VERTEX_ATTRIB_ARRAY_POINTER</e>
	<e>VERTEX_ATTRIB_ARRAY_SIZE</e>
	<e>VERTEX_ATTRIB_ARRAY_STRIDE</e>
	<e>VERTEX_ATTRIB_ARRAY_TYPE</e>
	<e>VERTEX_SHADER</e>
	<e>VIEWPORT</e>
	<e>ZERO</e>
	<e>activeTexture</e>
	<e>attachShader</e>
	<e>bindAttribLocation</e>
	<e>bindBuffer</e>
	<e>bindFramebuffer</e>
	<e>bindTexture</e>
	<e>blendColor</e>
	<e>blendEquation</e>
	<e>blendEquationSeparate</e>
	<e>blendFunc</e>
	<e>blendFuncSeparate</e>
	<e>bufferData</e>
	<e>bufferSubData</e>
	<e>checkFramebufferStatus</e>
	<e>clear</e>
	<e>clearColor</e>
	<e>clearDepthf</e>
	<e>clearStencil</e>
	<e>colorMask</e>
	<e>compileShader</e>
	<e>compressedTexImage2D</e>
	<e>compressedTexSubImage2D</e>
	<e>copyTexImage2D</e>
	<e>copyTexSubImage2D</e>
	<e>createBuffer</e>
	<e>createFramebuffer</e>
	<e>createProgram</e>
	<e>createRenderbuffer</e>
	<e>createShader</e>
	<e>createTexture</e>
	<e>cullFace</e>
	<e>deleteBuffer</e>
	<e>deleteFramebuffer</e>
	<e>deleteProgram</e>
	<e>deleteRenderbuffer</e>
	<e>deleteShader</e>
	<e>deleteTexture</e>
	<e>depthFunc</e>
	<e>depthMask</e>
	<e>depthRangef</e>
	<e>detachShader</e>
	<e>disable</e>
	<e>disableVertexAttribArray</e>
	<e>drawArrays</e>
	<e>drawElements</e>
	<e>enable</e>
	<e>enableVertexAttribArray</e>
	<e>finish</e>
	<e>flush</e>
	<e>framebufferRenderbuffer</e>
	<e>framebufferTexture2D</e>
	<e>frontFace</e>
	<e>genBuffers</e>
	<e>generateMipmap</e>
	<e>genFramebuffers</e>
	<e>genRenderbuffers</e>
	<e>genTextures</e>
	<e>getActiveAttrib</e>
	<e>getActiveUniform</e>
	<e>getAttachedShaders</e>
	<e>getAttribLocation</e>
	<e>getBoolean</e>
	<e>getBooleanv</e>
	<e>getBufferParameteri</e>
	<e>getBufferParameteriv</e>
	<e>getError</e>
	<e>getFloat</e>
	<e>getFloatv</e>
	<e>getFramebufferAttachmentParameteri</e>
	<e>getFramebufferAttachmentParameteriv</e>
	<e>getInteger</e>
	<e>getIntegerv</e>
	<e>getProgramInfoLog</e>
	<e>getProgrami</e>
	<e>getProgramiv</e>
	<e>getRenderbufferParameteri</e>
	<e>getRenderbufferParameteriv</e>
	<e>getShaderi</e>
	<e>getShaderInfoLog</e>
	<e>getShaderiv</e>
	<e>getShaderPrecisionFormat</e>
	<e>getShaderSource</e>
	<e>getString</e>
	<e>getTexParameterf</e>
	<e>getTexParameterfv</e>
	<e>getTexParameteri</e>
	<e>getTexParameteriv</e>
	<e>getUniform</e>
	<e>getUniformLocation</e>
	<e>getVertexAttribf</e>
	<e>getVertexAttribfv</e>
	<e>getVertexAttribi</e>
	<e>getVertexAttribiv</e>
	<e>getVertexAttribPointerv</e>
	<e>hint</e>
	<e>isBuffer</e>
	<e>isEnabled</e>
	<e>isFramebuffer</e>
	<e>isProgram</e>
	<e>isRenderbuffer</e>
	<e>isShader</e>
	<e>isTexture</e>
	<e>lineWidth</e>
	<e>linkProgram</e>
	<e>pixelStorei</e>
	<e>polygonOffset</e>
	<e>readPixels</e>
	<e>releaseShaderCompiler</e>
	<e>renderbufferStorage</e>
	<e>sampleCoverage</e>
	<e>scissor</e>
	<e>shaderBinary</e>
	<e>shaderSource</e>
	<e>stencilFunc</e>
	<e>stencilFuncSeparate</e>
	<e>stencilMask</e>
	<e>stencilMaskSeparate</e>
	<e>stencilOp</e>
	<e>stencilOpSeparate</e>
	<e>texImage2D</e>
	<e>texParameterf</e>
	<e>texParameteri</e>
	<e>texSubImage2D</e>
	<e>uniform1f</e>
	<e>uniform1fv</e>
	<e>uniform1i</e>
	<e>uniform1iv</e>
	<e>uniform2f</e>
	<e>uniform2fv</e>
	<e>uniform2i</e>
	<e>uniform2iv</e>
	<e>uniform3f</e>
	<e>uniform3fv</e>
	<e>uniform3i</e>
	<e>uniform3iv</e>
	<e>uniform4f</e>
	<e>uniform4fv</e>
	<e>uniform4i</e>
	<e>uniform4iv</e>
	<e>uniformMatrix2fv</e>
	<e>uniformMatrix3fv</e>
	<e>uniformMatrix4fv</e>
	<e>useProgram</e>
	<e>validateProgram</e>
	<e>vertexAttrib1f</e>
	<e>vertexAttrib1fv</e>
	<e>vertexAttrib2f</e>
	<e>vertexAttrib2fv</e>
	<e>vertexAttrib3f</e>
	<e>vertexAttrib3fv</e>
	<e>vertexAttrib4f</e>
	<e>vertexAttrib4fv</e>
	<e>vertexAttribPointer</e>
	<e>viewport</e>
	<e>EXTENSIONS</e>
	<e>type</e>
	<e>version</e>
</m></meta>
		<impl><class path="lime.graphics._OpenGLES2RenderContext.OpenGLES2RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES2RenderContext.hx" private="1" module="lime.graphics.OpenGLES2RenderContext" final="1">
	<fromGL set="method" line="84" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.OpenGLES2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<fromRenderContext set="method" line="89" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.OpenGLES2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
</class></impl>
	</abstract>
	<class path="lime.graphics._OpenGLES2RenderContext.OpenGLES2RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES2RenderContext.hx" private="1" module="lime.graphics.OpenGLES2RenderContext" final="1">
		<fromGL set="method" line="84" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.OpenGLES2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<fromRenderContext set="method" line="89" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.OpenGLES2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
	</class>
	<abstract path="lime.graphics.OpenGLES3RenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES3RenderContext.hx">
		<from>
			<icast><c path="lime._internal.backend.native.NativeOpenGLRenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><c path="lime._internal.backend.native.NativeOpenGLRenderContext"/></this>
		<haxe_doc>The `OpenGLES3RenderContext` allows access to OpenGL ES 3.0 features when OpenGL or
	OpenGL ES is the render context type of the `Window`, and the current context supports
	GLES3 features.

	Using an OpenGL ES context on a desktop platform enables support for cross-platform
	code that should run on both desktop and mobile platforms (when using
	hardware acceleration), though support for OpenGL ES 3.0 features are more limited than
	GLES2.

	Platforms supporting an OpenGL ES 3.0 context are compatible with the Lime
	`WebGLRenderContext` as well as the `WebGL2RenderContext` if you would prefer to write
	WebGL-style code, or support web browsers with the same code. Be aware that not all
	browsers support WebGL 2, so only plain WebGL might be available.

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.opengl.GL`, and can convert to `lime.graphics.OpenGLES2RenderContext`,
	`lime.graphics.WebGL2RenderContext` or `lime.graphics.WebGLRenderContext` directly
	if desired:

	```haxe
	var gles3:OpenGLES3RenderContext = window.context;
	var gles3:OpenGLES3RenderContext = gl;
	var gles3:OpenGLES3RenderContext = GL;

	var gles2:OpenGLES2RenderContext = gles3;
	var webgl2:WebGL2RenderContext = gles3;
	var webgl:WebGLRenderContext = gles3;
	```</haxe_doc>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.graphics._OpenGLES3RenderContext.OpenGLES3RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES3RenderContext.hx" private="1" module="lime.graphics.OpenGLES3RenderContext" final="1">
	<__extensions static="1"><c path="String"/></__extensions>
	<EXTENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EXTENSIONS>
	<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_BUFFER_BIT>
	<POINTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINTS>
	<LINES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINES>
	<LINE_LOOP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_FAN>
	<ZERO public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ZERO>
	<ONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE>
	<SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_COLOR>
	<SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_ALPHA>
	<DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA_SATURATE>
	<FUNC_ADD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_ADD>
	<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION>
	<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_ALPHA>
	<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_REVERSE_SUBTRACT>
	<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_RGB>
	<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_RGB>
	<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_ALPHA>
	<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_ALPHA>
	<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<BLEND_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_COLOR>
	<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER>
	<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER_BINDING>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<STREAM_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_DRAW>
	<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_USAGE>
	<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_VERTEX_ATTRIB>
	<FRONT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT>
	<BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_AND_BACK>
	<CULL_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE>
	<BLEND public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND>
	<DITHER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DITHER>
	<STENCIL_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE>
	<NO_ERROR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_OPERATION>
	<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OUT_OF_MEMORY>
	<CW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CW>
	<CCW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CCW>
	<LINE_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_WIDTH>
	<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE_MODE>
	<FRONT_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_FACE>
	<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_RANGE>
	<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_WRITEMASK>
	<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_FUNC>
	<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FUNC>
	<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FAIL>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_REF>
	<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_WRITEMASK>
	<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_WRITEMASK>
	<VIEWPORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VIEWPORT>
	<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_BOX>
	<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_WRITEMASK>
	<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ALIGNMENT>
	<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ALIGNMENT>
	<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VIEWPORT_DIMS>
	<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SUBPIXEL_BITS>
	<RED_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_BITS>
	<GREEN_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREEN_BITS>
	<BLUE_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLUE_BITS>
	<ALPHA_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA_BITS>
	<DEPTH_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BITS>
	<STENCIL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BITS>
	<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_UNITS>
	<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FACTOR>
	<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D>
	<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_BUFFERS>
	<SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLES>
	<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_INVERT>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<DONT_CARE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DONT_CARE>
	<FASTEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FASTEST>
	<NICEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NICEST>
	<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GENERATE_MIPMAP_HINT>
	<BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT>
	<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT>
	<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA>
	<RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB>
	<RGBA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA>
	<LUMINANCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE_ALPHA>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_6_5>
	<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_SHADER>
	<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_VECTORS>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<SHADER_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ATTACHED_SHADERS>
	<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORMS>
	<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_ATTRIBUTES>
	<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADING_LANGUAGE_VERSION>
	<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_PROGRAM>
	<NEVER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEVER>
	<LESS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LESS>
	<EQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EQUAL>
	<LEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LEQUAL>
	<GREATER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREATER>
	<NOTEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GEQUAL>
	<ALWAYS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALWAYS>
	<KEEP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</KEEP>
	<REPLACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPLACE>
	<INCR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR>
	<DECR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR>
	<INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVERT>
	<INCR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR_WRAP>
	<VENDOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VENDOR>
	<RENDERER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERER>
	<VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERSION>
	<NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST>
	<LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_LINEAR>
	<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D>
	<TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE>
	<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<TEXTURE0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE31>
	<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_TEXTURE>
	<REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIRRORED_REPEAT>
	<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC4>
	<INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC4>
	<BOOL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<VERTEX_PROGRAM_POINT_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_PROGRAM_POINT_SIZE>
	<POINT_SPRITE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINT_SPRITE>
	<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPILE_STATUS>
	<LOW_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_INT>
	<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER>
	<RGBA4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA4>
	<RGB5_A1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB5_A1>
	<RGB565 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX>
	<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL>
	<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<NONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NONE>
	<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_BINDING>
	<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BINDING>
	<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_RENDERBUFFER_SIZE>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_FLIP_Y_WEBGL>
	<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONTEXT_LOST_WEBGL>
	<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BROWSER_DEFAULT_WEBGL>
	<READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_BUFFER>
	<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ROW_LENGTH>
	<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_ROWS>
	<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_PIXELS>
	<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ROW_LENGTH>
	<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_ROWS>
	<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_PIXELS>
	<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_3D>
	<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_IMAGES>
	<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_IMAGE_HEIGHT>
	<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_3D_TEXTURE_SIZE>
	<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_VERTICES>
	<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_INDICES>
	<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_LOD_BIAS>
	<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_COMPONENTS>
	<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ARRAY_TEXTURE_LAYERS>
	<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN_PROGRAM_TEXEL_OFFSET>
	<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_PROGRAM_TEXEL_OFFSET>
	<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_COMPONENTS>
	<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER_DERIVATIVE_HINT>
	<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RASTERIZER_DISCARD>
	<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ARRAY_BINDING>
	<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_OUTPUT_COMPONENTS>
	<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_INPUT_COMPONENTS>
	<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SERVER_WAIT_TIMEOUT>
	<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENT_INDEX>
	<RED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED>
	<RGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8>
	<RGBA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8>
	<RGB10_A2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2>
	<TEXTURE_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_3D>
	<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_R>
	<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_LOD>
	<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LOD>
	<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BASE_LEVEL>
	<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LEVEL>
	<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_MODE>
	<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_FUNC>
	<SRGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB>
	<SRGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8>
	<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8_ALPHA8>
	<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPARE_REF_TO_TEXTURE>
	<RGBA32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32F>
	<RGB32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32F>
	<RGBA16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16F>
	<RGB16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16F>
	<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D_ARRAY>
	<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D_ARRAY>
	<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R11F_G11F_B10F>
	<RGB9_E5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB9_E5>
	<RGBA32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32UI>
	<RGB32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32UI>
	<RGBA16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16UI>
	<RGB16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16UI>
	<RGBA8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8UI>
	<RGB8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8UI>
	<RGBA32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32I>
	<RGB32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32I>
	<RGBA16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16I>
	<RGB16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16I>
	<RGBA8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8I>
	<RGB8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8I>
	<RED_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_INTEGER>
	<RGB_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB_INTEGER>
	<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA_INTEGER>
	<R8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8>
	<RG8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8>
	<R16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16F>
	<R32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32F>
	<RG16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16F>
	<RG32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32F>
	<R8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8I>
	<R8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8UI>
	<R16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16I>
	<R16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16UI>
	<R32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32I>
	<R32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32UI>
	<RG8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8I>
	<RG8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8UI>
	<RG16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16I>
	<RG16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16UI>
	<RG32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32I>
	<RG32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32UI>
	<R8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8_SNORM>
	<RG8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8_SNORM>
	<RGB8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8_SNORM>
	<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8_SNORM>
	<RGB10_A2UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2UI>
	<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_FORMAT>
	<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_LEVELS>
	<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_2_10_10_10_REV>
	<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_10F_11F_11F_REV>
	<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_5_9_9_9_REV>
	<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_32_UNSIGNED_INT_24_8_REV>
	<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_24_8>
	<HALF_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HALF_FLOAT>
	<RG public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG>
	<RG_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG_INTEGER>
	<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_2_10_10_10_REV>
	<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_QUERY>
	<QUERY_RESULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT>
	<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT_AVAILABLE>
	<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED>
	<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED_CONSERVATIVE>
	<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_DRAW_BUFFERS>
	<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER0>
	<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER1>
	<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER2>
	<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER3>
	<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER4>
	<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER5>
	<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER6>
	<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER7>
	<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER8>
	<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER9>
	<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER10>
	<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER11>
	<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER12>
	<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER13>
	<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER14>
	<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER15>
	<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COLOR_ATTACHMENTS>
	<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT1>
	<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT2>
	<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT3>
	<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT4>
	<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT5>
	<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT6>
	<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT7>
	<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT8>
	<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT9>
	<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT10>
	<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT11>
	<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT12>
	<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT13>
	<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT14>
	<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT15>
	<SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_3D>
	<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_SHADOW>
	<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY>
	<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY_SHADOW>
	<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE_SHADOW>
	<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D>
	<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_3D>
	<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_CUBE>
	<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D_ARRAY>
	<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D>
	<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_3D>
	<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_CUBE>
	<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SAMPLES>
	<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_BINDING>
	<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER>
	<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER>
	<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER_BINDING>
	<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER_BINDING>
	<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER>
	<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER>
	<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER_BINDING>
	<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER_BINDING>
	<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x3>
	<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x4>
	<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x2>
	<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x4>
	<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x2>
	<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x3>
	<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC2>
	<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC3>
	<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC4>
	<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_NORMALIZED>
	<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNED_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_INTEGER>
	<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_DIVISOR>
	<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_MODE>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_VARYINGS>
	<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_START>
	<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INTERLEAVED_ATTRIBS>
	<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SEPARATE_ATTRIBS>
	<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER>
	<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK>
	<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PAUSED>
	<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_ACTIVE>
	<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BINDING>
	<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_DEFAULT>
	<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH24_STENCIL8>
	<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER_BINDING>
	<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER>
	<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER>
	<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER_BINDING>
	<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_SAMPLES>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER>
	<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_BINDING>
	<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_START>
	<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_SIZE>
	<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_BLOCKS>
	<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_BLOCKS>
	<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_UNIFORM_BLOCKS>
	<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BUFFER_BINDINGS>
	<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BLOCK_SIZE>
	<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORM_BLOCKS>
	<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_TYPE>
	<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_SIZE>
	<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_INDEX>
	<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_OFFSET>
	<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_ARRAY_STRIDE>
	<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_MATRIX_STRIDE>
	<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_IS_ROW_MAJOR>
	<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_BINDING>
	<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_DATA_SIZE>
	<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OBJECT_TYPE>
	<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_CONDITION>
	<SYNC_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_STATUS>
	<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLAGS>
	<SYNC_FENCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FENCE>
	<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_GPU_COMMANDS_COMPLETE>
	<UNSIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNALED>
	<SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNALED>
	<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALREADY_SIGNALED>
	<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_EXPIRED>
	<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONDITION_SATISFIED>
	<WAIT_FAILED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</WAIT_FAILED>
	<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLUSH_COMMANDS_BIT>
	<COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR>
	<DEPTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH>
	<STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL>
	<MIN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN>
	<MAX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX>
	<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT24>
	<STREAM_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_READ>
	<STREAM_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_COPY>
	<STATIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_READ>
	<STATIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_COPY>
	<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_READ>
	<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_COPY>
	<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT32F>
	<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH32F_STENCIL8>
	<INVALID_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_INDEX>
	<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_IGNORED>
	<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<type public="1" get="accessor" set="null" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta><m n=":impl"/></meta>
	</type>
	<version public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</version>
	<get_EXTENSIONS get="inline" set="null" line="617" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_EXTENSIONS>
	<get_DEPTH_BUFFER_BIT get="inline" set="null" line="622" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BUFFER_BIT>
	<get_STENCIL_BUFFER_BIT get="inline" set="null" line="627" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BUFFER_BIT>
	<get_COLOR_BUFFER_BIT get="inline" set="null" line="632" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_BUFFER_BIT>
	<get_POINTS get="inline" set="null" line="637" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POINTS>
	<get_LINES get="inline" set="null" line="642" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINES>
	<get_LINE_LOOP get="inline" set="null" line="647" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_LOOP>
	<get_LINE_STRIP get="inline" set="null" line="652" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_STRIP>
	<get_TRIANGLES get="inline" set="null" line="657" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLES>
	<get_TRIANGLE_STRIP get="inline" set="null" line="662" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_STRIP>
	<get_TRIANGLE_FAN get="inline" set="null" line="667" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_FAN>
	<get_ZERO get="inline" set="null" line="672" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ZERO>
	<get_ONE get="inline" set="null" line="677" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE>
	<get_SRC_COLOR get="inline" set="null" line="682" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_COLOR>
	<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="687" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_COLOR>
	<get_SRC_ALPHA get="inline" set="null" line="692" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA>
	<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="697" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_ALPHA>
	<get_DST_ALPHA get="inline" set="null" line="702" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_ALPHA>
	<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="707" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_ALPHA>
	<get_DST_COLOR get="inline" set="null" line="712" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_COLOR>
	<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="717" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_COLOR>
	<get_SRC_ALPHA_SATURATE get="inline" set="null" line="722" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA_SATURATE>
	<get_FUNC_ADD get="inline" set="null" line="727" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_ADD>
	<get_BLEND_EQUATION get="inline" set="null" line="732" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION>
	<get_BLEND_EQUATION_RGB get="inline" set="null" line="737" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_RGB>
	<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="742" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_ALPHA>
	<get_FUNC_SUBTRACT get="inline" set="null" line="747" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_SUBTRACT>
	<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="752" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_REVERSE_SUBTRACT>
	<get_BLEND_DST_RGB get="inline" set="null" line="757" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_RGB>
	<get_BLEND_SRC_RGB get="inline" set="null" line="762" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_RGB>
	<get_BLEND_DST_ALPHA get="inline" set="null" line="767" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_ALPHA>
	<get_BLEND_SRC_ALPHA get="inline" set="null" line="772" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_ALPHA>
	<get_CONSTANT_COLOR get="inline" set="null" line="777" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_COLOR>
	<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="782" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_COLOR>
	<get_CONSTANT_ALPHA get="inline" set="null" line="787" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_ALPHA>
	<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="792" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_ALPHA>
	<get_BLEND_COLOR get="inline" set="null" line="797" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_COLOR>
	<get_ARRAY_BUFFER get="inline" set="null" line="802" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER>
	<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="807" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER>
	<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="812" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER_BINDING>
	<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="817" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER_BINDING>
	<get_STREAM_DRAW get="inline" set="null" line="822" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_DRAW>
	<get_STATIC_DRAW get="inline" set="null" line="827" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_DRAW>
	<get_DYNAMIC_DRAW get="inline" set="null" line="832" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_DRAW>
	<get_BUFFER_SIZE get="inline" set="null" line="837" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_SIZE>
	<get_BUFFER_USAGE get="inline" set="null" line="842" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_USAGE>
	<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="847" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_VERTEX_ATTRIB>
	<get_FRONT get="inline" set="null" line="852" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT>
	<get_BACK get="inline" set="null" line="857" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BACK>
	<get_FRONT_AND_BACK get="inline" set="null" line="862" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_AND_BACK>
	<get_CULL_FACE get="inline" set="null" line="867" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE>
	<get_BLEND get="inline" set="null" line="872" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND>
	<get_DITHER get="inline" set="null" line="877" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DITHER>
	<get_STENCIL_TEST get="inline" set="null" line="882" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_TEST>
	<get_DEPTH_TEST get="inline" set="null" line="887" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_TEST>
	<get_SCISSOR_TEST get="inline" set="null" line="892" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_TEST>
	<get_POLYGON_OFFSET_FILL get="inline" set="null" line="897" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FILL>
	<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="902" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_ALPHA_TO_COVERAGE>
	<get_SAMPLE_COVERAGE get="inline" set="null" line="907" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE>
	<get_NO_ERROR get="inline" set="null" line="912" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NO_ERROR>
	<get_INVALID_ENUM get="inline" set="null" line="917" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_ENUM>
	<get_INVALID_VALUE get="inline" set="null" line="922" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_VALUE>
	<get_INVALID_OPERATION get="inline" set="null" line="927" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_OPERATION>
	<get_OUT_OF_MEMORY get="inline" set="null" line="932" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OUT_OF_MEMORY>
	<get_CW get="inline" set="null" line="937" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CW>
	<get_CCW get="inline" set="null" line="942" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CCW>
	<get_LINE_WIDTH get="inline" set="null" line="947" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_WIDTH>
	<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="952" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_POINT_SIZE_RANGE>
	<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="957" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_LINE_WIDTH_RANGE>
	<get_CULL_FACE_MODE get="inline" set="null" line="962" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE_MODE>
	<get_FRONT_FACE get="inline" set="null" line="967" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_FACE>
	<get_DEPTH_RANGE get="inline" set="null" line="972" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_RANGE>
	<get_DEPTH_WRITEMASK get="inline" set="null" line="977" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_WRITEMASK>
	<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="982" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_CLEAR_VALUE>
	<get_DEPTH_FUNC get="inline" set="null" line="987" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_FUNC>
	<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="992" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_CLEAR_VALUE>
	<get_STENCIL_FUNC get="inline" set="null" line="997" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FUNC>
	<get_STENCIL_FAIL get="inline" set="null" line="1002" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FAIL>
	<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1007" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_FAIL>
	<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1012" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_PASS>
	<get_STENCIL_REF get="inline" set="null" line="1017" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_REF>
	<get_STENCIL_VALUE_MASK get="inline" set="null" line="1022" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_VALUE_MASK>
	<get_STENCIL_WRITEMASK get="inline" set="null" line="1027" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_WRITEMASK>
	<get_STENCIL_BACK_FUNC get="inline" set="null" line="1032" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FUNC>
	<get_STENCIL_BACK_FAIL get="inline" set="null" line="1037" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1042" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1047" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_PASS>
	<get_STENCIL_BACK_REF get="inline" set="null" line="1052" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_REF>
	<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1057" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_VALUE_MASK>
	<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1062" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_WRITEMASK>
	<get_VIEWPORT get="inline" set="null" line="1067" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VIEWPORT>
	<get_SCISSOR_BOX get="inline" set="null" line="1072" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_BOX>
	<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1077" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_CLEAR_VALUE>
	<get_COLOR_WRITEMASK get="inline" set="null" line="1082" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_WRITEMASK>
	<get_UNPACK_ALIGNMENT get="inline" set="null" line="1087" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ALIGNMENT>
	<get_PACK_ALIGNMENT get="inline" set="null" line="1092" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ALIGNMENT>
	<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1097" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_SIZE>
	<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1102" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VIEWPORT_DIMS>
	<get_SUBPIXEL_BITS get="inline" set="null" line="1107" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SUBPIXEL_BITS>
	<get_RED_BITS get="inline" set="null" line="1112" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_BITS>
	<get_GREEN_BITS get="inline" set="null" line="1117" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREEN_BITS>
	<get_BLUE_BITS get="inline" set="null" line="1122" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLUE_BITS>
	<get_ALPHA_BITS get="inline" set="null" line="1127" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA_BITS>
	<get_DEPTH_BITS get="inline" set="null" line="1132" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BITS>
	<get_STENCIL_BITS get="inline" set="null" line="1137" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BITS>
	<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1142" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_UNITS>
	<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1147" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FACTOR>
	<get_TEXTURE_BINDING_2D get="inline" set="null" line="1152" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D>
	<get_SAMPLE_BUFFERS get="inline" set="null" line="1157" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_BUFFERS>
	<get_SAMPLES get="inline" set="null" line="1162" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLES>
	<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1167" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_VALUE>
	<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1172" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_INVERT>
	<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1177" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPRESSED_TEXTURE_FORMATS>
	<get_DONT_CARE get="inline" set="null" line="1182" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DONT_CARE>
	<get_FASTEST get="inline" set="null" line="1187" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FASTEST>
	<get_NICEST get="inline" set="null" line="1192" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NICEST>
	<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1197" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GENERATE_MIPMAP_HINT>
	<get_BYTE get="inline" set="null" line="1202" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BYTE>
	<get_UNSIGNED_BYTE get="inline" set="null" line="1207" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_BYTE>
	<get_SHORT get="inline" set="null" line="1212" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHORT>
	<get_UNSIGNED_SHORT get="inline" set="null" line="1217" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT>
	<get_INT get="inline" set="null" line="1222" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT>
	<get_UNSIGNED_INT get="inline" set="null" line="1227" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT>
	<get_FLOAT get="inline" set="null" line="1232" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT>
	<get_DEPTH_COMPONENT get="inline" set="null" line="1237" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT>
	<get_ALPHA get="inline" set="null" line="1242" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA>
	<get_RGB get="inline" set="null" line="1247" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB>
	<get_RGBA get="inline" set="null" line="1252" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA>
	<get_LUMINANCE get="inline" set="null" line="1257" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE>
	<get_LUMINANCE_ALPHA get="inline" set="null" line="1262" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE_ALPHA>
	<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1267" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_4_4_4_4>
	<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1272" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_5_5_1>
	<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1277" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_6_5>
	<get_FRAGMENT_SHADER get="inline" set="null" line="1282" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER>
	<get_VERTEX_SHADER get="inline" set="null" line="1287" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_SHADER>
	<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1292" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_ATTRIBS>
	<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1297" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_VECTORS>
	<get_MAX_VARYING_VECTORS get="inline" set="null" line="1302" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_VECTORS>
	<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1307" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1312" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1317" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_IMAGE_UNITS>
	<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1322" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_VECTORS>
	<get_SHADER_TYPE get="inline" set="null" line="1327" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADER_TYPE>
	<get_DELETE_STATUS get="inline" set="null" line="1332" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DELETE_STATUS>
	<get_LINK_STATUS get="inline" set="null" line="1337" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINK_STATUS>
	<get_VALIDATE_STATUS get="inline" set="null" line="1342" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VALIDATE_STATUS>
	<get_ATTACHED_SHADERS get="inline" set="null" line="1347" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ATTACHED_SHADERS>
	<get_ACTIVE_UNIFORMS get="inline" set="null" line="1352" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORMS>
	<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1357" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_ATTRIBUTES>
	<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1362" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADING_LANGUAGE_VERSION>
	<get_CURRENT_PROGRAM get="inline" set="null" line="1367" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_PROGRAM>
	<get_NEVER get="inline" set="null" line="1372" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEVER>
	<get_LESS get="inline" set="null" line="1377" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LESS>
	<get_EQUAL get="inline" set="null" line="1382" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_EQUAL>
	<get_LEQUAL get="inline" set="null" line="1387" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LEQUAL>
	<get_GREATER get="inline" set="null" line="1392" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREATER>
	<get_NOTEQUAL get="inline" set="null" line="1397" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NOTEQUAL>
	<get_GEQUAL get="inline" set="null" line="1402" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GEQUAL>
	<get_ALWAYS get="inline" set="null" line="1407" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALWAYS>
	<get_KEEP get="inline" set="null" line="1412" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_KEEP>
	<get_REPLACE get="inline" set="null" line="1417" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPLACE>
	<get_INCR get="inline" set="null" line="1422" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR>
	<get_DECR get="inline" set="null" line="1427" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR>
	<get_INVERT get="inline" set="null" line="1432" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVERT>
	<get_INCR_WRAP get="inline" set="null" line="1437" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR_WRAP>
	<get_DECR_WRAP get="inline" set="null" line="1442" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR_WRAP>
	<get_VENDOR get="inline" set="null" line="1447" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VENDOR>
	<get_RENDERER get="inline" set="null" line="1452" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERER>
	<get_VERSION get="inline" set="null" line="1457" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERSION>
	<get_NEAREST get="inline" set="null" line="1462" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST>
	<get_LINEAR get="inline" set="null" line="1467" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR>
	<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1472" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_NEAREST>
	<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1477" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_NEAREST>
	<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1482" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_LINEAR>
	<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1487" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_LINEAR>
	<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1492" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAG_FILTER>
	<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1497" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_FILTER>
	<get_TEXTURE_WRAP_S get="inline" set="null" line="1502" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_S>
	<get_TEXTURE_WRAP_T get="inline" set="null" line="1507" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_T>
	<get_TEXTURE_2D get="inline" set="null" line="1512" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D>
	<get_TEXTURE get="inline" set="null" line="1517" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE>
	<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1522" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP>
	<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1527" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_CUBE_MAP>
	<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1532" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_X>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1537" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1542" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1547" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1552" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1557" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1562" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CUBE_MAP_TEXTURE_SIZE>
	<get_TEXTURE0 get="inline" set="null" line="1567" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE0>
	<get_TEXTURE1 get="inline" set="null" line="1572" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE1>
	<get_TEXTURE2 get="inline" set="null" line="1577" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE2>
	<get_TEXTURE3 get="inline" set="null" line="1582" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE3>
	<get_TEXTURE4 get="inline" set="null" line="1587" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE4>
	<get_TEXTURE5 get="inline" set="null" line="1592" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE5>
	<get_TEXTURE6 get="inline" set="null" line="1597" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE6>
	<get_TEXTURE7 get="inline" set="null" line="1602" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE7>
	<get_TEXTURE8 get="inline" set="null" line="1607" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE8>
	<get_TEXTURE9 get="inline" set="null" line="1612" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE9>
	<get_TEXTURE10 get="inline" set="null" line="1617" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE10>
	<get_TEXTURE11 get="inline" set="null" line="1622" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE11>
	<get_TEXTURE12 get="inline" set="null" line="1627" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE12>
	<get_TEXTURE13 get="inline" set="null" line="1632" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE13>
	<get_TEXTURE14 get="inline" set="null" line="1637" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE14>
	<get_TEXTURE15 get="inline" set="null" line="1642" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE15>
	<get_TEXTURE16 get="inline" set="null" line="1647" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE16>
	<get_TEXTURE17 get="inline" set="null" line="1652" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE17>
	<get_TEXTURE18 get="inline" set="null" line="1657" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE18>
	<get_TEXTURE19 get="inline" set="null" line="1662" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE19>
	<get_TEXTURE20 get="inline" set="null" line="1667" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE20>
	<get_TEXTURE21 get="inline" set="null" line="1672" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE21>
	<get_TEXTURE22 get="inline" set="null" line="1677" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE22>
	<get_TEXTURE23 get="inline" set="null" line="1682" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE23>
	<get_TEXTURE24 get="inline" set="null" line="1687" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE24>
	<get_TEXTURE25 get="inline" set="null" line="1692" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE25>
	<get_TEXTURE26 get="inline" set="null" line="1697" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE26>
	<get_TEXTURE27 get="inline" set="null" line="1702" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE27>
	<get_TEXTURE28 get="inline" set="null" line="1707" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE28>
	<get_TEXTURE29 get="inline" set="null" line="1712" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE29>
	<get_TEXTURE30 get="inline" set="null" line="1717" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE30>
	<get_TEXTURE31 get="inline" set="null" line="1722" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE31>
	<get_ACTIVE_TEXTURE get="inline" set="null" line="1727" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_TEXTURE>
	<get_REPEAT get="inline" set="null" line="1732" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPEAT>
	<get_CLAMP_TO_EDGE get="inline" set="null" line="1737" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CLAMP_TO_EDGE>
	<get_MIRRORED_REPEAT get="inline" set="null" line="1742" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIRRORED_REPEAT>
	<get_FLOAT_VEC2 get="inline" set="null" line="1747" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC2>
	<get_FLOAT_VEC3 get="inline" set="null" line="1752" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC3>
	<get_FLOAT_VEC4 get="inline" set="null" line="1757" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC4>
	<get_INT_VEC2 get="inline" set="null" line="1762" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC2>
	<get_INT_VEC3 get="inline" set="null" line="1767" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC3>
	<get_INT_VEC4 get="inline" set="null" line="1772" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC4>
	<get_BOOL get="inline" set="null" line="1777" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL>
	<get_BOOL_VEC2 get="inline" set="null" line="1782" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC2>
	<get_BOOL_VEC3 get="inline" set="null" line="1787" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC3>
	<get_BOOL_VEC4 get="inline" set="null" line="1792" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC4>
	<get_FLOAT_MAT2 get="inline" set="null" line="1797" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2>
	<get_FLOAT_MAT3 get="inline" set="null" line="1802" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3>
	<get_FLOAT_MAT4 get="inline" set="null" line="1807" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4>
	<get_SAMPLER_2D get="inline" set="null" line="1812" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D>
	<get_SAMPLER_CUBE get="inline" set="null" line="1817" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE>
	<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="1822" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_ENABLED>
	<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="1827" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_SIZE>
	<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="1832" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_STRIDE>
	<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="1837" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_TYPE>
	<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="1842" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="1847" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_POINTER>
	<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="1852" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<get_VERTEX_PROGRAM_POINT_SIZE get="inline" set="null" line="1857" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_PROGRAM_POINT_SIZE>
	<get_POINT_SPRITE get="inline" set="null" line="1861" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POINT_SPRITE>
	<get_COMPILE_STATUS get="inline" set="null" line="1865" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPILE_STATUS>
	<get_LOW_FLOAT get="inline" set="null" line="1870" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_FLOAT>
	<get_MEDIUM_FLOAT get="inline" set="null" line="1875" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_FLOAT>
	<get_HIGH_FLOAT get="inline" set="null" line="1880" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_FLOAT>
	<get_LOW_INT get="inline" set="null" line="1885" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_INT>
	<get_MEDIUM_INT get="inline" set="null" line="1890" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_INT>
	<get_HIGH_INT get="inline" set="null" line="1895" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_INT>
	<get_FRAMEBUFFER get="inline" set="null" line="1900" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER>
	<get_RENDERBUFFER get="inline" set="null" line="1905" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER>
	<get_RGBA4 get="inline" set="null" line="1910" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA4>
	<get_RGB5_A1 get="inline" set="null" line="1915" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB5_A1>
	<get_RGB565 get="inline" set="null" line="1920" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB565>
	<get_DEPTH_COMPONENT16 get="inline" set="null" line="1925" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT16>
	<get_STENCIL_INDEX get="inline" set="null" line="1930" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX>
	<get_STENCIL_INDEX8 get="inline" set="null" line="1935" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX8>
	<get_DEPTH_STENCIL get="inline" set="null" line="1940" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL>
	<get_RENDERBUFFER_WIDTH get="inline" set="null" line="1945" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_WIDTH>
	<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="1950" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_HEIGHT>
	<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="1955" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_INTERNAL_FORMAT>
	<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="1960" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_RED_SIZE>
	<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="1965" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_GREEN_SIZE>
	<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="1970" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BLUE_SIZE>
	<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="1975" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_ALPHA_SIZE>
	<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="1980" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_DEPTH_SIZE>
	<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="1985" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_STENCIL_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="1990" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="1995" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="2000" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="2005" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<get_COLOR_ATTACHMENT0 get="inline" set="null" line="2010" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT0>
	<get_DEPTH_ATTACHMENT get="inline" set="null" line="2015" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_ATTACHMENT>
	<get_STENCIL_ATTACHMENT get="inline" set="null" line="2020" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_ATTACHMENT>
	<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="2025" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL_ATTACHMENT>
	<get_NONE get="inline" set="null" line="2030" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NONE>
	<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="2035" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_COMPLETE>
	<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="2040" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="2045" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="2050" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="2055" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_UNSUPPORTED>
	<get_FRAMEBUFFER_BINDING get="inline" set="null" line="2060" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_BINDING get="inline" set="null" line="2065" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BINDING>
	<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="2070" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_RENDERBUFFER_SIZE>
	<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="2075" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_FRAMEBUFFER_OPERATION>
	<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="2080" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_FLIP_Y_WEBGL>
	<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="2085" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="2090" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONTEXT_LOST_WEBGL>
	<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="2095" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="2100" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BROWSER_DEFAULT_WEBGL>
	<get_type get="inline" set="null" line="2105" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.RenderContextType"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_type>
	<get_version get="inline" set="null" line="2110" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_version>
	<get_READ_BUFFER get="inline" set="null" line="2115" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_BUFFER>
	<get_UNPACK_ROW_LENGTH get="inline" set="null" line="2120" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ROW_LENGTH>
	<get_UNPACK_SKIP_ROWS get="inline" set="null" line="2125" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_ROWS>
	<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="2130" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_PIXELS>
	<get_PACK_ROW_LENGTH get="inline" set="null" line="2135" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ROW_LENGTH>
	<get_PACK_SKIP_ROWS get="inline" set="null" line="2140" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_ROWS>
	<get_PACK_SKIP_PIXELS get="inline" set="null" line="2145" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_PIXELS>
	<get_TEXTURE_BINDING_3D get="inline" set="null" line="2150" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_3D>
	<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="2155" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_IMAGES>
	<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="2160" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_IMAGE_HEIGHT>
	<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="2165" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_3D_TEXTURE_SIZE>
	<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="2170" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_VERTICES>
	<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="2175" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_INDICES>
	<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="2180" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_LOD_BIAS>
	<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="2185" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="2190" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="2195" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ARRAY_TEXTURE_LAYERS>
	<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2200" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN_PROGRAM_TEXEL_OFFSET>
	<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2205" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_PROGRAM_TEXEL_OFFSET>
	<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="2210" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_COMPONENTS>
	<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="2215" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
	<get_RASTERIZER_DISCARD get="inline" set="null" line="2220" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RASTERIZER_DISCARD>
	<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="2225" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ARRAY_BINDING>
	<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="2230" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_OUTPUT_COMPONENTS>
	<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="2235" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_INPUT_COMPONENTS>
	<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="2240" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SERVER_WAIT_TIMEOUT>
	<get_MAX_ELEMENT_INDEX get="inline" set="null" line="2245" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENT_INDEX>
	<get_RED get="inline" set="null" line="2250" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED>
	<get_RGB8 get="inline" set="null" line="2255" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8>
	<get_RGBA8 get="inline" set="null" line="2260" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8>
	<get_RGB10_A2 get="inline" set="null" line="2265" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2>
	<get_TEXTURE_3D get="inline" set="null" line="2270" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_3D>
	<get_TEXTURE_WRAP_R get="inline" set="null" line="2275" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_R>
	<get_TEXTURE_MIN_LOD get="inline" set="null" line="2280" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_LOD>
	<get_TEXTURE_MAX_LOD get="inline" set="null" line="2285" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LOD>
	<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="2290" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BASE_LEVEL>
	<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="2295" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LEVEL>
	<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="2300" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_MODE>
	<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="2305" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_FUNC>
	<get_SRGB get="inline" set="null" line="2310" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB>
	<get_SRGB8 get="inline" set="null" line="2315" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8>
	<get_SRGB8_ALPHA8 get="inline" set="null" line="2320" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8_ALPHA8>
	<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="2325" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPARE_REF_TO_TEXTURE>
	<get_RGBA32F get="inline" set="null" line="2330" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32F>
	<get_RGB32F get="inline" set="null" line="2335" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32F>
	<get_RGBA16F get="inline" set="null" line="2340" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16F>
	<get_RGB16F get="inline" set="null" line="2345" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16F>
	<get_TEXTURE_2D_ARRAY get="inline" set="null" line="2350" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D_ARRAY>
	<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="2355" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D_ARRAY>
	<get_R11F_G11F_B10F get="inline" set="null" line="2360" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R11F_G11F_B10F>
	<get_RGB9_E5 get="inline" set="null" line="2365" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB9_E5>
	<get_RGBA32UI get="inline" set="null" line="2370" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32UI>
	<get_RGB32UI get="inline" set="null" line="2375" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32UI>
	<get_RGBA16UI get="inline" set="null" line="2380" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16UI>
	<get_RGB16UI get="inline" set="null" line="2385" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16UI>
	<get_RGBA8UI get="inline" set="null" line="2390" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8UI>
	<get_RGB8UI get="inline" set="null" line="2395" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8UI>
	<get_RGBA32I get="inline" set="null" line="2400" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32I>
	<get_RGB32I get="inline" set="null" line="2405" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32I>
	<get_RGBA16I get="inline" set="null" line="2410" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16I>
	<get_RGB16I get="inline" set="null" line="2415" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16I>
	<get_RGBA8I get="inline" set="null" line="2420" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8I>
	<get_RGB8I get="inline" set="null" line="2425" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8I>
	<get_RED_INTEGER get="inline" set="null" line="2430" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_INTEGER>
	<get_RGB_INTEGER get="inline" set="null" line="2435" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB_INTEGER>
	<get_RGBA_INTEGER get="inline" set="null" line="2440" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA_INTEGER>
	<get_R8 get="inline" set="null" line="2445" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8>
	<get_RG8 get="inline" set="null" line="2450" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8>
	<get_R16F get="inline" set="null" line="2455" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16F>
	<get_R32F get="inline" set="null" line="2460" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32F>
	<get_RG16F get="inline" set="null" line="2465" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16F>
	<get_RG32F get="inline" set="null" line="2470" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32F>
	<get_R8I get="inline" set="null" line="2475" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8I>
	<get_R8UI get="inline" set="null" line="2480" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8UI>
	<get_R16I get="inline" set="null" line="2485" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16I>
	<get_R16UI get="inline" set="null" line="2490" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16UI>
	<get_R32I get="inline" set="null" line="2495" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32I>
	<get_R32UI get="inline" set="null" line="2500" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32UI>
	<get_RG8I get="inline" set="null" line="2505" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8I>
	<get_RG8UI get="inline" set="null" line="2510" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8UI>
	<get_RG16I get="inline" set="null" line="2515" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16I>
	<get_RG16UI get="inline" set="null" line="2520" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16UI>
	<get_RG32I get="inline" set="null" line="2525" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32I>
	<get_RG32UI get="inline" set="null" line="2530" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32UI>
	<get_R8_SNORM get="inline" set="null" line="2535" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8_SNORM>
	<get_RG8_SNORM get="inline" set="null" line="2540" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8_SNORM>
	<get_RGB8_SNORM get="inline" set="null" line="2545" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8_SNORM>
	<get_RGBA8_SNORM get="inline" set="null" line="2550" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8_SNORM>
	<get_RGB10_A2UI get="inline" set="null" line="2555" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2UI>
	<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="2560" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_FORMAT>
	<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="2565" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_LEVELS>
	<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="2570" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_2_10_10_10_REV>
	<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="2575" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_10F_11F_11F_REV>
	<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="2580" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_5_9_9_9_REV>
	<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="2585" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
	<get_UNSIGNED_INT_24_8 get="inline" set="null" line="2590" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_24_8>
	<get_HALF_FLOAT get="inline" set="null" line="2595" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HALF_FLOAT>
	<get_RG get="inline" set="null" line="2600" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG>
	<get_RG_INTEGER get="inline" set="null" line="2605" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG_INTEGER>
	<get_INT_2_10_10_10_REV get="inline" set="null" line="2610" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_2_10_10_10_REV>
	<get_CURRENT_QUERY get="inline" set="null" line="2615" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_QUERY>
	<get_QUERY_RESULT get="inline" set="null" line="2620" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT>
	<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="2625" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT_AVAILABLE>
	<get_ANY_SAMPLES_PASSED get="inline" set="null" line="2630" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED>
	<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="2635" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
	<get_MAX_DRAW_BUFFERS get="inline" set="null" line="2640" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_DRAW_BUFFERS>
	<get_DRAW_BUFFER0 get="inline" set="null" line="2645" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER0>
	<get_DRAW_BUFFER1 get="inline" set="null" line="2650" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER1>
	<get_DRAW_BUFFER2 get="inline" set="null" line="2655" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER2>
	<get_DRAW_BUFFER3 get="inline" set="null" line="2660" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER3>
	<get_DRAW_BUFFER4 get="inline" set="null" line="2665" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER4>
	<get_DRAW_BUFFER5 get="inline" set="null" line="2670" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER5>
	<get_DRAW_BUFFER6 get="inline" set="null" line="2675" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER6>
	<get_DRAW_BUFFER7 get="inline" set="null" line="2680" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER7>
	<get_DRAW_BUFFER8 get="inline" set="null" line="2685" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER8>
	<get_DRAW_BUFFER9 get="inline" set="null" line="2690" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER9>
	<get_DRAW_BUFFER10 get="inline" set="null" line="2695" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER10>
	<get_DRAW_BUFFER11 get="inline" set="null" line="2700" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER11>
	<get_DRAW_BUFFER12 get="inline" set="null" line="2705" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER12>
	<get_DRAW_BUFFER13 get="inline" set="null" line="2710" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER13>
	<get_DRAW_BUFFER14 get="inline" set="null" line="2715" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER14>
	<get_DRAW_BUFFER15 get="inline" set="null" line="2720" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER15>
	<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="2725" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COLOR_ATTACHMENTS>
	<get_COLOR_ATTACHMENT1 get="inline" set="null" line="2730" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT1>
	<get_COLOR_ATTACHMENT2 get="inline" set="null" line="2735" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT2>
	<get_COLOR_ATTACHMENT3 get="inline" set="null" line="2740" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT3>
	<get_COLOR_ATTACHMENT4 get="inline" set="null" line="2745" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT4>
	<get_COLOR_ATTACHMENT5 get="inline" set="null" line="2750" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT5>
	<get_COLOR_ATTACHMENT6 get="inline" set="null" line="2755" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT6>
	<get_COLOR_ATTACHMENT7 get="inline" set="null" line="2760" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT7>
	<get_COLOR_ATTACHMENT8 get="inline" set="null" line="2765" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT8>
	<get_COLOR_ATTACHMENT9 get="inline" set="null" line="2770" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT9>
	<get_COLOR_ATTACHMENT10 get="inline" set="null" line="2775" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT10>
	<get_COLOR_ATTACHMENT11 get="inline" set="null" line="2780" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT11>
	<get_COLOR_ATTACHMENT12 get="inline" set="null" line="2785" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT12>
	<get_COLOR_ATTACHMENT13 get="inline" set="null" line="2790" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT13>
	<get_COLOR_ATTACHMENT14 get="inline" set="null" line="2795" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT14>
	<get_COLOR_ATTACHMENT15 get="inline" set="null" line="2800" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT15>
	<get_SAMPLER_3D get="inline" set="null" line="2805" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_3D>
	<get_SAMPLER_2D_SHADOW get="inline" set="null" line="2810" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_SHADOW>
	<get_SAMPLER_2D_ARRAY get="inline" set="null" line="2815" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY>
	<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="2820" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY_SHADOW>
	<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="2825" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE_SHADOW>
	<get_INT_SAMPLER_2D get="inline" set="null" line="2830" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D>
	<get_INT_SAMPLER_3D get="inline" set="null" line="2835" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_3D>
	<get_INT_SAMPLER_CUBE get="inline" set="null" line="2840" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_CUBE>
	<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="2845" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D_ARRAY>
	<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="2850" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D>
	<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="2855" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_3D>
	<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="2860" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_CUBE>
	<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="2865" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<get_MAX_SAMPLES get="inline" set="null" line="2870" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SAMPLES>
	<get_SAMPLER_BINDING get="inline" set="null" line="2875" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_BINDING>
	<get_PIXEL_PACK_BUFFER get="inline" set="null" line="2880" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER>
	<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="2885" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER>
	<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="2890" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER_BINDING>
	<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="2895" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER_BINDING>
	<get_COPY_READ_BUFFER get="inline" set="null" line="2900" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER>
	<get_COPY_WRITE_BUFFER get="inline" set="null" line="2905" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER>
	<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="2910" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER_BINDING>
	<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="2915" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER_BINDING>
	<get_FLOAT_MAT2x3 get="inline" set="null" line="2920" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x3>
	<get_FLOAT_MAT2x4 get="inline" set="null" line="2925" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x4>
	<get_FLOAT_MAT3x2 get="inline" set="null" line="2930" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x2>
	<get_FLOAT_MAT3x4 get="inline" set="null" line="2935" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x4>
	<get_FLOAT_MAT4x2 get="inline" set="null" line="2940" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x2>
	<get_FLOAT_MAT4x3 get="inline" set="null" line="2945" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x3>
	<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="2950" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC2>
	<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="2955" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC3>
	<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="2960" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC4>
	<get_UNSIGNED_NORMALIZED get="inline" set="null" line="2965" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_NORMALIZED>
	<get_SIGNED_NORMALIZED get="inline" set="null" line="2970" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNED_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="2975" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_INTEGER>
	<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="2980" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
	<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="2985" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="2990" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="2995" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_VARYINGS>
	<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="3000" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_START>
	<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="3005" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="3010" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="3015" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="3020" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="3025" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INTERLEAVED_ATTRIBS>
	<get_SEPARATE_ATTRIBS get="inline" set="null" line="3030" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SEPARATE_ATTRIBS>
	<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="3035" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER>
	<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="3040" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<get_TRANSFORM_FEEDBACK get="inline" set="null" line="3045" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK>
	<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="3050" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PAUSED>
	<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="3055" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_ACTIVE>
	<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="3060" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BINDING>
	<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="3065" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="3070" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="3075" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="3080" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="3085" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="3090" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="3095" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="3100" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="3105" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_DEFAULT>
	<get_DEPTH24_STENCIL8 get="inline" set="null" line="3110" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH24_STENCIL8>
	<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="3115" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER_BINDING>
	<get_READ_FRAMEBUFFER get="inline" set="null" line="3120" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER>
	<get_DRAW_FRAMEBUFFER get="inline" set="null" line="3125" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER>
	<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="3130" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="3135" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_SAMPLES>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="3140" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="3145" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<get_UNIFORM_BUFFER get="inline" set="null" line="3150" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER>
	<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="3155" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_BINDING>
	<get_UNIFORM_BUFFER_START get="inline" set="null" line="3160" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_START>
	<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="3165" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_SIZE>
	<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="3170" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_BLOCKS>
	<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="3175" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
	<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="3180" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_UNIFORM_BLOCKS>
	<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="3185" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BUFFER_BINDINGS>
	<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="3190" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BLOCK_SIZE>
	<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="3195" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="3200" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="3205" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="3210" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORM_BLOCKS>
	<get_UNIFORM_TYPE get="inline" set="null" line="3215" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_TYPE>
	<get_UNIFORM_SIZE get="inline" set="null" line="3220" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_SIZE>
	<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="3225" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_INDEX>
	<get_UNIFORM_OFFSET get="inline" set="null" line="3230" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_OFFSET>
	<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="3235" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_ARRAY_STRIDE>
	<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="3240" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_MATRIX_STRIDE>
	<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="3245" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_IS_ROW_MAJOR>
	<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="3250" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_BINDING>
	<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="3255" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_DATA_SIZE>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="3260" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="3265" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="3270" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="3275" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<get_OBJECT_TYPE get="inline" set="null" line="3280" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OBJECT_TYPE>
	<get_SYNC_CONDITION get="inline" set="null" line="3285" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_CONDITION>
	<get_SYNC_STATUS get="inline" set="null" line="3290" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_STATUS>
	<get_SYNC_FLAGS get="inline" set="null" line="3295" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLAGS>
	<get_SYNC_FENCE get="inline" set="null" line="3300" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FENCE>
	<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="3305" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_GPU_COMMANDS_COMPLETE>
	<get_UNSIGNALED get="inline" set="null" line="3310" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNALED>
	<get_SIGNALED get="inline" set="null" line="3315" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNALED>
	<get_ALREADY_SIGNALED get="inline" set="null" line="3320" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALREADY_SIGNALED>
	<get_TIMEOUT_EXPIRED get="inline" set="null" line="3325" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_EXPIRED>
	<get_CONDITION_SATISFIED get="inline" set="null" line="3330" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONDITION_SATISFIED>
	<get_WAIT_FAILED get="inline" set="null" line="3335" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_WAIT_FAILED>
	<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="3340" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLUSH_COMMANDS_BIT>
	<get_COLOR get="inline" set="null" line="3345" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR>
	<get_DEPTH get="inline" set="null" line="3350" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH>
	<get_STENCIL get="inline" set="null" line="3355" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL>
	<get_MIN get="inline" set="null" line="3360" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN>
	<get_MAX get="inline" set="null" line="3365" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX>
	<get_DEPTH_COMPONENT24 get="inline" set="null" line="3370" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT24>
	<get_STREAM_READ get="inline" set="null" line="3375" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_READ>
	<get_STREAM_COPY get="inline" set="null" line="3380" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_COPY>
	<get_STATIC_READ get="inline" set="null" line="3385" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_READ>
	<get_STATIC_COPY get="inline" set="null" line="3390" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_COPY>
	<get_DYNAMIC_READ get="inline" set="null" line="3395" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_READ>
	<get_DYNAMIC_COPY get="inline" set="null" line="3400" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_COPY>
	<get_DEPTH_COMPONENT32F get="inline" set="null" line="3405" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT32F>
	<get_DEPTH32F_STENCIL8 get="inline" set="null" line="3410" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH32F_STENCIL8>
	<get_INVALID_INDEX get="inline" set="null" line="3415" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_INDEX>
	<get_TIMEOUT_IGNORED get="inline" set="null" line="3420" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_IGNORED>
	<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="3425" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<activeTexture public="1" get="inline" set="null" line="3430" static="1">
		<f a="this:texture">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="3435" static="1">
		<f a="this:program:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<beginQuery public="1" get="inline" set="null" line="3440" static="1">
		<f a="this:target:query">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginQuery>
	<beginTransformFeedback public="1" get="inline" set="null" line="3445" static="1">
		<f a="this:primitiveNode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginTransformFeedback>
	<bindAttribLocation public="1" get="inline" set="null" line="3450" static="1">
		<f a="this:program:index:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="3455" static="1">
		<f a="this:target:buffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindBufferBase public="1" get="inline" set="null" line="3460" static="1">
		<f a="this:target:index:buffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferBase>
	<bindBufferRange public="1" get="inline" set="null" line="3465" static="1">
		<f a="this:target:index:buffer:offset:size">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferRange>
	<bindFramebuffer public="1" get="inline" set="null" line="3470" static="1">
		<f a="this:target:framebuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="3475" static="1">
		<f a="this:target:renderbuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindSampler public="1" get="inline" set="null" line="3480" static="1">
		<f a="this:unit:sampler">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindSampler>
	<bindTexture public="1" get="inline" set="null" line="3485" static="1">
		<f a="this:target:texture">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<bindTransformFeedback public="1" get="inline" set="null" line="3490" static="1">
		<f a="this:target:transformFeedback">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTransformFeedback>
	<bindVertexArray public="1" get="inline" set="null" line="3495" static="1">
		<f a="this:vertexArray">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindVertexArray>
	<blendColor public="1" get="inline" set="null" line="3500" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="3505" static="1">
		<f a="this:mode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="3510" static="1">
		<f a="this:modeRGB:modeAlpha">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="3515" static="1">
		<f a="this:sfactor:dfactor">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="3520" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<blitFramebuffer public="1" get="inline" set="null" line="3525" static="1">
		<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blitFramebuffer>
	<bufferData public="1" get="inline" set="null" line="3530" static="1">
		<f a="this:target:size:data:usage">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="3535" static="1">
		<f a="this:target:offset:size:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="3540" static="1">
		<f a="this:target">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="3545" static="1">
		<f a="this:mask">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearBufferfi public="1" get="inline" set="null" line="3550" static="1">
		<f a="this:buffer:drawbuffer:depth:stencil">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfi>
	<clearBufferfv public="1" get="inline" set="null" line="3555" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfv>
	<clearBufferiv public="1" get="inline" set="null" line="3560" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferiv>
	<clearBufferuiv public="1" get="inline" set="null" line="3565" static="1">
		<f a="this:buffer:drawbuffer:value">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferuiv>
	<clearColor public="1" get="inline" set="null" line="3570" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepthf public="1" get="inline" set="null" line="3575" static="1">
		<f a="this:depth">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepthf>
	<clearStencil public="1" get="inline" set="null" line="3580" static="1">
		<f a="this:s">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<clientWaitSync public="1" get="inline" set="null" line="3585" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clientWaitSync>
	<colorMask public="1" get="inline" set="null" line="3590" static="1">
		<f a="this:red:green:blue:alpha">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="3595" static="1">
		<f a="this:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" get="inline" set="null" line="3600" static="1">
		<f a="this:target:level:internalformat:width:height:border:imageSize:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexImage3D public="1" get="inline" set="null" line="3605" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:imageSize:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage3D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="3611" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:imageSize:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<compressedTexSubImage3D public="1" get="inline" set="null" line="3617" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage3D>
	<copyBufferSubData public="1" get="inline" set="null" line="3623" static="1">
		<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyBufferSubData>
	<copyTexImage2D public="1" get="inline" set="null" line="3628" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="3633" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<copyTexSubImage3D public="1" get="inline" set="null" line="3638" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage3D>
	<createBuffer public="1" get="inline" set="null" line="3643" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="3648" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="3653" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createQuery public="1" get="inline" set="null" line="3658" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createQuery>
	<createRenderbuffer public="1" get="inline" set="null" line="3663" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createSampler public="1" get="inline" set="null" line="3668" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createSampler>
	<createShader public="1" get="inline" set="null" line="3673" static="1">
		<f a="this:type">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.graphics.opengl.GLShader"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="3678" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<createTransformFeedback public="1" get="inline" set="null" line="3683" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTransformFeedback>
	<createVertexArray public="1" get="inline" set="null" line="3688" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createVertexArray>
	<cullFace public="1" get="inline" set="null" line="3693" static="1">
		<f a="this:mode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="3698" static="1">
		<f a="this:buffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="3703" static="1">
		<f a="this:framebuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="3708" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteQuery public="1" get="inline" set="null" line="3713" static="1">
		<f a="this:query">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteQuery>
	<deleteRenderbuffer public="1" get="inline" set="null" line="3718" static="1">
		<f a="this:renderbuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteSampler public="1" get="inline" set="null" line="3723" static="1">
		<f a="this:sampler">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSampler>
	<deleteShader public="1" get="inline" set="null" line="3728" static="1">
		<f a="this:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteSync public="1" get="inline" set="null" line="3733" static="1">
		<f a="this:sync">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSync>
	<deleteTexture public="1" get="inline" set="null" line="3738" static="1">
		<f a="this:texture">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<deleteTransformFeedback public="1" get="inline" set="null" line="3743" static="1">
		<f a="this:transformFeedback">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTransformFeedback>
	<deleteVertexArray public="1" get="inline" set="null" line="3748" static="1">
		<f a="this:vertexArray">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteVertexArray>
	<depthFunc public="1" get="inline" set="null" line="3753" static="1">
		<f a="this:func">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="3758" static="1">
		<f a="this:flag">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRangef public="1" get="inline" set="null" line="3763" static="1">
		<f a="this:zNear:zFar">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRangef>
	<detachShader public="1" get="inline" set="null" line="3768" static="1">
		<f a="this:program:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="3773" static="1">
		<f a="this:cap">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="3778" static="1">
		<f a="this:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="3783" static="1">
		<f a="this:mode:first:count">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawArraysInstanced public="1" get="inline" set="null" line="3788" static="1">
		<f a="this:mode:first:count:instanceCount">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArraysInstanced>
	<drawBuffers public="1" get="inline" set="null" line="3793" static="1">
		<f a="this:buffers">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawBuffers>
	<drawElements public="1" get="inline" set="null" line="3798" static="1">
		<f a="this:mode:count:type:offset">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<drawElementsInstanced public="1" get="inline" set="null" line="3803" static="1">
		<f a="this:mode:count:type:offset:instanceCount">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElementsInstanced>
	<drawRangeElements public="1" get="inline" set="null" line="3808" static="1">
		<f a="this:mode:start:end:count:type:offset">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawRangeElements>
	<enable public="1" get="inline" set="null" line="3813" static="1">
		<f a="this:cap">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="3818" static="1">
		<f a="this:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<endQuery public="1" get="inline" set="null" line="3823" static="1">
		<f a="this:target">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endQuery>
	<endTransformFeedback public="1" get="inline" set="null" line="3828" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endTransformFeedback>
	<fenceSync public="1" get="inline" set="null" line="3833" static="1">
		<f a="this:condition:flags">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSync"/>
		</f>
		<meta><m n=":impl"/></meta>
	</fenceSync>
	<finish public="1" get="inline" set="null" line="3838" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="3843" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="3848" static="1">
		<f a="this:target:attachment:renderbuffertarget:renderbuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="3853" static="1">
		<f a="this:target:attachment:textarget:texture:level">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<framebufferTextureLayer public="1" get="inline" set="null" line="3858" static="1">
		<f a="this:target:attachment:texture:level:layer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTextureLayer>
	<frontFace public="1" get="inline" set="null" line="3863" static="1">
		<f a="this:mode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<genBuffers public="1" set="method" line="3868" static="1">
		<f a="this:n:?buffers" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ buffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genBuffers>
	<generateMipmap public="1" get="inline" set="null" line="3880" static="1">
		<f a="this:target">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<genFramebuffers public="1" set="method" line="3885" static="1">
		<f a="this:n:?framebuffers" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ framebuffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genFramebuffers>
	<genQueries public="1" set="method" line="3897" static="1">
		<f a="this:n:?queries" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ queries : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genQueries>
	<genRenderbuffers public="1" set="method" line="3909" static="1">
		<f a="this:n:?renderbuffers" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ renderbuffers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genRenderbuffers>
	<genSamplers public="1" set="method" line="3921" static="1">
		<f a="this:n:?samplers" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ samplers : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genSamplers>
	<genTextures public="1" set="method" line="3933" static="1">
		<f a="this:n:?textures" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ textures : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genTextures>
	<genTransformFeedbacks public="1" set="method" line="3945" static="1">
		<f a="this:n:?transformFeedbacks" v="::null">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
			<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
		</f>
		<meta>
			<m n=":value"><e>{ transformFeedbacks : null }</e></m>
			<m n=":impl"/>
		</meta>
	</genTransformFeedbacks>
	<getActiveAttrib public="1" get="inline" set="null" line="3957" static="1">
		<f a="this:program:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="3962" static="1">
		<f a="this:program:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getActiveUniformBlocki public="1" get="inline" set="null" line="3967" static="1">
		<f a="this:program:uniformBlockIndex:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlocki>
	<getActiveUniformBlockiv public="1" get="inline" set="null" line="3972" static="1">
		<f a="this:program:uniformBlockIndex:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockiv>
	<getActiveUniformBlockName public="1" get="inline" set="null" line="3977" static="1">
		<f a="this:program:uniformBlockIndex">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockName>
	<getActiveUniformsiv public="1" get="inline" set="null" line="3982" static="1">
		<f a="this:program:uniformIndices:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformsiv>
	<getAttachedShaders public="1" get="inline" set="null" line="3987" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="3992" static="1">
		<f a="this:program:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBoolean public="1" get="inline" set="null" line="3997" static="1">
		<f a="this:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBoolean>
	<getBooleanv public="1" get="inline" set="null" line="4002" static="1">
		<f a="this:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBooleanv>
	<getBufferParameteri public="1" get="inline" set="null" line="4007" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteri>
	<getBufferParameteri64v public="1" get="inline" set="null" line="4012" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteri64v>
	<getBufferParameteriv public="1" get="inline" set="null" line="4017" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameteriv>
	<getBufferPointerv public="1" get="inline" set="null" line="4022" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferPointerv>
	<getError public="1" get="inline" set="null" line="4027" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getFloat public="1" get="inline" set="null" line="4032" static="1">
		<f a="this:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFloat>
	<getFloatv public="1" get="inline" set="null" line="4037" static="1">
		<f a="this:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFloatv>
	<getExtension public="1" get="inline" set="null" line="4042" static="1">
		<f a="this:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<c path="String"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<getFragDataLocation public="1" get="inline" set="null" line="4047" static="1">
		<f a="this:program:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFragDataLocation>
	<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="4052" static="1">
		<f a="this:target:attachment:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameteri>
	<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="4057" static="1">
		<f a="this:target:attachment:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameteriv>
	<getInteger public="1" get="inline" set="null" line="4062" static="1">
		<f a="this:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger>
	<getInteger64 public="1" get="inline" set="null" line="4067" static="1">
		<f a="this:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64>
	<getInteger64i public="1" get="inline" set="null" line="4072" static="1">
		<f a="this:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64i>
	<getInteger64i_v public="1" get="inline" set="null" line="4077" static="1">
		<f a="this:pname:index:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64i_v>
	<getInteger64v public="1" get="inline" set="null" line="4082" static="1">
		<f a="this:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInteger64v>
	<getIntegeri_v public="1" get="inline" set="null" line="4087" static="1">
		<f a="this:pname:index:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIntegeri_v>
	<getIntegerv public="1" get="inline" set="null" line="4092" static="1">
		<f a="this:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIntegerv>
	<getInternalformati public="1" get="inline" set="null" line="4097" static="1">
		<f a="this:target:internalformat:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformati>
	<getInternalformativ public="1" get="inline" set="null" line="4102" static="1">
		<f a="this:target:internalformat:pname:bufSize:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformativ>
	<getProgramBinary public="1" get="inline" set="null" line="4107" static="1">
		<f a="this:program:binaryFormat">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramBinary>
	<getProgrami public="1" get="inline" set="null" line="4112" static="1">
		<f a="this:program:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgrami>
	<getProgramInfoLog public="1" get="inline" set="null" line="4117" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getProgramiv public="1" get="inline" set="null" line="4122" static="1">
		<f a="this:program:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramiv>
	<getQueryi public="1" get="inline" set="null" line="4127" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryi>
	<getQueryiv public="1" get="inline" set="null" line="4132" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryiv>
	<getQueryObjectui public="1" get="inline" set="null" line="4137" static="1">
		<f a="this:query:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryObjectui>
	<getQueryObjectuiv public="1" get="inline" set="null" line="4142" static="1">
		<f a="this:query:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryObjectuiv>
	<getRenderbufferParameteri public="1" get="inline" set="null" line="4147" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameteri>
	<getRenderbufferParameteriv public="1" get="inline" set="null" line="4152" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameteriv>
	<getSamplerParameteri public="1" get="inline" set="null" line="4157" static="1">
		<f a="this:sampler:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameteri>
	<getSamplerParameteriv public="1" get="inline" set="null" line="4162" static="1">
		<f a="this:sampler:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameteriv>
	<getSamplerParameterf public="1" get="inline" set="null" line="4167" static="1">
		<f a="this:sampler:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameterf>
	<getSamplerParameterfv public="1" get="inline" set="null" line="4172" static="1">
		<f a="this:sampler:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameterfv>
	<getShaderInfoLog public="1" get="inline" set="null" line="4177" static="1">
		<f a="this:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderi public="1" get="inline" set="null" line="4182" static="1">
		<f a="this:shader:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderi>
	<getShaderiv public="1" get="inline" set="null" line="4187" static="1">
		<f a="this:shader:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderiv>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="4192" static="1">
		<f a="this:shadertype:precisiontype">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderSource public="1" get="inline" set="null" line="4197" static="1">
		<f a="this:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getString public="1" get="inline" set="null" line="4202" static="1">
		<f a="this:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getString>
	<getStringi public="1" get="inline" set="null" line="4207" static="1">
		<f a="this:name:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getStringi>
	<getSyncParameteri public="1" get="inline" set="null" line="4212" static="1">
		<f a="this:sync:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameteri>
	<getSyncParameteriv public="1" get="inline" set="null" line="4217" static="1">
		<f a="this:sync:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameteriv>
	<getTexParameterf public="1" get="inline" set="null" line="4222" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameterf>
	<getTexParameterfv public="1" get="inline" set="null" line="4227" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameterfv>
	<getTexParameteri public="1" get="inline" set="null" line="4232" static="1">
		<f a="this:target:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameteri>
	<getTexParameteriv public="1" get="inline" set="null" line="4237" static="1">
		<f a="this:target:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameteriv>
	<getTransformFeedbackVarying public="1" get="inline" set="null" line="4242" static="1">
		<f a="this:program:index">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTransformFeedbackVarying>
	<getUniformf public="1" get="inline" set="null" line="4247" static="1">
		<f a="this:program:location">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformf>
	<getUniformfv public="1" get="inline" set="null" line="4252" static="1">
		<f a="this:program:location:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformfv>
	<getUniformi public="1" get="inline" set="null" line="4257" static="1">
		<f a="this:program:location">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformi>
	<getUniformiv public="1" get="inline" set="null" line="4262" static="1">
		<f a="this:program:location:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformiv>
	<getUniformui public="1" get="inline" set="null" line="4267" static="1">
		<f a="this:program:location">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformui>
	<getUniformuiv public="1" get="inline" set="null" line="4272" static="1">
		<f a="this:program:location:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformuiv>
	<getUniformBlockIndex public="1" get="inline" set="null" line="4277" static="1">
		<f a="this:program:uniformBlockName">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformBlockIndex>
	<getUniformIndices public="1" get="inline" set="null" line="4282" static="1">
		<f a="this:program:uniformNames">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformIndices>
	<getUniformLocation public="1" get="inline" set="null" line="4287" static="1">
		<f a="this:program:name">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttribf public="1" get="inline" set="null" line="4292" static="1">
		<f a="this:index:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribf>
	<getVertexAttribfv public="1" get="inline" set="null" line="4297" static="1">
		<f a="this:index:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribfv>
	<getVertexAttribi public="1" get="inline" set="null" line="4302" static="1">
		<f a="this:index:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribi>
	<getVertexAttribIi public="1" get="inline" set="null" line="4307" static="1">
		<f a="this:index:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIi>
	<getVertexAttribIiv public="1" get="inline" set="null" line="4312" static="1">
		<f a="this:index:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIiv>
	<getVertexAttribIui public="1" get="inline" set="null" line="4317" static="1">
		<f a="this:index:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIui>
	<getVertexAttribIuiv public="1" get="inline" set="null" line="4322" static="1">
		<f a="this:index:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribIuiv>
	<getVertexAttribiv public="1" get="inline" set="null" line="4327" static="1">
		<f a="this:index:pname:params">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribiv>
	<getVertexAttribPointerv public="1" get="inline" set="null" line="4332" static="1">
		<f a="this:index:pname">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribPointerv>
	<hint public="1" get="inline" set="null" line="4337" static="1">
		<f a="this:target:mode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<invalidateFramebuffer public="1" get="inline" set="null" line="4342" static="1">
		<f a="this:target:attachments">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateFramebuffer>
	<invalidateSubFramebuffer public="1" get="inline" set="null" line="4347" static="1">
		<f a="this:target:attachments:x:y:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateSubFramebuffer>
	<isBuffer public="1" get="inline" set="null" line="4352" static="1">
		<f a="this:buffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isEnabled public="1" get="inline" set="null" line="4357" static="1">
		<f a="this:cap">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isFramebuffer public="1" get="inline" set="null" line="4362" static="1">
		<f a="this:framebuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="4367" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isQuery public="1" get="inline" set="null" line="4372" static="1">
		<f a="this:query">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isQuery>
	<isRenderbuffer public="1" get="inline" set="null" line="4377" static="1">
		<f a="this:renderbuffer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isSampler public="1" get="inline" set="null" line="4382" static="1">
		<f a="this:sampler">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSampler>
	<isShader public="1" get="inline" set="null" line="4387" static="1">
		<f a="this:shader">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isTexture public="1" get="inline" set="null" line="4392" static="1">
		<f a="this:texture">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<isTransformFeedback public="1" get="inline" set="null" line="4397" static="1">
		<f a="this:transformFeedback">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTransformFeedback>
	<isVertexArray public="1" get="inline" set="null" line="4402" static="1">
		<f a="this:vertexArray">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isVertexArray>
	<lineWidth public="1" get="inline" set="null" line="4407" static="1">
		<f a="this:width">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="4412" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<mapBufferRange public="1" get="inline" set="null" line="4417" static="1">
		<f a="this:target:offset:length:access">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</mapBufferRange>
	<pauseTransformFeedback public="1" get="inline" set="null" line="4422" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pauseTransformFeedback>
	<pixelStorei public="1" get="inline" set="null" line="4427" static="1">
		<f a="this:pname:param">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="4432" static="1">
		<f a="this:factor:units">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<programBinary public="1" get="inline" set="null" line="4437" static="1">
		<f a="this:program:binaryFormat:binary:length">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</programBinary>
	<programParameteri public="1" get="inline" set="null" line="4442" static="1">
		<f a="this:program:pname:value">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</programParameteri>
	<readBuffer public="1" get="inline" set="null" line="4447" static="1">
		<f a="this:src">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readBuffer>
	<readPixels public="1" get="inline" set="null" line="4452" static="1">
		<f a="this:x:y:width:height:format:type:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<releaseShaderCompiler public="1" get="inline" set="null" line="4457" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</releaseShaderCompiler>
	<renderbufferStorage public="1" get="inline" set="null" line="4462" static="1">
		<f a="this:target:internalformat:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<renderbufferStorageMultisample public="1" get="inline" set="null" line="4467" static="1">
		<f a="this:target:samples:internalformat:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorageMultisample>
	<resumeTransformFeedback public="1" get="inline" set="null" line="4472" static="1">
		<f a="this">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</resumeTransformFeedback>
	<sampleCoverage public="1" get="inline" set="null" line="4477" static="1">
		<f a="this:value:invert">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Float"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<samplerParameterf public="1" get="inline" set="null" line="4482" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameterf>
	<samplerParameteri public="1" get="inline" set="null" line="4487" static="1">
		<f a="this:sampler:pname:param">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameteri>
	<scissor public="1" get="inline" set="null" line="4492" static="1">
		<f a="this:x:y:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderBinary public="1" get="inline" set="null" line="4497" static="1">
		<f a="this:shaders:binaryformat:binary:length">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderBinary>
	<shaderSource public="1" get="inline" set="null" line="4502" static="1">
		<f a="this:shader:source">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="4507" static="1">
		<f a="this:func:ref:mask">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="4512" static="1">
		<f a="this:face:func:ref:mask">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="4517" static="1">
		<f a="this:mask">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="4522" static="1">
		<f a="this:face:mask">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="4527" static="1">
		<f a="this:fail:zfail:zpass">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="4532" static="1">
		<f a="this:face:fail:zfail:zpass">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="4537" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texImage3D public="1" get="inline" set="null" line="4542" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:format:type:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage3D>
	<texStorage2D public="1" get="inline" set="null" line="4548" static="1">
		<f a="this:target:level:internalformat:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage2D>
	<texStorage3D public="1" get="inline" set="null" line="4553" static="1">
		<f a="this:target:level:internalformat:width:height:depth">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage3D>
	<texParameterf public="1" get="inline" set="null" line="4558" static="1">
		<f a="this:target:pname:param">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" get="inline" set="null" line="4563" static="1">
		<f a="this:target:pname:param">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="4568" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage2D>
	<texSubImage3D public="1" get="inline" set="null" line="4573" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage3D>
	<transformFeedbackVaryings public="1" get="inline" set="null" line="4579" static="1">
		<f a="this:program:varyings:bufferMode">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformFeedbackVaryings>
	<uniform1f public="1" get="inline" set="null" line="4584" static="1">
		<f a="this:location:v0">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="4589" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="4594" static="1">
		<f a="this:location:v0">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="4599" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform1ui public="1" get="inline" set="null" line="4604" static="1">
		<f a="this:location:v0">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1ui>
	<uniform1uiv public="1" get="inline" set="null" line="4609" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1uiv>
	<uniform2f public="1" get="inline" set="null" line="4614" static="1">
		<f a="this:location:v0:v1">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" get="inline" set="null" line="4619" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="4624" static="1">
		<f a="this:location:v0:v1">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="4629" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform2ui public="1" get="inline" set="null" line="4634" static="1">
		<f a="this:location:v0:v1">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2ui>
	<uniform2uiv public="1" get="inline" set="null" line="4639" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2uiv>
	<uniform3f public="1" get="inline" set="null" line="4644" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="4649" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="4654" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="4659" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform3ui public="1" get="inline" set="null" line="4664" static="1">
		<f a="this:location:v0:v1:v2">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3ui>
	<uniform3uiv public="1" get="inline" set="null" line="4669" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3uiv>
	<uniform4f public="1" get="inline" set="null" line="4674" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="4679" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="4684" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="4689" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniform4ui public="1" get="inline" set="null" line="4694" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4ui>
	<uniform4uiv public="1" get="inline" set="null" line="4699" static="1">
		<f a="this:location:count:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4uiv>
	<uniformBlockBinding public="1" get="inline" set="null" line="4704" static="1">
		<f a="this:program:uniformBlockIndex:uniformBlockBinding">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformBlockBinding>
	<uniformMatrix2fv public="1" get="inline" set="null" line="4709" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix2x3fv public="1" get="inline" set="null" line="4714" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2x3fv>
	<uniformMatrix2x4fv public="1" get="inline" set="null" line="4719" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2x4fv>
	<uniformMatrix3fv public="1" get="inline" set="null" line="4724" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix3x2fv public="1" get="inline" set="null" line="4729" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3x2fv>
	<uniformMatrix3x4fv public="1" get="inline" set="null" line="4734" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3x4fv>
	<uniformMatrix4fv public="1" get="inline" set="null" line="4739" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<uniformMatrix4x2fv public="1" get="inline" set="null" line="4744" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4x2fv>
	<uniformMatrix4x3fv public="1" get="inline" set="null" line="4749" static="1">
		<f a="this:location:count:transpose:v">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4x3fv>
	<unmapBuffer public="1" get="inline" set="null" line="4754" static="1">
		<f a="this:target">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unmapBuffer>
	<useProgram public="1" get="inline" set="null" line="4759" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="4764" static="1">
		<f a="this:program">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="4769" static="1">
		<f a="this:indx:x">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="4774" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="4779" static="1">
		<f a="this:indx:x:y">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="4784" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="4789" static="1">
		<f a="this:indx:x:y:z">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="4794" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="4799" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="4804" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribDivisor public="1" get="inline" set="null" line="4809" static="1">
		<f a="this:index:divisor">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribDivisor>
	<vertexAttribI4i public="1" get="inline" set="null" line="4814" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4i>
	<vertexAttribI4iv public="1" get="inline" set="null" line="4819" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4iv>
	<vertexAttribI4ui public="1" get="inline" set="null" line="4824" static="1">
		<f a="this:indx:x:y:z:w">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4ui>
	<vertexAttribI4uiv public="1" get="inline" set="null" line="4829" static="1">
		<f a="this:indx:values">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4uiv>
	<vertexAttribIPointer public="1" get="inline" set="null" line="4834" static="1">
		<f a="this:indx:size:type:stride:pointer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribIPointer>
	<vertexAttribPointer public="1" get="inline" set="null" line="4839" static="1">
		<f a="this:indx:size:type:normalized:stride:pointer">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="4844" static="1">
		<f a="this:x:y:width:height">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
	<waitSync public="1" get="inline" set="null" line="4849" static="1">
		<f a="this:sync:flags:timeout">
			<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</waitSync>
	<fromGL set="method" line="4854" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.OpenGLES3RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<fromRenderContext set="method" line="4859" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.OpenGLES3RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
</class></impl>
	</abstract>
	<class path="lime.graphics._OpenGLES3RenderContext.OpenGLES3RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLES3RenderContext.hx" private="1" module="lime.graphics.OpenGLES3RenderContext" final="1">
		<__extensions static="1"><c path="String"/></__extensions>
		<EXTENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EXTENSIONS>
		<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINTS>
		<LINES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINES>
		<LINE_LOOP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ZERO>
		<ONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE>
		<SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT>
		<BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE>
		<BLEND public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND>
		<DITHER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CW>
		<CCW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CCW>
		<LINE_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DONT_CARE>
		<FASTEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FASTEST>
		<NICEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT>
		<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA>
		<RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB>
		<RGBA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA>
		<LUMINANCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEVER>
		<LESS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LESS>
		<EQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EQUAL>
		<LEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LEQUAL>
		<GREATER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREATER>
		<NOTEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GEQUAL>
		<ALWAYS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALWAYS>
		<KEEP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</KEEP>
		<REPLACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPLACE>
		<INCR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR>
		<DECR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR>
		<INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVERT>
		<INCR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VENDOR>
		<RENDERER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERER>
		<VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERSION>
		<NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST>
		<LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC4>
		<BOOL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB5_A1>
		<RGB565 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED>
		<RGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8>
		<RGBA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB>
		<SRGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32F>
		<RGB32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32F>
		<RGBA16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16F>
		<RGB16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8UI>
		<RGBA32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32I>
		<RGB32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32I>
		<RGBA16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16I>
		<RGB16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16I>
		<RGBA8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8I>
		<RGB8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8>
		<RG8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8>
		<R16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16F>
		<R32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32F>
		<RG16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16F>
		<RG32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32F>
		<R8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8I>
		<R8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8UI>
		<R16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16I>
		<R16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16UI>
		<R32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32I>
		<R32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32UI>
		<RG8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8I>
		<RG8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8UI>
		<RG16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16I>
		<RG16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16UI>
		<RG32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32I>
		<RG32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32UI>
		<R8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HALF_FLOAT>
		<RG public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG>
		<RG_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR>
		<DEPTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH>
		<STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL>
		<MIN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN>
		<MAX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<type public="1" get="accessor" set="null" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta><m n=":impl"/></meta>
		</type>
		<version public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</version>
		<get_EXTENSIONS get="inline" set="null" line="617" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_EXTENSIONS>
		<get_DEPTH_BUFFER_BIT get="inline" set="null" line="622" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BUFFER_BIT>
		<get_STENCIL_BUFFER_BIT get="inline" set="null" line="627" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BUFFER_BIT>
		<get_COLOR_BUFFER_BIT get="inline" set="null" line="632" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_BUFFER_BIT>
		<get_POINTS get="inline" set="null" line="637" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POINTS>
		<get_LINES get="inline" set="null" line="642" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINES>
		<get_LINE_LOOP get="inline" set="null" line="647" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_LOOP>
		<get_LINE_STRIP get="inline" set="null" line="652" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_STRIP>
		<get_TRIANGLES get="inline" set="null" line="657" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLES>
		<get_TRIANGLE_STRIP get="inline" set="null" line="662" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_STRIP>
		<get_TRIANGLE_FAN get="inline" set="null" line="667" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_FAN>
		<get_ZERO get="inline" set="null" line="672" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ZERO>
		<get_ONE get="inline" set="null" line="677" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE>
		<get_SRC_COLOR get="inline" set="null" line="682" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_COLOR>
		<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="687" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_COLOR>
		<get_SRC_ALPHA get="inline" set="null" line="692" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA>
		<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="697" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_ALPHA>
		<get_DST_ALPHA get="inline" set="null" line="702" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_ALPHA>
		<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="707" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_ALPHA>
		<get_DST_COLOR get="inline" set="null" line="712" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_COLOR>
		<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="717" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_COLOR>
		<get_SRC_ALPHA_SATURATE get="inline" set="null" line="722" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA_SATURATE>
		<get_FUNC_ADD get="inline" set="null" line="727" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_ADD>
		<get_BLEND_EQUATION get="inline" set="null" line="732" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION>
		<get_BLEND_EQUATION_RGB get="inline" set="null" line="737" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_RGB>
		<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="742" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_ALPHA>
		<get_FUNC_SUBTRACT get="inline" set="null" line="747" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_SUBTRACT>
		<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="752" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_REVERSE_SUBTRACT>
		<get_BLEND_DST_RGB get="inline" set="null" line="757" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_RGB>
		<get_BLEND_SRC_RGB get="inline" set="null" line="762" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_RGB>
		<get_BLEND_DST_ALPHA get="inline" set="null" line="767" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_ALPHA>
		<get_BLEND_SRC_ALPHA get="inline" set="null" line="772" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_ALPHA>
		<get_CONSTANT_COLOR get="inline" set="null" line="777" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_COLOR>
		<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="782" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_COLOR>
		<get_CONSTANT_ALPHA get="inline" set="null" line="787" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_ALPHA>
		<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="792" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_ALPHA>
		<get_BLEND_COLOR get="inline" set="null" line="797" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_COLOR>
		<get_ARRAY_BUFFER get="inline" set="null" line="802" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER>
		<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="807" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER>
		<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="812" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER_BINDING>
		<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="817" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER_BINDING>
		<get_STREAM_DRAW get="inline" set="null" line="822" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_DRAW>
		<get_STATIC_DRAW get="inline" set="null" line="827" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_DRAW>
		<get_DYNAMIC_DRAW get="inline" set="null" line="832" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_DRAW>
		<get_BUFFER_SIZE get="inline" set="null" line="837" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_SIZE>
		<get_BUFFER_USAGE get="inline" set="null" line="842" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_USAGE>
		<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="847" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_VERTEX_ATTRIB>
		<get_FRONT get="inline" set="null" line="852" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT>
		<get_BACK get="inline" set="null" line="857" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BACK>
		<get_FRONT_AND_BACK get="inline" set="null" line="862" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_AND_BACK>
		<get_CULL_FACE get="inline" set="null" line="867" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE>
		<get_BLEND get="inline" set="null" line="872" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND>
		<get_DITHER get="inline" set="null" line="877" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DITHER>
		<get_STENCIL_TEST get="inline" set="null" line="882" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_TEST>
		<get_DEPTH_TEST get="inline" set="null" line="887" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_TEST>
		<get_SCISSOR_TEST get="inline" set="null" line="892" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_TEST>
		<get_POLYGON_OFFSET_FILL get="inline" set="null" line="897" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FILL>
		<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="902" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_ALPHA_TO_COVERAGE>
		<get_SAMPLE_COVERAGE get="inline" set="null" line="907" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE>
		<get_NO_ERROR get="inline" set="null" line="912" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NO_ERROR>
		<get_INVALID_ENUM get="inline" set="null" line="917" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_ENUM>
		<get_INVALID_VALUE get="inline" set="null" line="922" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_VALUE>
		<get_INVALID_OPERATION get="inline" set="null" line="927" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_OPERATION>
		<get_OUT_OF_MEMORY get="inline" set="null" line="932" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OUT_OF_MEMORY>
		<get_CW get="inline" set="null" line="937" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CW>
		<get_CCW get="inline" set="null" line="942" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CCW>
		<get_LINE_WIDTH get="inline" set="null" line="947" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_WIDTH>
		<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="952" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_POINT_SIZE_RANGE>
		<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="957" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_LINE_WIDTH_RANGE>
		<get_CULL_FACE_MODE get="inline" set="null" line="962" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE_MODE>
		<get_FRONT_FACE get="inline" set="null" line="967" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_FACE>
		<get_DEPTH_RANGE get="inline" set="null" line="972" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_RANGE>
		<get_DEPTH_WRITEMASK get="inline" set="null" line="977" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_WRITEMASK>
		<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="982" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_CLEAR_VALUE>
		<get_DEPTH_FUNC get="inline" set="null" line="987" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_FUNC>
		<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="992" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_CLEAR_VALUE>
		<get_STENCIL_FUNC get="inline" set="null" line="997" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FUNC>
		<get_STENCIL_FAIL get="inline" set="null" line="1002" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FAIL>
		<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1007" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_FAIL>
		<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1012" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_PASS>
		<get_STENCIL_REF get="inline" set="null" line="1017" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_REF>
		<get_STENCIL_VALUE_MASK get="inline" set="null" line="1022" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_VALUE_MASK>
		<get_STENCIL_WRITEMASK get="inline" set="null" line="1027" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_WRITEMASK>
		<get_STENCIL_BACK_FUNC get="inline" set="null" line="1032" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FUNC>
		<get_STENCIL_BACK_FAIL get="inline" set="null" line="1037" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1042" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1047" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_PASS>
		<get_STENCIL_BACK_REF get="inline" set="null" line="1052" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_REF>
		<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1057" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_VALUE_MASK>
		<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1062" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_WRITEMASK>
		<get_VIEWPORT get="inline" set="null" line="1067" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VIEWPORT>
		<get_SCISSOR_BOX get="inline" set="null" line="1072" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_BOX>
		<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1077" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_CLEAR_VALUE>
		<get_COLOR_WRITEMASK get="inline" set="null" line="1082" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_WRITEMASK>
		<get_UNPACK_ALIGNMENT get="inline" set="null" line="1087" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ALIGNMENT>
		<get_PACK_ALIGNMENT get="inline" set="null" line="1092" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ALIGNMENT>
		<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1097" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_SIZE>
		<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1102" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VIEWPORT_DIMS>
		<get_SUBPIXEL_BITS get="inline" set="null" line="1107" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SUBPIXEL_BITS>
		<get_RED_BITS get="inline" set="null" line="1112" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_BITS>
		<get_GREEN_BITS get="inline" set="null" line="1117" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREEN_BITS>
		<get_BLUE_BITS get="inline" set="null" line="1122" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLUE_BITS>
		<get_ALPHA_BITS get="inline" set="null" line="1127" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA_BITS>
		<get_DEPTH_BITS get="inline" set="null" line="1132" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BITS>
		<get_STENCIL_BITS get="inline" set="null" line="1137" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BITS>
		<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1142" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_UNITS>
		<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1147" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FACTOR>
		<get_TEXTURE_BINDING_2D get="inline" set="null" line="1152" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D>
		<get_SAMPLE_BUFFERS get="inline" set="null" line="1157" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_BUFFERS>
		<get_SAMPLES get="inline" set="null" line="1162" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLES>
		<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1167" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_VALUE>
		<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1172" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_INVERT>
		<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1177" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPRESSED_TEXTURE_FORMATS>
		<get_DONT_CARE get="inline" set="null" line="1182" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DONT_CARE>
		<get_FASTEST get="inline" set="null" line="1187" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FASTEST>
		<get_NICEST get="inline" set="null" line="1192" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NICEST>
		<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1197" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GENERATE_MIPMAP_HINT>
		<get_BYTE get="inline" set="null" line="1202" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BYTE>
		<get_UNSIGNED_BYTE get="inline" set="null" line="1207" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_BYTE>
		<get_SHORT get="inline" set="null" line="1212" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHORT>
		<get_UNSIGNED_SHORT get="inline" set="null" line="1217" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT>
		<get_INT get="inline" set="null" line="1222" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT>
		<get_UNSIGNED_INT get="inline" set="null" line="1227" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT>
		<get_FLOAT get="inline" set="null" line="1232" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT>
		<get_DEPTH_COMPONENT get="inline" set="null" line="1237" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT>
		<get_ALPHA get="inline" set="null" line="1242" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA>
		<get_RGB get="inline" set="null" line="1247" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB>
		<get_RGBA get="inline" set="null" line="1252" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA>
		<get_LUMINANCE get="inline" set="null" line="1257" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE>
		<get_LUMINANCE_ALPHA get="inline" set="null" line="1262" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE_ALPHA>
		<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1267" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_4_4_4_4>
		<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1272" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_5_5_1>
		<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1277" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_6_5>
		<get_FRAGMENT_SHADER get="inline" set="null" line="1282" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER>
		<get_VERTEX_SHADER get="inline" set="null" line="1287" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_SHADER>
		<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1292" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_ATTRIBS>
		<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1297" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_VECTORS>
		<get_MAX_VARYING_VECTORS get="inline" set="null" line="1302" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_VECTORS>
		<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1307" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1312" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1317" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_IMAGE_UNITS>
		<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1322" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_VECTORS>
		<get_SHADER_TYPE get="inline" set="null" line="1327" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADER_TYPE>
		<get_DELETE_STATUS get="inline" set="null" line="1332" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DELETE_STATUS>
		<get_LINK_STATUS get="inline" set="null" line="1337" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINK_STATUS>
		<get_VALIDATE_STATUS get="inline" set="null" line="1342" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VALIDATE_STATUS>
		<get_ATTACHED_SHADERS get="inline" set="null" line="1347" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ATTACHED_SHADERS>
		<get_ACTIVE_UNIFORMS get="inline" set="null" line="1352" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORMS>
		<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1357" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_ATTRIBUTES>
		<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1362" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADING_LANGUAGE_VERSION>
		<get_CURRENT_PROGRAM get="inline" set="null" line="1367" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_PROGRAM>
		<get_NEVER get="inline" set="null" line="1372" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEVER>
		<get_LESS get="inline" set="null" line="1377" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LESS>
		<get_EQUAL get="inline" set="null" line="1382" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_EQUAL>
		<get_LEQUAL get="inline" set="null" line="1387" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LEQUAL>
		<get_GREATER get="inline" set="null" line="1392" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREATER>
		<get_NOTEQUAL get="inline" set="null" line="1397" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NOTEQUAL>
		<get_GEQUAL get="inline" set="null" line="1402" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GEQUAL>
		<get_ALWAYS get="inline" set="null" line="1407" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALWAYS>
		<get_KEEP get="inline" set="null" line="1412" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_KEEP>
		<get_REPLACE get="inline" set="null" line="1417" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPLACE>
		<get_INCR get="inline" set="null" line="1422" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR>
		<get_DECR get="inline" set="null" line="1427" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR>
		<get_INVERT get="inline" set="null" line="1432" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVERT>
		<get_INCR_WRAP get="inline" set="null" line="1437" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR_WRAP>
		<get_DECR_WRAP get="inline" set="null" line="1442" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR_WRAP>
		<get_VENDOR get="inline" set="null" line="1447" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VENDOR>
		<get_RENDERER get="inline" set="null" line="1452" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERER>
		<get_VERSION get="inline" set="null" line="1457" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERSION>
		<get_NEAREST get="inline" set="null" line="1462" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST>
		<get_LINEAR get="inline" set="null" line="1467" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR>
		<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1472" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_NEAREST>
		<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1477" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_NEAREST>
		<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1482" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_LINEAR>
		<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1487" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_LINEAR>
		<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1492" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAG_FILTER>
		<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1497" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_FILTER>
		<get_TEXTURE_WRAP_S get="inline" set="null" line="1502" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_S>
		<get_TEXTURE_WRAP_T get="inline" set="null" line="1507" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_T>
		<get_TEXTURE_2D get="inline" set="null" line="1512" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D>
		<get_TEXTURE get="inline" set="null" line="1517" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE>
		<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1522" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP>
		<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1527" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_CUBE_MAP>
		<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1532" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_X>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1537" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1542" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1547" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1552" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1557" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1562" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CUBE_MAP_TEXTURE_SIZE>
		<get_TEXTURE0 get="inline" set="null" line="1567" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE0>
		<get_TEXTURE1 get="inline" set="null" line="1572" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE1>
		<get_TEXTURE2 get="inline" set="null" line="1577" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE2>
		<get_TEXTURE3 get="inline" set="null" line="1582" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE3>
		<get_TEXTURE4 get="inline" set="null" line="1587" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE4>
		<get_TEXTURE5 get="inline" set="null" line="1592" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE5>
		<get_TEXTURE6 get="inline" set="null" line="1597" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE6>
		<get_TEXTURE7 get="inline" set="null" line="1602" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE7>
		<get_TEXTURE8 get="inline" set="null" line="1607" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE8>
		<get_TEXTURE9 get="inline" set="null" line="1612" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE9>
		<get_TEXTURE10 get="inline" set="null" line="1617" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE10>
		<get_TEXTURE11 get="inline" set="null" line="1622" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE11>
		<get_TEXTURE12 get="inline" set="null" line="1627" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE12>
		<get_TEXTURE13 get="inline" set="null" line="1632" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE13>
		<get_TEXTURE14 get="inline" set="null" line="1637" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE14>
		<get_TEXTURE15 get="inline" set="null" line="1642" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE15>
		<get_TEXTURE16 get="inline" set="null" line="1647" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE16>
		<get_TEXTURE17 get="inline" set="null" line="1652" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE17>
		<get_TEXTURE18 get="inline" set="null" line="1657" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE18>
		<get_TEXTURE19 get="inline" set="null" line="1662" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE19>
		<get_TEXTURE20 get="inline" set="null" line="1667" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE20>
		<get_TEXTURE21 get="inline" set="null" line="1672" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE21>
		<get_TEXTURE22 get="inline" set="null" line="1677" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE22>
		<get_TEXTURE23 get="inline" set="null" line="1682" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE23>
		<get_TEXTURE24 get="inline" set="null" line="1687" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE24>
		<get_TEXTURE25 get="inline" set="null" line="1692" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE25>
		<get_TEXTURE26 get="inline" set="null" line="1697" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE26>
		<get_TEXTURE27 get="inline" set="null" line="1702" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE27>
		<get_TEXTURE28 get="inline" set="null" line="1707" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE28>
		<get_TEXTURE29 get="inline" set="null" line="1712" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE29>
		<get_TEXTURE30 get="inline" set="null" line="1717" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE30>
		<get_TEXTURE31 get="inline" set="null" line="1722" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE31>
		<get_ACTIVE_TEXTURE get="inline" set="null" line="1727" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_TEXTURE>
		<get_REPEAT get="inline" set="null" line="1732" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPEAT>
		<get_CLAMP_TO_EDGE get="inline" set="null" line="1737" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CLAMP_TO_EDGE>
		<get_MIRRORED_REPEAT get="inline" set="null" line="1742" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIRRORED_REPEAT>
		<get_FLOAT_VEC2 get="inline" set="null" line="1747" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC2>
		<get_FLOAT_VEC3 get="inline" set="null" line="1752" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC3>
		<get_FLOAT_VEC4 get="inline" set="null" line="1757" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC4>
		<get_INT_VEC2 get="inline" set="null" line="1762" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC2>
		<get_INT_VEC3 get="inline" set="null" line="1767" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC3>
		<get_INT_VEC4 get="inline" set="null" line="1772" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC4>
		<get_BOOL get="inline" set="null" line="1777" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL>
		<get_BOOL_VEC2 get="inline" set="null" line="1782" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC2>
		<get_BOOL_VEC3 get="inline" set="null" line="1787" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC3>
		<get_BOOL_VEC4 get="inline" set="null" line="1792" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC4>
		<get_FLOAT_MAT2 get="inline" set="null" line="1797" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2>
		<get_FLOAT_MAT3 get="inline" set="null" line="1802" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3>
		<get_FLOAT_MAT4 get="inline" set="null" line="1807" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4>
		<get_SAMPLER_2D get="inline" set="null" line="1812" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D>
		<get_SAMPLER_CUBE get="inline" set="null" line="1817" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE>
		<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="1822" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_ENABLED>
		<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="1827" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_SIZE>
		<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="1832" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_STRIDE>
		<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="1837" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_TYPE>
		<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="1842" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="1847" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_POINTER>
		<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="1852" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<get_VERTEX_PROGRAM_POINT_SIZE get="inline" set="null" line="1857" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_PROGRAM_POINT_SIZE>
		<get_POINT_SPRITE get="inline" set="null" line="1861" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POINT_SPRITE>
		<get_COMPILE_STATUS get="inline" set="null" line="1865" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPILE_STATUS>
		<get_LOW_FLOAT get="inline" set="null" line="1870" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_FLOAT>
		<get_MEDIUM_FLOAT get="inline" set="null" line="1875" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_FLOAT>
		<get_HIGH_FLOAT get="inline" set="null" line="1880" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_FLOAT>
		<get_LOW_INT get="inline" set="null" line="1885" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_INT>
		<get_MEDIUM_INT get="inline" set="null" line="1890" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_INT>
		<get_HIGH_INT get="inline" set="null" line="1895" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_INT>
		<get_FRAMEBUFFER get="inline" set="null" line="1900" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER>
		<get_RENDERBUFFER get="inline" set="null" line="1905" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER>
		<get_RGBA4 get="inline" set="null" line="1910" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA4>
		<get_RGB5_A1 get="inline" set="null" line="1915" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB5_A1>
		<get_RGB565 get="inline" set="null" line="1920" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB565>
		<get_DEPTH_COMPONENT16 get="inline" set="null" line="1925" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT16>
		<get_STENCIL_INDEX get="inline" set="null" line="1930" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX>
		<get_STENCIL_INDEX8 get="inline" set="null" line="1935" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX8>
		<get_DEPTH_STENCIL get="inline" set="null" line="1940" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL>
		<get_RENDERBUFFER_WIDTH get="inline" set="null" line="1945" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_WIDTH>
		<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="1950" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_HEIGHT>
		<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="1955" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_INTERNAL_FORMAT>
		<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="1960" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_RED_SIZE>
		<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="1965" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_GREEN_SIZE>
		<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="1970" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BLUE_SIZE>
		<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="1975" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_ALPHA_SIZE>
		<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="1980" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_DEPTH_SIZE>
		<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="1985" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_STENCIL_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="1990" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="1995" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="2000" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="2005" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<get_COLOR_ATTACHMENT0 get="inline" set="null" line="2010" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT0>
		<get_DEPTH_ATTACHMENT get="inline" set="null" line="2015" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_ATTACHMENT>
		<get_STENCIL_ATTACHMENT get="inline" set="null" line="2020" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_ATTACHMENT>
		<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="2025" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL_ATTACHMENT>
		<get_NONE get="inline" set="null" line="2030" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NONE>
		<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="2035" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_COMPLETE>
		<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="2040" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="2045" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="2050" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="2055" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_UNSUPPORTED>
		<get_FRAMEBUFFER_BINDING get="inline" set="null" line="2060" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_BINDING get="inline" set="null" line="2065" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BINDING>
		<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="2070" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_RENDERBUFFER_SIZE>
		<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="2075" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_FRAMEBUFFER_OPERATION>
		<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="2080" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_FLIP_Y_WEBGL>
		<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="2085" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="2090" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONTEXT_LOST_WEBGL>
		<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="2095" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="2100" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BROWSER_DEFAULT_WEBGL>
		<get_type get="inline" set="null" line="2105" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.RenderContextType"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_type>
		<get_version get="inline" set="null" line="2110" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_version>
		<get_READ_BUFFER get="inline" set="null" line="2115" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_BUFFER>
		<get_UNPACK_ROW_LENGTH get="inline" set="null" line="2120" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ROW_LENGTH>
		<get_UNPACK_SKIP_ROWS get="inline" set="null" line="2125" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_ROWS>
		<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="2130" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_PIXELS>
		<get_PACK_ROW_LENGTH get="inline" set="null" line="2135" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ROW_LENGTH>
		<get_PACK_SKIP_ROWS get="inline" set="null" line="2140" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_ROWS>
		<get_PACK_SKIP_PIXELS get="inline" set="null" line="2145" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_PIXELS>
		<get_TEXTURE_BINDING_3D get="inline" set="null" line="2150" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_3D>
		<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="2155" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_IMAGES>
		<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="2160" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_IMAGE_HEIGHT>
		<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="2165" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_3D_TEXTURE_SIZE>
		<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="2170" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_VERTICES>
		<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="2175" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_INDICES>
		<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="2180" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_LOD_BIAS>
		<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="2185" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="2190" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="2195" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ARRAY_TEXTURE_LAYERS>
		<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2200" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN_PROGRAM_TEXEL_OFFSET>
		<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2205" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_PROGRAM_TEXEL_OFFSET>
		<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="2210" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_COMPONENTS>
		<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="2215" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
		<get_RASTERIZER_DISCARD get="inline" set="null" line="2220" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RASTERIZER_DISCARD>
		<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="2225" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ARRAY_BINDING>
		<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="2230" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_OUTPUT_COMPONENTS>
		<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="2235" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_INPUT_COMPONENTS>
		<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="2240" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SERVER_WAIT_TIMEOUT>
		<get_MAX_ELEMENT_INDEX get="inline" set="null" line="2245" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENT_INDEX>
		<get_RED get="inline" set="null" line="2250" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED>
		<get_RGB8 get="inline" set="null" line="2255" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8>
		<get_RGBA8 get="inline" set="null" line="2260" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8>
		<get_RGB10_A2 get="inline" set="null" line="2265" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2>
		<get_TEXTURE_3D get="inline" set="null" line="2270" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_3D>
		<get_TEXTURE_WRAP_R get="inline" set="null" line="2275" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_R>
		<get_TEXTURE_MIN_LOD get="inline" set="null" line="2280" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_LOD>
		<get_TEXTURE_MAX_LOD get="inline" set="null" line="2285" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LOD>
		<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="2290" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BASE_LEVEL>
		<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="2295" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LEVEL>
		<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="2300" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_MODE>
		<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="2305" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_FUNC>
		<get_SRGB get="inline" set="null" line="2310" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB>
		<get_SRGB8 get="inline" set="null" line="2315" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8>
		<get_SRGB8_ALPHA8 get="inline" set="null" line="2320" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8_ALPHA8>
		<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="2325" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPARE_REF_TO_TEXTURE>
		<get_RGBA32F get="inline" set="null" line="2330" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32F>
		<get_RGB32F get="inline" set="null" line="2335" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32F>
		<get_RGBA16F get="inline" set="null" line="2340" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16F>
		<get_RGB16F get="inline" set="null" line="2345" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16F>
		<get_TEXTURE_2D_ARRAY get="inline" set="null" line="2350" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D_ARRAY>
		<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="2355" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D_ARRAY>
		<get_R11F_G11F_B10F get="inline" set="null" line="2360" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R11F_G11F_B10F>
		<get_RGB9_E5 get="inline" set="null" line="2365" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB9_E5>
		<get_RGBA32UI get="inline" set="null" line="2370" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32UI>
		<get_RGB32UI get="inline" set="null" line="2375" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32UI>
		<get_RGBA16UI get="inline" set="null" line="2380" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16UI>
		<get_RGB16UI get="inline" set="null" line="2385" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16UI>
		<get_RGBA8UI get="inline" set="null" line="2390" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8UI>
		<get_RGB8UI get="inline" set="null" line="2395" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8UI>
		<get_RGBA32I get="inline" set="null" line="2400" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32I>
		<get_RGB32I get="inline" set="null" line="2405" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32I>
		<get_RGBA16I get="inline" set="null" line="2410" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16I>
		<get_RGB16I get="inline" set="null" line="2415" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16I>
		<get_RGBA8I get="inline" set="null" line="2420" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8I>
		<get_RGB8I get="inline" set="null" line="2425" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8I>
		<get_RED_INTEGER get="inline" set="null" line="2430" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_INTEGER>
		<get_RGB_INTEGER get="inline" set="null" line="2435" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB_INTEGER>
		<get_RGBA_INTEGER get="inline" set="null" line="2440" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA_INTEGER>
		<get_R8 get="inline" set="null" line="2445" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8>
		<get_RG8 get="inline" set="null" line="2450" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8>
		<get_R16F get="inline" set="null" line="2455" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16F>
		<get_R32F get="inline" set="null" line="2460" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32F>
		<get_RG16F get="inline" set="null" line="2465" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16F>
		<get_RG32F get="inline" set="null" line="2470" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32F>
		<get_R8I get="inline" set="null" line="2475" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8I>
		<get_R8UI get="inline" set="null" line="2480" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8UI>
		<get_R16I get="inline" set="null" line="2485" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16I>
		<get_R16UI get="inline" set="null" line="2490" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16UI>
		<get_R32I get="inline" set="null" line="2495" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32I>
		<get_R32UI get="inline" set="null" line="2500" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32UI>
		<get_RG8I get="inline" set="null" line="2505" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8I>
		<get_RG8UI get="inline" set="null" line="2510" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8UI>
		<get_RG16I get="inline" set="null" line="2515" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16I>
		<get_RG16UI get="inline" set="null" line="2520" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16UI>
		<get_RG32I get="inline" set="null" line="2525" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32I>
		<get_RG32UI get="inline" set="null" line="2530" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32UI>
		<get_R8_SNORM get="inline" set="null" line="2535" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8_SNORM>
		<get_RG8_SNORM get="inline" set="null" line="2540" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8_SNORM>
		<get_RGB8_SNORM get="inline" set="null" line="2545" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8_SNORM>
		<get_RGBA8_SNORM get="inline" set="null" line="2550" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8_SNORM>
		<get_RGB10_A2UI get="inline" set="null" line="2555" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2UI>
		<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="2560" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_FORMAT>
		<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="2565" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_LEVELS>
		<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="2570" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_2_10_10_10_REV>
		<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="2575" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_10F_11F_11F_REV>
		<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="2580" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_5_9_9_9_REV>
		<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="2585" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
		<get_UNSIGNED_INT_24_8 get="inline" set="null" line="2590" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_24_8>
		<get_HALF_FLOAT get="inline" set="null" line="2595" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HALF_FLOAT>
		<get_RG get="inline" set="null" line="2600" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG>
		<get_RG_INTEGER get="inline" set="null" line="2605" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG_INTEGER>
		<get_INT_2_10_10_10_REV get="inline" set="null" line="2610" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_2_10_10_10_REV>
		<get_CURRENT_QUERY get="inline" set="null" line="2615" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_QUERY>
		<get_QUERY_RESULT get="inline" set="null" line="2620" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT>
		<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="2625" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT_AVAILABLE>
		<get_ANY_SAMPLES_PASSED get="inline" set="null" line="2630" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED>
		<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="2635" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
		<get_MAX_DRAW_BUFFERS get="inline" set="null" line="2640" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_DRAW_BUFFERS>
		<get_DRAW_BUFFER0 get="inline" set="null" line="2645" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER0>
		<get_DRAW_BUFFER1 get="inline" set="null" line="2650" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER1>
		<get_DRAW_BUFFER2 get="inline" set="null" line="2655" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER2>
		<get_DRAW_BUFFER3 get="inline" set="null" line="2660" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER3>
		<get_DRAW_BUFFER4 get="inline" set="null" line="2665" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER4>
		<get_DRAW_BUFFER5 get="inline" set="null" line="2670" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER5>
		<get_DRAW_BUFFER6 get="inline" set="null" line="2675" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER6>
		<get_DRAW_BUFFER7 get="inline" set="null" line="2680" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER7>
		<get_DRAW_BUFFER8 get="inline" set="null" line="2685" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER8>
		<get_DRAW_BUFFER9 get="inline" set="null" line="2690" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER9>
		<get_DRAW_BUFFER10 get="inline" set="null" line="2695" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER10>
		<get_DRAW_BUFFER11 get="inline" set="null" line="2700" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER11>
		<get_DRAW_BUFFER12 get="inline" set="null" line="2705" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER12>
		<get_DRAW_BUFFER13 get="inline" set="null" line="2710" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER13>
		<get_DRAW_BUFFER14 get="inline" set="null" line="2715" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER14>
		<get_DRAW_BUFFER15 get="inline" set="null" line="2720" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER15>
		<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="2725" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COLOR_ATTACHMENTS>
		<get_COLOR_ATTACHMENT1 get="inline" set="null" line="2730" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT1>
		<get_COLOR_ATTACHMENT2 get="inline" set="null" line="2735" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT2>
		<get_COLOR_ATTACHMENT3 get="inline" set="null" line="2740" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT3>
		<get_COLOR_ATTACHMENT4 get="inline" set="null" line="2745" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT4>
		<get_COLOR_ATTACHMENT5 get="inline" set="null" line="2750" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT5>
		<get_COLOR_ATTACHMENT6 get="inline" set="null" line="2755" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT6>
		<get_COLOR_ATTACHMENT7 get="inline" set="null" line="2760" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT7>
		<get_COLOR_ATTACHMENT8 get="inline" set="null" line="2765" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT8>
		<get_COLOR_ATTACHMENT9 get="inline" set="null" line="2770" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT9>
		<get_COLOR_ATTACHMENT10 get="inline" set="null" line="2775" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT10>
		<get_COLOR_ATTACHMENT11 get="inline" set="null" line="2780" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT11>
		<get_COLOR_ATTACHMENT12 get="inline" set="null" line="2785" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT12>
		<get_COLOR_ATTACHMENT13 get="inline" set="null" line="2790" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT13>
		<get_COLOR_ATTACHMENT14 get="inline" set="null" line="2795" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT14>
		<get_COLOR_ATTACHMENT15 get="inline" set="null" line="2800" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT15>
		<get_SAMPLER_3D get="inline" set="null" line="2805" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_3D>
		<get_SAMPLER_2D_SHADOW get="inline" set="null" line="2810" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_SHADOW>
		<get_SAMPLER_2D_ARRAY get="inline" set="null" line="2815" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY>
		<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="2820" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY_SHADOW>
		<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="2825" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE_SHADOW>
		<get_INT_SAMPLER_2D get="inline" set="null" line="2830" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D>
		<get_INT_SAMPLER_3D get="inline" set="null" line="2835" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_3D>
		<get_INT_SAMPLER_CUBE get="inline" set="null" line="2840" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_CUBE>
		<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="2845" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D_ARRAY>
		<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="2850" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D>
		<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="2855" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_3D>
		<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="2860" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_CUBE>
		<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="2865" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<get_MAX_SAMPLES get="inline" set="null" line="2870" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SAMPLES>
		<get_SAMPLER_BINDING get="inline" set="null" line="2875" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_BINDING>
		<get_PIXEL_PACK_BUFFER get="inline" set="null" line="2880" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER>
		<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="2885" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER>
		<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="2890" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER_BINDING>
		<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="2895" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER_BINDING>
		<get_COPY_READ_BUFFER get="inline" set="null" line="2900" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER>
		<get_COPY_WRITE_BUFFER get="inline" set="null" line="2905" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER>
		<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="2910" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER_BINDING>
		<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="2915" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER_BINDING>
		<get_FLOAT_MAT2x3 get="inline" set="null" line="2920" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x3>
		<get_FLOAT_MAT2x4 get="inline" set="null" line="2925" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x4>
		<get_FLOAT_MAT3x2 get="inline" set="null" line="2930" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x2>
		<get_FLOAT_MAT3x4 get="inline" set="null" line="2935" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x4>
		<get_FLOAT_MAT4x2 get="inline" set="null" line="2940" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x2>
		<get_FLOAT_MAT4x3 get="inline" set="null" line="2945" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x3>
		<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="2950" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC2>
		<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="2955" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC3>
		<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="2960" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC4>
		<get_UNSIGNED_NORMALIZED get="inline" set="null" line="2965" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_NORMALIZED>
		<get_SIGNED_NORMALIZED get="inline" set="null" line="2970" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNED_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="2975" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_INTEGER>
		<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="2980" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
		<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="2985" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="2990" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="2995" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_VARYINGS>
		<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="3000" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_START>
		<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="3005" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="3010" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="3015" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="3020" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="3025" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INTERLEAVED_ATTRIBS>
		<get_SEPARATE_ATTRIBS get="inline" set="null" line="3030" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SEPARATE_ATTRIBS>
		<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="3035" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER>
		<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="3040" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<get_TRANSFORM_FEEDBACK get="inline" set="null" line="3045" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK>
		<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="3050" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PAUSED>
		<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="3055" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_ACTIVE>
		<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="3060" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BINDING>
		<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="3065" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="3070" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="3075" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="3080" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="3085" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="3090" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="3095" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="3100" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="3105" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_DEFAULT>
		<get_DEPTH24_STENCIL8 get="inline" set="null" line="3110" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH24_STENCIL8>
		<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="3115" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER_BINDING>
		<get_READ_FRAMEBUFFER get="inline" set="null" line="3120" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER>
		<get_DRAW_FRAMEBUFFER get="inline" set="null" line="3125" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER>
		<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="3130" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="3135" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_SAMPLES>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="3140" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="3145" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<get_UNIFORM_BUFFER get="inline" set="null" line="3150" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER>
		<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="3155" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_BINDING>
		<get_UNIFORM_BUFFER_START get="inline" set="null" line="3160" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_START>
		<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="3165" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_SIZE>
		<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="3170" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_BLOCKS>
		<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="3175" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
		<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="3180" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_UNIFORM_BLOCKS>
		<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="3185" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BUFFER_BINDINGS>
		<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="3190" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BLOCK_SIZE>
		<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="3195" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="3200" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="3205" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="3210" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORM_BLOCKS>
		<get_UNIFORM_TYPE get="inline" set="null" line="3215" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_TYPE>
		<get_UNIFORM_SIZE get="inline" set="null" line="3220" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_SIZE>
		<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="3225" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_INDEX>
		<get_UNIFORM_OFFSET get="inline" set="null" line="3230" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_OFFSET>
		<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="3235" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_ARRAY_STRIDE>
		<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="3240" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_MATRIX_STRIDE>
		<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="3245" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_IS_ROW_MAJOR>
		<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="3250" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_BINDING>
		<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="3255" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_DATA_SIZE>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="3260" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="3265" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="3270" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="3275" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<get_OBJECT_TYPE get="inline" set="null" line="3280" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OBJECT_TYPE>
		<get_SYNC_CONDITION get="inline" set="null" line="3285" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_CONDITION>
		<get_SYNC_STATUS get="inline" set="null" line="3290" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_STATUS>
		<get_SYNC_FLAGS get="inline" set="null" line="3295" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLAGS>
		<get_SYNC_FENCE get="inline" set="null" line="3300" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FENCE>
		<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="3305" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_GPU_COMMANDS_COMPLETE>
		<get_UNSIGNALED get="inline" set="null" line="3310" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNALED>
		<get_SIGNALED get="inline" set="null" line="3315" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNALED>
		<get_ALREADY_SIGNALED get="inline" set="null" line="3320" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALREADY_SIGNALED>
		<get_TIMEOUT_EXPIRED get="inline" set="null" line="3325" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_EXPIRED>
		<get_CONDITION_SATISFIED get="inline" set="null" line="3330" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONDITION_SATISFIED>
		<get_WAIT_FAILED get="inline" set="null" line="3335" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_WAIT_FAILED>
		<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="3340" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLUSH_COMMANDS_BIT>
		<get_COLOR get="inline" set="null" line="3345" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR>
		<get_DEPTH get="inline" set="null" line="3350" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH>
		<get_STENCIL get="inline" set="null" line="3355" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL>
		<get_MIN get="inline" set="null" line="3360" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN>
		<get_MAX get="inline" set="null" line="3365" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX>
		<get_DEPTH_COMPONENT24 get="inline" set="null" line="3370" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT24>
		<get_STREAM_READ get="inline" set="null" line="3375" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_READ>
		<get_STREAM_COPY get="inline" set="null" line="3380" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_COPY>
		<get_STATIC_READ get="inline" set="null" line="3385" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_READ>
		<get_STATIC_COPY get="inline" set="null" line="3390" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_COPY>
		<get_DYNAMIC_READ get="inline" set="null" line="3395" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_READ>
		<get_DYNAMIC_COPY get="inline" set="null" line="3400" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_COPY>
		<get_DEPTH_COMPONENT32F get="inline" set="null" line="3405" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT32F>
		<get_DEPTH32F_STENCIL8 get="inline" set="null" line="3410" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH32F_STENCIL8>
		<get_INVALID_INDEX get="inline" set="null" line="3415" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_INDEX>
		<get_TIMEOUT_IGNORED get="inline" set="null" line="3420" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_IGNORED>
		<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="3425" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<activeTexture public="1" get="inline" set="null" line="3430" static="1">
			<f a="this:texture">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="3435" static="1">
			<f a="this:program:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<beginQuery public="1" get="inline" set="null" line="3440" static="1">
			<f a="this:target:query">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="3445" static="1">
			<f a="this:primitiveNode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="3450" static="1">
			<f a="this:program:index:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="3455" static="1">
			<f a="this:target:buffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="3460" static="1">
			<f a="this:target:index:buffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="3465" static="1">
			<f a="this:target:index:buffer:offset:size">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="3470" static="1">
			<f a="this:target:framebuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="3475" static="1">
			<f a="this:target:renderbuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="3480" static="1">
			<f a="this:unit:sampler">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindSampler>
		<bindTexture public="1" get="inline" set="null" line="3485" static="1">
			<f a="this:target:texture">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="3490" static="1">
			<f a="this:target:transformFeedback">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="3495" static="1">
			<f a="this:vertexArray">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindVertexArray>
		<blendColor public="1" get="inline" set="null" line="3500" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="3505" static="1">
			<f a="this:mode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="3510" static="1">
			<f a="this:modeRGB:modeAlpha">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="3515" static="1">
			<f a="this:sfactor:dfactor">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="3520" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<blitFramebuffer public="1" get="inline" set="null" line="3525" static="1">
			<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blitFramebuffer>
		<bufferData public="1" get="inline" set="null" line="3530" static="1">
			<f a="this:target:size:data:usage">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="3535" static="1">
			<f a="this:target:offset:size:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="3540" static="1">
			<f a="this:target">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="3545" static="1">
			<f a="this:mask">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearBufferfi public="1" get="inline" set="null" line="3550" static="1">
			<f a="this:buffer:drawbuffer:depth:stencil">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfi>
		<clearBufferfv public="1" get="inline" set="null" line="3555" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfv>
		<clearBufferiv public="1" get="inline" set="null" line="3560" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferiv>
		<clearBufferuiv public="1" get="inline" set="null" line="3565" static="1">
			<f a="this:buffer:drawbuffer:value">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="3570" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepthf public="1" get="inline" set="null" line="3575" static="1">
			<f a="this:depth">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepthf>
		<clearStencil public="1" get="inline" set="null" line="3580" static="1">
			<f a="this:s">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="3585" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="3590" static="1">
			<f a="this:red:green:blue:alpha">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="3595" static="1">
			<f a="this:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="3600" static="1">
			<f a="this:target:level:internalformat:width:height:border:imageSize:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexImage3D public="1" get="inline" set="null" line="3605" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:imageSize:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="3611" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:imageSize:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="3617" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="3623" static="1">
			<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="3628" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="3633" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="3638" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="3643" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="3648" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="3653" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createQuery public="1" get="inline" set="null" line="3658" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="3663" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="3668" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createSampler>
		<createShader public="1" get="inline" set="null" line="3673" static="1">
			<f a="this:type">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="3678" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="3683" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="3688" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createVertexArray>
		<cullFace public="1" get="inline" set="null" line="3693" static="1">
			<f a="this:mode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="3698" static="1">
			<f a="this:buffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="3703" static="1">
			<f a="this:framebuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="3708" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="3713" static="1">
			<f a="this:query">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="3718" static="1">
			<f a="this:renderbuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="3723" static="1">
			<f a="this:sampler">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="3728" static="1">
			<f a="this:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteSync public="1" get="inline" set="null" line="3733" static="1">
			<f a="this:sync">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="3738" static="1">
			<f a="this:texture">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="3743" static="1">
			<f a="this:transformFeedback">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="3748" static="1">
			<f a="this:vertexArray">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="3753" static="1">
			<f a="this:func">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="3758" static="1">
			<f a="this:flag">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRangef public="1" get="inline" set="null" line="3763" static="1">
			<f a="this:zNear:zFar">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRangef>
		<detachShader public="1" get="inline" set="null" line="3768" static="1">
			<f a="this:program:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="3773" static="1">
			<f a="this:cap">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="3778" static="1">
			<f a="this:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="3783" static="1">
			<f a="this:mode:first:count">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="3788" static="1">
			<f a="this:mode:first:count:instanceCount">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="3793" static="1">
			<f a="this:buffers">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawBuffers>
		<drawElements public="1" get="inline" set="null" line="3798" static="1">
			<f a="this:mode:count:type:offset">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="3803" static="1">
			<f a="this:mode:count:type:offset:instanceCount">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="3808" static="1">
			<f a="this:mode:start:end:count:type:offset">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawRangeElements>
		<enable public="1" get="inline" set="null" line="3813" static="1">
			<f a="this:cap">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="3818" static="1">
			<f a="this:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="3823" static="1">
			<f a="this:target">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="3828" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="3833" static="1">
			<f a="this:condition:flags">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSync"/>
			</f>
			<meta><m n=":impl"/></meta>
		</fenceSync>
		<finish public="1" get="inline" set="null" line="3838" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="3843" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="3848" static="1">
			<f a="this:target:attachment:renderbuffertarget:renderbuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="3853" static="1">
			<f a="this:target:attachment:textarget:texture:level">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="3858" static="1">
			<f a="this:target:attachment:texture:level:layer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="3863" static="1">
			<f a="this:mode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<genBuffers public="1" set="method" line="3868" static="1">
			<f a="this:n:?buffers" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLBuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ buffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genBuffers>
		<generateMipmap public="1" get="inline" set="null" line="3880" static="1">
			<f a="this:target">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<genFramebuffers public="1" set="method" line="3885" static="1">
			<f a="this:n:?framebuffers" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLFramebuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ framebuffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genFramebuffers>
		<genQueries public="1" set="method" line="3897" static="1">
			<f a="this:n:?queries" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLQuery"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ queries : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genQueries>
		<genRenderbuffers public="1" set="method" line="3909" static="1">
			<f a="this:n:?renderbuffers" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLRenderbuffer"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ renderbuffers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genRenderbuffers>
		<genSamplers public="1" set="method" line="3921" static="1">
			<f a="this:n:?samplers" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLSampler"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ samplers : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genSamplers>
		<genTextures public="1" set="method" line="3933" static="1">
			<f a="this:n:?textures" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLTexture"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ textures : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genTextures>
		<genTransformFeedbacks public="1" set="method" line="3945" static="1">
			<f a="this:n:?transformFeedbacks" v="::null">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
				<c path="Array"><t path="lime.graphics.opengl.GLTransformFeedback"/></c>
			</f>
			<meta>
				<m n=":value"><e>{ transformFeedbacks : null }</e></m>
				<m n=":impl"/>
			</meta>
		</genTransformFeedbacks>
		<getActiveAttrib public="1" get="inline" set="null" line="3957" static="1">
			<f a="this:program:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="3962" static="1">
			<f a="this:program:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getActiveUniformBlocki public="1" get="inline" set="null" line="3967" static="1">
			<f a="this:program:uniformBlockIndex:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" get="inline" set="null" line="3972" static="1">
			<f a="this:program:uniformBlockIndex:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="3977" static="1">
			<f a="this:program:uniformBlockIndex">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockName>
		<getActiveUniformsiv public="1" get="inline" set="null" line="3982" static="1">
			<f a="this:program:uniformIndices:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformsiv>
		<getAttachedShaders public="1" get="inline" set="null" line="3987" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="3992" static="1">
			<f a="this:program:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBoolean public="1" get="inline" set="null" line="3997" static="1">
			<f a="this:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBoolean>
		<getBooleanv public="1" get="inline" set="null" line="4002" static="1">
			<f a="this:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBooleanv>
		<getBufferParameteri public="1" get="inline" set="null" line="4007" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteri>
		<getBufferParameteri64v public="1" get="inline" set="null" line="4012" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteri64v>
		<getBufferParameteriv public="1" get="inline" set="null" line="4017" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameteriv>
		<getBufferPointerv public="1" get="inline" set="null" line="4022" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferPointerv>
		<getError public="1" get="inline" set="null" line="4027" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getFloat public="1" get="inline" set="null" line="4032" static="1">
			<f a="this:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFloat>
		<getFloatv public="1" get="inline" set="null" line="4037" static="1">
			<f a="this:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFloatv>
		<getExtension public="1" get="inline" set="null" line="4042" static="1">
			<f a="this:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="4047" static="1">
			<f a="this:program:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFragDataLocation>
		<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="4052" static="1">
			<f a="this:target:attachment:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="4057" static="1">
			<f a="this:target:attachment:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameteriv>
		<getInteger public="1" get="inline" set="null" line="4062" static="1">
			<f a="this:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger>
		<getInteger64 public="1" get="inline" set="null" line="4067" static="1">
			<f a="this:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64>
		<getInteger64i public="1" get="inline" set="null" line="4072" static="1">
			<f a="this:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64i>
		<getInteger64i_v public="1" get="inline" set="null" line="4077" static="1">
			<f a="this:pname:index:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64i_v>
		<getInteger64v public="1" get="inline" set="null" line="4082" static="1">
			<f a="this:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInteger64v>
		<getIntegeri_v public="1" get="inline" set="null" line="4087" static="1">
			<f a="this:pname:index:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIntegeri_v>
		<getIntegerv public="1" get="inline" set="null" line="4092" static="1">
			<f a="this:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIntegerv>
		<getInternalformati public="1" get="inline" set="null" line="4097" static="1">
			<f a="this:target:internalformat:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformati>
		<getInternalformativ public="1" get="inline" set="null" line="4102" static="1">
			<f a="this:target:internalformat:pname:bufSize:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformativ>
		<getProgramBinary public="1" get="inline" set="null" line="4107" static="1">
			<f a="this:program:binaryFormat">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramBinary>
		<getProgrami public="1" get="inline" set="null" line="4112" static="1">
			<f a="this:program:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgrami>
		<getProgramInfoLog public="1" get="inline" set="null" line="4117" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getProgramiv public="1" get="inline" set="null" line="4122" static="1">
			<f a="this:program:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramiv>
		<getQueryi public="1" get="inline" set="null" line="4127" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryi>
		<getQueryiv public="1" get="inline" set="null" line="4132" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryiv>
		<getQueryObjectui public="1" get="inline" set="null" line="4137" static="1">
			<f a="this:query:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryObjectui>
		<getQueryObjectuiv public="1" get="inline" set="null" line="4142" static="1">
			<f a="this:query:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryObjectuiv>
		<getRenderbufferParameteri public="1" get="inline" set="null" line="4147" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" get="inline" set="null" line="4152" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameteriv>
		<getSamplerParameteri public="1" get="inline" set="null" line="4157" static="1">
			<f a="this:sampler:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameteri>
		<getSamplerParameteriv public="1" get="inline" set="null" line="4162" static="1">
			<f a="this:sampler:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameteriv>
		<getSamplerParameterf public="1" get="inline" set="null" line="4167" static="1">
			<f a="this:sampler:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameterf>
		<getSamplerParameterfv public="1" get="inline" set="null" line="4172" static="1">
			<f a="this:sampler:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameterfv>
		<getShaderInfoLog public="1" get="inline" set="null" line="4177" static="1">
			<f a="this:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderi public="1" get="inline" set="null" line="4182" static="1">
			<f a="this:shader:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderi>
		<getShaderiv public="1" get="inline" set="null" line="4187" static="1">
			<f a="this:shader:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderiv>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="4192" static="1">
			<f a="this:shadertype:precisiontype">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="4197" static="1">
			<f a="this:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getString public="1" get="inline" set="null" line="4202" static="1">
			<f a="this:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getString>
		<getStringi public="1" get="inline" set="null" line="4207" static="1">
			<f a="this:name:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getStringi>
		<getSyncParameteri public="1" get="inline" set="null" line="4212" static="1">
			<f a="this:sync:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameteri>
		<getSyncParameteriv public="1" get="inline" set="null" line="4217" static="1">
			<f a="this:sync:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameteriv>
		<getTexParameterf public="1" get="inline" set="null" line="4222" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameterf>
		<getTexParameterfv public="1" get="inline" set="null" line="4227" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameterfv>
		<getTexParameteri public="1" get="inline" set="null" line="4232" static="1">
			<f a="this:target:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameteri>
		<getTexParameteriv public="1" get="inline" set="null" line="4237" static="1">
			<f a="this:target:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameteriv>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="4242" static="1">
			<f a="this:program:index">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTransformFeedbackVarying>
		<getUniformf public="1" get="inline" set="null" line="4247" static="1">
			<f a="this:program:location">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformf>
		<getUniformfv public="1" get="inline" set="null" line="4252" static="1">
			<f a="this:program:location:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformfv>
		<getUniformi public="1" get="inline" set="null" line="4257" static="1">
			<f a="this:program:location">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformi>
		<getUniformiv public="1" get="inline" set="null" line="4262" static="1">
			<f a="this:program:location:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformiv>
		<getUniformui public="1" get="inline" set="null" line="4267" static="1">
			<f a="this:program:location">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformui>
		<getUniformuiv public="1" get="inline" set="null" line="4272" static="1">
			<f a="this:program:location:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformuiv>
		<getUniformBlockIndex public="1" get="inline" set="null" line="4277" static="1">
			<f a="this:program:uniformBlockName">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="4282" static="1">
			<f a="this:program:uniformNames">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="4287" static="1">
			<f a="this:program:name">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttribf public="1" get="inline" set="null" line="4292" static="1">
			<f a="this:index:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribf>
		<getVertexAttribfv public="1" get="inline" set="null" line="4297" static="1">
			<f a="this:index:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribfv>
		<getVertexAttribi public="1" get="inline" set="null" line="4302" static="1">
			<f a="this:index:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribi>
		<getVertexAttribIi public="1" get="inline" set="null" line="4307" static="1">
			<f a="this:index:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIi>
		<getVertexAttribIiv public="1" get="inline" set="null" line="4312" static="1">
			<f a="this:index:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIiv>
		<getVertexAttribIui public="1" get="inline" set="null" line="4317" static="1">
			<f a="this:index:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIui>
		<getVertexAttribIuiv public="1" get="inline" set="null" line="4322" static="1">
			<f a="this:index:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribIuiv>
		<getVertexAttribiv public="1" get="inline" set="null" line="4327" static="1">
			<f a="this:index:pname:params">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribiv>
		<getVertexAttribPointerv public="1" get="inline" set="null" line="4332" static="1">
			<f a="this:index:pname">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribPointerv>
		<hint public="1" get="inline" set="null" line="4337" static="1">
			<f a="this:target:mode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="4342" static="1">
			<f a="this:target:attachments">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="4347" static="1">
			<f a="this:target:attachments:x:y:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="4352" static="1">
			<f a="this:buffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isEnabled public="1" get="inline" set="null" line="4357" static="1">
			<f a="this:cap">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="4362" static="1">
			<f a="this:framebuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="4367" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isQuery public="1" get="inline" set="null" line="4372" static="1">
			<f a="this:query">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="4377" static="1">
			<f a="this:renderbuffer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="4382" static="1">
			<f a="this:sampler">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSampler>
		<isShader public="1" get="inline" set="null" line="4387" static="1">
			<f a="this:shader">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isTexture public="1" get="inline" set="null" line="4392" static="1">
			<f a="this:texture">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="4397" static="1">
			<f a="this:transformFeedback">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="4402" static="1">
			<f a="this:vertexArray">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="4407" static="1">
			<f a="this:width">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="4412" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<mapBufferRange public="1" get="inline" set="null" line="4417" static="1">
			<f a="this:target:offset:length:access">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</mapBufferRange>
		<pauseTransformFeedback public="1" get="inline" set="null" line="4422" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="4427" static="1">
			<f a="this:pname:param">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="4432" static="1">
			<f a="this:factor:units">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<programBinary public="1" get="inline" set="null" line="4437" static="1">
			<f a="this:program:binaryFormat:binary:length">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</programBinary>
		<programParameteri public="1" get="inline" set="null" line="4442" static="1">
			<f a="this:program:pname:value">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</programParameteri>
		<readBuffer public="1" get="inline" set="null" line="4447" static="1">
			<f a="this:src">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readBuffer>
		<readPixels public="1" get="inline" set="null" line="4452" static="1">
			<f a="this:x:y:width:height:format:type:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<releaseShaderCompiler public="1" get="inline" set="null" line="4457" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</releaseShaderCompiler>
		<renderbufferStorage public="1" get="inline" set="null" line="4462" static="1">
			<f a="this:target:internalformat:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="4467" static="1">
			<f a="this:target:samples:internalformat:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="4472" static="1">
			<f a="this">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="4477" static="1">
			<f a="this:value:invert">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="4482" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="4487" static="1">
			<f a="this:sampler:pname:param">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameteri>
		<scissor public="1" get="inline" set="null" line="4492" static="1">
			<f a="this:x:y:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderBinary public="1" get="inline" set="null" line="4497" static="1">
			<f a="this:shaders:binaryformat:binary:length">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderBinary>
		<shaderSource public="1" get="inline" set="null" line="4502" static="1">
			<f a="this:shader:source">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="4507" static="1">
			<f a="this:func:ref:mask">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="4512" static="1">
			<f a="this:face:func:ref:mask">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="4517" static="1">
			<f a="this:mask">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="4522" static="1">
			<f a="this:face:mask">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="4527" static="1">
			<f a="this:fail:zfail:zpass">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="4532" static="1">
			<f a="this:face:fail:zfail:zpass">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="4537" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texImage3D public="1" get="inline" set="null" line="4542" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:format:type:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="4548" static="1">
			<f a="this:target:level:internalformat:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="4553" static="1">
			<f a="this:target:level:internalformat:width:height:depth">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="4558" static="1">
			<f a="this:target:pname:param">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" get="inline" set="null" line="4563" static="1">
			<f a="this:target:pname:param">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="4568" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="4573" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="4579" static="1">
			<f a="this:program:varyings:bufferMode">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="4584" static="1">
			<f a="this:location:v0">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="4589" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="4594" static="1">
			<f a="this:location:v0">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="4599" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="4604" static="1">
			<f a="this:location:v0">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="4609" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="4614" static="1">
			<f a="this:location:v0:v1">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="4619" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="4624" static="1">
			<f a="this:location:v0:v1">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="4629" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="4634" static="1">
			<f a="this:location:v0:v1">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="4639" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="4644" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="4649" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="4654" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="4659" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="4664" static="1">
			<f a="this:location:v0:v1:v2">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="4669" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="4674" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="4679" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="4684" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="4689" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="4694" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="4699" static="1">
			<f a="this:location:count:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="4704" static="1">
			<f a="this:program:uniformBlockIndex:uniformBlockBinding">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformBlockBinding>
		<uniformMatrix2fv public="1" get="inline" set="null" line="4709" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" get="inline" set="null" line="4714" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" get="inline" set="null" line="4719" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="4724" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" get="inline" set="null" line="4729" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" get="inline" set="null" line="4734" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="4739" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" get="inline" set="null" line="4744" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" get="inline" set="null" line="4749" static="1">
			<f a="this:location:count:transpose:v">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4x3fv>
		<unmapBuffer public="1" get="inline" set="null" line="4754" static="1">
			<f a="this:target">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unmapBuffer>
		<useProgram public="1" get="inline" set="null" line="4759" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="4764" static="1">
			<f a="this:program">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="4769" static="1">
			<f a="this:indx:x">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="4774" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="4779" static="1">
			<f a="this:indx:x:y">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="4784" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="4789" static="1">
			<f a="this:indx:x:y:z">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="4794" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="4799" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="4804" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="4809" static="1">
			<f a="this:index:divisor">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="4814" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="4819" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="4824" static="1">
			<f a="this:indx:x:y:z:w">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="4829" static="1">
			<f a="this:indx:values">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="4834" static="1">
			<f a="this:indx:size:type:stride:pointer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="4839" static="1">
			<f a="this:indx:size:type:normalized:stride:pointer">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="4844" static="1">
			<f a="this:x:y:width:height">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
		<waitSync public="1" get="inline" set="null" line="4849" static="1">
			<f a="this:sync:flags:timeout">
				<c path="lime._internal.backend.native.NativeOpenGLRenderContext"/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</waitSync>
		<fromGL set="method" line="4854" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.OpenGLES3RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<fromRenderContext set="method" line="4859" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.OpenGLES3RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
	</class>
	<abstract path="lime.graphics.OpenGLRenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLRenderContext.hx">
		<from>
			<icast><c path="lime._internal.backend.native.NativeOpenGLRenderContext"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><c path="lime._internal.backend.native.NativeOpenGLRenderContext"/></this>
		<to><icast><c path="lime._internal.backend.native.NativeOpenGLRenderContext"/></icast></to>
		<haxe_doc>The `OpenGLRenderContext` allows access to OpenGL features when OpenGL is the render
	context type of the `Window`. Historically, Lime was designed for WebGL render support
	on all platforms, and support has expanded to provide additional OpenGL ES native APIs.

	Support for desktop OpenGL-specific features is currently sparse, but the
	`OpenGLRenderContext` provides the platform for us to add additional desktop specific
	features.

	The `OpenGLRenderContext` is not compatible with mobile or web targets, but it can be
	converted to an OpenGL ES or a WebGL-style context for cross-platform development.

	You can convert from `lime.graphics.RenderContext` or `lime.graphics.opengl.GL`, and
	can convert to `lime.graphics.OpenGLES3RenderContext`,
	`lime.graphics.OpenGLES2RenderContext`, `lime.graphics.WebGL2RenderContext`, or
	`lime.graphics.WebGLRenderContext` directly if desired:

	```haxe
	var gl:OpenGLRenderContext = window.context;
	var gl:OpenGLRenderContext = GL;

	var gles3:OpenGLES3RenderContext = gl;
	var gles2:OpenGLES2RenderContext = gl;
	var webgl2:WebGL2RenderContext = gl;
	var webgl:WebGLRenderContext = gl;
	```</haxe_doc>
		<meta>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLRenderContext.hx" private="1" module="lime.graphics.OpenGLRenderContext" final="1">
	<fromRenderContext set="method" line="38" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.OpenGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/OpenGLRenderContext.hx" private="1" module="lime.graphics.OpenGLRenderContext" final="1">
		<fromRenderContext set="method" line="38" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.OpenGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
	</class>
	<abstract path="lime.graphics.PixelFormat" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/PixelFormat.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>An enum containing different pixel encoding formats for image data</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1" final="1">
	<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="11" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit RGBA color order</haxe_doc>
	</RGBA32>
	<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit ARGB color order</haxe_doc>
	</ARGB32>
	<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="21" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit BGRA color order</haxe_doc>
	</BGRA32>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1" final="1">
		<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="11" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit RGBA color order</haxe_doc>
		</RGBA32>
		<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="16" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit ARGB color order</haxe_doc>
		</ARGB32>
		<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="21" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit BGRA color order</haxe_doc>
		</BGRA32>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.graphics.RenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/RenderContext.hx">
		<attributes public="1" set="null">
			<t path="lime.graphics.RenderContextAttributes"/>
			<haxe_doc>Additional information about the current context</haxe_doc>
		</attributes>
		<cairo public="1" set="null">
			<x path="lime.graphics.CairoRenderContext"/>
			<haxe_doc>Access to the current Cairo render context, if available</haxe_doc>
		</cairo>
		<gl public="1" set="null">
			<x path="lime.graphics.OpenGLRenderContext"/>
			<haxe_doc>Access to the current HTML5 canvas render context, if available</haxe_doc>
		</gl>
		<gles2 public="1" set="null">
			<x path="lime.graphics.OpenGLES2RenderContext"/>
			<haxe_doc>Access to the current OpenGL ES 2.0 render API, if available</haxe_doc>
		</gles2>
		<gles3 public="1" set="null">
			<x path="lime.graphics.OpenGLES3RenderContext"/>
			<haxe_doc>Access to the current OpenGL ES 3.0 render API, if available</haxe_doc>
		</gles3>
		<type public="1" set="null">
			<x path="lime.graphics.RenderContextType"/>
			<haxe_doc>The type of the current `RenderContext`</haxe_doc>
		</type>
		<version public="1" set="null"><c path="String"/></version>
		<webgl public="1" set="null">
			<x path="lime.graphics.WebGLRenderContext"/>
			<haxe_doc>Access to the current WebGL render API, if available</haxe_doc>
		</webgl>
		<webgl2 public="1" set="null">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<haxe_doc>Access to the current WebGL 2 render API, if available</haxe_doc>
		</webgl2>
		<window public="1" set="null"><c path="lime.ui.Window"/></window>
		<new set="method" line="91">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<haxe_doc>The `RenderContext` provides access to rendering for a Lime `Window`.

	Only one render context type is used at once, but when `OPENGL` or
	`OPENGLES` is the context type, compatibility contexts for other
	forms of GL (such as WebGL) may be available also.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="lime.graphics.RenderContextAttributes" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/RenderContextAttributes.hx">
		<a>
			<vsync>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether vertical-sync (VSync) is enabled</haxe_doc>
			</vsync>
			<version>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
			</version>
			<type>
				<x path="Null"><x path="lime.graphics.RenderContextType"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The type of render context requested</haxe_doc>
			</type>
			<stencil>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether a stencil buffer is enabled</haxe_doc>
			</stencil>
			<hardware>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether hardware acceleration is allowed</haxe_doc>
			</hardware>
			<depth>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether a depth buffer is enabled</haxe_doc>
			</depth>
			<colorDepth>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The color depth of the rendering context in bits</haxe_doc>
			</colorDepth>
			<background>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>An optional `background` property to be provided to rendering,
		a value of `null` means no background color.</haxe_doc>
			</background>
			<antialiasing>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether to enable anti-aliasing, `0` is disabled, `2` enables
		2x2 anti-aliasing or `4` enables 4x4 anti-aliasing.</haxe_doc>
			</antialiasing>
		</a>
		<haxe_doc>Additional options possible for a render context</haxe_doc>
	</typedef>
	<abstract path="lime.graphics.RenderContextType" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/RenderContextType.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<haxe_doc>An enum for possible render context types</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._RenderContextType.RenderContextType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/RenderContextType.hx" private="1" module="lime.graphics.RenderContextType" extern="1" final="1">
	<CAIRO public="1" get="inline" set="null" expr="cast &quot;cairo&quot;" line="11" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "cairo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a Cairo render context</haxe_doc>
	</CAIRO>
	<CANVAS public="1" get="inline" set="null" expr="cast &quot;canvas&quot;" line="16" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "canvas"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an HTML5 canvas render context</haxe_doc>
	</CANVAS>
	<DOM public="1" get="inline" set="null" expr="cast &quot;dom&quot;" line="21" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "dom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an HTML5 DOM render context</haxe_doc>
	</DOM>
	<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="26" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "flash"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a Flash render context</haxe_doc>
	</FLASH>
	<OPENGL public="1" get="inline" set="null" expr="cast &quot;opengl&quot;" line="31" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "opengl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an OpenGL render context</haxe_doc>
	</OPENGL>
	<OPENGLES public="1" get="inline" set="null" expr="cast &quot;opengles&quot;" line="36" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "opengles"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an OpenGL ES render context</haxe_doc>
	</OPENGLES>
	<WEBGL public="1" get="inline" set="null" expr="cast &quot;webgl&quot;" line="41" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "webgl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a WebGL render context</haxe_doc>
	</WEBGL>
	<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="46" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "custom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a custom render context</haxe_doc>
	</CUSTOM>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._RenderContextType.RenderContextType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/RenderContextType.hx" private="1" module="lime.graphics.RenderContextType" extern="1" final="1">
		<CAIRO public="1" get="inline" set="null" expr="cast &quot;cairo&quot;" line="11" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "cairo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a Cairo render context</haxe_doc>
		</CAIRO>
		<CANVAS public="1" get="inline" set="null" expr="cast &quot;canvas&quot;" line="16" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "canvas"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an HTML5 canvas render context</haxe_doc>
		</CANVAS>
		<DOM public="1" get="inline" set="null" expr="cast &quot;dom&quot;" line="21" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "dom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an HTML5 DOM render context</haxe_doc>
		</DOM>
		<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="26" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "flash"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a Flash render context</haxe_doc>
		</FLASH>
		<OPENGL public="1" get="inline" set="null" expr="cast &quot;opengl&quot;" line="31" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "opengl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an OpenGL render context</haxe_doc>
		</OPENGL>
		<OPENGLES public="1" get="inline" set="null" expr="cast &quot;opengles&quot;" line="36" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "opengles"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an OpenGL ES render context</haxe_doc>
		</OPENGLES>
		<WEBGL public="1" get="inline" set="null" expr="cast &quot;webgl&quot;" line="41" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "webgl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a WebGL render context</haxe_doc>
		</WEBGL>
		<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="46" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "custom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a custom render context</haxe_doc>
		</CUSTOM>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.WebGL2RenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGL2RenderContext.hx">
		<from>
			<icast><d/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
		</from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<haxe_doc>The `WebGL2RenderContext` allows access to WebGL 2 features when OpenGL, OpenGL ES
	or WebGL is the render context type of the `Window`, and the current context supports
	WebGL 2 features.

	Using a WebGL context on a desktop platform enables support for cross-platform
	code that should run on all platforms (when using hardware acceleration), though support
	for WebGL 2 features are more limited than WebGL, and require an OpenGL ES 3.0 compatible
	desktop or mobile context.

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.OpenGLES3RenderContext` or `lime.graphics.opengl.GL`, and can convert to
	`lime.graphics.WebGLRenderContext` directly if desired:

	```haxe
	var webgl2:WebGL2RenderContext = window.context;
	var webgl2:WebGL2RenderContext = gl;
	var webgl2:WebGL2RenderContext = gles3;
	var webgl2:WebGL2RenderContext = GL;

	var webgl:WebGLRenderContext = webgl2;
	```</haxe_doc>
		<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
		<impl><class path="lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGL2RenderContext.hx" private="1" module="lime.graphics.WebGL2RenderContext" final="1">
	<__tempPointer expr="new BytePointer()" line="310" static="1">
		<x path="lime.utils.BytePointer"/>
		<meta><m n=":value"><e>new BytePointer()</e></m></meta>
	</__tempPointer>
	<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_BUFFER_BIT>
	<POINTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINTS>
	<LINES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINES>
	<LINE_LOOP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_FAN>
	<ZERO public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ZERO>
	<ONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE>
	<SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_COLOR>
	<SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_ALPHA>
	<DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA_SATURATE>
	<FUNC_ADD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_ADD>
	<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION>
	<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_ALPHA>
	<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_REVERSE_SUBTRACT>
	<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_RGB>
	<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_RGB>
	<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_ALPHA>
	<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_ALPHA>
	<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<BLEND_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_COLOR>
	<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER>
	<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER_BINDING>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<STREAM_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_DRAW>
	<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_USAGE>
	<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_VERTEX_ATTRIB>
	<FRONT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT>
	<BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_AND_BACK>
	<CULL_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE>
	<BLEND public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND>
	<DITHER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DITHER>
	<STENCIL_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE>
	<NO_ERROR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_OPERATION>
	<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OUT_OF_MEMORY>
	<CW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CW>
	<CCW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CCW>
	<LINE_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_WIDTH>
	<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE_MODE>
	<FRONT_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_FACE>
	<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_RANGE>
	<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_WRITEMASK>
	<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_FUNC>
	<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FUNC>
	<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FAIL>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_REF>
	<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_WRITEMASK>
	<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_WRITEMASK>
	<VIEWPORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VIEWPORT>
	<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_BOX>
	<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_WRITEMASK>
	<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ALIGNMENT>
	<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ALIGNMENT>
	<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VIEWPORT_DIMS>
	<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SUBPIXEL_BITS>
	<RED_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_BITS>
	<GREEN_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREEN_BITS>
	<BLUE_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLUE_BITS>
	<ALPHA_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA_BITS>
	<DEPTH_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BITS>
	<STENCIL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BITS>
	<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_UNITS>
	<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FACTOR>
	<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D>
	<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_BUFFERS>
	<SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLES>
	<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_INVERT>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<DONT_CARE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DONT_CARE>
	<FASTEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FASTEST>
	<NICEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NICEST>
	<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GENERATE_MIPMAP_HINT>
	<BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT>
	<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT>
	<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA>
	<RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB>
	<RGBA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA>
	<LUMINANCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE_ALPHA>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_6_5>
	<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_SHADER>
	<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_VECTORS>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<SHADER_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ATTACHED_SHADERS>
	<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORMS>
	<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_ATTRIBUTES>
	<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADING_LANGUAGE_VERSION>
	<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_PROGRAM>
	<NEVER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEVER>
	<LESS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LESS>
	<EQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EQUAL>
	<LEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LEQUAL>
	<GREATER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREATER>
	<NOTEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GEQUAL>
	<ALWAYS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALWAYS>
	<KEEP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</KEEP>
	<REPLACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPLACE>
	<INCR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR>
	<DECR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR>
	<INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVERT>
	<INCR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR_WRAP>
	<VENDOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VENDOR>
	<RENDERER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERER>
	<VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERSION>
	<NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST>
	<LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_LINEAR>
	<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D>
	<TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE>
	<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<TEXTURE0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE31>
	<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_TEXTURE>
	<REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIRRORED_REPEAT>
	<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC4>
	<INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC4>
	<BOOL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPILE_STATUS>
	<LOW_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_INT>
	<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER>
	<RGBA4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA4>
	<RGB5_A1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB5_A1>
	<RGB565 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX>
	<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL>
	<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<NONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NONE>
	<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_BINDING>
	<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BINDING>
	<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_RENDERBUFFER_SIZE>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_FLIP_Y_WEBGL>
	<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONTEXT_LOST_WEBGL>
	<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BROWSER_DEFAULT_WEBGL>
	<READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_BUFFER>
	<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ROW_LENGTH>
	<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_ROWS>
	<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_PIXELS>
	<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ROW_LENGTH>
	<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_ROWS>
	<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_PIXELS>
	<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_3D>
	<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_IMAGES>
	<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_IMAGE_HEIGHT>
	<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_3D_TEXTURE_SIZE>
	<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_VERTICES>
	<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_INDICES>
	<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_LOD_BIAS>
	<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_COMPONENTS>
	<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ARRAY_TEXTURE_LAYERS>
	<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN_PROGRAM_TEXEL_OFFSET>
	<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_PROGRAM_TEXEL_OFFSET>
	<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_COMPONENTS>
	<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER_DERIVATIVE_HINT>
	<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RASTERIZER_DISCARD>
	<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ARRAY_BINDING>
	<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_OUTPUT_COMPONENTS>
	<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_INPUT_COMPONENTS>
	<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SERVER_WAIT_TIMEOUT>
	<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENT_INDEX>
	<RED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED>
	<RGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8>
	<RGBA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8>
	<RGB10_A2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2>
	<TEXTURE_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_3D>
	<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_R>
	<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_LOD>
	<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LOD>
	<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BASE_LEVEL>
	<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LEVEL>
	<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_MODE>
	<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_FUNC>
	<SRGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB>
	<SRGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8>
	<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8_ALPHA8>
	<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPARE_REF_TO_TEXTURE>
	<RGBA32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32F>
	<RGB32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32F>
	<RGBA16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16F>
	<RGB16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16F>
	<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D_ARRAY>
	<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D_ARRAY>
	<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R11F_G11F_B10F>
	<RGB9_E5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB9_E5>
	<RGBA32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32UI>
	<RGB32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32UI>
	<RGBA16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16UI>
	<RGB16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16UI>
	<RGBA8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8UI>
	<RGB8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8UI>
	<RGBA32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32I>
	<RGB32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32I>
	<RGBA16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16I>
	<RGB16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16I>
	<RGBA8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8I>
	<RGB8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8I>
	<RED_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_INTEGER>
	<RGB_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB_INTEGER>
	<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA_INTEGER>
	<R8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8>
	<RG8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8>
	<R16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16F>
	<R32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32F>
	<RG16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16F>
	<RG32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32F>
	<R8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8I>
	<R8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8UI>
	<R16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16I>
	<R16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16UI>
	<R32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32I>
	<R32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32UI>
	<RG8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8I>
	<RG8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8UI>
	<RG16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16I>
	<RG16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16UI>
	<RG32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32I>
	<RG32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32UI>
	<R8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8_SNORM>
	<RG8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8_SNORM>
	<RGB8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8_SNORM>
	<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8_SNORM>
	<RGB10_A2UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2UI>
	<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_FORMAT>
	<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_LEVELS>
	<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_2_10_10_10_REV>
	<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_10F_11F_11F_REV>
	<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_5_9_9_9_REV>
	<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_32_UNSIGNED_INT_24_8_REV>
	<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_24_8>
	<HALF_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HALF_FLOAT>
	<RG public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG>
	<RG_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG_INTEGER>
	<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_2_10_10_10_REV>
	<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_QUERY>
	<QUERY_RESULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT>
	<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT_AVAILABLE>
	<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED>
	<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED_CONSERVATIVE>
	<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_DRAW_BUFFERS>
	<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER0>
	<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER1>
	<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER2>
	<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER3>
	<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER4>
	<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER5>
	<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER6>
	<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER7>
	<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER8>
	<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER9>
	<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER10>
	<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER11>
	<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER12>
	<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER13>
	<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER14>
	<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER15>
	<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COLOR_ATTACHMENTS>
	<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT1>
	<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT2>
	<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT3>
	<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT4>
	<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT5>
	<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT6>
	<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT7>
	<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT8>
	<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT9>
	<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT10>
	<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT11>
	<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT12>
	<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT13>
	<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT14>
	<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT15>
	<SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_3D>
	<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_SHADOW>
	<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY>
	<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY_SHADOW>
	<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE_SHADOW>
	<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D>
	<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_3D>
	<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_CUBE>
	<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D_ARRAY>
	<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D>
	<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_3D>
	<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_CUBE>
	<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SAMPLES>
	<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_BINDING>
	<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER>
	<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER>
	<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER_BINDING>
	<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER_BINDING>
	<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER>
	<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER>
	<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER_BINDING>
	<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER_BINDING>
	<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x3>
	<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x4>
	<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x2>
	<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x4>
	<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x2>
	<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x3>
	<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC2>
	<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC3>
	<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC4>
	<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_NORMALIZED>
	<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNED_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_INTEGER>
	<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_DIVISOR>
	<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_MODE>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_VARYINGS>
	<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_START>
	<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INTERLEAVED_ATTRIBS>
	<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SEPARATE_ATTRIBS>
	<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER>
	<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK>
	<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PAUSED>
	<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_ACTIVE>
	<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BINDING>
	<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_DEFAULT>
	<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH24_STENCIL8>
	<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER_BINDING>
	<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER>
	<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER>
	<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER_BINDING>
	<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_SAMPLES>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER>
	<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_BINDING>
	<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_START>
	<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_SIZE>
	<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_BLOCKS>
	<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_BLOCKS>
	<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_UNIFORM_BLOCKS>
	<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BUFFER_BINDINGS>
	<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BLOCK_SIZE>
	<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORM_BLOCKS>
	<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_TYPE>
	<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_SIZE>
	<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_INDEX>
	<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_OFFSET>
	<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_ARRAY_STRIDE>
	<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_MATRIX_STRIDE>
	<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_IS_ROW_MAJOR>
	<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_BINDING>
	<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_DATA_SIZE>
	<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OBJECT_TYPE>
	<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_CONDITION>
	<SYNC_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_STATUS>
	<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLAGS>
	<SYNC_FENCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FENCE>
	<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_GPU_COMMANDS_COMPLETE>
	<UNSIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNALED>
	<SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNALED>
	<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALREADY_SIGNALED>
	<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_EXPIRED>
	<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONDITION_SATISFIED>
	<WAIT_FAILED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</WAIT_FAILED>
	<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLUSH_COMMANDS_BIT>
	<COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR>
	<DEPTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH>
	<STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL>
	<MIN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN>
	<MAX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX>
	<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT24>
	<STREAM_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_READ>
	<STREAM_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_COPY>
	<STATIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_READ>
	<STATIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_COPY>
	<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_READ>
	<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_COPY>
	<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT32F>
	<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH32F_STENCIL8>
	<INVALID_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_INDEX>
	<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_IGNORED>
	<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<get_DEPTH_BUFFER_BIT get="inline" set="null" line="870" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BUFFER_BIT>
	<get_STENCIL_BUFFER_BIT get="inline" set="null" line="875" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BUFFER_BIT>
	<get_COLOR_BUFFER_BIT get="inline" set="null" line="880" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_BUFFER_BIT>
	<get_POINTS get="inline" set="null" line="885" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POINTS>
	<get_LINES get="inline" set="null" line="890" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINES>
	<get_LINE_LOOP get="inline" set="null" line="895" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_LOOP>
	<get_LINE_STRIP get="inline" set="null" line="900" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_STRIP>
	<get_TRIANGLES get="inline" set="null" line="905" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLES>
	<get_TRIANGLE_STRIP get="inline" set="null" line="910" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_STRIP>
	<get_TRIANGLE_FAN get="inline" set="null" line="915" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_FAN>
	<get_ZERO get="inline" set="null" line="920" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ZERO>
	<get_ONE get="inline" set="null" line="925" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE>
	<get_SRC_COLOR get="inline" set="null" line="930" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_COLOR>
	<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="935" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_COLOR>
	<get_SRC_ALPHA get="inline" set="null" line="940" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA>
	<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="945" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_ALPHA>
	<get_DST_ALPHA get="inline" set="null" line="950" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_ALPHA>
	<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="955" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_ALPHA>
	<get_DST_COLOR get="inline" set="null" line="960" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_COLOR>
	<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="965" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_COLOR>
	<get_SRC_ALPHA_SATURATE get="inline" set="null" line="970" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA_SATURATE>
	<get_FUNC_ADD get="inline" set="null" line="975" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_ADD>
	<get_BLEND_EQUATION get="inline" set="null" line="980" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION>
	<get_BLEND_EQUATION_RGB get="inline" set="null" line="985" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_RGB>
	<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="990" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_ALPHA>
	<get_FUNC_SUBTRACT get="inline" set="null" line="995" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_SUBTRACT>
	<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="1000" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_REVERSE_SUBTRACT>
	<get_BLEND_DST_RGB get="inline" set="null" line="1005" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_RGB>
	<get_BLEND_SRC_RGB get="inline" set="null" line="1010" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_RGB>
	<get_BLEND_DST_ALPHA get="inline" set="null" line="1015" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_ALPHA>
	<get_BLEND_SRC_ALPHA get="inline" set="null" line="1020" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_ALPHA>
	<get_CONSTANT_COLOR get="inline" set="null" line="1025" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_COLOR>
	<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="1030" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_COLOR>
	<get_CONSTANT_ALPHA get="inline" set="null" line="1035" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_ALPHA>
	<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="1040" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_ALPHA>
	<get_BLEND_COLOR get="inline" set="null" line="1045" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_COLOR>
	<get_ARRAY_BUFFER get="inline" set="null" line="1050" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER>
	<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="1055" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER>
	<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="1060" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER_BINDING>
	<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="1065" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER_BINDING>
	<get_STREAM_DRAW get="inline" set="null" line="1070" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_DRAW>
	<get_STATIC_DRAW get="inline" set="null" line="1075" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_DRAW>
	<get_DYNAMIC_DRAW get="inline" set="null" line="1080" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_DRAW>
	<get_BUFFER_SIZE get="inline" set="null" line="1085" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_SIZE>
	<get_BUFFER_USAGE get="inline" set="null" line="1090" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_USAGE>
	<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="1095" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_VERTEX_ATTRIB>
	<get_FRONT get="inline" set="null" line="1100" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT>
	<get_BACK get="inline" set="null" line="1105" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BACK>
	<get_FRONT_AND_BACK get="inline" set="null" line="1110" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_AND_BACK>
	<get_CULL_FACE get="inline" set="null" line="1115" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE>
	<get_BLEND get="inline" set="null" line="1120" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND>
	<get_DITHER get="inline" set="null" line="1125" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DITHER>
	<get_STENCIL_TEST get="inline" set="null" line="1130" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_TEST>
	<get_DEPTH_TEST get="inline" set="null" line="1135" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_TEST>
	<get_SCISSOR_TEST get="inline" set="null" line="1140" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_TEST>
	<get_POLYGON_OFFSET_FILL get="inline" set="null" line="1145" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FILL>
	<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="1150" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_ALPHA_TO_COVERAGE>
	<get_SAMPLE_COVERAGE get="inline" set="null" line="1155" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE>
	<get_NO_ERROR get="inline" set="null" line="1160" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NO_ERROR>
	<get_INVALID_ENUM get="inline" set="null" line="1165" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_ENUM>
	<get_INVALID_VALUE get="inline" set="null" line="1170" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_VALUE>
	<get_INVALID_OPERATION get="inline" set="null" line="1175" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_OPERATION>
	<get_OUT_OF_MEMORY get="inline" set="null" line="1180" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OUT_OF_MEMORY>
	<get_CW get="inline" set="null" line="1185" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CW>
	<get_CCW get="inline" set="null" line="1190" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CCW>
	<get_LINE_WIDTH get="inline" set="null" line="1195" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_WIDTH>
	<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="1200" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_POINT_SIZE_RANGE>
	<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="1205" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_LINE_WIDTH_RANGE>
	<get_CULL_FACE_MODE get="inline" set="null" line="1210" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE_MODE>
	<get_FRONT_FACE get="inline" set="null" line="1215" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_FACE>
	<get_DEPTH_RANGE get="inline" set="null" line="1220" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_RANGE>
	<get_DEPTH_WRITEMASK get="inline" set="null" line="1225" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_WRITEMASK>
	<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="1230" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_CLEAR_VALUE>
	<get_DEPTH_FUNC get="inline" set="null" line="1235" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_FUNC>
	<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="1240" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_CLEAR_VALUE>
	<get_STENCIL_FUNC get="inline" set="null" line="1245" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FUNC>
	<get_STENCIL_FAIL get="inline" set="null" line="1250" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FAIL>
	<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1255" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_FAIL>
	<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1260" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_PASS>
	<get_STENCIL_REF get="inline" set="null" line="1265" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_REF>
	<get_STENCIL_VALUE_MASK get="inline" set="null" line="1270" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_VALUE_MASK>
	<get_STENCIL_WRITEMASK get="inline" set="null" line="1275" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_WRITEMASK>
	<get_STENCIL_BACK_FUNC get="inline" set="null" line="1280" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FUNC>
	<get_STENCIL_BACK_FAIL get="inline" set="null" line="1285" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1290" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1295" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_PASS>
	<get_STENCIL_BACK_REF get="inline" set="null" line="1300" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_REF>
	<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1305" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_VALUE_MASK>
	<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1310" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_WRITEMASK>
	<get_VIEWPORT get="inline" set="null" line="1315" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VIEWPORT>
	<get_SCISSOR_BOX get="inline" set="null" line="1320" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_BOX>
	<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1325" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_CLEAR_VALUE>
	<get_COLOR_WRITEMASK get="inline" set="null" line="1330" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_WRITEMASK>
	<get_UNPACK_ALIGNMENT get="inline" set="null" line="1335" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ALIGNMENT>
	<get_PACK_ALIGNMENT get="inline" set="null" line="1340" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ALIGNMENT>
	<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1345" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_SIZE>
	<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1350" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VIEWPORT_DIMS>
	<get_SUBPIXEL_BITS get="inline" set="null" line="1355" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SUBPIXEL_BITS>
	<get_RED_BITS get="inline" set="null" line="1360" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_BITS>
	<get_GREEN_BITS get="inline" set="null" line="1365" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREEN_BITS>
	<get_BLUE_BITS get="inline" set="null" line="1370" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLUE_BITS>
	<get_ALPHA_BITS get="inline" set="null" line="1375" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA_BITS>
	<get_DEPTH_BITS get="inline" set="null" line="1380" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BITS>
	<get_STENCIL_BITS get="inline" set="null" line="1385" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BITS>
	<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1390" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_UNITS>
	<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1395" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FACTOR>
	<get_TEXTURE_BINDING_2D get="inline" set="null" line="1400" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D>
	<get_SAMPLE_BUFFERS get="inline" set="null" line="1405" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_BUFFERS>
	<get_SAMPLES get="inline" set="null" line="1410" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLES>
	<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1415" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_VALUE>
	<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1420" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_INVERT>
	<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1425" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPRESSED_TEXTURE_FORMATS>
	<get_DONT_CARE get="inline" set="null" line="1430" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DONT_CARE>
	<get_FASTEST get="inline" set="null" line="1435" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FASTEST>
	<get_NICEST get="inline" set="null" line="1440" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NICEST>
	<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1445" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GENERATE_MIPMAP_HINT>
	<get_BYTE get="inline" set="null" line="1450" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BYTE>
	<get_UNSIGNED_BYTE get="inline" set="null" line="1455" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_BYTE>
	<get_SHORT get="inline" set="null" line="1460" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHORT>
	<get_UNSIGNED_SHORT get="inline" set="null" line="1465" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT>
	<get_INT get="inline" set="null" line="1470" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT>
	<get_UNSIGNED_INT get="inline" set="null" line="1475" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT>
	<get_FLOAT get="inline" set="null" line="1480" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT>
	<get_DEPTH_COMPONENT get="inline" set="null" line="1485" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT>
	<get_ALPHA get="inline" set="null" line="1490" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA>
	<get_RGB get="inline" set="null" line="1495" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB>
	<get_RGBA get="inline" set="null" line="1500" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA>
	<get_LUMINANCE get="inline" set="null" line="1505" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE>
	<get_LUMINANCE_ALPHA get="inline" set="null" line="1510" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE_ALPHA>
	<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1515" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_4_4_4_4>
	<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1520" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_5_5_1>
	<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1525" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_6_5>
	<get_FRAGMENT_SHADER get="inline" set="null" line="1530" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER>
	<get_VERTEX_SHADER get="inline" set="null" line="1535" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_SHADER>
	<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1540" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_ATTRIBS>
	<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1545" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_VECTORS>
	<get_MAX_VARYING_VECTORS get="inline" set="null" line="1550" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_VECTORS>
	<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1555" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1560" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1565" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_IMAGE_UNITS>
	<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1570" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_VECTORS>
	<get_SHADER_TYPE get="inline" set="null" line="1575" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADER_TYPE>
	<get_DELETE_STATUS get="inline" set="null" line="1580" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DELETE_STATUS>
	<get_LINK_STATUS get="inline" set="null" line="1585" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINK_STATUS>
	<get_VALIDATE_STATUS get="inline" set="null" line="1590" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VALIDATE_STATUS>
	<get_ATTACHED_SHADERS get="inline" set="null" line="1595" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ATTACHED_SHADERS>
	<get_ACTIVE_UNIFORMS get="inline" set="null" line="1600" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORMS>
	<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1605" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_ATTRIBUTES>
	<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1610" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADING_LANGUAGE_VERSION>
	<get_CURRENT_PROGRAM get="inline" set="null" line="1615" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_PROGRAM>
	<get_NEVER get="inline" set="null" line="1620" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEVER>
	<get_LESS get="inline" set="null" line="1625" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LESS>
	<get_EQUAL get="inline" set="null" line="1630" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_EQUAL>
	<get_LEQUAL get="inline" set="null" line="1635" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LEQUAL>
	<get_GREATER get="inline" set="null" line="1640" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREATER>
	<get_NOTEQUAL get="inline" set="null" line="1645" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NOTEQUAL>
	<get_GEQUAL get="inline" set="null" line="1650" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GEQUAL>
	<get_ALWAYS get="inline" set="null" line="1655" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALWAYS>
	<get_KEEP get="inline" set="null" line="1660" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_KEEP>
	<get_REPLACE get="inline" set="null" line="1665" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPLACE>
	<get_INCR get="inline" set="null" line="1670" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR>
	<get_DECR get="inline" set="null" line="1675" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR>
	<get_INVERT get="inline" set="null" line="1680" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVERT>
	<get_INCR_WRAP get="inline" set="null" line="1685" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR_WRAP>
	<get_DECR_WRAP get="inline" set="null" line="1690" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR_WRAP>
	<get_VENDOR get="inline" set="null" line="1695" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VENDOR>
	<get_RENDERER get="inline" set="null" line="1700" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERER>
	<get_VERSION get="inline" set="null" line="1705" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERSION>
	<get_NEAREST get="inline" set="null" line="1710" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST>
	<get_LINEAR get="inline" set="null" line="1715" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR>
	<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1720" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_NEAREST>
	<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1725" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_NEAREST>
	<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1730" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_LINEAR>
	<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1735" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_LINEAR>
	<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1740" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAG_FILTER>
	<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1745" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_FILTER>
	<get_TEXTURE_WRAP_S get="inline" set="null" line="1750" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_S>
	<get_TEXTURE_WRAP_T get="inline" set="null" line="1755" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_T>
	<get_TEXTURE_2D get="inline" set="null" line="1760" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D>
	<get_TEXTURE get="inline" set="null" line="1765" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE>
	<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1770" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP>
	<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1775" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_CUBE_MAP>
	<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1780" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_X>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1785" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1790" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1795" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1800" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1805" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1810" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CUBE_MAP_TEXTURE_SIZE>
	<get_TEXTURE0 get="inline" set="null" line="1815" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE0>
	<get_TEXTURE1 get="inline" set="null" line="1820" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE1>
	<get_TEXTURE2 get="inline" set="null" line="1825" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE2>
	<get_TEXTURE3 get="inline" set="null" line="1830" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE3>
	<get_TEXTURE4 get="inline" set="null" line="1835" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE4>
	<get_TEXTURE5 get="inline" set="null" line="1840" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE5>
	<get_TEXTURE6 get="inline" set="null" line="1845" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE6>
	<get_TEXTURE7 get="inline" set="null" line="1850" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE7>
	<get_TEXTURE8 get="inline" set="null" line="1855" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE8>
	<get_TEXTURE9 get="inline" set="null" line="1860" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE9>
	<get_TEXTURE10 get="inline" set="null" line="1865" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE10>
	<get_TEXTURE11 get="inline" set="null" line="1870" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE11>
	<get_TEXTURE12 get="inline" set="null" line="1875" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE12>
	<get_TEXTURE13 get="inline" set="null" line="1880" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE13>
	<get_TEXTURE14 get="inline" set="null" line="1885" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE14>
	<get_TEXTURE15 get="inline" set="null" line="1890" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE15>
	<get_TEXTURE16 get="inline" set="null" line="1895" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE16>
	<get_TEXTURE17 get="inline" set="null" line="1900" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE17>
	<get_TEXTURE18 get="inline" set="null" line="1905" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE18>
	<get_TEXTURE19 get="inline" set="null" line="1910" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE19>
	<get_TEXTURE20 get="inline" set="null" line="1915" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE20>
	<get_TEXTURE21 get="inline" set="null" line="1920" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE21>
	<get_TEXTURE22 get="inline" set="null" line="1925" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE22>
	<get_TEXTURE23 get="inline" set="null" line="1930" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE23>
	<get_TEXTURE24 get="inline" set="null" line="1935" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE24>
	<get_TEXTURE25 get="inline" set="null" line="1940" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE25>
	<get_TEXTURE26 get="inline" set="null" line="1945" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE26>
	<get_TEXTURE27 get="inline" set="null" line="1950" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE27>
	<get_TEXTURE28 get="inline" set="null" line="1955" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE28>
	<get_TEXTURE29 get="inline" set="null" line="1960" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE29>
	<get_TEXTURE30 get="inline" set="null" line="1965" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE30>
	<get_TEXTURE31 get="inline" set="null" line="1970" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE31>
	<get_ACTIVE_TEXTURE get="inline" set="null" line="1975" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_TEXTURE>
	<get_REPEAT get="inline" set="null" line="1980" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPEAT>
	<get_CLAMP_TO_EDGE get="inline" set="null" line="1985" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CLAMP_TO_EDGE>
	<get_MIRRORED_REPEAT get="inline" set="null" line="1990" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIRRORED_REPEAT>
	<get_FLOAT_VEC2 get="inline" set="null" line="1995" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC2>
	<get_FLOAT_VEC3 get="inline" set="null" line="2000" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC3>
	<get_FLOAT_VEC4 get="inline" set="null" line="2005" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC4>
	<get_INT_VEC2 get="inline" set="null" line="2010" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC2>
	<get_INT_VEC3 get="inline" set="null" line="2015" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC3>
	<get_INT_VEC4 get="inline" set="null" line="2020" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC4>
	<get_BOOL get="inline" set="null" line="2025" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL>
	<get_BOOL_VEC2 get="inline" set="null" line="2030" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC2>
	<get_BOOL_VEC3 get="inline" set="null" line="2035" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC3>
	<get_BOOL_VEC4 get="inline" set="null" line="2040" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC4>
	<get_FLOAT_MAT2 get="inline" set="null" line="2045" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2>
	<get_FLOAT_MAT3 get="inline" set="null" line="2050" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3>
	<get_FLOAT_MAT4 get="inline" set="null" line="2055" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4>
	<get_SAMPLER_2D get="inline" set="null" line="2060" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D>
	<get_SAMPLER_CUBE get="inline" set="null" line="2065" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE>
	<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="2070" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_ENABLED>
	<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="2075" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_SIZE>
	<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="2080" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_STRIDE>
	<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="2085" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_TYPE>
	<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="2090" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="2095" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_POINTER>
	<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="2100" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<get_COMPILE_STATUS get="inline" set="null" line="2105" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPILE_STATUS>
	<get_LOW_FLOAT get="inline" set="null" line="2110" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_FLOAT>
	<get_MEDIUM_FLOAT get="inline" set="null" line="2115" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_FLOAT>
	<get_HIGH_FLOAT get="inline" set="null" line="2120" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_FLOAT>
	<get_LOW_INT get="inline" set="null" line="2125" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_INT>
	<get_MEDIUM_INT get="inline" set="null" line="2130" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_INT>
	<get_HIGH_INT get="inline" set="null" line="2135" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_INT>
	<get_FRAMEBUFFER get="inline" set="null" line="2140" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER>
	<get_RENDERBUFFER get="inline" set="null" line="2145" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER>
	<get_RGBA4 get="inline" set="null" line="2150" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA4>
	<get_RGB5_A1 get="inline" set="null" line="2155" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB5_A1>
	<get_RGB565 get="inline" set="null" line="2160" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB565>
	<get_DEPTH_COMPONENT16 get="inline" set="null" line="2165" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT16>
	<get_STENCIL_INDEX get="inline" set="null" line="2170" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX>
	<get_STENCIL_INDEX8 get="inline" set="null" line="2175" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX8>
	<get_DEPTH_STENCIL get="inline" set="null" line="2180" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL>
	<get_RENDERBUFFER_WIDTH get="inline" set="null" line="2185" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_WIDTH>
	<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="2190" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_HEIGHT>
	<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="2195" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_INTERNAL_FORMAT>
	<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="2200" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_RED_SIZE>
	<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="2205" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_GREEN_SIZE>
	<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="2210" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BLUE_SIZE>
	<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="2215" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_ALPHA_SIZE>
	<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="2220" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_DEPTH_SIZE>
	<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="2225" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_STENCIL_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="2230" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="2235" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="2240" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="2245" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<get_COLOR_ATTACHMENT0 get="inline" set="null" line="2250" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT0>
	<get_DEPTH_ATTACHMENT get="inline" set="null" line="2255" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_ATTACHMENT>
	<get_STENCIL_ATTACHMENT get="inline" set="null" line="2260" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_ATTACHMENT>
	<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="2265" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL_ATTACHMENT>
	<get_NONE get="inline" set="null" line="2270" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NONE>
	<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="2275" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_COMPLETE>
	<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="2280" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="2285" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="2290" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="2295" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_UNSUPPORTED>
	<get_FRAMEBUFFER_BINDING get="inline" set="null" line="2300" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_BINDING get="inline" set="null" line="2305" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BINDING>
	<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="2310" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_RENDERBUFFER_SIZE>
	<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="2315" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_FRAMEBUFFER_OPERATION>
	<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="2320" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_FLIP_Y_WEBGL>
	<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="2325" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="2330" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONTEXT_LOST_WEBGL>
	<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="2335" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="2340" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BROWSER_DEFAULT_WEBGL>
	<get_READ_BUFFER get="inline" set="null" line="2345" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_BUFFER>
	<get_UNPACK_ROW_LENGTH get="inline" set="null" line="2350" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ROW_LENGTH>
	<get_UNPACK_SKIP_ROWS get="inline" set="null" line="2355" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_ROWS>
	<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="2360" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_PIXELS>
	<get_PACK_ROW_LENGTH get="inline" set="null" line="2365" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ROW_LENGTH>
	<get_PACK_SKIP_ROWS get="inline" set="null" line="2370" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_ROWS>
	<get_PACK_SKIP_PIXELS get="inline" set="null" line="2375" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_PIXELS>
	<get_TEXTURE_BINDING_3D get="inline" set="null" line="2380" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_3D>
	<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="2385" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_IMAGES>
	<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="2390" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_IMAGE_HEIGHT>
	<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="2395" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_3D_TEXTURE_SIZE>
	<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="2400" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_VERTICES>
	<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="2405" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_INDICES>
	<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="2410" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_LOD_BIAS>
	<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="2415" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="2420" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="2425" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ARRAY_TEXTURE_LAYERS>
	<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2430" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN_PROGRAM_TEXEL_OFFSET>
	<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2435" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_PROGRAM_TEXEL_OFFSET>
	<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="2440" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_COMPONENTS>
	<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="2445" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
	<get_RASTERIZER_DISCARD get="inline" set="null" line="2450" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RASTERIZER_DISCARD>
	<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="2455" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ARRAY_BINDING>
	<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="2460" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_OUTPUT_COMPONENTS>
	<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="2465" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_INPUT_COMPONENTS>
	<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="2470" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SERVER_WAIT_TIMEOUT>
	<get_MAX_ELEMENT_INDEX get="inline" set="null" line="2475" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENT_INDEX>
	<get_RED get="inline" set="null" line="2480" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED>
	<get_RGB8 get="inline" set="null" line="2485" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8>
	<get_RGBA8 get="inline" set="null" line="2490" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8>
	<get_RGB10_A2 get="inline" set="null" line="2495" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2>
	<get_TEXTURE_3D get="inline" set="null" line="2500" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_3D>
	<get_TEXTURE_WRAP_R get="inline" set="null" line="2505" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_R>
	<get_TEXTURE_MIN_LOD get="inline" set="null" line="2510" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_LOD>
	<get_TEXTURE_MAX_LOD get="inline" set="null" line="2515" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LOD>
	<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="2520" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BASE_LEVEL>
	<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="2525" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LEVEL>
	<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="2530" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_MODE>
	<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="2535" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_FUNC>
	<get_SRGB get="inline" set="null" line="2540" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB>
	<get_SRGB8 get="inline" set="null" line="2545" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8>
	<get_SRGB8_ALPHA8 get="inline" set="null" line="2550" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8_ALPHA8>
	<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="2555" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPARE_REF_TO_TEXTURE>
	<get_RGBA32F get="inline" set="null" line="2560" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32F>
	<get_RGB32F get="inline" set="null" line="2565" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32F>
	<get_RGBA16F get="inline" set="null" line="2570" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16F>
	<get_RGB16F get="inline" set="null" line="2575" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16F>
	<get_TEXTURE_2D_ARRAY get="inline" set="null" line="2580" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D_ARRAY>
	<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="2585" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D_ARRAY>
	<get_R11F_G11F_B10F get="inline" set="null" line="2590" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R11F_G11F_B10F>
	<get_RGB9_E5 get="inline" set="null" line="2595" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB9_E5>
	<get_RGBA32UI get="inline" set="null" line="2600" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32UI>
	<get_RGB32UI get="inline" set="null" line="2605" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32UI>
	<get_RGBA16UI get="inline" set="null" line="2610" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16UI>
	<get_RGB16UI get="inline" set="null" line="2615" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16UI>
	<get_RGBA8UI get="inline" set="null" line="2620" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8UI>
	<get_RGB8UI get="inline" set="null" line="2625" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8UI>
	<get_RGBA32I get="inline" set="null" line="2630" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32I>
	<get_RGB32I get="inline" set="null" line="2635" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32I>
	<get_RGBA16I get="inline" set="null" line="2640" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16I>
	<get_RGB16I get="inline" set="null" line="2645" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16I>
	<get_RGBA8I get="inline" set="null" line="2650" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8I>
	<get_RGB8I get="inline" set="null" line="2655" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8I>
	<get_RED_INTEGER get="inline" set="null" line="2660" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_INTEGER>
	<get_RGB_INTEGER get="inline" set="null" line="2665" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB_INTEGER>
	<get_RGBA_INTEGER get="inline" set="null" line="2670" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA_INTEGER>
	<get_R8 get="inline" set="null" line="2675" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8>
	<get_RG8 get="inline" set="null" line="2680" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8>
	<get_R16F get="inline" set="null" line="2685" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16F>
	<get_R32F get="inline" set="null" line="2690" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32F>
	<get_RG16F get="inline" set="null" line="2695" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16F>
	<get_RG32F get="inline" set="null" line="2700" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32F>
	<get_R8I get="inline" set="null" line="2705" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8I>
	<get_R8UI get="inline" set="null" line="2710" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8UI>
	<get_R16I get="inline" set="null" line="2715" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16I>
	<get_R16UI get="inline" set="null" line="2720" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16UI>
	<get_R32I get="inline" set="null" line="2725" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32I>
	<get_R32UI get="inline" set="null" line="2730" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32UI>
	<get_RG8I get="inline" set="null" line="2735" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8I>
	<get_RG8UI get="inline" set="null" line="2740" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8UI>
	<get_RG16I get="inline" set="null" line="2745" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16I>
	<get_RG16UI get="inline" set="null" line="2750" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16UI>
	<get_RG32I get="inline" set="null" line="2755" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32I>
	<get_RG32UI get="inline" set="null" line="2760" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32UI>
	<get_R8_SNORM get="inline" set="null" line="2765" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8_SNORM>
	<get_RG8_SNORM get="inline" set="null" line="2770" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8_SNORM>
	<get_RGB8_SNORM get="inline" set="null" line="2775" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8_SNORM>
	<get_RGBA8_SNORM get="inline" set="null" line="2780" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8_SNORM>
	<get_RGB10_A2UI get="inline" set="null" line="2785" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2UI>
	<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="2790" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_FORMAT>
	<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="2795" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_LEVELS>
	<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="2800" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_2_10_10_10_REV>
	<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="2805" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_10F_11F_11F_REV>
	<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="2810" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_5_9_9_9_REV>
	<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="2815" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
	<get_UNSIGNED_INT_24_8 get="inline" set="null" line="2820" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_24_8>
	<get_HALF_FLOAT get="inline" set="null" line="2825" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HALF_FLOAT>
	<get_RG get="inline" set="null" line="2830" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG>
	<get_RG_INTEGER get="inline" set="null" line="2835" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG_INTEGER>
	<get_INT_2_10_10_10_REV get="inline" set="null" line="2840" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_2_10_10_10_REV>
	<get_CURRENT_QUERY get="inline" set="null" line="2845" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_QUERY>
	<get_QUERY_RESULT get="inline" set="null" line="2850" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT>
	<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="2855" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT_AVAILABLE>
	<get_ANY_SAMPLES_PASSED get="inline" set="null" line="2860" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED>
	<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="2865" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
	<get_MAX_DRAW_BUFFERS get="inline" set="null" line="2870" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_DRAW_BUFFERS>
	<get_DRAW_BUFFER0 get="inline" set="null" line="2875" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER0>
	<get_DRAW_BUFFER1 get="inline" set="null" line="2880" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER1>
	<get_DRAW_BUFFER2 get="inline" set="null" line="2885" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER2>
	<get_DRAW_BUFFER3 get="inline" set="null" line="2890" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER3>
	<get_DRAW_BUFFER4 get="inline" set="null" line="2895" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER4>
	<get_DRAW_BUFFER5 get="inline" set="null" line="2900" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER5>
	<get_DRAW_BUFFER6 get="inline" set="null" line="2905" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER6>
	<get_DRAW_BUFFER7 get="inline" set="null" line="2910" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER7>
	<get_DRAW_BUFFER8 get="inline" set="null" line="2915" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER8>
	<get_DRAW_BUFFER9 get="inline" set="null" line="2920" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER9>
	<get_DRAW_BUFFER10 get="inline" set="null" line="2925" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER10>
	<get_DRAW_BUFFER11 get="inline" set="null" line="2930" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER11>
	<get_DRAW_BUFFER12 get="inline" set="null" line="2935" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER12>
	<get_DRAW_BUFFER13 get="inline" set="null" line="2940" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER13>
	<get_DRAW_BUFFER14 get="inline" set="null" line="2945" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER14>
	<get_DRAW_BUFFER15 get="inline" set="null" line="2950" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER15>
	<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="2955" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COLOR_ATTACHMENTS>
	<get_COLOR_ATTACHMENT1 get="inline" set="null" line="2960" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT1>
	<get_COLOR_ATTACHMENT2 get="inline" set="null" line="2965" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT2>
	<get_COLOR_ATTACHMENT3 get="inline" set="null" line="2970" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT3>
	<get_COLOR_ATTACHMENT4 get="inline" set="null" line="2975" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT4>
	<get_COLOR_ATTACHMENT5 get="inline" set="null" line="2980" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT5>
	<get_COLOR_ATTACHMENT6 get="inline" set="null" line="2985" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT6>
	<get_COLOR_ATTACHMENT7 get="inline" set="null" line="2990" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT7>
	<get_COLOR_ATTACHMENT8 get="inline" set="null" line="2995" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT8>
	<get_COLOR_ATTACHMENT9 get="inline" set="null" line="3000" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT9>
	<get_COLOR_ATTACHMENT10 get="inline" set="null" line="3005" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT10>
	<get_COLOR_ATTACHMENT11 get="inline" set="null" line="3010" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT11>
	<get_COLOR_ATTACHMENT12 get="inline" set="null" line="3015" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT12>
	<get_COLOR_ATTACHMENT13 get="inline" set="null" line="3020" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT13>
	<get_COLOR_ATTACHMENT14 get="inline" set="null" line="3025" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT14>
	<get_COLOR_ATTACHMENT15 get="inline" set="null" line="3030" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT15>
	<get_SAMPLER_3D get="inline" set="null" line="3035" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_3D>
	<get_SAMPLER_2D_SHADOW get="inline" set="null" line="3040" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_SHADOW>
	<get_SAMPLER_2D_ARRAY get="inline" set="null" line="3045" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY>
	<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="3050" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY_SHADOW>
	<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="3055" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE_SHADOW>
	<get_INT_SAMPLER_2D get="inline" set="null" line="3060" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D>
	<get_INT_SAMPLER_3D get="inline" set="null" line="3065" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_3D>
	<get_INT_SAMPLER_CUBE get="inline" set="null" line="3070" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_CUBE>
	<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="3075" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D_ARRAY>
	<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="3080" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D>
	<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="3085" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_3D>
	<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="3090" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_CUBE>
	<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="3095" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<get_MAX_SAMPLES get="inline" set="null" line="3100" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SAMPLES>
	<get_SAMPLER_BINDING get="inline" set="null" line="3105" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_BINDING>
	<get_PIXEL_PACK_BUFFER get="inline" set="null" line="3110" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER>
	<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="3115" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER>
	<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="3120" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER_BINDING>
	<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="3125" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER_BINDING>
	<get_COPY_READ_BUFFER get="inline" set="null" line="3130" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER>
	<get_COPY_WRITE_BUFFER get="inline" set="null" line="3135" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER>
	<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="3140" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER_BINDING>
	<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="3145" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER_BINDING>
	<get_FLOAT_MAT2x3 get="inline" set="null" line="3150" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x3>
	<get_FLOAT_MAT2x4 get="inline" set="null" line="3155" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x4>
	<get_FLOAT_MAT3x2 get="inline" set="null" line="3160" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x2>
	<get_FLOAT_MAT3x4 get="inline" set="null" line="3165" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x4>
	<get_FLOAT_MAT4x2 get="inline" set="null" line="3170" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x2>
	<get_FLOAT_MAT4x3 get="inline" set="null" line="3175" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x3>
	<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="3180" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC2>
	<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="3185" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC3>
	<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="3190" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC4>
	<get_UNSIGNED_NORMALIZED get="inline" set="null" line="3195" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_NORMALIZED>
	<get_SIGNED_NORMALIZED get="inline" set="null" line="3200" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNED_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="3205" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_INTEGER>
	<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="3210" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
	<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="3215" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="3220" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="3225" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_VARYINGS>
	<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="3230" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_START>
	<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="3235" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="3240" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="3245" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="3250" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="3255" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INTERLEAVED_ATTRIBS>
	<get_SEPARATE_ATTRIBS get="inline" set="null" line="3260" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SEPARATE_ATTRIBS>
	<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="3265" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER>
	<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="3270" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<get_TRANSFORM_FEEDBACK get="inline" set="null" line="3275" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK>
	<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="3280" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PAUSED>
	<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="3285" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_ACTIVE>
	<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="3290" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BINDING>
	<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="3295" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="3300" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="3305" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="3310" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="3315" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="3320" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="3325" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="3330" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="3335" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_DEFAULT>
	<get_DEPTH24_STENCIL8 get="inline" set="null" line="3340" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH24_STENCIL8>
	<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="3345" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER_BINDING>
	<get_READ_FRAMEBUFFER get="inline" set="null" line="3350" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER>
	<get_DRAW_FRAMEBUFFER get="inline" set="null" line="3355" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER>
	<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="3360" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="3365" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_SAMPLES>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="3370" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="3375" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<get_UNIFORM_BUFFER get="inline" set="null" line="3380" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER>
	<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="3385" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_BINDING>
	<get_UNIFORM_BUFFER_START get="inline" set="null" line="3390" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_START>
	<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="3395" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_SIZE>
	<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="3400" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_BLOCKS>
	<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="3405" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
	<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="3410" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_UNIFORM_BLOCKS>
	<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="3415" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BUFFER_BINDINGS>
	<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="3420" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BLOCK_SIZE>
	<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="3425" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="3430" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="3435" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="3440" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORM_BLOCKS>
	<get_UNIFORM_TYPE get="inline" set="null" line="3445" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_TYPE>
	<get_UNIFORM_SIZE get="inline" set="null" line="3450" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_SIZE>
	<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="3455" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_INDEX>
	<get_UNIFORM_OFFSET get="inline" set="null" line="3460" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_OFFSET>
	<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="3465" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_ARRAY_STRIDE>
	<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="3470" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_MATRIX_STRIDE>
	<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="3475" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_IS_ROW_MAJOR>
	<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="3480" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_BINDING>
	<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="3485" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_DATA_SIZE>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="3490" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="3495" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="3500" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="3505" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<get_OBJECT_TYPE get="inline" set="null" line="3510" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OBJECT_TYPE>
	<get_SYNC_CONDITION get="inline" set="null" line="3515" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_CONDITION>
	<get_SYNC_STATUS get="inline" set="null" line="3520" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_STATUS>
	<get_SYNC_FLAGS get="inline" set="null" line="3525" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLAGS>
	<get_SYNC_FENCE get="inline" set="null" line="3530" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FENCE>
	<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="3535" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_GPU_COMMANDS_COMPLETE>
	<get_UNSIGNALED get="inline" set="null" line="3540" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNALED>
	<get_SIGNALED get="inline" set="null" line="3545" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNALED>
	<get_ALREADY_SIGNALED get="inline" set="null" line="3550" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALREADY_SIGNALED>
	<get_TIMEOUT_EXPIRED get="inline" set="null" line="3555" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_EXPIRED>
	<get_CONDITION_SATISFIED get="inline" set="null" line="3560" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONDITION_SATISFIED>
	<get_WAIT_FAILED get="inline" set="null" line="3565" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_WAIT_FAILED>
	<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="3570" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLUSH_COMMANDS_BIT>
	<get_COLOR get="inline" set="null" line="3575" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR>
	<get_DEPTH get="inline" set="null" line="3580" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH>
	<get_STENCIL get="inline" set="null" line="3585" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL>
	<get_MIN get="inline" set="null" line="3590" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN>
	<get_MAX get="inline" set="null" line="3595" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX>
	<get_DEPTH_COMPONENT24 get="inline" set="null" line="3600" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT24>
	<get_STREAM_READ get="inline" set="null" line="3605" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_READ>
	<get_STREAM_COPY get="inline" set="null" line="3610" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_COPY>
	<get_STATIC_READ get="inline" set="null" line="3615" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_READ>
	<get_STATIC_COPY get="inline" set="null" line="3620" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_COPY>
	<get_DYNAMIC_READ get="inline" set="null" line="3625" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_READ>
	<get_DYNAMIC_COPY get="inline" set="null" line="3630" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_COPY>
	<get_DEPTH_COMPONENT32F get="inline" set="null" line="3635" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT32F>
	<get_DEPTH32F_STENCIL8 get="inline" set="null" line="3640" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH32F_STENCIL8>
	<get_INVALID_INDEX get="inline" set="null" line="3645" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_INDEX>
	<get_TIMEOUT_IGNORED get="inline" set="null" line="3650" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_IGNORED>
	<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="3655" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<activeTexture public="1" get="inline" set="null" line="3660" static="1">
		<f a="this:texture">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="3665" static="1">
		<f a="this:program:shader">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<beginQuery public="1" get="inline" set="null" line="3670" static="1">
		<f a="this:target:query">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginQuery>
	<beginTransformFeedback public="1" get="inline" set="null" line="3675" static="1">
		<f a="this:primitiveNode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginTransformFeedback>
	<bindAttribLocation public="1" get="inline" set="null" line="3680" static="1">
		<f a="this:program:index:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="3685" static="1">
		<f a="this:target:buffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindBufferBase public="1" get="inline" set="null" line="3690" static="1">
		<f a="this:target:index:buffer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferBase>
	<bindBufferRange public="1" get="inline" set="null" line="3695" static="1">
		<f a="this:target:index:buffer:offset:size">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferRange>
	<bindFramebuffer public="1" get="inline" set="null" line="3700" static="1">
		<f a="this:target:framebuffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="3705" static="1">
		<f a="this:target:renderbuffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindSampler public="1" get="inline" set="null" line="3710" static="1">
		<f a="this:unit:sampler">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindSampler>
	<bindTexture public="1" get="inline" set="null" line="3715" static="1">
		<f a="this:target:texture">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<bindTransformFeedback public="1" get="inline" set="null" line="3720" static="1">
		<f a="this:target:transformFeedback">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTransformFeedback>
	<bindVertexArray public="1" get="inline" set="null" line="3725" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindVertexArray>
	<blendColor public="1" get="inline" set="null" line="3730" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="3735" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="3740" static="1">
		<f a="this:modeRGB:modeAlpha">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="3745" static="1">
		<f a="this:sfactor:dfactor">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="3750" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<blitFramebuffer public="1" get="inline" set="null" line="3755" static="1">
		<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blitFramebuffer>
	<bufferData public="1" set="method" line="3761" static="1">
		<f a="this:target:srcData:usage:?srcOffset:?length" v="::::0:0">
			<d/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ length : 0, srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="3774" static="1">
		<f a="this:target:offset:srcData:?srcOffset:?length" v="::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="3785" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="3790" static="1">
		<f a="this:mask">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearBufferfi public="1" get="inline" set="null" line="3795" static="1">
		<f a="this:buffer:drawbuffer:depth:stencil">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfi>
	<clearBufferfv public="1" set="method" line="3800" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</clearBufferfv>
	<clearBufferiv public="1" set="method" line="3806" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferiv>
	<clearBufferuiv public="1" set="method" line="3812" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferuiv>
	<clearColor public="1" get="inline" set="null" line="3818" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepth public="1" get="inline" set="null" line="3823" static="1">
		<f a="this:depth">
			<d/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepth>
	<clearStencil public="1" get="inline" set="null" line="3828" static="1">
		<f a="this:s">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<clientWaitSync public="1" get="inline" set="null" line="3833" static="1">
		<f a="this:sync:flags:timeout">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clientWaitSync>
	<colorMask public="1" get="inline" set="null" line="3838" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="3843" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" set="method" line="3849" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride" v="::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexImage2D>
	<compressedTexImage3D public="1" set="method" line="3864" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexImage3D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="3874" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexSubImage2D>
	<compressedTexSubImage3D public="1" get="inline" set="null" line="3889" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexSubImage3D>
	<copyBufferSubData public="1" get="inline" set="null" line="3898" static="1">
		<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyBufferSubData>
	<copyTexImage2D public="1" get="inline" set="null" line="3903" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="3908" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<copyTexSubImage3D public="1" get="inline" set="null" line="3913" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage3D>
	<createBuffer public="1" get="inline" set="null" line="3919" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="3924" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="3929" static="1">
		<f a="this">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createQuery public="1" get="inline" set="null" line="3934" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createQuery>
	<createRenderbuffer public="1" get="inline" set="null" line="3939" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createSampler public="1" get="inline" set="null" line="3944" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createSampler>
	<createShader public="1" get="inline" set="null" line="3949" static="1">
		<f a="this:type">
			<d/>
			<x path="Int"/>
			<x path="lime.graphics.opengl.GLShader"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="3954" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<createTransformFeedback public="1" get="inline" set="null" line="3959" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTransformFeedback>
	<createVertexArray public="1" get="inline" set="null" line="3964" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createVertexArray>
	<cullFace public="1" get="inline" set="null" line="3969" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="3974" static="1">
		<f a="this:buffer">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="3979" static="1">
		<f a="this:framebuffer">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="3984" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteQuery public="1" get="inline" set="null" line="3989" static="1">
		<f a="this:query">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteQuery>
	<deleteRenderbuffer public="1" get="inline" set="null" line="3994" static="1">
		<f a="this:renderbuffer">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteSampler public="1" get="inline" set="null" line="3999" static="1">
		<f a="this:sampler">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSampler>
	<deleteShader public="1" get="inline" set="null" line="4004" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteSync public="1" get="inline" set="null" line="4009" static="1">
		<f a="this:sync">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSync>
	<deleteTexture public="1" get="inline" set="null" line="4014" static="1">
		<f a="this:texture">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<deleteTransformFeedback public="1" get="inline" set="null" line="4019" static="1">
		<f a="this:transformFeedback">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTransformFeedback>
	<deleteVertexArray public="1" get="inline" set="null" line="4024" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteVertexArray>
	<depthFunc public="1" get="inline" set="null" line="4029" static="1">
		<f a="this:func">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="4034" static="1">
		<f a="this:flag">
			<d/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRange public="1" get="inline" set="null" line="4039" static="1">
		<f a="this:zNear:zFar">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRange>
	<detachShader public="1" get="inline" set="null" line="4044" static="1">
		<f a="this:program:shader">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="4049" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="4054" static="1">
		<f a="this:index">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="4059" static="1">
		<f a="this:mode:first:count">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawArraysInstanced public="1" get="inline" set="null" line="4064" static="1">
		<f a="this:mode:first:count:instanceCount">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArraysInstanced>
	<drawBuffers public="1" get="inline" set="null" line="4069" static="1">
		<f a="this:buffers">
			<d/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawBuffers>
	<drawElements public="1" get="inline" set="null" line="4074" static="1">
		<f a="this:mode:count:type:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<drawElementsInstanced public="1" get="inline" set="null" line="4079" static="1">
		<f a="this:mode:count:type:offset:instanceCount">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElementsInstanced>
	<drawRangeElements public="1" get="inline" set="null" line="4084" static="1">
		<f a="this:mode:start:end:count:type:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawRangeElements>
	<enable public="1" get="inline" set="null" line="4089" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="4094" static="1">
		<f a="this:index">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<endQuery public="1" get="inline" set="null" line="4099" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endQuery>
	<endTransformFeedback public="1" get="inline" set="null" line="4104" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endTransformFeedback>
	<fenceSync public="1" get="inline" set="null" line="4109" static="1">
		<f a="this:condition:flags">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSync"/>
		</f>
		<meta><m n=":impl"/></meta>
	</fenceSync>
	<finish public="1" get="inline" set="null" line="4114" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="4119" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="4124" static="1">
		<f a="this:target:attachment:renderbuffertarget:renderbuffer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="4129" static="1">
		<f a="this:target:attachment:textarget:texture:level">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<framebufferTextureLayer public="1" get="inline" set="null" line="4134" static="1">
		<f a="this:target:attachment:texture:level:layer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTextureLayer>
	<frontFace public="1" get="inline" set="null" line="4139" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<generateMipmap public="1" get="inline" set="null" line="4144" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<getActiveAttrib public="1" get="inline" set="null" line="4149" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="4154" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getActiveUniformBlockName public="1" get="inline" set="null" line="4159" static="1">
		<f a="this:program:uniformBlockIndex">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockName>
	<getActiveUniformBlockParameter public="1" get="inline" set="null" line="4164" static="1">
		<f a="this:program:uniformBlockIndex:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockParameter>
	<getActiveUniforms public="1" get="inline" set="null" line="4169" static="1">
		<f a="this:program:uniformIndices:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniforms>
	<getAttachedShaders public="1" get="inline" set="null" line="4174" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="4179" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBufferParameter public="1" get="inline" set="null" line="4184" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameter>
	<getBufferSubData public="1" get="inline" set="null" line="4190" static="1">
		<f a="this:target:srcByteOffset:dstData:?srcOffset:?length" v="::::0:">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</getBufferSubData>
	<getContextAttributes public="1" get="inline" set="null" line="4202" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLContextAttributes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getContextAttributes>
	<getError public="1" get="inline" set="null" line="4207" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getExtension public="1" get="inline" set="null" line="4212" static="1">
		<f a="this:name">
			<d/>
			<c path="String"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<getFragDataLocation public="1" get="inline" set="null" line="4217" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFragDataLocation>
	<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="4222" static="1">
		<f a="this:target:attachment:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameter>
	<getIndexedParameter public="1" get="inline" set="null" line="4227" static="1">
		<f a="this:target:index">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIndexedParameter>
	<getInternalformatParameter public="1" get="inline" set="null" line="4232" static="1">
		<f a="this:target:internalformat:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformatParameter>
	<getParameter public="1" get="inline" set="null" line="4237" static="1">
		<f a="this:pname">
			<d/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getParameter>
	<getProgramInfoLog public="1" get="inline" set="null" line="4242" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getProgramParameter public="1" get="inline" set="null" line="4247" static="1">
		<f a="this:program:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramParameter>
	<getQuery public="1" get="inline" set="null" line="4252" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQuery>
	<getQueryParameter public="1" get="inline" set="null" line="4257" static="1">
		<f a="this:query:pname">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryParameter>
	<getRenderbufferParameter public="1" get="inline" set="null" line="4262" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameter>
	<getSamplerParameter public="1" get="inline" set="null" line="4267" static="1">
		<f a="this:sampler:pname">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameter>
	<getShaderInfoLog public="1" get="inline" set="null" line="4272" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderParameter public="1" get="inline" set="null" line="4277" static="1">
		<f a="this:shader:pname">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderParameter>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="4282" static="1">
		<f a="this:shadertype:precisiontype">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderSource public="1" get="inline" set="null" line="4287" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getSupportedExtensions public="1" get="inline" set="null" line="4292" static="1">
		<f a="this">
			<d/>
			<c path="Array"><c path="String"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getSupportedExtensions>
	<getSyncParameter public="1" get="inline" set="null" line="4297" static="1">
		<f a="this:sync:pname">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameter>
	<getTexParameter public="1" get="inline" set="null" line="4302" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameter>
	<getTransformFeedbackVarying public="1" get="inline" set="null" line="4307" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTransformFeedbackVarying>
	<getUniform public="1" get="inline" set="null" line="4312" static="1">
		<f a="this:program:location">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniform>
	<getUniformBlockIndex public="1" get="inline" set="null" line="4317" static="1">
		<f a="this:program:uniformBlockName">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformBlockIndex>
	<getUniformIndices public="1" get="inline" set="null" line="4322" static="1">
		<f a="this:program:uniformNames">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformIndices>
	<getUniformLocation public="1" get="inline" set="null" line="4327" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttrib public="1" get="inline" set="null" line="4332" static="1">
		<f a="this:index:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttrib>
	<getVertexAttribOffset public="1" get="inline" set="null" line="4337" static="1">
		<f a="this:index:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribOffset>
	<hint public="1" get="inline" set="null" line="4342" static="1">
		<f a="this:target:mode">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<invalidateFramebuffer public="1" get="inline" set="null" line="4347" static="1">
		<f a="this:target:attachments">
			<d/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateFramebuffer>
	<invalidateSubFramebuffer public="1" get="inline" set="null" line="4352" static="1">
		<f a="this:target:attachments:x:y:width:height">
			<d/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateSubFramebuffer>
	<isBuffer public="1" get="inline" set="null" line="4357" static="1">
		<f a="this:buffer">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isContextLost public="1" get="inline" set="null" line="4362" static="1">
		<f a="this">
			<d/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isContextLost>
	<isEnabled public="1" get="inline" set="null" line="4367" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isFramebuffer public="1" get="inline" set="null" line="4372" static="1">
		<f a="this:framebuffer">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="4377" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isQuery public="1" get="inline" set="null" line="4382" static="1">
		<f a="this:query">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isQuery>
	<isRenderbuffer public="1" get="inline" set="null" line="4387" static="1">
		<f a="this:renderbuffer">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isSampler public="1" get="inline" set="null" line="4392" static="1">
		<f a="this:sampler">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSampler>
	<isShader public="1" get="inline" set="null" line="4397" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isSync public="1" get="inline" set="null" line="4402" static="1">
		<f a="this:sync">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSync>
	<isTexture public="1" get="inline" set="null" line="4407" static="1">
		<f a="this:texture">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<isTransformFeedback public="1" get="inline" set="null" line="4412" static="1">
		<f a="this:transformFeedback">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTransformFeedback>
	<isVertexArray public="1" get="inline" set="null" line="4417" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isVertexArray>
	<lineWidth public="1" get="inline" set="null" line="4422" static="1">
		<f a="this:width">
			<d/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="4427" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<pauseTransformFeedback public="1" get="inline" set="null" line="4432" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pauseTransformFeedback>
	<pixelStorei public="1" get="inline" set="null" line="4437" static="1">
		<f a="this:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="4442" static="1">
		<f a="this:factor:units">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<readBuffer public="1" get="inline" set="null" line="4447" static="1">
		<f a="this:src">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readBuffer>
	<readPixels public="1" get="inline" set="null" line="4453" static="1">
		<f a="this:x:y:width:height:format:type:pixels:?dstOffset" v="::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ dstOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</readPixels>
	<renderbufferStorage public="1" get="inline" set="null" line="4463" static="1">
		<f a="this:target:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<renderbufferStorageMultisample public="1" get="inline" set="null" line="4468" static="1">
		<f a="this:target:samples:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorageMultisample>
	<resumeTransformFeedback public="1" get="inline" set="null" line="4473" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</resumeTransformFeedback>
	<sampleCoverage public="1" get="inline" set="null" line="4478" static="1">
		<f a="this:value:invert">
			<d/>
			<x path="Float"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<samplerParameterf public="1" get="inline" set="null" line="4483" static="1">
		<f a="this:sampler:pname:param">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameterf>
	<samplerParameteri public="1" get="inline" set="null" line="4488" static="1">
		<f a="this:sampler:pname:param">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameteri>
	<scissor public="1" get="inline" set="null" line="4493" static="1">
		<f a="this:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderSource public="1" get="inline" set="null" line="4498" static="1">
		<f a="this:shader:source">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="4503" static="1">
		<f a="this:func:ref:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="4508" static="1">
		<f a="this:face:func:ref:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="4513" static="1">
		<f a="this:mask">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="4518" static="1">
		<f a="this:face:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="4523" static="1">
		<f a="this:fail:zfail:zpass">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="4528" static="1">
		<f a="this:face:fail:zfail:zpass">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="4534" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:srcData:?srcOffset" v="::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texImage2D>
	<texImage3D public="1" get="inline" set="null" line="4549" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texImage3D>
	<texStorage2D public="1" get="inline" set="null" line="4557" static="1">
		<f a="this:target:level:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage2D>
	<texStorage3D public="1" get="inline" set="null" line="4562" static="1">
		<f a="this:target:level:internalformat:width:height:depth">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage3D>
	<texParameterf public="1" get="inline" set="null" line="4567" static="1">
		<f a="this:target:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" get="inline" set="null" line="4572" static="1">
		<f a="this:target:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="4578" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage2D>
	<texSubImage3D public="1" get="inline" set="null" line="4591" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage3D>
	<transformFeedbackVaryings public="1" get="inline" set="null" line="4599" static="1">
		<f a="this:program:varyings:bufferMode">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformFeedbackVaryings>
	<uniform1f public="1" get="inline" set="null" line="4604" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="4610" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="4618" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="4624" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform1ui public="1" get="inline" set="null" line="4632" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1ui>
	<uniform1uiv public="1" get="inline" set="null" line="4637" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1uiv>
	<uniform2f public="1" get="inline" set="null" line="4642" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" get="inline" set="null" line="4648" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="4656" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="4662" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform2ui public="1" get="inline" set="null" line="4670" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2ui>
	<uniform2uiv public="1" get="inline" set="null" line="4675" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2uiv>
	<uniform3f public="1" get="inline" set="null" line="4681" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="4687" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="4697" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="4703" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform3ui public="1" get="inline" set="null" line="4713" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3ui>
	<uniform3uiv public="1" get="inline" set="null" line="4718" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3uiv>
	<uniform4f public="1" get="inline" set="null" line="4724" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="4731" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="4741" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="4748" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.Int32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniform4ui public="1" get="inline" set="null" line="4758" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4ui>
	<uniform4uiv public="1" get="inline" set="null" line="4764" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4uiv>
	<uniformBlockBinding public="1" get="inline" set="null" line="4770" static="1">
		<f a="this:program:uniformBlockIndex:uniformBlockBinding">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformBlockBinding>
	<uniformMatrix2fv public="1" set="method" line="4777" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2fv>
	<uniformMatrix2x3fv public="1" set="method" line="4792" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x3fv>
	<uniformMatrix2x4fv public="1" set="method" line="4804" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x4fv>
	<uniformMatrix3fv public="1" set="method" line="4817" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3fv>
	<uniformMatrix3x2fv public="1" set="method" line="4832" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x2fv>
	<uniformMatrix3x4fv public="1" set="method" line="4844" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x4fv>
	<uniformMatrix4fv public="1" set="method" line="4857" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4fv>
	<uniformMatrix4x2fv public="1" set="method" line="4872" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x2fv>
	<uniformMatrix4x3fv public="1" set="method" line="4884" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x3fv>
	<useProgram public="1" get="inline" set="null" line="4896" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="4901" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="4906" static="1">
		<f a="this:indx:x">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="4911" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="4917" static="1">
		<f a="this:indx:x:y">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="4922" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="4928" static="1">
		<f a="this:indx:x:y:z">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="4933" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="4939" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="4945" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribDivisor public="1" get="inline" set="null" line="4951" static="1">
		<f a="this:index:divisor">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribDivisor>
	<vertexAttribI4i public="1" get="inline" set="null" line="4956" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4i>
	<vertexAttribI4iv public="1" get="inline" set="null" line="4962" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4iv>
	<vertexAttribI4ui public="1" get="inline" set="null" line="4968" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4ui>
	<vertexAttribI4uiv public="1" get="inline" set="null" line="4974" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4uiv>
	<vertexAttribIPointer public="1" get="inline" set="null" line="4980" static="1">
		<f a="this:index:size:type:stride:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribIPointer>
	<vertexAttribPointer public="1" get="inline" set="null" line="4986" static="1">
		<f a="this:indx:size:type:normalized:stride:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="4992" static="1">
		<f a="this:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
	<waitSync public="1" get="inline" set="null" line="4997" static="1">
		<f a="this:sync:flags:timeout">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</waitSync>
	<fromRenderContext set="method" line="5002" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.WebGL2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<fromGL set="method" line="5014" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.WebGL2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>lime.graphics.RenderContext</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.BytePointerData" params="" file="/projects/May2019/May2020/lime/src/lime/utils/BytePointer.hx" module="lime.utils.BytePointer">
		<bytes public="1"><c path="haxe.io.Bytes"/></bytes>
		<offset public="1"><x path="Int"/></offset>
		<new public="1" set="method" line="203"><f a="bytes:offset">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGL2RenderContext.hx" private="1" module="lime.graphics.WebGL2RenderContext" final="1">
		<__tempPointer expr="new BytePointer()" line="310" static="1">
			<x path="lime.utils.BytePointer"/>
			<meta><m n=":value"><e>new BytePointer()</e></m></meta>
		</__tempPointer>
		<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINTS>
		<LINES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINES>
		<LINE_LOOP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ZERO>
		<ONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE>
		<SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT>
		<BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE>
		<BLEND public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND>
		<DITHER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CW>
		<CCW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CCW>
		<LINE_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DONT_CARE>
		<FASTEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FASTEST>
		<NICEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT>
		<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA>
		<RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB>
		<RGBA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA>
		<LUMINANCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEVER>
		<LESS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LESS>
		<EQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EQUAL>
		<LEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LEQUAL>
		<GREATER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREATER>
		<NOTEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GEQUAL>
		<ALWAYS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALWAYS>
		<KEEP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</KEEP>
		<REPLACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPLACE>
		<INCR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR>
		<DECR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR>
		<INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVERT>
		<INCR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VENDOR>
		<RENDERER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERER>
		<VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERSION>
		<NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST>
		<LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC4>
		<BOOL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB5_A1>
		<RGB565 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED>
		<RGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8>
		<RGBA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB>
		<SRGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32F>
		<RGB32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32F>
		<RGBA16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16F>
		<RGB16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8UI>
		<RGBA32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32I>
		<RGB32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32I>
		<RGBA16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16I>
		<RGB16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16I>
		<RGBA8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8I>
		<RGB8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8>
		<RG8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8>
		<R16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16F>
		<R32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32F>
		<RG16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16F>
		<RG32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32F>
		<R8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8I>
		<R8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8UI>
		<R16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16I>
		<R16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16UI>
		<R32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32I>
		<R32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32UI>
		<RG8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8I>
		<RG8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8UI>
		<RG16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16I>
		<RG16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16UI>
		<RG32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32I>
		<RG32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32UI>
		<R8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HALF_FLOAT>
		<RG public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG>
		<RG_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR>
		<DEPTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH>
		<STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL>
		<MIN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN>
		<MAX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<get_DEPTH_BUFFER_BIT get="inline" set="null" line="870" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BUFFER_BIT>
		<get_STENCIL_BUFFER_BIT get="inline" set="null" line="875" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BUFFER_BIT>
		<get_COLOR_BUFFER_BIT get="inline" set="null" line="880" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_BUFFER_BIT>
		<get_POINTS get="inline" set="null" line="885" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POINTS>
		<get_LINES get="inline" set="null" line="890" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINES>
		<get_LINE_LOOP get="inline" set="null" line="895" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_LOOP>
		<get_LINE_STRIP get="inline" set="null" line="900" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_STRIP>
		<get_TRIANGLES get="inline" set="null" line="905" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLES>
		<get_TRIANGLE_STRIP get="inline" set="null" line="910" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_STRIP>
		<get_TRIANGLE_FAN get="inline" set="null" line="915" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_FAN>
		<get_ZERO get="inline" set="null" line="920" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ZERO>
		<get_ONE get="inline" set="null" line="925" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE>
		<get_SRC_COLOR get="inline" set="null" line="930" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_COLOR>
		<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="935" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_COLOR>
		<get_SRC_ALPHA get="inline" set="null" line="940" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA>
		<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="945" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_ALPHA>
		<get_DST_ALPHA get="inline" set="null" line="950" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_ALPHA>
		<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="955" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_ALPHA>
		<get_DST_COLOR get="inline" set="null" line="960" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_COLOR>
		<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="965" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_COLOR>
		<get_SRC_ALPHA_SATURATE get="inline" set="null" line="970" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA_SATURATE>
		<get_FUNC_ADD get="inline" set="null" line="975" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_ADD>
		<get_BLEND_EQUATION get="inline" set="null" line="980" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION>
		<get_BLEND_EQUATION_RGB get="inline" set="null" line="985" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_RGB>
		<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="990" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_ALPHA>
		<get_FUNC_SUBTRACT get="inline" set="null" line="995" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_SUBTRACT>
		<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="1000" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_REVERSE_SUBTRACT>
		<get_BLEND_DST_RGB get="inline" set="null" line="1005" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_RGB>
		<get_BLEND_SRC_RGB get="inline" set="null" line="1010" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_RGB>
		<get_BLEND_DST_ALPHA get="inline" set="null" line="1015" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_ALPHA>
		<get_BLEND_SRC_ALPHA get="inline" set="null" line="1020" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_ALPHA>
		<get_CONSTANT_COLOR get="inline" set="null" line="1025" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_COLOR>
		<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="1030" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_COLOR>
		<get_CONSTANT_ALPHA get="inline" set="null" line="1035" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_ALPHA>
		<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="1040" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_ALPHA>
		<get_BLEND_COLOR get="inline" set="null" line="1045" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_COLOR>
		<get_ARRAY_BUFFER get="inline" set="null" line="1050" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER>
		<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="1055" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER>
		<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="1060" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER_BINDING>
		<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="1065" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER_BINDING>
		<get_STREAM_DRAW get="inline" set="null" line="1070" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_DRAW>
		<get_STATIC_DRAW get="inline" set="null" line="1075" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_DRAW>
		<get_DYNAMIC_DRAW get="inline" set="null" line="1080" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_DRAW>
		<get_BUFFER_SIZE get="inline" set="null" line="1085" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_SIZE>
		<get_BUFFER_USAGE get="inline" set="null" line="1090" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_USAGE>
		<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="1095" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_VERTEX_ATTRIB>
		<get_FRONT get="inline" set="null" line="1100" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT>
		<get_BACK get="inline" set="null" line="1105" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BACK>
		<get_FRONT_AND_BACK get="inline" set="null" line="1110" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_AND_BACK>
		<get_CULL_FACE get="inline" set="null" line="1115" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE>
		<get_BLEND get="inline" set="null" line="1120" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND>
		<get_DITHER get="inline" set="null" line="1125" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DITHER>
		<get_STENCIL_TEST get="inline" set="null" line="1130" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_TEST>
		<get_DEPTH_TEST get="inline" set="null" line="1135" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_TEST>
		<get_SCISSOR_TEST get="inline" set="null" line="1140" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_TEST>
		<get_POLYGON_OFFSET_FILL get="inline" set="null" line="1145" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FILL>
		<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="1150" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_ALPHA_TO_COVERAGE>
		<get_SAMPLE_COVERAGE get="inline" set="null" line="1155" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE>
		<get_NO_ERROR get="inline" set="null" line="1160" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NO_ERROR>
		<get_INVALID_ENUM get="inline" set="null" line="1165" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_ENUM>
		<get_INVALID_VALUE get="inline" set="null" line="1170" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_VALUE>
		<get_INVALID_OPERATION get="inline" set="null" line="1175" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_OPERATION>
		<get_OUT_OF_MEMORY get="inline" set="null" line="1180" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OUT_OF_MEMORY>
		<get_CW get="inline" set="null" line="1185" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CW>
		<get_CCW get="inline" set="null" line="1190" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CCW>
		<get_LINE_WIDTH get="inline" set="null" line="1195" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_WIDTH>
		<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="1200" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_POINT_SIZE_RANGE>
		<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="1205" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_LINE_WIDTH_RANGE>
		<get_CULL_FACE_MODE get="inline" set="null" line="1210" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE_MODE>
		<get_FRONT_FACE get="inline" set="null" line="1215" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_FACE>
		<get_DEPTH_RANGE get="inline" set="null" line="1220" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_RANGE>
		<get_DEPTH_WRITEMASK get="inline" set="null" line="1225" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_WRITEMASK>
		<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="1230" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_CLEAR_VALUE>
		<get_DEPTH_FUNC get="inline" set="null" line="1235" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_FUNC>
		<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="1240" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_CLEAR_VALUE>
		<get_STENCIL_FUNC get="inline" set="null" line="1245" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FUNC>
		<get_STENCIL_FAIL get="inline" set="null" line="1250" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FAIL>
		<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1255" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_FAIL>
		<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1260" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_PASS>
		<get_STENCIL_REF get="inline" set="null" line="1265" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_REF>
		<get_STENCIL_VALUE_MASK get="inline" set="null" line="1270" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_VALUE_MASK>
		<get_STENCIL_WRITEMASK get="inline" set="null" line="1275" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_WRITEMASK>
		<get_STENCIL_BACK_FUNC get="inline" set="null" line="1280" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FUNC>
		<get_STENCIL_BACK_FAIL get="inline" set="null" line="1285" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1290" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1295" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_PASS>
		<get_STENCIL_BACK_REF get="inline" set="null" line="1300" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_REF>
		<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1305" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_VALUE_MASK>
		<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1310" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_WRITEMASK>
		<get_VIEWPORT get="inline" set="null" line="1315" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VIEWPORT>
		<get_SCISSOR_BOX get="inline" set="null" line="1320" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_BOX>
		<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1325" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_CLEAR_VALUE>
		<get_COLOR_WRITEMASK get="inline" set="null" line="1330" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_WRITEMASK>
		<get_UNPACK_ALIGNMENT get="inline" set="null" line="1335" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ALIGNMENT>
		<get_PACK_ALIGNMENT get="inline" set="null" line="1340" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ALIGNMENT>
		<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1345" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_SIZE>
		<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1350" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VIEWPORT_DIMS>
		<get_SUBPIXEL_BITS get="inline" set="null" line="1355" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SUBPIXEL_BITS>
		<get_RED_BITS get="inline" set="null" line="1360" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_BITS>
		<get_GREEN_BITS get="inline" set="null" line="1365" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREEN_BITS>
		<get_BLUE_BITS get="inline" set="null" line="1370" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLUE_BITS>
		<get_ALPHA_BITS get="inline" set="null" line="1375" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA_BITS>
		<get_DEPTH_BITS get="inline" set="null" line="1380" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BITS>
		<get_STENCIL_BITS get="inline" set="null" line="1385" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BITS>
		<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1390" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_UNITS>
		<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1395" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FACTOR>
		<get_TEXTURE_BINDING_2D get="inline" set="null" line="1400" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D>
		<get_SAMPLE_BUFFERS get="inline" set="null" line="1405" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_BUFFERS>
		<get_SAMPLES get="inline" set="null" line="1410" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLES>
		<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1415" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_VALUE>
		<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1420" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_INVERT>
		<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1425" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPRESSED_TEXTURE_FORMATS>
		<get_DONT_CARE get="inline" set="null" line="1430" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DONT_CARE>
		<get_FASTEST get="inline" set="null" line="1435" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FASTEST>
		<get_NICEST get="inline" set="null" line="1440" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NICEST>
		<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1445" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GENERATE_MIPMAP_HINT>
		<get_BYTE get="inline" set="null" line="1450" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BYTE>
		<get_UNSIGNED_BYTE get="inline" set="null" line="1455" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_BYTE>
		<get_SHORT get="inline" set="null" line="1460" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHORT>
		<get_UNSIGNED_SHORT get="inline" set="null" line="1465" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT>
		<get_INT get="inline" set="null" line="1470" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT>
		<get_UNSIGNED_INT get="inline" set="null" line="1475" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT>
		<get_FLOAT get="inline" set="null" line="1480" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT>
		<get_DEPTH_COMPONENT get="inline" set="null" line="1485" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT>
		<get_ALPHA get="inline" set="null" line="1490" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA>
		<get_RGB get="inline" set="null" line="1495" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB>
		<get_RGBA get="inline" set="null" line="1500" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA>
		<get_LUMINANCE get="inline" set="null" line="1505" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE>
		<get_LUMINANCE_ALPHA get="inline" set="null" line="1510" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE_ALPHA>
		<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1515" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_4_4_4_4>
		<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1520" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_5_5_1>
		<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1525" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_6_5>
		<get_FRAGMENT_SHADER get="inline" set="null" line="1530" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER>
		<get_VERTEX_SHADER get="inline" set="null" line="1535" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_SHADER>
		<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1540" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_ATTRIBS>
		<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1545" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_VECTORS>
		<get_MAX_VARYING_VECTORS get="inline" set="null" line="1550" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_VECTORS>
		<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1555" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1560" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1565" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_IMAGE_UNITS>
		<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1570" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_VECTORS>
		<get_SHADER_TYPE get="inline" set="null" line="1575" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADER_TYPE>
		<get_DELETE_STATUS get="inline" set="null" line="1580" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DELETE_STATUS>
		<get_LINK_STATUS get="inline" set="null" line="1585" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINK_STATUS>
		<get_VALIDATE_STATUS get="inline" set="null" line="1590" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VALIDATE_STATUS>
		<get_ATTACHED_SHADERS get="inline" set="null" line="1595" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ATTACHED_SHADERS>
		<get_ACTIVE_UNIFORMS get="inline" set="null" line="1600" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORMS>
		<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1605" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_ATTRIBUTES>
		<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1610" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADING_LANGUAGE_VERSION>
		<get_CURRENT_PROGRAM get="inline" set="null" line="1615" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_PROGRAM>
		<get_NEVER get="inline" set="null" line="1620" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEVER>
		<get_LESS get="inline" set="null" line="1625" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LESS>
		<get_EQUAL get="inline" set="null" line="1630" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_EQUAL>
		<get_LEQUAL get="inline" set="null" line="1635" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LEQUAL>
		<get_GREATER get="inline" set="null" line="1640" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREATER>
		<get_NOTEQUAL get="inline" set="null" line="1645" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NOTEQUAL>
		<get_GEQUAL get="inline" set="null" line="1650" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GEQUAL>
		<get_ALWAYS get="inline" set="null" line="1655" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALWAYS>
		<get_KEEP get="inline" set="null" line="1660" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_KEEP>
		<get_REPLACE get="inline" set="null" line="1665" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPLACE>
		<get_INCR get="inline" set="null" line="1670" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR>
		<get_DECR get="inline" set="null" line="1675" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR>
		<get_INVERT get="inline" set="null" line="1680" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVERT>
		<get_INCR_WRAP get="inline" set="null" line="1685" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR_WRAP>
		<get_DECR_WRAP get="inline" set="null" line="1690" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR_WRAP>
		<get_VENDOR get="inline" set="null" line="1695" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VENDOR>
		<get_RENDERER get="inline" set="null" line="1700" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERER>
		<get_VERSION get="inline" set="null" line="1705" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERSION>
		<get_NEAREST get="inline" set="null" line="1710" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST>
		<get_LINEAR get="inline" set="null" line="1715" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR>
		<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1720" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_NEAREST>
		<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1725" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_NEAREST>
		<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1730" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_LINEAR>
		<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1735" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_LINEAR>
		<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1740" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAG_FILTER>
		<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1745" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_FILTER>
		<get_TEXTURE_WRAP_S get="inline" set="null" line="1750" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_S>
		<get_TEXTURE_WRAP_T get="inline" set="null" line="1755" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_T>
		<get_TEXTURE_2D get="inline" set="null" line="1760" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D>
		<get_TEXTURE get="inline" set="null" line="1765" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE>
		<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1770" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP>
		<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1775" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_CUBE_MAP>
		<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1780" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_X>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1785" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1790" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1795" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1800" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1805" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1810" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CUBE_MAP_TEXTURE_SIZE>
		<get_TEXTURE0 get="inline" set="null" line="1815" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE0>
		<get_TEXTURE1 get="inline" set="null" line="1820" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE1>
		<get_TEXTURE2 get="inline" set="null" line="1825" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE2>
		<get_TEXTURE3 get="inline" set="null" line="1830" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE3>
		<get_TEXTURE4 get="inline" set="null" line="1835" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE4>
		<get_TEXTURE5 get="inline" set="null" line="1840" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE5>
		<get_TEXTURE6 get="inline" set="null" line="1845" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE6>
		<get_TEXTURE7 get="inline" set="null" line="1850" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE7>
		<get_TEXTURE8 get="inline" set="null" line="1855" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE8>
		<get_TEXTURE9 get="inline" set="null" line="1860" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE9>
		<get_TEXTURE10 get="inline" set="null" line="1865" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE10>
		<get_TEXTURE11 get="inline" set="null" line="1870" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE11>
		<get_TEXTURE12 get="inline" set="null" line="1875" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE12>
		<get_TEXTURE13 get="inline" set="null" line="1880" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE13>
		<get_TEXTURE14 get="inline" set="null" line="1885" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE14>
		<get_TEXTURE15 get="inline" set="null" line="1890" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE15>
		<get_TEXTURE16 get="inline" set="null" line="1895" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE16>
		<get_TEXTURE17 get="inline" set="null" line="1900" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE17>
		<get_TEXTURE18 get="inline" set="null" line="1905" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE18>
		<get_TEXTURE19 get="inline" set="null" line="1910" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE19>
		<get_TEXTURE20 get="inline" set="null" line="1915" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE20>
		<get_TEXTURE21 get="inline" set="null" line="1920" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE21>
		<get_TEXTURE22 get="inline" set="null" line="1925" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE22>
		<get_TEXTURE23 get="inline" set="null" line="1930" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE23>
		<get_TEXTURE24 get="inline" set="null" line="1935" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE24>
		<get_TEXTURE25 get="inline" set="null" line="1940" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE25>
		<get_TEXTURE26 get="inline" set="null" line="1945" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE26>
		<get_TEXTURE27 get="inline" set="null" line="1950" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE27>
		<get_TEXTURE28 get="inline" set="null" line="1955" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE28>
		<get_TEXTURE29 get="inline" set="null" line="1960" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE29>
		<get_TEXTURE30 get="inline" set="null" line="1965" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE30>
		<get_TEXTURE31 get="inline" set="null" line="1970" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE31>
		<get_ACTIVE_TEXTURE get="inline" set="null" line="1975" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_TEXTURE>
		<get_REPEAT get="inline" set="null" line="1980" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPEAT>
		<get_CLAMP_TO_EDGE get="inline" set="null" line="1985" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CLAMP_TO_EDGE>
		<get_MIRRORED_REPEAT get="inline" set="null" line="1990" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIRRORED_REPEAT>
		<get_FLOAT_VEC2 get="inline" set="null" line="1995" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC2>
		<get_FLOAT_VEC3 get="inline" set="null" line="2000" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC3>
		<get_FLOAT_VEC4 get="inline" set="null" line="2005" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC4>
		<get_INT_VEC2 get="inline" set="null" line="2010" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC2>
		<get_INT_VEC3 get="inline" set="null" line="2015" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC3>
		<get_INT_VEC4 get="inline" set="null" line="2020" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC4>
		<get_BOOL get="inline" set="null" line="2025" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL>
		<get_BOOL_VEC2 get="inline" set="null" line="2030" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC2>
		<get_BOOL_VEC3 get="inline" set="null" line="2035" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC3>
		<get_BOOL_VEC4 get="inline" set="null" line="2040" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC4>
		<get_FLOAT_MAT2 get="inline" set="null" line="2045" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2>
		<get_FLOAT_MAT3 get="inline" set="null" line="2050" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3>
		<get_FLOAT_MAT4 get="inline" set="null" line="2055" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4>
		<get_SAMPLER_2D get="inline" set="null" line="2060" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D>
		<get_SAMPLER_CUBE get="inline" set="null" line="2065" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE>
		<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="2070" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_ENABLED>
		<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="2075" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_SIZE>
		<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="2080" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_STRIDE>
		<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="2085" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_TYPE>
		<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="2090" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="2095" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_POINTER>
		<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="2100" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<get_COMPILE_STATUS get="inline" set="null" line="2105" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPILE_STATUS>
		<get_LOW_FLOAT get="inline" set="null" line="2110" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_FLOAT>
		<get_MEDIUM_FLOAT get="inline" set="null" line="2115" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_FLOAT>
		<get_HIGH_FLOAT get="inline" set="null" line="2120" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_FLOAT>
		<get_LOW_INT get="inline" set="null" line="2125" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_INT>
		<get_MEDIUM_INT get="inline" set="null" line="2130" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_INT>
		<get_HIGH_INT get="inline" set="null" line="2135" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_INT>
		<get_FRAMEBUFFER get="inline" set="null" line="2140" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER>
		<get_RENDERBUFFER get="inline" set="null" line="2145" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER>
		<get_RGBA4 get="inline" set="null" line="2150" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA4>
		<get_RGB5_A1 get="inline" set="null" line="2155" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB5_A1>
		<get_RGB565 get="inline" set="null" line="2160" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB565>
		<get_DEPTH_COMPONENT16 get="inline" set="null" line="2165" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT16>
		<get_STENCIL_INDEX get="inline" set="null" line="2170" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX>
		<get_STENCIL_INDEX8 get="inline" set="null" line="2175" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX8>
		<get_DEPTH_STENCIL get="inline" set="null" line="2180" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL>
		<get_RENDERBUFFER_WIDTH get="inline" set="null" line="2185" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_WIDTH>
		<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="2190" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_HEIGHT>
		<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="2195" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_INTERNAL_FORMAT>
		<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="2200" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_RED_SIZE>
		<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="2205" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_GREEN_SIZE>
		<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="2210" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BLUE_SIZE>
		<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="2215" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_ALPHA_SIZE>
		<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="2220" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_DEPTH_SIZE>
		<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="2225" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_STENCIL_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="2230" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="2235" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="2240" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="2245" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<get_COLOR_ATTACHMENT0 get="inline" set="null" line="2250" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT0>
		<get_DEPTH_ATTACHMENT get="inline" set="null" line="2255" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_ATTACHMENT>
		<get_STENCIL_ATTACHMENT get="inline" set="null" line="2260" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_ATTACHMENT>
		<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="2265" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL_ATTACHMENT>
		<get_NONE get="inline" set="null" line="2270" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NONE>
		<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="2275" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_COMPLETE>
		<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="2280" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="2285" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="2290" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="2295" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_UNSUPPORTED>
		<get_FRAMEBUFFER_BINDING get="inline" set="null" line="2300" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_BINDING get="inline" set="null" line="2305" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BINDING>
		<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="2310" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_RENDERBUFFER_SIZE>
		<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="2315" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_FRAMEBUFFER_OPERATION>
		<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="2320" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_FLIP_Y_WEBGL>
		<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="2325" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="2330" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONTEXT_LOST_WEBGL>
		<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="2335" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="2340" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BROWSER_DEFAULT_WEBGL>
		<get_READ_BUFFER get="inline" set="null" line="2345" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_BUFFER>
		<get_UNPACK_ROW_LENGTH get="inline" set="null" line="2350" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ROW_LENGTH>
		<get_UNPACK_SKIP_ROWS get="inline" set="null" line="2355" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_ROWS>
		<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="2360" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_PIXELS>
		<get_PACK_ROW_LENGTH get="inline" set="null" line="2365" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ROW_LENGTH>
		<get_PACK_SKIP_ROWS get="inline" set="null" line="2370" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_ROWS>
		<get_PACK_SKIP_PIXELS get="inline" set="null" line="2375" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_PIXELS>
		<get_TEXTURE_BINDING_3D get="inline" set="null" line="2380" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_3D>
		<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="2385" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_IMAGES>
		<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="2390" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_IMAGE_HEIGHT>
		<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="2395" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_3D_TEXTURE_SIZE>
		<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="2400" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_VERTICES>
		<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="2405" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_INDICES>
		<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="2410" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_LOD_BIAS>
		<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="2415" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="2420" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="2425" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ARRAY_TEXTURE_LAYERS>
		<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2430" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN_PROGRAM_TEXEL_OFFSET>
		<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="2435" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_PROGRAM_TEXEL_OFFSET>
		<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="2440" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_COMPONENTS>
		<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="2445" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
		<get_RASTERIZER_DISCARD get="inline" set="null" line="2450" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RASTERIZER_DISCARD>
		<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="2455" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ARRAY_BINDING>
		<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="2460" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_OUTPUT_COMPONENTS>
		<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="2465" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_INPUT_COMPONENTS>
		<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="2470" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SERVER_WAIT_TIMEOUT>
		<get_MAX_ELEMENT_INDEX get="inline" set="null" line="2475" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENT_INDEX>
		<get_RED get="inline" set="null" line="2480" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED>
		<get_RGB8 get="inline" set="null" line="2485" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8>
		<get_RGBA8 get="inline" set="null" line="2490" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8>
		<get_RGB10_A2 get="inline" set="null" line="2495" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2>
		<get_TEXTURE_3D get="inline" set="null" line="2500" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_3D>
		<get_TEXTURE_WRAP_R get="inline" set="null" line="2505" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_R>
		<get_TEXTURE_MIN_LOD get="inline" set="null" line="2510" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_LOD>
		<get_TEXTURE_MAX_LOD get="inline" set="null" line="2515" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LOD>
		<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="2520" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BASE_LEVEL>
		<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="2525" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LEVEL>
		<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="2530" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_MODE>
		<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="2535" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_FUNC>
		<get_SRGB get="inline" set="null" line="2540" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB>
		<get_SRGB8 get="inline" set="null" line="2545" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8>
		<get_SRGB8_ALPHA8 get="inline" set="null" line="2550" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8_ALPHA8>
		<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="2555" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPARE_REF_TO_TEXTURE>
		<get_RGBA32F get="inline" set="null" line="2560" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32F>
		<get_RGB32F get="inline" set="null" line="2565" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32F>
		<get_RGBA16F get="inline" set="null" line="2570" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16F>
		<get_RGB16F get="inline" set="null" line="2575" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16F>
		<get_TEXTURE_2D_ARRAY get="inline" set="null" line="2580" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D_ARRAY>
		<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="2585" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D_ARRAY>
		<get_R11F_G11F_B10F get="inline" set="null" line="2590" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R11F_G11F_B10F>
		<get_RGB9_E5 get="inline" set="null" line="2595" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB9_E5>
		<get_RGBA32UI get="inline" set="null" line="2600" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32UI>
		<get_RGB32UI get="inline" set="null" line="2605" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32UI>
		<get_RGBA16UI get="inline" set="null" line="2610" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16UI>
		<get_RGB16UI get="inline" set="null" line="2615" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16UI>
		<get_RGBA8UI get="inline" set="null" line="2620" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8UI>
		<get_RGB8UI get="inline" set="null" line="2625" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8UI>
		<get_RGBA32I get="inline" set="null" line="2630" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32I>
		<get_RGB32I get="inline" set="null" line="2635" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32I>
		<get_RGBA16I get="inline" set="null" line="2640" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16I>
		<get_RGB16I get="inline" set="null" line="2645" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16I>
		<get_RGBA8I get="inline" set="null" line="2650" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8I>
		<get_RGB8I get="inline" set="null" line="2655" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8I>
		<get_RED_INTEGER get="inline" set="null" line="2660" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_INTEGER>
		<get_RGB_INTEGER get="inline" set="null" line="2665" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB_INTEGER>
		<get_RGBA_INTEGER get="inline" set="null" line="2670" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA_INTEGER>
		<get_R8 get="inline" set="null" line="2675" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8>
		<get_RG8 get="inline" set="null" line="2680" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8>
		<get_R16F get="inline" set="null" line="2685" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16F>
		<get_R32F get="inline" set="null" line="2690" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32F>
		<get_RG16F get="inline" set="null" line="2695" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16F>
		<get_RG32F get="inline" set="null" line="2700" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32F>
		<get_R8I get="inline" set="null" line="2705" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8I>
		<get_R8UI get="inline" set="null" line="2710" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8UI>
		<get_R16I get="inline" set="null" line="2715" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16I>
		<get_R16UI get="inline" set="null" line="2720" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16UI>
		<get_R32I get="inline" set="null" line="2725" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32I>
		<get_R32UI get="inline" set="null" line="2730" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32UI>
		<get_RG8I get="inline" set="null" line="2735" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8I>
		<get_RG8UI get="inline" set="null" line="2740" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8UI>
		<get_RG16I get="inline" set="null" line="2745" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16I>
		<get_RG16UI get="inline" set="null" line="2750" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16UI>
		<get_RG32I get="inline" set="null" line="2755" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32I>
		<get_RG32UI get="inline" set="null" line="2760" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32UI>
		<get_R8_SNORM get="inline" set="null" line="2765" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8_SNORM>
		<get_RG8_SNORM get="inline" set="null" line="2770" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8_SNORM>
		<get_RGB8_SNORM get="inline" set="null" line="2775" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8_SNORM>
		<get_RGBA8_SNORM get="inline" set="null" line="2780" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8_SNORM>
		<get_RGB10_A2UI get="inline" set="null" line="2785" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2UI>
		<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="2790" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_FORMAT>
		<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="2795" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_LEVELS>
		<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="2800" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_2_10_10_10_REV>
		<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="2805" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_10F_11F_11F_REV>
		<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="2810" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_5_9_9_9_REV>
		<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="2815" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
		<get_UNSIGNED_INT_24_8 get="inline" set="null" line="2820" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_24_8>
		<get_HALF_FLOAT get="inline" set="null" line="2825" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HALF_FLOAT>
		<get_RG get="inline" set="null" line="2830" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG>
		<get_RG_INTEGER get="inline" set="null" line="2835" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG_INTEGER>
		<get_INT_2_10_10_10_REV get="inline" set="null" line="2840" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_2_10_10_10_REV>
		<get_CURRENT_QUERY get="inline" set="null" line="2845" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_QUERY>
		<get_QUERY_RESULT get="inline" set="null" line="2850" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT>
		<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="2855" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT_AVAILABLE>
		<get_ANY_SAMPLES_PASSED get="inline" set="null" line="2860" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED>
		<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="2865" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
		<get_MAX_DRAW_BUFFERS get="inline" set="null" line="2870" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_DRAW_BUFFERS>
		<get_DRAW_BUFFER0 get="inline" set="null" line="2875" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER0>
		<get_DRAW_BUFFER1 get="inline" set="null" line="2880" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER1>
		<get_DRAW_BUFFER2 get="inline" set="null" line="2885" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER2>
		<get_DRAW_BUFFER3 get="inline" set="null" line="2890" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER3>
		<get_DRAW_BUFFER4 get="inline" set="null" line="2895" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER4>
		<get_DRAW_BUFFER5 get="inline" set="null" line="2900" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER5>
		<get_DRAW_BUFFER6 get="inline" set="null" line="2905" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER6>
		<get_DRAW_BUFFER7 get="inline" set="null" line="2910" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER7>
		<get_DRAW_BUFFER8 get="inline" set="null" line="2915" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER8>
		<get_DRAW_BUFFER9 get="inline" set="null" line="2920" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER9>
		<get_DRAW_BUFFER10 get="inline" set="null" line="2925" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER10>
		<get_DRAW_BUFFER11 get="inline" set="null" line="2930" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER11>
		<get_DRAW_BUFFER12 get="inline" set="null" line="2935" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER12>
		<get_DRAW_BUFFER13 get="inline" set="null" line="2940" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER13>
		<get_DRAW_BUFFER14 get="inline" set="null" line="2945" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER14>
		<get_DRAW_BUFFER15 get="inline" set="null" line="2950" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER15>
		<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="2955" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COLOR_ATTACHMENTS>
		<get_COLOR_ATTACHMENT1 get="inline" set="null" line="2960" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT1>
		<get_COLOR_ATTACHMENT2 get="inline" set="null" line="2965" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT2>
		<get_COLOR_ATTACHMENT3 get="inline" set="null" line="2970" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT3>
		<get_COLOR_ATTACHMENT4 get="inline" set="null" line="2975" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT4>
		<get_COLOR_ATTACHMENT5 get="inline" set="null" line="2980" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT5>
		<get_COLOR_ATTACHMENT6 get="inline" set="null" line="2985" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT6>
		<get_COLOR_ATTACHMENT7 get="inline" set="null" line="2990" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT7>
		<get_COLOR_ATTACHMENT8 get="inline" set="null" line="2995" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT8>
		<get_COLOR_ATTACHMENT9 get="inline" set="null" line="3000" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT9>
		<get_COLOR_ATTACHMENT10 get="inline" set="null" line="3005" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT10>
		<get_COLOR_ATTACHMENT11 get="inline" set="null" line="3010" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT11>
		<get_COLOR_ATTACHMENT12 get="inline" set="null" line="3015" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT12>
		<get_COLOR_ATTACHMENT13 get="inline" set="null" line="3020" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT13>
		<get_COLOR_ATTACHMENT14 get="inline" set="null" line="3025" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT14>
		<get_COLOR_ATTACHMENT15 get="inline" set="null" line="3030" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT15>
		<get_SAMPLER_3D get="inline" set="null" line="3035" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_3D>
		<get_SAMPLER_2D_SHADOW get="inline" set="null" line="3040" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_SHADOW>
		<get_SAMPLER_2D_ARRAY get="inline" set="null" line="3045" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY>
		<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="3050" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY_SHADOW>
		<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="3055" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE_SHADOW>
		<get_INT_SAMPLER_2D get="inline" set="null" line="3060" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D>
		<get_INT_SAMPLER_3D get="inline" set="null" line="3065" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_3D>
		<get_INT_SAMPLER_CUBE get="inline" set="null" line="3070" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_CUBE>
		<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="3075" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D_ARRAY>
		<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="3080" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D>
		<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="3085" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_3D>
		<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="3090" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_CUBE>
		<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="3095" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<get_MAX_SAMPLES get="inline" set="null" line="3100" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SAMPLES>
		<get_SAMPLER_BINDING get="inline" set="null" line="3105" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_BINDING>
		<get_PIXEL_PACK_BUFFER get="inline" set="null" line="3110" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER>
		<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="3115" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER>
		<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="3120" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER_BINDING>
		<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="3125" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER_BINDING>
		<get_COPY_READ_BUFFER get="inline" set="null" line="3130" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER>
		<get_COPY_WRITE_BUFFER get="inline" set="null" line="3135" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER>
		<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="3140" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER_BINDING>
		<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="3145" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER_BINDING>
		<get_FLOAT_MAT2x3 get="inline" set="null" line="3150" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x3>
		<get_FLOAT_MAT2x4 get="inline" set="null" line="3155" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x4>
		<get_FLOAT_MAT3x2 get="inline" set="null" line="3160" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x2>
		<get_FLOAT_MAT3x4 get="inline" set="null" line="3165" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x4>
		<get_FLOAT_MAT4x2 get="inline" set="null" line="3170" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x2>
		<get_FLOAT_MAT4x3 get="inline" set="null" line="3175" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x3>
		<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="3180" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC2>
		<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="3185" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC3>
		<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="3190" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC4>
		<get_UNSIGNED_NORMALIZED get="inline" set="null" line="3195" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_NORMALIZED>
		<get_SIGNED_NORMALIZED get="inline" set="null" line="3200" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNED_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="3205" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_INTEGER>
		<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="3210" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
		<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="3215" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="3220" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="3225" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_VARYINGS>
		<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="3230" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_START>
		<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="3235" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="3240" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="3245" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="3250" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="3255" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INTERLEAVED_ATTRIBS>
		<get_SEPARATE_ATTRIBS get="inline" set="null" line="3260" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SEPARATE_ATTRIBS>
		<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="3265" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER>
		<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="3270" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<get_TRANSFORM_FEEDBACK get="inline" set="null" line="3275" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK>
		<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="3280" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PAUSED>
		<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="3285" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_ACTIVE>
		<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="3290" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BINDING>
		<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="3295" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="3300" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="3305" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="3310" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="3315" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="3320" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="3325" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="3330" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="3335" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_DEFAULT>
		<get_DEPTH24_STENCIL8 get="inline" set="null" line="3340" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH24_STENCIL8>
		<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="3345" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER_BINDING>
		<get_READ_FRAMEBUFFER get="inline" set="null" line="3350" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER>
		<get_DRAW_FRAMEBUFFER get="inline" set="null" line="3355" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER>
		<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="3360" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="3365" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_SAMPLES>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="3370" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="3375" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<get_UNIFORM_BUFFER get="inline" set="null" line="3380" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER>
		<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="3385" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_BINDING>
		<get_UNIFORM_BUFFER_START get="inline" set="null" line="3390" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_START>
		<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="3395" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_SIZE>
		<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="3400" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_BLOCKS>
		<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="3405" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
		<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="3410" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_UNIFORM_BLOCKS>
		<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="3415" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BUFFER_BINDINGS>
		<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="3420" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BLOCK_SIZE>
		<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="3425" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="3430" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="3435" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="3440" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORM_BLOCKS>
		<get_UNIFORM_TYPE get="inline" set="null" line="3445" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_TYPE>
		<get_UNIFORM_SIZE get="inline" set="null" line="3450" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_SIZE>
		<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="3455" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_INDEX>
		<get_UNIFORM_OFFSET get="inline" set="null" line="3460" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_OFFSET>
		<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="3465" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_ARRAY_STRIDE>
		<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="3470" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_MATRIX_STRIDE>
		<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="3475" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_IS_ROW_MAJOR>
		<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="3480" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_BINDING>
		<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="3485" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_DATA_SIZE>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="3490" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="3495" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="3500" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="3505" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<get_OBJECT_TYPE get="inline" set="null" line="3510" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OBJECT_TYPE>
		<get_SYNC_CONDITION get="inline" set="null" line="3515" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_CONDITION>
		<get_SYNC_STATUS get="inline" set="null" line="3520" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_STATUS>
		<get_SYNC_FLAGS get="inline" set="null" line="3525" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLAGS>
		<get_SYNC_FENCE get="inline" set="null" line="3530" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FENCE>
		<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="3535" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_GPU_COMMANDS_COMPLETE>
		<get_UNSIGNALED get="inline" set="null" line="3540" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNALED>
		<get_SIGNALED get="inline" set="null" line="3545" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNALED>
		<get_ALREADY_SIGNALED get="inline" set="null" line="3550" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALREADY_SIGNALED>
		<get_TIMEOUT_EXPIRED get="inline" set="null" line="3555" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_EXPIRED>
		<get_CONDITION_SATISFIED get="inline" set="null" line="3560" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONDITION_SATISFIED>
		<get_WAIT_FAILED get="inline" set="null" line="3565" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_WAIT_FAILED>
		<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="3570" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLUSH_COMMANDS_BIT>
		<get_COLOR get="inline" set="null" line="3575" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR>
		<get_DEPTH get="inline" set="null" line="3580" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH>
		<get_STENCIL get="inline" set="null" line="3585" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL>
		<get_MIN get="inline" set="null" line="3590" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN>
		<get_MAX get="inline" set="null" line="3595" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX>
		<get_DEPTH_COMPONENT24 get="inline" set="null" line="3600" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT24>
		<get_STREAM_READ get="inline" set="null" line="3605" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_READ>
		<get_STREAM_COPY get="inline" set="null" line="3610" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_COPY>
		<get_STATIC_READ get="inline" set="null" line="3615" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_READ>
		<get_STATIC_COPY get="inline" set="null" line="3620" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_COPY>
		<get_DYNAMIC_READ get="inline" set="null" line="3625" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_READ>
		<get_DYNAMIC_COPY get="inline" set="null" line="3630" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_COPY>
		<get_DEPTH_COMPONENT32F get="inline" set="null" line="3635" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT32F>
		<get_DEPTH32F_STENCIL8 get="inline" set="null" line="3640" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH32F_STENCIL8>
		<get_INVALID_INDEX get="inline" set="null" line="3645" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_INDEX>
		<get_TIMEOUT_IGNORED get="inline" set="null" line="3650" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_IGNORED>
		<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="3655" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<activeTexture public="1" get="inline" set="null" line="3660" static="1">
			<f a="this:texture">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="3665" static="1">
			<f a="this:program:shader">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<beginQuery public="1" get="inline" set="null" line="3670" static="1">
			<f a="this:target:query">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="3675" static="1">
			<f a="this:primitiveNode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="3680" static="1">
			<f a="this:program:index:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="3685" static="1">
			<f a="this:target:buffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="3690" static="1">
			<f a="this:target:index:buffer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="3695" static="1">
			<f a="this:target:index:buffer:offset:size">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="3700" static="1">
			<f a="this:target:framebuffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="3705" static="1">
			<f a="this:target:renderbuffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="3710" static="1">
			<f a="this:unit:sampler">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindSampler>
		<bindTexture public="1" get="inline" set="null" line="3715" static="1">
			<f a="this:target:texture">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="3720" static="1">
			<f a="this:target:transformFeedback">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="3725" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindVertexArray>
		<blendColor public="1" get="inline" set="null" line="3730" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="3735" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="3740" static="1">
			<f a="this:modeRGB:modeAlpha">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="3745" static="1">
			<f a="this:sfactor:dfactor">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="3750" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<blitFramebuffer public="1" get="inline" set="null" line="3755" static="1">
			<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blitFramebuffer>
		<bufferData public="1" set="method" line="3761" static="1">
			<f a="this:target:srcData:usage:?srcOffset:?length" v="::::0:0">
				<d/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ length : 0, srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="3774" static="1">
			<f a="this:target:offset:srcData:?srcOffset:?length" v="::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="3785" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="3790" static="1">
			<f a="this:mask">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearBufferfi public="1" get="inline" set="null" line="3795" static="1">
			<f a="this:buffer:drawbuffer:depth:stencil">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfi>
		<clearBufferfv public="1" set="method" line="3800" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</clearBufferfv>
		<clearBufferiv public="1" set="method" line="3806" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferiv>
		<clearBufferuiv public="1" set="method" line="3812" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="3818" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepth public="1" get="inline" set="null" line="3823" static="1">
			<f a="this:depth">
				<d/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepth>
		<clearStencil public="1" get="inline" set="null" line="3828" static="1">
			<f a="this:s">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="3833" static="1">
			<f a="this:sync:flags:timeout">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="3838" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="3843" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" set="method" line="3849" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride" v="::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexImage2D>
		<compressedTexImage3D public="1" set="method" line="3864" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="3874" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="3889" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="3898" static="1">
			<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="3903" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="3908" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="3913" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="3919" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="3924" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="3929" static="1">
			<f a="this">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createQuery public="1" get="inline" set="null" line="3934" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="3939" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="3944" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createSampler>
		<createShader public="1" get="inline" set="null" line="3949" static="1">
			<f a="this:type">
				<d/>
				<x path="Int"/>
				<x path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="3954" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="3959" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="3964" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createVertexArray>
		<cullFace public="1" get="inline" set="null" line="3969" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="3974" static="1">
			<f a="this:buffer">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="3979" static="1">
			<f a="this:framebuffer">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="3984" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="3989" static="1">
			<f a="this:query">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="3994" static="1">
			<f a="this:renderbuffer">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="3999" static="1">
			<f a="this:sampler">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="4004" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteSync public="1" get="inline" set="null" line="4009" static="1">
			<f a="this:sync">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="4014" static="1">
			<f a="this:texture">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="4019" static="1">
			<f a="this:transformFeedback">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="4024" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="4029" static="1">
			<f a="this:func">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="4034" static="1">
			<f a="this:flag">
				<d/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRange public="1" get="inline" set="null" line="4039" static="1">
			<f a="this:zNear:zFar">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRange>
		<detachShader public="1" get="inline" set="null" line="4044" static="1">
			<f a="this:program:shader">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="4049" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="4054" static="1">
			<f a="this:index">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="4059" static="1">
			<f a="this:mode:first:count">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="4064" static="1">
			<f a="this:mode:first:count:instanceCount">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="4069" static="1">
			<f a="this:buffers">
				<d/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawBuffers>
		<drawElements public="1" get="inline" set="null" line="4074" static="1">
			<f a="this:mode:count:type:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="4079" static="1">
			<f a="this:mode:count:type:offset:instanceCount">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="4084" static="1">
			<f a="this:mode:start:end:count:type:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawRangeElements>
		<enable public="1" get="inline" set="null" line="4089" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="4094" static="1">
			<f a="this:index">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="4099" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="4104" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="4109" static="1">
			<f a="this:condition:flags">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSync"/>
			</f>
			<meta><m n=":impl"/></meta>
		</fenceSync>
		<finish public="1" get="inline" set="null" line="4114" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="4119" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="4124" static="1">
			<f a="this:target:attachment:renderbuffertarget:renderbuffer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="4129" static="1">
			<f a="this:target:attachment:textarget:texture:level">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="4134" static="1">
			<f a="this:target:attachment:texture:level:layer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="4139" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<generateMipmap public="1" get="inline" set="null" line="4144" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="4149" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="4154" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="4159" static="1">
			<f a="this:program:uniformBlockIndex">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="4164" static="1">
			<f a="this:program:uniformBlockIndex:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="4169" static="1">
			<f a="this:program:uniformIndices:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniforms>
		<getAttachedShaders public="1" get="inline" set="null" line="4174" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="4179" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBufferParameter public="1" get="inline" set="null" line="4184" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameter>
		<getBufferSubData public="1" get="inline" set="null" line="4190" static="1">
			<f a="this:target:srcByteOffset:dstData:?srcOffset:?length" v="::::0:">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</getBufferSubData>
		<getContextAttributes public="1" get="inline" set="null" line="4202" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLContextAttributes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getContextAttributes>
		<getError public="1" get="inline" set="null" line="4207" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getExtension public="1" get="inline" set="null" line="4212" static="1">
			<f a="this:name">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="4217" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="4222" static="1">
			<f a="this:target:attachment:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameter>
		<getIndexedParameter public="1" get="inline" set="null" line="4227" static="1">
			<f a="this:target:index">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIndexedParameter>
		<getInternalformatParameter public="1" get="inline" set="null" line="4232" static="1">
			<f a="this:target:internalformat:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="4237" static="1">
			<f a="this:pname">
				<d/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="4242" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="4247" static="1">
			<f a="this:program:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="4252" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQuery>
		<getQueryParameter public="1" get="inline" set="null" line="4257" static="1">
			<f a="this:query:pname">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="4262" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameter>
		<getSamplerParameter public="1" get="inline" set="null" line="4267" static="1">
			<f a="this:sampler:pname">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameter>
		<getShaderInfoLog public="1" get="inline" set="null" line="4272" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="4277" static="1">
			<f a="this:shader:pname">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="4282" static="1">
			<f a="this:shadertype:precisiontype">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="4287" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getSupportedExtensions public="1" get="inline" set="null" line="4292" static="1">
			<f a="this">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="4297" static="1">
			<f a="this:sync:pname">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameter>
		<getTexParameter public="1" get="inline" set="null" line="4302" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameter>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="4307" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="4312" static="1">
			<f a="this:program:location">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniform>
		<getUniformBlockIndex public="1" get="inline" set="null" line="4317" static="1">
			<f a="this:program:uniformBlockName">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="4322" static="1">
			<f a="this:program:uniformNames">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="4327" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="4332" static="1">
			<f a="this:index:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="4337" static="1">
			<f a="this:index:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="4342" static="1">
			<f a="this:target:mode">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="4347" static="1">
			<f a="this:target:attachments">
				<d/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="4352" static="1">
			<f a="this:target:attachments:x:y:width:height">
				<d/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="4357" static="1">
			<f a="this:buffer">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isContextLost public="1" get="inline" set="null" line="4362" static="1">
			<f a="this">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isContextLost>
		<isEnabled public="1" get="inline" set="null" line="4367" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="4372" static="1">
			<f a="this:framebuffer">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="4377" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isQuery public="1" get="inline" set="null" line="4382" static="1">
			<f a="this:query">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="4387" static="1">
			<f a="this:renderbuffer">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="4392" static="1">
			<f a="this:sampler">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSampler>
		<isShader public="1" get="inline" set="null" line="4397" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isSync public="1" get="inline" set="null" line="4402" static="1">
			<f a="this:sync">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSync>
		<isTexture public="1" get="inline" set="null" line="4407" static="1">
			<f a="this:texture">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="4412" static="1">
			<f a="this:transformFeedback">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="4417" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="4422" static="1">
			<f a="this:width">
				<d/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="4427" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<pauseTransformFeedback public="1" get="inline" set="null" line="4432" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="4437" static="1">
			<f a="this:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="4442" static="1">
			<f a="this:factor:units">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<readBuffer public="1" get="inline" set="null" line="4447" static="1">
			<f a="this:src">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readBuffer>
		<readPixels public="1" get="inline" set="null" line="4453" static="1">
			<f a="this:x:y:width:height:format:type:pixels:?dstOffset" v="::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ dstOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="4463" static="1">
			<f a="this:target:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="4468" static="1">
			<f a="this:target:samples:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="4473" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="4478" static="1">
			<f a="this:value:invert">
				<d/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="4483" static="1">
			<f a="this:sampler:pname:param">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="4488" static="1">
			<f a="this:sampler:pname:param">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameteri>
		<scissor public="1" get="inline" set="null" line="4493" static="1">
			<f a="this:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderSource public="1" get="inline" set="null" line="4498" static="1">
			<f a="this:shader:source">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="4503" static="1">
			<f a="this:func:ref:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="4508" static="1">
			<f a="this:face:func:ref:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="4513" static="1">
			<f a="this:mask">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="4518" static="1">
			<f a="this:face:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="4523" static="1">
			<f a="this:fail:zfail:zpass">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="4528" static="1">
			<f a="this:face:fail:zfail:zpass">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="4534" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:srcData:?srcOffset" v="::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texImage2D>
		<texImage3D public="1" get="inline" set="null" line="4549" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="4557" static="1">
			<f a="this:target:level:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="4562" static="1">
			<f a="this:target:level:internalformat:width:height:depth">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="4567" static="1">
			<f a="this:target:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" get="inline" set="null" line="4572" static="1">
			<f a="this:target:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="4578" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="4591" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="4599" static="1">
			<f a="this:program:varyings:bufferMode">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="4604" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="4610" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="4618" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="4624" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="4632" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="4637" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="4642" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="4648" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="4656" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="4662" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="4670" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="4675" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="4681" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="4687" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="4697" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="4703" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="4713" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="4718" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="4724" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="4731" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="4741" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="4748" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.Int32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="4758" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="4764" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="4770" static="1">
			<f a="this:program:uniformBlockIndex:uniformBlockBinding">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformBlockBinding>
		<uniformMatrix2fv public="1" set="method" line="4777" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" set="method" line="4792" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" set="method" line="4804" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" set="method" line="4817" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" set="method" line="4832" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" set="method" line="4844" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" set="method" line="4857" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" set="method" line="4872" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" set="method" line="4884" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x3fv>
		<useProgram public="1" get="inline" set="null" line="4896" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="4901" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="4906" static="1">
			<f a="this:indx:x">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="4911" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="4917" static="1">
			<f a="this:indx:x:y">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="4922" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="4928" static="1">
			<f a="this:indx:x:y:z">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="4933" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="4939" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="4945" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="4951" static="1">
			<f a="this:index:divisor">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="4956" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="4962" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="4968" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="4974" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="4980" static="1">
			<f a="this:index:size:type:stride:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="4986" static="1">
			<f a="this:indx:size:type:normalized:stride:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="4992" static="1">
			<f a="this:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
		<waitSync public="1" get="inline" set="null" line="4997" static="1">
			<f a="this:sync:flags:timeout">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</waitSync>
		<fromRenderContext set="method" line="5002" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.WebGL2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<fromGL set="method" line="5014" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.WebGL2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.WebGLRenderContext" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGLRenderContext.hx">
		<from>
			<icast field="fromWebGL2RenderContext"><x path="lime.graphics.WebGL2RenderContext"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
		</from>
		<this><x path="lime.graphics.WebGL2RenderContext"/></this>
		<haxe_doc>The `WebGLRenderContext` allows access to WebGL features when OpenGL, OpenGL ES or
	WebGL is the render context type of the `Window`.

	Using a WebGL context on a desktop or mobile platform enables support for cross-platform
	code that should run all platforms (when hardware acceleration is supported).

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.OpenGLES3RenderContext`, `lime.graphics.OpenGLES2RenderContext`,
	`lime.graphics.WebGL2RenderContext` or `lime.graphics.opengl.GL` directly if desired:

	```haxe
	var webgl:WebGLRenderContext = window.context;
	var webgl:WebGLRenderContext = gl;
	var webgl:WebGLRenderContext = gles3;
	var webgl:WebGLRenderContext = gles2;
	var webgl:WebGLRenderContext = webgl2;
	var webgl:WebGLRenderContext = GL;
	```</haxe_doc>
		<meta><m n=":forward">
	<e>DEPTH_BUFFER_BIT</e>
	<e>STENCIL_BUFFER_BIT</e>
	<e>COLOR_BUFFER_BIT</e>
	<e>POINTS</e>
	<e>LINES</e>
	<e>LINE_LOOP</e>
	<e>LINE_STRIP</e>
	<e>TRIANGLES</e>
	<e>TRIANGLE_STRIP</e>
	<e>TRIANGLE_FAN</e>
	<e>ZERO</e>
	<e>ONE</e>
	<e>SRC_COLOR</e>
	<e>ONE_MINUS_SRC_COLOR</e>
	<e>SRC_ALPHA</e>
	<e>ONE_MINUS_SRC_ALPHA</e>
	<e>DST_ALPHA</e>
	<e>ONE_MINUS_DST_ALPHA</e>
	<e>DST_COLOR</e>
	<e>ONE_MINUS_DST_COLOR</e>
	<e>SRC_ALPHA_SATURATE</e>
	<e>FUNC_ADD</e>
	<e>BLEND_EQUATION</e>
	<e>BLEND_EQUATION_RGB</e>
	<e>BLEND_EQUATION_ALPHA</e>
	<e>FUNC_SUBTRACT</e>
	<e>FUNC_REVERSE_SUBTRACT</e>
	<e>BLEND_DST_RGB</e>
	<e>BLEND_SRC_RGB</e>
	<e>BLEND_DST_ALPHA</e>
	<e>BLEND_SRC_ALPHA</e>
	<e>CONSTANT_COLOR</e>
	<e>ONE_MINUS_CONSTANT_COLOR</e>
	<e>CONSTANT_ALPHA</e>
	<e>ONE_MINUS_CONSTANT_ALPHA</e>
	<e>BLEND_COLOR</e>
	<e>ARRAY_BUFFER</e>
	<e>ELEMENT_ARRAY_BUFFER</e>
	<e>ARRAY_BUFFER_BINDING</e>
	<e>ELEMENT_ARRAY_BUFFER_BINDING</e>
	<e>STREAM_DRAW</e>
	<e>STATIC_DRAW</e>
	<e>DYNAMIC_DRAW</e>
	<e>BUFFER_SIZE</e>
	<e>BUFFER_USAGE</e>
	<e>CURRENT_VERTEX_ATTRIB</e>
	<e>FRONT</e>
	<e>BACK</e>
	<e>FRONT_AND_BACK</e>
	<e>CULL_FACE</e>
	<e>BLEND</e>
	<e>DITHER</e>
	<e>STENCIL_TEST</e>
	<e>DEPTH_TEST</e>
	<e>SCISSOR_TEST</e>
	<e>POLYGON_OFFSET_FILL</e>
	<e>SAMPLE_ALPHA_TO_COVERAGE</e>
	<e>SAMPLE_COVERAGE</e>
	<e>NO_ERROR</e>
	<e>INVALID_ENUM</e>
	<e>INVALID_VALUE</e>
	<e>INVALID_OPERATION</e>
	<e>OUT_OF_MEMORY</e>
	<e>CW</e>
	<e>CCW</e>
	<e>LINE_WIDTH</e>
	<e>ALIASED_POINT_SIZE_RANGE</e>
	<e>ALIASED_LINE_WIDTH_RANGE</e>
	<e>CULL_FACE_MODE</e>
	<e>FRONT_FACE</e>
	<e>DEPTH_RANGE</e>
	<e>DEPTH_WRITEMASK</e>
	<e>DEPTH_CLEAR_VALUE</e>
	<e>DEPTH_FUNC</e>
	<e>STENCIL_CLEAR_VALUE</e>
	<e>STENCIL_FUNC</e>
	<e>STENCIL_FAIL</e>
	<e>STENCIL_PASS_DEPTH_FAIL</e>
	<e>STENCIL_PASS_DEPTH_PASS</e>
	<e>STENCIL_REF</e>
	<e>STENCIL_VALUE_MASK</e>
	<e>STENCIL_WRITEMASK</e>
	<e>STENCIL_BACK_FUNC</e>
	<e>STENCIL_BACK_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_PASS</e>
	<e>STENCIL_BACK_REF</e>
	<e>STENCIL_BACK_VALUE_MASK</e>
	<e>STENCIL_BACK_WRITEMASK</e>
	<e>VIEWPORT</e>
	<e>SCISSOR_BOX</e>
	<e>COLOR_CLEAR_VALUE</e>
	<e>COLOR_WRITEMASK</e>
	<e>UNPACK_ALIGNMENT</e>
	<e>PACK_ALIGNMENT</e>
	<e>MAX_TEXTURE_SIZE</e>
	<e>MAX_VIEWPORT_DIMS</e>
	<e>SUBPIXEL_BITS</e>
	<e>RED_BITS</e>
	<e>GREEN_BITS</e>
	<e>BLUE_BITS</e>
	<e>ALPHA_BITS</e>
	<e>DEPTH_BITS</e>
	<e>STENCIL_BITS</e>
	<e>POLYGON_OFFSET_UNITS</e>
	<e>POLYGON_OFFSET_FACTOR</e>
	<e>TEXTURE_BINDING_2D</e>
	<e>SAMPLE_BUFFERS</e>
	<e>SAMPLES</e>
	<e>SAMPLE_COVERAGE_VALUE</e>
	<e>SAMPLE_COVERAGE_INVERT</e>
	<e>COMPRESSED_TEXTURE_FORMATS</e>
	<e>DONT_CARE</e>
	<e>FASTEST</e>
	<e>NICEST</e>
	<e>GENERATE_MIPMAP_HINT</e>
	<e>BYTE</e>
	<e>UNSIGNED_BYTE</e>
	<e>SHORT</e>
	<e>UNSIGNED_SHORT</e>
	<e>INT</e>
	<e>UNSIGNED_INT</e>
	<e>FLOAT</e>
	<e>DEPTH_COMPONENT</e>
	<e>ALPHA</e>
	<e>RGB</e>
	<e>RGBA</e>
	<e>LUMINANCE</e>
	<e>LUMINANCE_ALPHA</e>
	<e>UNSIGNED_SHORT_4_4_4_4</e>
	<e>UNSIGNED_SHORT_5_5_5_1</e>
	<e>UNSIGNED_SHORT_5_6_5</e>
	<e>FRAGMENT_SHADER</e>
	<e>VERTEX_SHADER</e>
	<e>MAX_VERTEX_ATTRIBS</e>
	<e>MAX_VERTEX_UNIFORM_VECTORS</e>
	<e>MAX_VARYING_VECTORS</e>
	<e>MAX_COMBINED_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_VERTEX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_FRAGMENT_UNIFORM_VECTORS</e>
	<e>SHADER_TYPE</e>
	<e>DELETE_STATUS</e>
	<e>LINK_STATUS</e>
	<e>VALIDATE_STATUS</e>
	<e>ATTACHED_SHADERS</e>
	<e>ACTIVE_UNIFORMS</e>
	<e>ACTIVE_ATTRIBUTES</e>
	<e>SHADING_LANGUAGE_VERSION</e>
	<e>CURRENT_PROGRAM</e>
	<e>NEVER</e>
	<e>LESS</e>
	<e>EQUAL</e>
	<e>LEQUAL</e>
	<e>GREATER</e>
	<e>NOTEQUAL</e>
	<e>GEQUAL</e>
	<e>ALWAYS</e>
	<e>KEEP</e>
	<e>REPLACE</e>
	<e>INCR</e>
	<e>DECR</e>
	<e>INVERT</e>
	<e>INCR_WRAP</e>
	<e>DECR_WRAP</e>
	<e>VENDOR</e>
	<e>RENDERER</e>
	<e>VERSION</e>
	<e>NEAREST</e>
	<e>LINEAR</e>
	<e>NEAREST_MIPMAP_NEAREST</e>
	<e>LINEAR_MIPMAP_NEAREST</e>
	<e>NEAREST_MIPMAP_LINEAR</e>
	<e>LINEAR_MIPMAP_LINEAR</e>
	<e>TEXTURE_MAG_FILTER</e>
	<e>TEXTURE_MIN_FILTER</e>
	<e>TEXTURE_WRAP_S</e>
	<e>TEXTURE_WRAP_T</e>
	<e>TEXTURE_2D</e>
	<e>TEXTURE</e>
	<e>TEXTURE_CUBE_MAP</e>
	<e>TEXTURE_BINDING_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_X</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_X</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Z</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Z</e>
	<e>MAX_CUBE_MAP_TEXTURE_SIZE</e>
	<e>TEXTURE0</e>
	<e>TEXTURE1</e>
	<e>TEXTURE2</e>
	<e>TEXTURE3</e>
	<e>TEXTURE4</e>
	<e>TEXTURE5</e>
	<e>TEXTURE6</e>
	<e>TEXTURE7</e>
	<e>TEXTURE8</e>
	<e>TEXTURE9</e>
	<e>TEXTURE10</e>
	<e>TEXTURE11</e>
	<e>TEXTURE12</e>
	<e>TEXTURE13</e>
	<e>TEXTURE14</e>
	<e>TEXTURE15</e>
	<e>TEXTURE16</e>
	<e>TEXTURE17</e>
	<e>TEXTURE18</e>
	<e>TEXTURE19</e>
	<e>TEXTURE20</e>
	<e>TEXTURE21</e>
	<e>TEXTURE22</e>
	<e>TEXTURE23</e>
	<e>TEXTURE24</e>
	<e>TEXTURE25</e>
	<e>TEXTURE26</e>
	<e>TEXTURE27</e>
	<e>TEXTURE28</e>
	<e>TEXTURE29</e>
	<e>TEXTURE30</e>
	<e>TEXTURE31</e>
	<e>ACTIVE_TEXTURE</e>
	<e>REPEAT</e>
	<e>CLAMP_TO_EDGE</e>
	<e>MIRRORED_REPEAT</e>
	<e>FLOAT_VEC2</e>
	<e>FLOAT_VEC3</e>
	<e>FLOAT_VEC4</e>
	<e>INT_VEC2</e>
	<e>INT_VEC3</e>
	<e>INT_VEC4</e>
	<e>BOOL</e>
	<e>BOOL_VEC2</e>
	<e>BOOL_VEC3</e>
	<e>BOOL_VEC4</e>
	<e>FLOAT_MAT2</e>
	<e>FLOAT_MAT3</e>
	<e>FLOAT_MAT4</e>
	<e>SAMPLER_2D</e>
	<e>SAMPLER_CUBE</e>
	<e>VERTEX_ATTRIB_ARRAY_ENABLED</e>
	<e>VERTEX_ATTRIB_ARRAY_SIZE</e>
	<e>VERTEX_ATTRIB_ARRAY_STRIDE</e>
	<e>VERTEX_ATTRIB_ARRAY_TYPE</e>
	<e>VERTEX_ATTRIB_ARRAY_NORMALIZED</e>
	<e>VERTEX_ATTRIB_ARRAY_POINTER</e>
	<e>VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e>
	<e>COMPILE_STATUS</e>
	<e>LOW_FLOAT</e>
	<e>MEDIUM_FLOAT</e>
	<e>HIGH_FLOAT</e>
	<e>LOW_INT</e>
	<e>MEDIUM_INT</e>
	<e>HIGH_INT</e>
	<e>FRAMEBUFFER</e>
	<e>RENDERBUFFER</e>
	<e>RGBA4</e>
	<e>RGB5_A1</e>
	<e>RGB565</e>
	<e>DEPTH_COMPONENT16</e>
	<e>STENCIL_INDEX</e>
	<e>STENCIL_INDEX8</e>
	<e>DEPTH_STENCIL</e>
	<e>RENDERBUFFER_WIDTH</e>
	<e>RENDERBUFFER_HEIGHT</e>
	<e>RENDERBUFFER_INTERNAL_FORMAT</e>
	<e>RENDERBUFFER_RED_SIZE</e>
	<e>RENDERBUFFER_GREEN_SIZE</e>
	<e>RENDERBUFFER_BLUE_SIZE</e>
	<e>RENDERBUFFER_ALPHA_SIZE</e>
	<e>RENDERBUFFER_DEPTH_SIZE</e>
	<e>RENDERBUFFER_STENCIL_SIZE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e>
	<e>COLOR_ATTACHMENT0</e>
	<e>DEPTH_ATTACHMENT</e>
	<e>STENCIL_ATTACHMENT</e>
	<e>DEPTH_STENCIL_ATTACHMENT</e>
	<e>NONE</e>
	<e>FRAMEBUFFER_COMPLETE</e>
	<e>FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e>
	<e>FRAMEBUFFER_UNSUPPORTED</e>
	<e>FRAMEBUFFER_BINDING</e>
	<e>RENDERBUFFER_BINDING</e>
	<e>MAX_RENDERBUFFER_SIZE</e>
	<e>INVALID_FRAMEBUFFER_OPERATION</e>
	<e>UNPACK_FLIP_Y_WEBGL</e>
	<e>UNPACK_PREMULTIPLY_ALPHA_WEBGL</e>
	<e>CONTEXT_LOST_WEBGL</e>
	<e>UNPACK_COLORSPACE_CONVERSION_WEBGL</e>
	<e>BROWSER_DEFAULT_WEBGL</e>
	<e>type</e>
	<e>version</e>
	<e>activeTexture</e>
	<e>attachShader</e>
	<e>bindAttribLocation</e>
	<e>bindBuffer</e>
	<e>bindFramebuffer</e>
	<e>bindRenderbuffer</e>
	<e>bindTexture</e>
	<e>blendColor</e>
	<e>blendEquation</e>
	<e>blendEquationSeparate</e>
	<e>blendFunc</e>
	<e>blendFuncSeparate</e>
	<e>checkFramebufferStatus</e>
	<e>clear</e>
	<e>clearColor</e>
	<e>clearDepth</e>
	<e>clearStencil</e>
	<e>colorMask</e>
	<e>compileShader</e>
	<e>copyTexImage2D</e>
	<e>copyTexSubImage2D</e>
	<e>createBuffer</e>
	<e>createFramebuffer</e>
	<e>createProgram</e>
	<e>createRenderbuffer</e>
	<e>createShader</e>
	<e>createTexture</e>
	<e>cullFace</e>
	<e>cullFace</e>
	<e>deleteBuffer</e>
	<e>deleteFramebuffer</e>
	<e>deleteProgram</e>
	<e>deleteRenderbuffer</e>
	<e>deleteShader</e>
	<e>deleteTexture</e>
	<e>depthFunc</e>
	<e>depthMask</e>
	<e>depthRange</e>
	<e>detachShader</e>
	<e>disable</e>
	<e>disableVertexAttribArray</e>
	<e>drawArrays</e>
	<e>drawElements</e>
	<e>enable</e>
	<e>enableVertexAttribArray</e>
	<e>finish</e>
	<e>flush</e>
	<e>framebufferRenderbuffer</e>
	<e>framebufferTexture2D</e>
	<e>frontFace</e>
	<e>generateMipmap</e>
	<e>getActiveAttrib</e>
	<e>getActiveUniform</e>
	<e>getAttachedShaders</e>
	<e>getAttribLocation</e>
	<e>getBufferParameter</e>
	<e>getContextAttributes</e>
	<e>getError</e>
	<e>getExtension</e>
	<e>getFramebufferAttachmentParameter</e>
	<e>getParameter</e>
	<e>getProgramInfoLog</e>
	<e>getProgramParameter</e>
	<e>getRenderbufferParameter</e>
	<e>getShaderInfoLog</e>
	<e>getShaderParameter</e>
	<e>getShaderPrecisionFormat</e>
	<e>getShaderSource</e>
	<e>getSupportedExtensions</e>
	<e>getTexParameter</e>
	<e>getUniform</e>
	<e>getUniformLocation</e>
	<e>getVertexAttrib</e>
	<e>getVertexAttribOffset</e>
	<e>hint</e>
	<e>isBuffer</e>
	<e>isContextLost</e>
	<e>isEnabled</e>
	<e>isFramebuffer</e>
	<e>isProgram</e>
	<e>isRenderbuffer</e>
	<e>isShader</e>
	<e>isTexture</e>
	<e>lineWidth</e>
	<e>linkProgram</e>
	<e>pixelStorei</e>
	<e>polygonOffset</e>
	<e>renderbufferStorage</e>
	<e>sampleCoverage</e>
	<e>scissor</e>
	<e>shaderSource</e>
	<e>stencilFunc</e>
	<e>stencilFuncSeparate</e>
	<e>stencilMask</e>
	<e>stencilMaskSeparate</e>
	<e>stencilOp</e>
	<e>stencilOpSeparate</e>
	<e>texParameterf</e>
	<e>texParameteri</e>
	<e>uniform1f</e>
	<e>uniform1fv</e>
	<e>uniform1i</e>
	<e>uniform1iv</e>
	<e>uniform2f</e>
	<e>uniform2fv</e>
	<e>uniform2i</e>
	<e>uniform2iv</e>
	<e>uniform3f</e>
	<e>uniform3fv</e>
	<e>uniform3i</e>
	<e>uniform3iv</e>
	<e>uniform4f</e>
	<e>uniform4fv</e>
	<e>uniform4i</e>
	<e>uniform4iv</e>
	<e>useProgram</e>
	<e>validateProgram</e>
	<e>vertexAttrib1f</e>
	<e>vertexAttrib1fv</e>
	<e>vertexAttrib2f</e>
	<e>vertexAttrib2fv</e>
	<e>vertexAttrib3f</e>
	<e>vertexAttrib3fv</e>
	<e>vertexAttrib4f</e>
	<e>vertexAttrib4fv</e>
	<e>vertexAttribPointer</e>
	<e>viewport</e>
</m></meta>
		<impl><class path="lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGLRenderContext.hx" private="1" module="lime.graphics.WebGLRenderContext" final="1">
	<bufferData public="1" set="method" line="78" static="1">
		<f a="this:target:srcData:usage">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="83" static="1">
		<f a="this:target:offset:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<compressedTexImage2D public="1" set="method" line="88" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="94" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<readPixels public="1" get="inline" set="null" line="100" static="1">
		<f a="this:x:y:width:height:format:type:pixels">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<texImage2D public="1" get="inline" set="null" line="107" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texSubImage2D public="1" get="inline" set="null" line="126" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage2D>
	<uniformMatrix2fv public="1" set="method" line="144" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix3fv public="1" set="method" line="149" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix4fv public="1" set="method" line="154" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<fromWebGL2RenderContext set="method" line="159" static="1">
		<f a="gl">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromWebGL2RenderContext>
	<fromRenderContext set="method" line="164" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<fromGL set="method" line="169" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta><m n=":directlyUsed"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/WebGLRenderContext.hx" private="1" module="lime.graphics.WebGLRenderContext" final="1">
		<bufferData public="1" set="method" line="78" static="1">
			<f a="this:target:srcData:usage">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="83" static="1">
			<f a="this:target:offset:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<compressedTexImage2D public="1" set="method" line="88" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="94" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<readPixels public="1" get="inline" set="null" line="100" static="1">
			<f a="this:x:y:width:height:format:type:pixels">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<texImage2D public="1" get="inline" set="null" line="107" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texSubImage2D public="1" get="inline" set="null" line="126" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage2D>
		<uniformMatrix2fv public="1" set="method" line="144" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method" line="149" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method" line="154" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<fromWebGL2RenderContext set="method" line="159" static="1">
			<f a="gl">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromWebGL2RenderContext>
		<fromRenderContext set="method" line="164" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<fromGL set="method" line="169" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.graphics.cairo.Cairo" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/Cairo.hx">
		<version public="1" get="accessor" set="null" static="1"><x path="Int"/></version>
		<versionString public="1" get="accessor" set="null" static="1"><c path="String"/></versionString>
		<get_version set="method" line="753" static="1"><f a=""><x path="Int"/></f></get_version>
		<get_versionString set="method" line="762" static="1"><f a=""><c path="String"/></f></get_versionString>
		<antialias public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoAntialias"/></antialias>
		<currentPoint public="1" get="accessor" set="null"><c path="lime.math.Vector2"/></currentPoint>
		<dash public="1" get="accessor" set="accessor"><c path="Array"><x path="Float"/></c></dash>
		<dashCount public="1" get="accessor" set="null"><x path="Int"/></dashCount>
		<fillRule public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFillRule"/></fillRule>
		<fontFace public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFontFace"/></fontFace>
		<fontOptions public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoFontOptions"/></fontOptions>
		<groupTarget public="1" get="accessor" set="null"><x path="lime.graphics.cairo.CairoSurface"/></groupTarget>
		<hasCurrentPoint public="1" get="accessor" set="null"><x path="Bool"/></hasCurrentPoint>
		<lineCap public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoLineCap"/></lineCap>
		<lineJoin public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoLineJoin"/></lineJoin>
		<lineWidth public="1" get="accessor" set="accessor"><x path="Float"/></lineWidth>
		<matrix public="1" get="accessor" set="accessor"><c path="lime.math.Matrix3"/></matrix>
		<miterLimit public="1" get="accessor" set="accessor"><x path="Float"/></miterLimit>
		<source public="1" get="accessor" set="accessor"><x path="lime.graphics.cairo.CairoPattern"/></source>
		<target public="1" get="accessor" set="null"><x path="lime.graphics.cairo.CairoSurface"/></target>
		<tolerance public="1" get="accessor" set="accessor"><x path="Float"/></tolerance>
		<userData public="1"><d/></userData>
		<handle>
			<x path="lime.system.CFFIPointer"/>
			<meta><m n=":noCompletion"/></meta>
		</handle>
		<arc public="1" set="method" line="55"><f a="xc:yc:radius:angle1:angle2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arc>
		<arcNegative public="1" set="method" line="62"><f a="xc:yc:radius:angle1:angle2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arcNegative>
		<clip public="1" set="method" line="69"><f a=""><x path="Void"/></f></clip>
		<clipExtents public="1" set="method" line="76"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clipExtents>
		<clipPreserve public="1" set="method" line="83"><f a=""><x path="Void"/></f></clipPreserve>
		<closePath public="1" set="method" line="90"><f a=""><x path="Void"/></f></closePath>
		<copyPage public="1" set="method" line="97"><f a=""><x path="Void"/></f></copyPage>
		<curveTo public="1" set="method" line="104"><f a="x1:y1:x2:y2:x3:y3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></curveTo>
		<fill public="1" set="method" line="111"><f a=""><x path="Void"/></f></fill>
		<fillExtents public="1" set="method" line="118"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillExtents>
		<fillPreserve public="1" set="method" line="125"><f a=""><x path="Void"/></f></fillPreserve>
		<getOperator public="1" set="method" line="132"><f a=""><x path="lime.graphics.cairo.CairoOperator"/></f></getOperator>
		<identityMatrix public="1" set="method" line="141"><f a=""><x path="Void"/></f></identityMatrix>
		<inClip public="1" set="method" line="148"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inClip>
		<inFill public="1" set="method" line="157"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inFill>
		<inStroke public="1" set="method" line="166"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></inStroke>
		<lineTo public="1" set="method" line="175"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<mask public="1" set="method" line="182"><f a="pattern">
	<x path="lime.graphics.cairo.CairoPattern"/>
	<x path="Void"/>
</f></mask>
		<maskSurface public="1" set="method" line="189"><f a="surface:x:y">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></maskSurface>
		<moveTo public="1" set="method" line="196"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<newPath public="1" set="method" line="203"><f a=""><x path="Void"/></f></newPath>
		<paint public="1" set="method" line="210"><f a=""><x path="Void"/></f></paint>
		<paintWithAlpha public="1" set="method" line="217"><f a="alpha">
	<x path="Float"/>
	<x path="Void"/>
</f></paintWithAlpha>
		<popGroup public="1" set="method" line="224"><f a=""><x path="lime.graphics.cairo.CairoPattern"/></f></popGroup>
		<popGroupToSource public="1" set="method" line="233"><f a=""><x path="Void"/></f></popGroupToSource>
		<pushGroup public="1" set="method" line="240"><f a=""><x path="Void"/></f></pushGroup>
		<pushGroupWithContent public="1" set="method" line="247"><f a="content">
	<x path="lime.graphics.cairo.CairoContent"/>
	<x path="Void"/>
</f></pushGroupWithContent>
		<recreate set="method" line="254">
			<f a="surface">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</recreate>
		<rectangle public="1" set="method" line="261"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rectangle>
		<relCurveTo public="1" set="method" line="268"><f a="dx1:dy1:dx2:dy2:dx3:dy3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relCurveTo>
		<relLineTo public="1" set="method" line="275"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relLineTo>
		<relMoveTo public="1" set="method" line="282"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></relMoveTo>
		<resetClip public="1" set="method" line="289"><f a=""><x path="Void"/></f></resetClip>
		<restore public="1" set="method" line="296"><f a=""><x path="Void"/></f></restore>
		<rotate public="1" set="method" line="303"><f a="amount">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<save public="1" set="method" line="310"><f a=""><x path="Void"/></f></save>
		<scale public="1" set="method" line="317"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setFontSize public="1" set="method" line="324"><f a="size">
	<x path="Float"/>
	<x path="Void"/>
</f></setFontSize>
		<setOperator public="1" set="method" line="331"><f a="value">
	<x path="lime.graphics.cairo.CairoOperator"/>
	<x path="lime.graphics.cairo.CairoOperator"/>
</f></setOperator>
		<setSourceRGB public="1" set="method" line="340"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceRGB>
		<setSourceRGBA public="1" set="method" line="347"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceRGBA>
		<setSourceSurface public="1" set="method" line="354"><f a="surface:x:y">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setSourceSurface>
		<showGlyphs public="1" set="method" line="361"><f a="glyphs">
	<c path="Array"><c path="lime.graphics.cairo.CairoGlyph"/></c>
	<x path="Void"/>
</f></showGlyphs>
		<showPage public="1" set="method" line="374"><f a=""><x path="Void"/></f></showPage>
		<showText public="1" set="method" line="381"><f a="utf8">
	<c path="String"/>
	<x path="Void"/>
</f></showText>
		<status public="1" set="method" line="388"><f a=""><x path="lime.graphics.cairo.CairoStatus"/></f></status>
		<stroke public="1" set="method" line="397"><f a=""><x path="Void"/></f></stroke>
		<strokeExtents public="1" set="method" line="404"><f a="x1:y1:x2:y2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeExtents>
		<strokePreserve public="1" set="method" line="411"><f a=""><x path="Void"/></f></strokePreserve>
		<textPath public="1" set="method" line="418"><f a="utf8">
	<c path="String"/>
	<x path="Void"/>
</f></textPath>
		<transform public="1" set="method" line="425"><f a="matrix">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></transform>
		<translate public="1" set="method" line="432"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<get_antialias set="method" line="440">
			<f a=""><x path="lime.graphics.cairo.CairoAntialias"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_antialias>
		<set_antialias set="method" line="449">
			<f a="value">
				<x path="lime.graphics.cairo.CairoAntialias"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_antialias>
		<get_currentPoint set="method" line="458">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentPoint>
		<get_dash set="method" line="472">
			<f a=""><c path="Array"><x path="Float"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_dash>
		<set_dash set="method" line="491">
			<f a="value">
				<c path="Array"><x path="Float"/></c>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_dash>
		<get_dashCount set="method" line="507">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_dashCount>
		<get_fillRule set="method" line="516">
			<f a=""><x path="lime.graphics.cairo.CairoFillRule"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fillRule>
		<set_fillRule set="method" line="525">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFillRule"/>
				<x path="lime.graphics.cairo.CairoFillRule"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fillRule>
		<get_fontFace set="method" line="534">
			<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fontFace>
		<set_fontFace set="method" line="543">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFontFace"/>
				<x path="lime.graphics.cairo.CairoFontFace"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fontFace>
		<get_fontOptions set="method" line="552">
			<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fontOptions>
		<set_fontOptions set="method" line="561">
			<f a="value">
				<x path="lime.graphics.cairo.CairoFontOptions"/>
				<x path="lime.graphics.cairo.CairoFontOptions"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fontOptions>
		<get_groupTarget set="method" line="570">
			<f a=""><x path="lime.graphics.cairo.CairoSurface"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_groupTarget>
		<get_hasCurrentPoint set="method" line="579">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_hasCurrentPoint>
		<get_lineCap set="method" line="588">
			<f a=""><x path="lime.graphics.cairo.CairoLineCap"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineCap>
		<set_lineCap set="method" line="597">
			<f a="value">
				<x path="lime.graphics.cairo.CairoLineCap"/>
				<x path="lime.graphics.cairo.CairoLineCap"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineCap>
		<get_lineJoin set="method" line="606">
			<f a=""><x path="lime.graphics.cairo.CairoLineJoin"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineJoin>
		<set_lineJoin set="method" line="615">
			<f a="value">
				<x path="lime.graphics.cairo.CairoLineJoin"/>
				<x path="lime.graphics.cairo.CairoLineJoin"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineJoin>
		<get_lineWidth set="method" line="624">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lineWidth>
		<set_lineWidth set="method" line="633">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_lineWidth>
		<get_matrix set="method" line="642">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_matrix>
		<set_matrix set="method" line="656">
			<f a="value">
				<c path="lime.math.Matrix3"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_matrix>
		<get_miterLimit set="method" line="670">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_miterLimit>
		<set_miterLimit set="method" line="679">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_miterLimit>
		<get_source set="method" line="708">
			<f a=""><x path="lime.graphics.cairo.CairoPattern"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_source>
		<set_source set="method" line="717">
			<f a="value">
				<x path="lime.graphics.cairo.CairoPattern"/>
				<x path="lime.graphics.cairo.CairoPattern"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_source>
		<get_target set="method" line="726">
			<f a=""><x path="lime.graphics.cairo.CairoSurface"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_target>
		<get_tolerance set="method" line="735">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_tolerance>
		<set_tolerance set="method" line="744">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_tolerance>
		<new public="1" set="method" line="45">
			<f a="?surface" v="null">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ surface : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoAntialias" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoAntialias.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoAntialias.CairoAntialias_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoAntialias.hx" private="1" module="lime.graphics.cairo.CairoAntialias" extern="1" final="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<GRAY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAY>
	<SUBPIXEL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUBPIXEL>
	<FAST public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAST>
	<GOOD public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOOD>
	<BEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEST>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoAntialias.CairoAntialias_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoAntialias.hx" private="1" module="lime.graphics.cairo.CairoAntialias" extern="1" final="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<GRAY public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAY>
		<SUBPIXEL public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUBPIXEL>
		<FAST public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAST>
		<GOOD public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOOD>
		<BEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEST>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoContent" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoContent.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoContent.CairoContent_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoContent.hx" private="1" module="lime.graphics.cairo.CairoContent" extern="1" final="1">
	<COLOR public="1" get="inline" set="null" expr="cast 0x1000" line="6" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x1000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR>
	<ALPHA public="1" get="inline" set="null" expr="cast 0x2000" line="7" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x2000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALPHA>
	<COLOR_ALPHA public="1" get="inline" set="null" expr="cast 0x3000" line="8" static="1">
		<x path="lime.graphics.cairo.CairoContent"/>
		<meta>
			<m n=":value"><e>cast 0x3000</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_ALPHA>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoContent.CairoContent_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoContent.hx" private="1" module="lime.graphics.cairo.CairoContent" extern="1" final="1">
		<COLOR public="1" get="inline" set="null" expr="cast 0x1000" line="6" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x1000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR>
		<ALPHA public="1" get="inline" set="null" expr="cast 0x2000" line="7" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x2000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALPHA>
		<COLOR_ALPHA public="1" get="inline" set="null" expr="cast 0x3000" line="8" static="1">
			<x path="lime.graphics.cairo.CairoContent"/>
			<meta>
				<m n=":value"><e>cast 0x3000</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_ALPHA>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoExtend" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoExtend.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoExtend.CairoExtend_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoExtend.hx" private="1" module="lime.graphics.cairo.CairoExtend" extern="1" final="1">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<REPEAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REPEAT>
	<REFLECT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REFLECT>
	<PAD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAD>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoExtend.CairoExtend_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoExtend.hx" private="1" module="lime.graphics.cairo.CairoExtend" extern="1" final="1">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<REPEAT public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REPEAT>
		<REFLECT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REFLECT>
		<PAD public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAD>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFillRule" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFillRule.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFillRule.CairoFillRule_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFillRule.hx" private="1" module="lime.graphics.cairo.CairoFillRule" extern="1" final="1">
	<WINDING public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFillRule"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDING>
	<EVEN_ODD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFillRule"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EVEN_ODD>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFillRule.CairoFillRule_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFillRule.hx" private="1" module="lime.graphics.cairo.CairoFillRule" extern="1" final="1">
		<WINDING public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFillRule"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDING>
		<EVEN_ODD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFillRule"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EVEN_ODD>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFilter" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFilter.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFilter.CairoFilter_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFilter.hx" private="1" module="lime.graphics.cairo.CairoFilter" extern="1" final="1">
	<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAST>
	<GOOD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOOD>
	<BEST public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEST>
	<NEAREST public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEAREST>
	<BILINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BILINEAR>
	<GAUSSIAN public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GAUSSIAN>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFilter.CairoFilter_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFilter.hx" private="1" module="lime.graphics.cairo.CairoFilter" extern="1" final="1">
		<FAST public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAST>
		<GOOD public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOOD>
		<BEST public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEST>
		<NEAREST public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEAREST>
		<BILINEAR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BILINEAR>
		<GAUSSIAN public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GAUSSIAN>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFontFace" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontFace.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontFace.hx" private="1" module="lime.graphics.cairo.CairoFontFace" final="1">
	<_new set="method" line="10" static="1">
		<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<status public="1" set="method" line="15" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoStatus"/>
		</f>
		<meta><m n=":impl"/></meta>
	</status>
	<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontFace.hx" private="1" module="lime.graphics.cairo.CairoFontFace" final="1">
		<_new set="method" line="10" static="1">
			<f a=""><x path="lime.graphics.cairo.CairoFontFace"/></f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<status public="1" set="method" line="15" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoStatus"/>
			</f>
			<meta><m n=":impl"/></meta>
		</status>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFontOptions" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontOptions.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontOptions.hx" private="1" module="lime.graphics.cairo.CairoFontOptions" final="1">
	<antialias public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoAntialias"/>
		<meta><m n=":impl"/></meta>
	</antialias>
	<hintMetrics public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta><m n=":impl"/></meta>
	</hintMetrics>
	<hintStyle public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta><m n=":impl"/></meta>
	</hintStyle>
	<subpixelOrder public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta><m n=":impl"/></meta>
	</subpixelOrder>
	<_new public="1" set="method" line="16" static="1">
		<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get_antialias set="method" line="26" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_antialias>
	<set_antialias set="method" line="35" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<x path="lime.graphics.cairo.CairoAntialias"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_antialias>
	<get_hintMetrics set="method" line="44" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_hintMetrics>
	<set_hintMetrics set="method" line="53" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_hintMetrics>
	<get_hintStyle set="method" line="62" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_hintStyle>
	<set_hintStyle set="method" line="71" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<x path="lime.graphics.cairo.CairoHintStyle"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_hintStyle>
	<get_subpixelOrder set="method" line="80" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_subpixelOrder>
	<set_subpixelOrder set="method" line="89" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_subpixelOrder>
	<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFontOptions.hx" private="1" module="lime.graphics.cairo.CairoFontOptions" final="1">
		<antialias public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoAntialias"/>
			<meta><m n=":impl"/></meta>
		</antialias>
		<hintMetrics public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta><m n=":impl"/></meta>
		</hintMetrics>
		<hintStyle public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta><m n=":impl"/></meta>
		</hintStyle>
		<subpixelOrder public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta><m n=":impl"/></meta>
		</subpixelOrder>
		<_new public="1" set="method" line="16" static="1">
			<f a=""><x path="lime.graphics.cairo.CairoFontOptions"/></f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get_antialias set="method" line="26" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_antialias>
		<set_antialias set="method" line="35" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
				<x path="lime.graphics.cairo.CairoAntialias"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_antialias>
		<get_hintMetrics set="method" line="44" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_hintMetrics>
		<set_hintMetrics set="method" line="53" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
				<x path="lime.graphics.cairo.CairoHintMetrics"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_hintMetrics>
		<get_hintStyle set="method" line="62" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_hintStyle>
		<set_hintStyle set="method" line="71" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
				<x path="lime.graphics.cairo.CairoHintStyle"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_hintStyle>
		<get_subpixelOrder set="method" line="80" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_subpixelOrder>
		<set_subpixelOrder set="method" line="89" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
				<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_subpixelOrder>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoFormat" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFormat.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoFormat.CairoFormat_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFormat.hx" private="1" module="lime.graphics.cairo.CairoFormat" extern="1" final="1">
	<INVALID public="1" get="inline" set="null" expr="cast -1" line="6" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast -1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID>
	<ARGB32 public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ARGB32>
	<RGB24 public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB24>
	<A8 public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A8>
	<A1 public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A1>
	<RGB16_565 public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB16_565>
	<RGB30 public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB30>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoFormat.CairoFormat_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoFormat.hx" private="1" module="lime.graphics.cairo.CairoFormat" extern="1" final="1">
		<INVALID public="1" get="inline" set="null" expr="cast -1" line="6" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast -1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID>
		<ARGB32 public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ARGB32>
		<RGB24 public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB24>
		<A8 public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A8>
		<A1 public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A1>
		<RGB16_565 public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB16_565>
		<RGB30 public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB30>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.graphics.cairo.CairoGlyph" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoGlyph.hx">
		<index public="1"><x path="Int"/></index>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method" line="14">
			<f a="index:?x:?y" v=":0:0">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoHintMetrics" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintMetrics.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoHintMetrics.CairoHintMetrics_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintMetrics.hx" private="1" module="lime.graphics.cairo.CairoHintMetrics" extern="1" final="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<OFF public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OFF>
	<ON public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoHintMetrics"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ON>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoHintMetrics.CairoHintMetrics_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintMetrics.hx" private="1" module="lime.graphics.cairo.CairoHintMetrics" extern="1" final="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<OFF public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OFF>
		<ON public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoHintMetrics"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ON>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoHintStyle" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintStyle.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoHintStyle.CairoHintStyle_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintStyle.hx" private="1" module="lime.graphics.cairo.CairoHintStyle" extern="1" final="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<SLIGHT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLIGHT>
	<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIUM>
	<FULL public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoHintStyle"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FULL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoHintStyle.CairoHintStyle_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoHintStyle.hx" private="1" module="lime.graphics.cairo.CairoHintStyle" extern="1" final="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<NONE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<SLIGHT public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLIGHT>
		<MEDIUM public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIUM>
		<FULL public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoHintStyle"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FULL>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoImageSurface" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoImageSurface.hx">
		<from>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoSurface"/></icast>
		</from>
		<this><x path="lime.graphics.cairo.CairoSurface"/></this>
		<to>
			<icast><x path="lime.system.CFFIPointer"/></icast>
			<icast><x path="lime.graphics.cairo.CairoSurface"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoImageSurface.hx" private="1" module="lime.graphics.cairo.CairoImageSurface" final="1">
	<data public="1" get="accessor" set="null" static="1">
		<x path="lime.utils.DataPointer"/>
		<meta><m n=":impl"/></meta>
	</data>
	<format public="1" get="accessor" set="null" static="1">
		<x path="lime.graphics.cairo.CairoFormat"/>
		<meta><m n=":impl"/></meta>
	</format>
	<height public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</height>
	<stride public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</stride>
	<width public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</width>
	<_new public="1" set="method" line="17" static="1">
		<f a="format:width:height">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.graphics.cairo.CairoImageSurface"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<create public="1" set="method" line="26" static="1"><f a="data:format:width:height:stride">
	<x path="lime.utils.DataPointer"/>
	<x path="lime.graphics.cairo.CairoFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></create>
	<fromImage public="1" set="method" line="35" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></fromImage>
	<get_data set="method" line="45" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_data>
	<get_format set="method" line="54" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="lime.graphics.cairo.CairoFormat"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_format>
	<get_height set="method" line="63" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_height>
	<get_stride set="method" line="72" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_stride>
	<get_width set="method" line="81" static="1">
		<f a="this">
			<x path="lime.graphics.cairo.CairoSurface"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_width>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoImageSurface.hx" private="1" module="lime.graphics.cairo.CairoImageSurface" final="1">
		<data public="1" get="accessor" set="null" static="1">
			<x path="lime.utils.DataPointer"/>
			<meta><m n=":impl"/></meta>
		</data>
		<format public="1" get="accessor" set="null" static="1">
			<x path="lime.graphics.cairo.CairoFormat"/>
			<meta><m n=":impl"/></meta>
		</format>
		<height public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</height>
		<stride public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</stride>
		<width public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</width>
		<_new public="1" set="method" line="17" static="1">
			<f a="format:width:height">
				<x path="lime.graphics.cairo.CairoFormat"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.cairo.CairoImageSurface"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<create public="1" set="method" line="26" static="1"><f a="data:format:width:height:stride">
	<x path="lime.utils.DataPointer"/>
	<x path="lime.graphics.cairo.CairoFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></create>
		<fromImage public="1" set="method" line="35" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.cairo.CairoSurface"/>
</f></fromImage>
		<get_data set="method" line="45" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_data>
		<get_format set="method" line="54" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="lime.graphics.cairo.CairoFormat"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_format>
		<get_height set="method" line="63" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_height>
		<get_stride set="method" line="72" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_stride>
		<get_width set="method" line="81" static="1">
			<f a="this">
				<x path="lime.graphics.cairo.CairoSurface"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_width>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoLineCap" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineCap.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoLineCap.CairoLineCap_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineCap.hx" private="1" module="lime.graphics.cairo.CairoLineCap" extern="1" final="1">
	<BUTT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUTT>
	<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ROUND>
	<SQUARE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoLineCap"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SQUARE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoLineCap.CairoLineCap_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineCap.hx" private="1" module="lime.graphics.cairo.CairoLineCap" extern="1" final="1">
		<BUTT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUTT>
		<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ROUND>
		<SQUARE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoLineCap"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SQUARE>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoLineJoin" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineJoin.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoLineJoin.CairoLineJoin_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineJoin.hx" private="1" module="lime.graphics.cairo.CairoLineJoin" extern="1" final="1">
	<MITER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MITER>
	<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ROUND>
	<BEVEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoLineJoin"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BEVEL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoLineJoin.CairoLineJoin_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoLineJoin.hx" private="1" module="lime.graphics.cairo.CairoLineJoin" extern="1" final="1">
		<MITER public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MITER>
		<ROUND public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ROUND>
		<BEVEL public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoLineJoin"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BEVEL>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoOperator" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoOperator.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoOperator.CairoOperator_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoOperator.hx" private="1" module="lime.graphics.cairo.CairoOperator" extern="1" final="1">
	<CLEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<SOURCE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOURCE>
	<OVER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OVER>
	<IN public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IN>
	<OUT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<ATOP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ATOP>
	<DEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST>
	<DEST_OVER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_OVER>
	<DEST_IN public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_IN>
	<DEST_OUT public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_OUT>
	<DEST_ATOP public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEST_ATOP>
	<XOR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XOR>
	<ADD public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ADD>
	<SATURATE public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SATURATE>
	<MULTIPLY public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MULTIPLY>
	<SCREEN public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCREEN>
	<OVERLAY public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OVERLAY>
	<DARKEN public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DARKEN>
	<LIGHTEN public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LIGHTEN>
	<COLOR_DODGE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_DODGE>
	<COLOR_BURN public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLOR_BURN>
	<HARD_LIGHT public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HARD_LIGHT>
	<SOFT_LIGHT public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOFT_LIGHT>
	<DIFFERENCE public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DIFFERENCE>
	<EXCLUSION public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLUSION>
	<HSL_HUE public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_HUE>
	<HSL_SATURATION public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_SATURATION>
	<HSL_COLOR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_COLOR>
	<HSL_LUMINOSITY public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
		<x path="lime.graphics.cairo.CairoOperator"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HSL_LUMINOSITY>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoOperator.CairoOperator_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoOperator.hx" private="1" module="lime.graphics.cairo.CairoOperator" extern="1" final="1">
		<CLEAR public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<SOURCE public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOURCE>
		<OVER public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OVER>
		<IN public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IN>
		<OUT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<ATOP public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ATOP>
		<DEST public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST>
		<DEST_OVER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_OVER>
		<DEST_IN public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_IN>
		<DEST_OUT public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_OUT>
		<DEST_ATOP public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEST_ATOP>
		<XOR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XOR>
		<ADD public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ADD>
		<SATURATE public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SATURATE>
		<MULTIPLY public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MULTIPLY>
		<SCREEN public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCREEN>
		<OVERLAY public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OVERLAY>
		<DARKEN public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DARKEN>
		<LIGHTEN public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LIGHTEN>
		<COLOR_DODGE public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_DODGE>
		<COLOR_BURN public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLOR_BURN>
		<HARD_LIGHT public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HARD_LIGHT>
		<SOFT_LIGHT public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOFT_LIGHT>
		<DIFFERENCE public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DIFFERENCE>
		<EXCLUSION public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLUSION>
		<HSL_HUE public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_HUE>
		<HSL_SATURATION public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_SATURATION>
		<HSL_COLOR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_COLOR>
		<HSL_LUMINOSITY public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
			<x path="lime.graphics.cairo.CairoOperator"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HSL_LUMINOSITY>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoPattern" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoPattern.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoPattern.CairoPattern_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoPattern.hx" private="1" module="lime.graphics.cairo.CairoPattern" final="1">
	<colorStopCount public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</colorStopCount>
	<extend public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoExtend"/>
		<meta><m n=":impl"/></meta>
	</extend>
	<filter public="1" get="accessor" set="accessor" static="1">
		<x path="lime.graphics.cairo.CairoFilter"/>
		<meta><m n=":impl"/></meta>
	</filter>
	<matrix public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Matrix3"/>
		<meta><m n=":impl"/></meta>
	</matrix>
	<_new public="1" set="method" line="16" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoPattern"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<addColorStopRGB public="1" set="method" line="21" static="1">
		<f a="this:offset:r:g:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</addColorStopRGB>
	<addColorStopRGBA public="1" set="method" line="28" static="1">
		<f a="this:offset:r:g:b:a">
			<x path="lime.system.CFFIPointer"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</addColorStopRGBA>
	<createForSurface public="1" set="method" line="35" static="1"><f a="surface">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createForSurface>
	<createLinear public="1" set="method" line="44" static="1"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createLinear>
	<createRadial public="1" set="method" line="53" static="1"><f a="cx0:cy0:radius0:cx1:cy1:radius1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRadial>
	<createRGB public="1" set="method" line="62" static="1"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGB>
	<createRGBA public="1" set="method" line="71" static="1"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGBA>
	<get_colorStopCount set="method" line="81" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_colorStopCount>
	<get_extend set="method" line="90" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_extend>
	<set_extend set="method" line="99" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
			<x path="lime.graphics.cairo.CairoExtend"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_extend>
	<get_filter set="method" line="108" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_filter>
	<set_filter set="method" line="117" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
			<x path="lime.graphics.cairo.CairoFilter"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_filter>
	<get_matrix set="method" line="126" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<c path="lime.math.Matrix3"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_matrix>
	<set_matrix set="method" line="140" static="1">
		<f a="this:value">
			<x path="lime.system.CFFIPointer"/>
			<c path="lime.math.Matrix3"/>
			<c path="lime.math.Matrix3"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_matrix>
	<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoPattern.CairoPattern_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoPattern.hx" private="1" module="lime.graphics.cairo.CairoPattern" final="1">
		<colorStopCount public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</colorStopCount>
		<extend public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoExtend"/>
			<meta><m n=":impl"/></meta>
		</extend>
		<filter public="1" get="accessor" set="accessor" static="1">
			<x path="lime.graphics.cairo.CairoFilter"/>
			<meta><m n=":impl"/></meta>
		</filter>
		<matrix public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Matrix3"/>
			<meta><m n=":impl"/></meta>
		</matrix>
		<_new public="1" set="method" line="16" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoPattern"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<addColorStopRGB public="1" set="method" line="21" static="1">
			<f a="this:offset:r:g:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</addColorStopRGB>
		<addColorStopRGBA public="1" set="method" line="28" static="1">
			<f a="this:offset:r:g:b:a">
				<x path="lime.system.CFFIPointer"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</addColorStopRGBA>
		<createForSurface public="1" set="method" line="35" static="1"><f a="surface">
	<x path="lime.graphics.cairo.CairoSurface"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createForSurface>
		<createLinear public="1" set="method" line="44" static="1"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createLinear>
		<createRadial public="1" set="method" line="53" static="1"><f a="cx0:cy0:radius0:cx1:cy1:radius1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRadial>
		<createRGB public="1" set="method" line="62" static="1"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGB>
		<createRGBA public="1" set="method" line="71" static="1"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.graphics.cairo.CairoPattern"/>
</f></createRGBA>
		<get_colorStopCount set="method" line="81" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_colorStopCount>
		<get_extend set="method" line="90" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_extend>
		<set_extend set="method" line="99" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
				<x path="lime.graphics.cairo.CairoExtend"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_extend>
		<get_filter set="method" line="108" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_filter>
		<set_filter set="method" line="117" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
				<x path="lime.graphics.cairo.CairoFilter"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_filter>
		<get_matrix set="method" line="126" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_matrix>
		<set_matrix set="method" line="140" static="1">
			<f a="this:value">
				<x path="lime.system.CFFIPointer"/>
				<c path="lime.math.Matrix3"/>
				<c path="lime.math.Matrix3"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_matrix>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoStatus" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoStatus.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoStatus.CairoStatus_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoStatus.hx" private="1" module="lime.graphics.cairo.CairoStatus" extern="1" final="1">
	<SUCCESS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SUCCESS>
	<NO_MEMORY public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_MEMORY>
	<INVALID_RESTORE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_RESTORE>
	<INVALID_POP_GROUP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_POP_GROUP>
	<NO_CURRENT_POINT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_CURRENT_POINT>
	<INVALID_MATRIX public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_MATRIX>
	<INVALID_STATUS public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STATUS>
	<NULL_POINTER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NULL_POINTER>
	<INVALID_STRING public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STRING>
	<INVALID_PATH_DATA public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_PATH_DATA>
	<READ_ERROR public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READ_ERROR>
	<WRITE_ERROR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITE_ERROR>
	<SURFACE_FINISHED public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SURFACE_FINISHED>
	<SURFACE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SURFACE_TYPE_MISMATCH>
	<PATTERN_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PATTERN_TYPE_MISMATCH>
	<INVALID_CONTENT public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_CONTENT>
	<INVALID_FORMAT public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_FORMAT>
	<INVALID_VISUAL public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_VISUAL>
	<FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILE_NOT_FOUND>
	<INVALID_DASH public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_DASH>
	<INVALID_DSC_COMMENT public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_DSC_COMMENT>
	<INVALID_INDEX public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_INDEX>
	<CLIP_NOT_REPRESENTABLE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLIP_NOT_REPRESENTABLE>
	<TEMP_FILE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMP_FILE_ERROR>
	<INVALID_STRIDE public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_STRIDE>
	<FONT_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT_TYPE_MISMATCH>
	<USER_FONT_IMMUTABLE public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_IMMUTABLE>
	<USER_FONT_ERROR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_ERROR>
	<NEGATIVE_COUNT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEGATIVE_COUNT>
	<INVALID_CLUSTERS public="1" get="inline" set="null" expr="cast 29" line="35" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_CLUSTERS>
	<INVALID_SLANT public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_SLANT>
	<INVALID_WEIGHT public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_WEIGHT>
	<INVALID_SIZE public="1" get="inline" set="null" expr="cast 32" line="38" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_SIZE>
	<USER_FONT_NOT_IMPLEMENTED public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER_FONT_NOT_IMPLEMENTED>
	<DEVICE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_TYPE_MISMATCH>
	<DEVICE_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_ERROR>
	<INVALID_MESH_CONSTRUCTION public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INVALID_MESH_CONSTRUCTION>
	<DEVICE_FINISHED public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEVICE_FINISHED>
	<JBIG2_GLOBAL_MISSING public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
		<x path="lime.graphics.cairo.CairoStatus"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</JBIG2_GLOBAL_MISSING>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoStatus.CairoStatus_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoStatus.hx" private="1" module="lime.graphics.cairo.CairoStatus" extern="1" final="1">
		<SUCCESS public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SUCCESS>
		<NO_MEMORY public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_MEMORY>
		<INVALID_RESTORE public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_RESTORE>
		<INVALID_POP_GROUP public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_POP_GROUP>
		<NO_CURRENT_POINT public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_CURRENT_POINT>
		<INVALID_MATRIX public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_MATRIX>
		<INVALID_STATUS public="1" get="inline" set="null" expr="cast 6" line="12" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STATUS>
		<NULL_POINTER public="1" get="inline" set="null" expr="cast 7" line="13" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NULL_POINTER>
		<INVALID_STRING public="1" get="inline" set="null" expr="cast 8" line="14" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STRING>
		<INVALID_PATH_DATA public="1" get="inline" set="null" expr="cast 9" line="15" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_PATH_DATA>
		<READ_ERROR public="1" get="inline" set="null" expr="cast 10" line="16" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READ_ERROR>
		<WRITE_ERROR public="1" get="inline" set="null" expr="cast 11" line="17" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITE_ERROR>
		<SURFACE_FINISHED public="1" get="inline" set="null" expr="cast 12" line="18" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SURFACE_FINISHED>
		<SURFACE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 13" line="19" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SURFACE_TYPE_MISMATCH>
		<PATTERN_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 14" line="20" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PATTERN_TYPE_MISMATCH>
		<INVALID_CONTENT public="1" get="inline" set="null" expr="cast 15" line="21" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_CONTENT>
		<INVALID_FORMAT public="1" get="inline" set="null" expr="cast 16" line="22" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_FORMAT>
		<INVALID_VISUAL public="1" get="inline" set="null" expr="cast 17" line="23" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_VISUAL>
		<FILE_NOT_FOUND public="1" get="inline" set="null" expr="cast 18" line="24" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILE_NOT_FOUND>
		<INVALID_DASH public="1" get="inline" set="null" expr="cast 19" line="25" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_DASH>
		<INVALID_DSC_COMMENT public="1" get="inline" set="null" expr="cast 20" line="26" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_DSC_COMMENT>
		<INVALID_INDEX public="1" get="inline" set="null" expr="cast 21" line="27" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_INDEX>
		<CLIP_NOT_REPRESENTABLE public="1" get="inline" set="null" expr="cast 22" line="28" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLIP_NOT_REPRESENTABLE>
		<TEMP_FILE_ERROR public="1" get="inline" set="null" expr="cast 23" line="29" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMP_FILE_ERROR>
		<INVALID_STRIDE public="1" get="inline" set="null" expr="cast 24" line="30" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_STRIDE>
		<FONT_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 25" line="31" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT_TYPE_MISMATCH>
		<USER_FONT_IMMUTABLE public="1" get="inline" set="null" expr="cast 26" line="32" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_IMMUTABLE>
		<USER_FONT_ERROR public="1" get="inline" set="null" expr="cast 27" line="33" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_ERROR>
		<NEGATIVE_COUNT public="1" get="inline" set="null" expr="cast 28" line="34" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEGATIVE_COUNT>
		<INVALID_CLUSTERS public="1" get="inline" set="null" expr="cast 29" line="35" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_CLUSTERS>
		<INVALID_SLANT public="1" get="inline" set="null" expr="cast 30" line="36" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_SLANT>
		<INVALID_WEIGHT public="1" get="inline" set="null" expr="cast 31" line="37" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_WEIGHT>
		<INVALID_SIZE public="1" get="inline" set="null" expr="cast 32" line="38" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_SIZE>
		<USER_FONT_NOT_IMPLEMENTED public="1" get="inline" set="null" expr="cast 33" line="39" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER_FONT_NOT_IMPLEMENTED>
		<DEVICE_TYPE_MISMATCH public="1" get="inline" set="null" expr="cast 34" line="40" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_TYPE_MISMATCH>
		<DEVICE_ERROR public="1" get="inline" set="null" expr="cast 35" line="41" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_ERROR>
		<INVALID_MESH_CONSTRUCTION public="1" get="inline" set="null" expr="cast 36" line="42" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INVALID_MESH_CONSTRUCTION>
		<DEVICE_FINISHED public="1" get="inline" set="null" expr="cast 37" line="43" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEVICE_FINISHED>
		<JBIG2_GLOBAL_MISSING public="1" get="inline" set="null" expr="cast 38" line="44" static="1">
			<x path="lime.graphics.cairo.CairoStatus"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</JBIG2_GLOBAL_MISSING>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoSubpixelOrder" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSubpixelOrder.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics.cairo._CairoSubpixelOrder.CairoSubpixelOrder_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSubpixelOrder.hx" private="1" module="lime.graphics.cairo.CairoSubpixelOrder" extern="1" final="1">
	<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<RGB public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RGB>
	<BGR public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BGR>
	<VRGB public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VRGB>
	<VBGR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VBGR>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoSubpixelOrder.CairoSubpixelOrder_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSubpixelOrder.hx" private="1" module="lime.graphics.cairo.CairoSubpixelOrder" extern="1" final="1">
		<DEFAULT public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<RGB public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RGB>
		<BGR public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BGR>
		<VRGB public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VRGB>
		<VBGR public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.graphics.cairo.CairoSubpixelOrder"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VBGR>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.graphics.cairo.CairoSurface" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSurface.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.graphics.cairo._CairoSurface.CairoSurface_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSurface.hx" private="1" module="lime.graphics.cairo.CairoSurface" final="1">
	<flush public="1" set="method" line="10" static="1">
		<f a="this">
			<x path="lime.system.CFFIPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.cairo._CairoSurface.CairoSurface_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/cairo/CairoSurface.hx" private="1" module="lime.graphics.cairo.CairoSurface" final="1">
		<flush public="1" set="method" line="10" static="1">
			<f a="this">
				<x path="lime.system.CFFIPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.graphics.opengl.GL" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GL.hx">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000100" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000400" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="0x00004000" line="22" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" expr="0x0000" line="23" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</POINTS>
		<LINES public="1" get="inline" set="null" expr="0x0001" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LINES>
		<LINE_LOOP public="1" get="inline" set="null" expr="0x0002" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" expr="0x0003" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" expr="0x0004" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" expr="0x0005" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" expr="0x0006" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" expr="0" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE public="1" get="inline" set="null" expr="1" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR public="1" get="inline" set="null" expr="0x0300" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0300</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="0x0301" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0301</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" expr="0x0302" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0302</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="0x0303" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0303</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" expr="0x0304" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0304</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="0x0305" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0305</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" expr="0x0306" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0306</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="0x0307" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0307</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="0x0308" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0308</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" expr="0x8006" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8006</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" expr="0x8009" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="0x8009" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="0x883D" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x883D</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" expr="0x800A" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800A</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="0x800B" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800B</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" expr="0x80C8" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C8</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" expr="0x80C9" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C9</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="0x80CA" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CA</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="0x80CB" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CB</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8001" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8002" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8002</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8003" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8003</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8004" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8004</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" expr="0x8005" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8005</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8892" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8892</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8893" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8893</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8894" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8894</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8895" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8895</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" expr="0x88E0" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E0</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="0x88E4" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E4</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="0x88E8" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E8</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" expr="0x8764" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8764</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" expr="0x8765" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8765</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="0x8626" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8626</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" expr="0x0404" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0404</e></m></meta>
		</FRONT>
		<BACK public="1" get="inline" set="null" expr="0x0405" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0405</e></m></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="0x0408" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0408</e></m></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" expr="0x0B44" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B44</e></m></meta>
		</CULL_FACE>
		<BLEND public="1" get="inline" set="null" expr="0x0BE2" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BE2</e></m></meta>
		</BLEND>
		<DITHER public="1" get="inline" set="null" expr="0x0BD0" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BD0</e></m></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" expr="0x0B90" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B90</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" expr="0x0B71" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B71</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="0x0C11" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C11</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="0x8037" line="75" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8037</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="0x809E" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x809E</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="0x80A0" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A0</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0x0500" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0500</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0x0501" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0501</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="0x0502" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0502</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0x0505" line="82" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0505</e></m></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" expr="0x0900" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0900</e></m></meta>
		</CW>
		<CCW public="1" get="inline" set="null" expr="0x0901" line="84" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0901</e></m></meta>
		</CCW>
		<LINE_WIDTH public="1" get="inline" set="null" expr="0x0B21" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B21</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="0x846D" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846D</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="0x846E" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846E</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" expr="0x0B45" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B45</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" expr="0x0B46" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B46</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" expr="0x0B70" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B70</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="0x0B72" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B72</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B73" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B73</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" expr="0x0B74" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B74</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B91" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B91</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" expr="0x0B92" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B92</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" expr="0x0B94" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B94</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x0B95" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B95</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x0B96" line="98" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B96</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" expr="0x0B97" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B97</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="0x0B93" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B93</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="0x0B98" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B98</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="0x8800" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8800</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="0x8801" line="103" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8801</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x8802" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8802</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x8803" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8803</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" expr="0x8CA3" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA3</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="0x8CA4" line="107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA4</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="0x8CA5" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA5</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" expr="0x0BA2" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BA2</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" expr="0x0C10" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C10</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0C22" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C22</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" expr="0x0C23" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C23</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0CF5" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF5</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0D05" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D05</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x0D33" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D33</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="0x0D3A" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D3A</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" expr="0x0D50" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D50</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" expr="0x0D52" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D52</e></m></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" expr="0x0D53" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D53</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" expr="0x0D54" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D54</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" expr="0x0D55" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D55</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" expr="0x0D56" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D56</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" expr="0x0D57" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D57</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="0x2A00" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2A00</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="0x8038" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8038</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="0x8069" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8069</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="0x80A8" line="127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A8</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" expr="0x80A9" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A9</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="0x80AA" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AA</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="0x80AB" line="130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AB</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<NUM_COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A2" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A2</e></m></meta>
		</NUM_COMPRESSED_TEXTURE_FORMATS>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A3" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A3</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" expr="0x1100" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</DONT_CARE>
		<FASTEST public="1" get="inline" set="null" expr="0x1101" line="134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FASTEST>
		<NICEST public="1" get="inline" set="null" expr="0x1102" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="0x8192" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8192</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" expr="0x1400" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1400</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="0x1401" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1401</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" expr="0x1402" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1402</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" expr="0x1403" line="140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1403</e></m></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" expr="0x1404" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1404</e></m></meta>
		</INT>
		<UNSIGNED_INT public="1" get="inline" set="null" expr="0x1405" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" expr="0x1406" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1406</e></m></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" expr="0x1902" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1902</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" expr="0x1906" line="145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1906</e></m></meta>
		</ALPHA>
		<RGB public="1" get="inline" set="null" expr="0x1907" line="146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1907</e></m></meta>
		</RGB>
		<RGBA public="1" get="inline" set="null" expr="0x1908" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1908</e></m></meta>
		</RGBA>
		<LUMINANCE public="1" get="inline" set="null" expr="0x1909" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1909</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="0x190A" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x190A</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="0x8033" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8033</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="0x8034" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8034</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="0x8363" line="152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8363</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8B30" line="153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B30</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" expr="0x8B31" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B31</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="0x8869" line="155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8869</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFB" line="156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFB</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="0x8DFC" line="157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFC</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4D" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4D</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4C" line="159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4C</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8872" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8872</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFD" line="161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFD</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" expr="0x8B4F" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4F</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" expr="0x8B80" line="163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B80</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" expr="0x8B82" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B82</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" expr="0x8B83" line="165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B83</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" expr="0x8B85" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B85</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8B86" line="167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B86</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="0x8B89" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B89</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="0x8B8C" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8C</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" expr="0x8B8D" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8D</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" expr="0x0200" line="171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</NEVER>
		<LESS public="1" get="inline" set="null" expr="0x0201" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0201</e></m></meta>
		</LESS>
		<EQUAL public="1" get="inline" set="null" expr="0x0202" line="173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0202</e></m></meta>
		</EQUAL>
		<LEQUAL public="1" get="inline" set="null" expr="0x0203" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0203</e></m></meta>
		</LEQUAL>
		<GREATER public="1" get="inline" set="null" expr="0x0204" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0204</e></m></meta>
		</GREATER>
		<NOTEQUAL public="1" get="inline" set="null" expr="0x0205" line="176" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0205</e></m></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" expr="0x0206" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0206</e></m></meta>
		</GEQUAL>
		<ALWAYS public="1" get="inline" set="null" expr="0x0207" line="178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0207</e></m></meta>
		</ALWAYS>
		<KEEP public="1" get="inline" set="null" expr="0x1E00" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E00</e></m></meta>
		</KEEP>
		<REPLACE public="1" get="inline" set="null" expr="0x1E01" line="180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E01</e></m></meta>
		</REPLACE>
		<INCR public="1" get="inline" set="null" expr="0x1E02" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E02</e></m></meta>
		</INCR>
		<DECR public="1" get="inline" set="null" expr="0x1E03" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E03</e></m></meta>
		</DECR>
		<INVERT public="1" get="inline" set="null" expr="0x150A" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x150A</e></m></meta>
		</INVERT>
		<INCR_WRAP public="1" get="inline" set="null" expr="0x8507" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8507</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" expr="0x8508" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8508</e></m></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" expr="0x1F00" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F00</e></m></meta>
		</VENDOR>
		<RENDERER public="1" get="inline" set="null" expr="0x1F01" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F01</e></m></meta>
		</RENDERER>
		<VERSION public="1" get="inline" set="null" expr="0x1F02" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F02</e></m></meta>
		</VERSION>
		<EXTENSIONS public="1" get="inline" set="null" expr="0x1F03" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F03</e></m></meta>
		</EXTENSIONS>
		<NEAREST public="1" get="inline" set="null" expr="0x2600" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2600</e></m></meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="0x2601" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2601</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2700" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2700</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2701" line="193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2701</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2702" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2702</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2703" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2703</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="0x2800" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2800</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="0x2801" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2801</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="0x2802" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2802</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="0x2803" line="199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2803</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" expr="0x0DE1" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0DE1</e></m></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" expr="0x1702" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1702</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="0x8513" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8513</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="0x8514" line="203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8514</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="0x8515" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8515</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="0x8516" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8516</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="0x8517" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8517</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="0x8518" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8518</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="0x8519" line="208" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8519</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="0x851A" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851A</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x851C" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851C</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" expr="0x84C0" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C0</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" expr="0x84C1" line="212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C1</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" expr="0x84C2" line="213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C2</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" expr="0x84C3" line="214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C3</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" expr="0x84C4" line="215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C4</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" expr="0x84C5" line="216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C5</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" expr="0x84C6" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C6</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" expr="0x84C7" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C7</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" expr="0x84C8" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C8</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" expr="0x84C9" line="220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C9</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" expr="0x84CA" line="221" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CA</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" expr="0x84CB" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CB</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" expr="0x84CC" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CC</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" expr="0x84CD" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CD</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" expr="0x84CE" line="225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CE</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" expr="0x84CF" line="226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CF</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" expr="0x84D0" line="227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D0</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" expr="0x84D1" line="228" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D1</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" expr="0x84D2" line="229" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D2</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" expr="0x84D3" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D3</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" expr="0x84D4" line="231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D4</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" expr="0x84D5" line="232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D5</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" expr="0x84D6" line="233" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D6</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" expr="0x84D7" line="234" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D7</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" expr="0x84D8" line="235" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D8</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" expr="0x84D9" line="236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D9</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" expr="0x84DA" line="237" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DA</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" expr="0x84DB" line="238" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DB</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" expr="0x84DC" line="239" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DC</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" expr="0x84DD" line="240" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DD</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" expr="0x84DE" line="241" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DE</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" expr="0x84DF" line="242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DF</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="0x84E0" line="243" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E0</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" expr="0x2901" line="244" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2901</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="0x812F" line="245" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x812F</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" expr="0x8370" line="246" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8370</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="0x8B50" line="247" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B50</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="0x8B51" line="248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B51</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="0x8B52" line="249" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B52</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" expr="0x8B53" line="250" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B53</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" expr="0x8B54" line="251" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B54</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" expr="0x8B55" line="252" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B55</e></m></meta>
		</INT_VEC4>
		<BOOL public="1" get="inline" set="null" expr="0x8B56" line="253" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B56</e></m></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" expr="0x8B57" line="254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B57</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" expr="0x8B58" line="255" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B58</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" expr="0x8B59" line="256" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B59</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="0x8B5A" line="257" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5A</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="0x8B5B" line="258" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5B</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="0x8B5C" line="259" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5C</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" expr="0x8B5E" line="260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5E</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8B60" line="261" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B60</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="0x8622" line="262" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8622</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="0x8623" line="263" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8623</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8624" line="264" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8624</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="0x8625" line="265" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8625</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="0x886A" line="266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x886A</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="0x8645" line="267" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8645</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x889F" line="268" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x889F</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="0x8B9A" line="269" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9A</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="0x8B9B" line="270" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9B</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="inline" set="null" expr="0x8642" line="271" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8642</e></m></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="inline" set="null" expr="0x8861" line="272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8861</e></m></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" get="inline" set="null" expr="0x8B81" line="273" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B81</e></m></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" expr="0x8DF0" line="274" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF0</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" expr="0x8DF1" line="275" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF1</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" expr="0x8DF2" line="276" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF2</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" expr="0x8DF3" line="277" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF3</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" expr="0x8DF4" line="278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF4</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" expr="0x8DF5" line="279" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF5</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="0x8D40" line="280" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D40</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="0x8D41" line="281" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D41</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" expr="0x8056" line="282" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" expr="0x8057" line="283" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1>
		<RGB565 public="1" get="inline" set="null" expr="0x8D62" line="284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="0x81A5" line="285" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" expr="0x1901" line="286" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1901</e></m></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" expr="0x8D48" line="287" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D48</e></m></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" expr="0x84F9" line="288" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="0x8D42" line="289" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D42</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="0x8D43" line="290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D43</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="0x8D44" line="291" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D44</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="0x8D50" line="292" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D50</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="0x8D51" line="293" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D51</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="0x8D52" line="294" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D52</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8D53" line="295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D53</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8D54" line="296" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D54</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8D55" line="297" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D55</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="0x8CD0" line="298" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD0</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="0x8CD1" line="299" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD1</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="0x8CD2" line="300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD2</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="0x8CD3" line="301" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="0x8CE0" line="302" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="0x8D00" line="303" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D00</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x8D20" line="304" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D20</e></m></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x821A" line="305" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x821A</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" expr="0" line="306" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="0x8CD5" line="307" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD5</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD6" line="308" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD6</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD7" line="309" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD7</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="0x8CD9" line="310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD9</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="0x8CDD" line="311" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDD</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="312" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA7" line="313" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA7</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="0x84E8" line="314" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E8</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="0x0506" line="315" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0506</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" expr="0x9240" line="316" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9240</e></m></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" expr="0x9241" line="317" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9241</e></m></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" expr="0x9242" line="318" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9242</e></m></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" expr="0x9243" line="319" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9243</e></m></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" expr="0x9244" line="320" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9244</e></m></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="inline" set="null" expr="0x0C02" line="321" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0CF2" line="322" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF2</e></m></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0CF3" line="323" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF3</e></m></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0CF4" line="324" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF4</e></m></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0D02" line="325" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D02</e></m></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0D03" line="326" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D03</e></m></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0D04" line="327" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D04</e></m></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="inline" set="null" expr="0x806A" line="328" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806A</e></m></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="inline" set="null" expr="0x806D" line="329" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806D</e></m></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="inline" set="null" expr="0x806E" line="330" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806E</e></m></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x8073" line="331" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8073</e></m></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="inline" set="null" expr="0x80E8" line="332" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E8</e></m></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="inline" set="null" expr="0x80E9" line="333" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E9</e></m></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="inline" set="null" expr="0x84FD" line="334" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FD</e></m></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B49" line="335" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B49</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B4A" line="336" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4A</e></m></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="inline" set="null" expr="0x88FF" line="337" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FF</e></m></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8904" line="338" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8904</e></m></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8905" line="339" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8905</e></m></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="inline" set="null" expr="0x8B4B" line="340" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4B</e></m></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="inline" set="null" expr="0x8B8B" line="341" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8B</e></m></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="inline" set="null" expr="0x8C89" line="342" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C89</e></m></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="inline" set="null" expr="0x85B5" line="343" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85B5</e></m></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9122" line="344" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9122</e></m></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9125" line="345" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9125</e></m></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="inline" set="null" expr="0x9111" line="346" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9111</e></m></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="inline" set="null" expr="0x8D6B" line="347" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6B</e></m></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="inline" set="null" expr="0x1903" line="348" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1903</e></m></meta>
		</RED>
		<RGB8 public="1" get="inline" set="null" expr="0x8051" line="349" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8>
		<RGBA8 public="1" get="inline" set="null" expr="0x8058" line="350" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="inline" set="null" expr="0x8059" line="351" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="inline" set="null" expr="0x806F" line="352" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806F</e></m></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="inline" set="null" expr="0x8072" line="353" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8072</e></m></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="inline" set="null" expr="0x813A" line="354" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813A</e></m></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="inline" set="null" expr="0x813B" line="355" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813B</e></m></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="inline" set="null" expr="0x813C" line="356" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813C</e></m></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="inline" set="null" expr="0x813D" line="357" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813D</e></m></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="inline" set="null" expr="0x884C" line="358" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884C</e></m></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="inline" set="null" expr="0x884D" line="359" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884D</e></m></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="inline" set="null" expr="0x8C40" line="360" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C40</e></m></meta>
		</SRGB>
		<SRGB8 public="1" get="inline" set="null" expr="0x8C41" line="361" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C41</e></m></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="inline" set="null" expr="0x8C43" line="362" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C43</e></m></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="inline" set="null" expr="0x884E" line="363" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884E</e></m></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="inline" set="null" expr="0x8814" line="364" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8814</e></m></meta>
		</RGBA32F>
		<RGB32F public="1" get="inline" set="null" expr="0x8815" line="365" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8815</e></m></meta>
		</RGB32F>
		<RGBA16F public="1" get="inline" set="null" expr="0x881A" line="366" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F>
		<RGB16F public="1" get="inline" set="null" expr="0x881B" line="367" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1A" line="368" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1A</e></m></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1D" line="369" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1D</e></m></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="inline" set="null" expr="0x8C3A" line="370" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3A</e></m></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="inline" set="null" expr="0x8C3D" line="371" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3D</e></m></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="inline" set="null" expr="0x8D70" line="372" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D70</e></m></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="inline" set="null" expr="0x8D71" line="373" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D71</e></m></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="inline" set="null" expr="0x8D76" line="374" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D76</e></m></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="inline" set="null" expr="0x8D77" line="375" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D77</e></m></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="inline" set="null" expr="0x8D7C" line="376" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7C</e></m></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="inline" set="null" expr="0x8D7D" line="377" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7D</e></m></meta>
		</RGB8UI>
		<RGBA32I public="1" get="inline" set="null" expr="0x8D82" line="378" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D82</e></m></meta>
		</RGBA32I>
		<RGB32I public="1" get="inline" set="null" expr="0x8D83" line="379" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D83</e></m></meta>
		</RGB32I>
		<RGBA16I public="1" get="inline" set="null" expr="0x8D88" line="380" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D88</e></m></meta>
		</RGBA16I>
		<RGB16I public="1" get="inline" set="null" expr="0x8D89" line="381" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D89</e></m></meta>
		</RGB16I>
		<RGBA8I public="1" get="inline" set="null" expr="0x8D8E" line="382" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8E</e></m></meta>
		</RGBA8I>
		<RGB8I public="1" get="inline" set="null" expr="0x8D8F" line="383" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8F</e></m></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="inline" set="null" expr="0x8D94" line="384" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D94</e></m></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="inline" set="null" expr="0x8D98" line="385" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D98</e></m></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="inline" set="null" expr="0x8D99" line="386" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D99</e></m></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="inline" set="null" expr="0x8229" line="387" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8>
		<RG8 public="1" get="inline" set="null" expr="0x822B" line="388" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8>
		<R16F public="1" get="inline" set="null" expr="0x822D" line="389" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822D</e></m></meta>
		</R16F>
		<R32F public="1" get="inline" set="null" expr="0x822E" line="390" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822E</e></m></meta>
		</R32F>
		<RG16F public="1" get="inline" set="null" expr="0x822F" line="391" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822F</e></m></meta>
		</RG16F>
		<RG32F public="1" get="inline" set="null" expr="0x8230" line="392" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8230</e></m></meta>
		</RG32F>
		<R8I public="1" get="inline" set="null" expr="0x8231" line="393" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8231</e></m></meta>
		</R8I>
		<R8UI public="1" get="inline" set="null" expr="0x8232" line="394" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8232</e></m></meta>
		</R8UI>
		<R16I public="1" get="inline" set="null" expr="0x8233" line="395" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8233</e></m></meta>
		</R16I>
		<R16UI public="1" get="inline" set="null" expr="0x8234" line="396" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8234</e></m></meta>
		</R16UI>
		<R32I public="1" get="inline" set="null" expr="0x8235" line="397" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8235</e></m></meta>
		</R32I>
		<R32UI public="1" get="inline" set="null" expr="0x8236" line="398" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8236</e></m></meta>
		</R32UI>
		<RG8I public="1" get="inline" set="null" expr="0x8237" line="399" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8237</e></m></meta>
		</RG8I>
		<RG8UI public="1" get="inline" set="null" expr="0x8238" line="400" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8238</e></m></meta>
		</RG8UI>
		<RG16I public="1" get="inline" set="null" expr="0x8239" line="401" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8239</e></m></meta>
		</RG16I>
		<RG16UI public="1" get="inline" set="null" expr="0x823A" line="402" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823A</e></m></meta>
		</RG16UI>
		<RG32I public="1" get="inline" set="null" expr="0x823B" line="403" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823B</e></m></meta>
		</RG32I>
		<RG32UI public="1" get="inline" set="null" expr="0x823C" line="404" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823C</e></m></meta>
		</RG32UI>
		<R8_SNORM public="1" get="inline" set="null" expr="0x8F94" line="405" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F94</e></m></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="inline" set="null" expr="0x8F95" line="406" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F95</e></m></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="inline" set="null" expr="0x8F96" line="407" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F96</e></m></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="inline" set="null" expr="0x8F97" line="408" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F97</e></m></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="inline" set="null" expr="0x906F" line="409" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x906F</e></m></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="inline" set="null" expr="0x912F" line="410" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x912F</e></m></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="inline" set="null" expr="0x82DF" line="411" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82DF</e></m></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8368" line="412" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8368</e></m></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="inline" set="null" expr="0x8C3B" line="413" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3B</e></m></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="inline" set="null" expr="0x8C3E" line="414" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3E</e></m></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="inline" set="null" expr="0x8DAD" line="415" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DAD</e></m></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="inline" set="null" expr="0x84FA" line="416" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="inline" set="null" expr="0x140B" line="417" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x140B</e></m></meta>
		</HALF_FLOAT>
		<RG public="1" get="inline" set="null" expr="0x8227" line="418" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8227</e></m></meta>
		</RG>
		<RG_INTEGER public="1" get="inline" set="null" expr="0x8228" line="419" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8228</e></m></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8D9F" line="420" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D9F</e></m></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="inline" set="null" expr="0x8865" line="421" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8865</e></m></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="inline" set="null" expr="0x8866" line="422" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8866</e></m></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="inline" set="null" expr="0x8867" line="423" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8867</e></m></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="inline" set="null" expr="0x8C2F" line="424" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C2F</e></m></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="inline" set="null" expr="0x8D6A" line="425" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6A</e></m></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="inline" set="null" expr="0x8824" line="426" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8824</e></m></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="inline" set="null" expr="0x8825" line="427" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8825</e></m></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="inline" set="null" expr="0x8826" line="428" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8826</e></m></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="inline" set="null" expr="0x8827" line="429" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8827</e></m></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="inline" set="null" expr="0x8828" line="430" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8828</e></m></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="inline" set="null" expr="0x8829" line="431" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8829</e></m></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="inline" set="null" expr="0x882A" line="432" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882A</e></m></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="inline" set="null" expr="0x882B" line="433" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882B</e></m></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="inline" set="null" expr="0x882C" line="434" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882C</e></m></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="inline" set="null" expr="0x882D" line="435" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882D</e></m></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="inline" set="null" expr="0x882E" line="436" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882E</e></m></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="inline" set="null" expr="0x882F" line="437" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882F</e></m></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="inline" set="null" expr="0x8830" line="438" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8830</e></m></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="inline" set="null" expr="0x8831" line="439" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8831</e></m></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="inline" set="null" expr="0x8832" line="440" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8832</e></m></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="inline" set="null" expr="0x8833" line="441" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8833</e></m></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="inline" set="null" expr="0x8834" line="442" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8834</e></m></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="inline" set="null" expr="0x8CDF" line="443" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDF</e></m></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="inline" set="null" expr="0x8CE1" line="444" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="inline" set="null" expr="0x8CE2" line="445" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="inline" set="null" expr="0x8CE3" line="446" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="inline" set="null" expr="0x8CE4" line="447" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="inline" set="null" expr="0x8CE5" line="448" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="inline" set="null" expr="0x8CE6" line="449" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="inline" set="null" expr="0x8CE7" line="450" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="inline" set="null" expr="0x8CE8" line="451" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="inline" set="null" expr="0x8CE9" line="452" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="inline" set="null" expr="0x8CEA" line="453" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="inline" set="null" expr="0x8CEB" line="454" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="inline" set="null" expr="0x8CEC" line="455" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="inline" set="null" expr="0x8CED" line="456" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="inline" set="null" expr="0x8CEE" line="457" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="inline" set="null" expr="0x8CEF" line="458" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="inline" set="null" expr="0x8B5F" line="459" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5F</e></m></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="inline" set="null" expr="0x8B62" line="460" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B62</e></m></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DC1" line="461" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC1</e></m></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="inline" set="null" expr="0x8DC4" line="462" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC4</e></m></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="inline" set="null" expr="0x8DC5" line="463" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC5</e></m></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DCA" line="464" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCA</e></m></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DCB" line="465" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCB</e></m></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DCC" line="466" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCC</e></m></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DCF" line="467" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCF</e></m></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DD2" line="468" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD2</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DD3" line="469" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD3</e></m></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DD4" line="470" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD4</e></m></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DD7" line="471" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD7</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="inline" set="null" expr="0x8D57" line="472" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="inline" set="null" expr="0x8919" line="473" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8919</e></m></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="inline" set="null" expr="0x88EB" line="474" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EB</e></m></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="inline" set="null" expr="0x88EC" line="475" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EC</e></m></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88ED" line="476" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88ED</e></m></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88EF" line="477" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EF</e></m></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="inline" set="null" expr="0x8F36" line="478" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="inline" set="null" expr="0x8F37" line="479" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F36" line="480" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F37" line="481" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="inline" set="null" expr="0x8B65" line="482" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B65</e></m></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="inline" set="null" expr="0x8B66" line="483" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B66</e></m></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="inline" set="null" expr="0x8B67" line="484" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B67</e></m></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="inline" set="null" expr="0x8B68" line="485" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B68</e></m></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="inline" set="null" expr="0x8B69" line="486" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B69</e></m></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="inline" set="null" expr="0x8B6A" line="487" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B6A</e></m></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="inline" set="null" expr="0x8DC6" line="488" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC6</e></m></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="inline" set="null" expr="0x8DC7" line="489" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC7</e></m></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="inline" set="null" expr="0x8DC8" line="490" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC8</e></m></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8C17" line="491" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C17</e></m></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8F9C" line="492" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F9C</e></m></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="inline" set="null" expr="0x88FD" line="493" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FD</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="inline" set="null" expr="0x88FE" line="494" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FE</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="inline" set="null" expr="0x8C7F" line="495" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C7F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="inline" set="null" expr="0x8C80" line="496" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C80</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="inline" set="null" expr="0x8C83" line="497" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C83</e></m></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="inline" set="null" expr="0x8C84" line="498" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C84</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8C85" line="499" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C85</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="inline" set="null" expr="0x8C88" line="500" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C88</e></m></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="inline" set="null" expr="0x8C8A" line="501" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8A</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8B" line="502" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8B</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="inline" set="null" expr="0x8C8C" line="503" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8C</e></m></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8D" line="504" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8D</e></m></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="inline" set="null" expr="0x8C8E" line="505" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8E</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8C8F" line="506" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="0x8E22" line="507" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E22</e></m></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="inline" set="null" expr="0x8E23" line="508" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E23</e></m></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="inline" set="null" expr="0x8E24" line="509" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E24</e></m></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="inline" set="null" expr="0x8E25" line="510" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E25</e></m></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="inline" set="null" expr="0x8210" line="511" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8210</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="inline" set="null" expr="0x8211" line="512" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8211</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="inline" set="null" expr="0x8212" line="513" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8212</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="inline" set="null" expr="0x8213" line="514" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8213</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="inline" set="null" expr="0x8214" line="515" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8214</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8215" line="516" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8215</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8216" line="517" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8216</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8217" line="518" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8217</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="inline" set="null" expr="0x8218" line="519" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8218</e></m></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="inline" set="null" expr="0x88F0" line="520" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="521" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA8" line="522" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA9" line="523" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CAA" line="524" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="inline" set="null" expr="0x8CAB" line="525" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="inline" set="null" expr="0x8CD4" line="526" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD4</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="inline" set="null" expr="0x8D56" line="527" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="inline" set="null" expr="0x8A11" line="528" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A11</e></m></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8A28" line="529" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A28</e></m></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="inline" set="null" expr="0x8A29" line="530" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A29</e></m></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8A2A" line="531" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2A</e></m></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2B" line="532" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2B</e></m></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2D" line="533" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2D</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2E" line="534" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2E</e></m></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="inline" set="null" expr="0x8A2F" line="535" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2F</e></m></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="inline" set="null" expr="0x8A30" line="536" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A30</e></m></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A31" line="537" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A31</e></m></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A33" line="538" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A33</e></m></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="inline" set="null" expr="0x8A34" line="539" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A34</e></m></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A36" line="540" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A36</e></m></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="inline" set="null" expr="0x8A37" line="541" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A37</e></m></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="inline" set="null" expr="0x8A38" line="542" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A38</e></m></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="inline" set="null" expr="0x8A3A" line="543" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3A</e></m></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="inline" set="null" expr="0x8A3B" line="544" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3B</e></m></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8A3C" line="545" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3C</e></m></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="inline" set="null" expr="0x8A3D" line="546" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3D</e></m></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="inline" set="null" expr="0x8A3E" line="547" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3E</e></m></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="inline" set="null" expr="0x8A3F" line="548" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3F</e></m></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="inline" set="null" expr="0x8A40" line="549" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A40</e></m></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8A42" line="550" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A42</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="inline" set="null" expr="0x8A43" line="551" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A43</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="inline" set="null" expr="0x8A44" line="552" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A44</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8A46" line="553" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A46</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="inline" set="null" expr="0x9112" line="554" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9112</e></m></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="inline" set="null" expr="0x9113" line="555" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9113</e></m></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="inline" set="null" expr="0x9114" line="556" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9114</e></m></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="inline" set="null" expr="0x9115" line="557" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9115</e></m></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="inline" set="null" expr="0x9116" line="558" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9116</e></m></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="inline" set="null" expr="0x9117" line="559" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9117</e></m></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="inline" set="null" expr="0x9118" line="560" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9118</e></m></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="inline" set="null" expr="0x9119" line="561" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9119</e></m></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="inline" set="null" expr="0x911A" line="562" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911A</e></m></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="inline" set="null" expr="0x911B" line="563" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911B</e></m></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="inline" set="null" expr="0x911C" line="564" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911C</e></m></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="inline" set="null" expr="0x911D" line="565" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911D</e></m></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="inline" set="null" expr="0x00000001" line="566" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="inline" set="null" expr="0x1800" line="567" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1800</e></m></meta>
		</COLOR>
		<DEPTH public="1" get="inline" set="null" expr="0x1801" line="568" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1801</e></m></meta>
		</DEPTH>
		<STENCIL public="1" get="inline" set="null" expr="0x1802" line="569" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1802</e></m></meta>
		</STENCIL>
		<MIN public="1" get="inline" set="null" expr="0x8007" line="570" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8007</e></m></meta>
		</MIN>
		<MAX public="1" get="inline" set="null" expr="0x8008" line="571" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8008</e></m></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="inline" set="null" expr="0x81A6" line="572" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="inline" set="null" expr="0x88E1" line="573" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E1</e></m></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="inline" set="null" expr="0x88E2" line="574" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E2</e></m></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="inline" set="null" expr="0x88E5" line="575" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E5</e></m></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="inline" set="null" expr="0x88E6" line="576" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E6</e></m></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="inline" set="null" expr="0x88E9" line="577" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E9</e></m></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="inline" set="null" expr="0x88EA" line="578" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EA</e></m></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="inline" set="null" expr="0x8CAC" line="579" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAC</e></m></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="inline" set="null" expr="0x8CAD" line="580" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAD</e></m></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="inline" set="null" expr="0xFFFFFFFF" line="581" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="inline" set="null" expr="-1" line="582" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="inline" set="null" expr="0x9247" line="583" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9247</e></m></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<context public="1" set="null" static="1"><x path="lime.graphics.OpenGLRenderContext"/></context>
		<type public="1" set="null" static="1"><x path="lime.graphics.RenderContextType"/></type>
		<version public="1" set="null" static="1"><x path="Float"/></version>
		<activeTexture public="1" get="inline" set="null" line="596" static="1"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" get="inline" set="null" line="601" static="1"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<beginQuery public="1" get="inline" set="null" line="606" static="1"><f a="target:query">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="611" static="1"><f a="primitiveNode">
	<x path="Int"/>
	<x path="Void"/>
</f></beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="616" static="1"><f a="program:index:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="621" static="1"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="626" static="1"><f a="target:index:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="631" static="1"><f a="target:index:buffer:offset:size">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="636" static="1"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="641" static="1"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="646" static="1"><f a="unit:sampler">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></bindSampler>
		<bindTexture public="1" get="inline" set="null" line="651" static="1"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="656" static="1"><f a="target:transformFeedback">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="661" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></bindVertexArray>
		<blitFramebuffer public="1" get="inline" set="null" line="666" static="1"><f a="srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blitFramebuffer>
		<blendColor public="1" get="inline" set="null" line="672" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" get="inline" set="null" line="677" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="682" static="1"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="687" static="1"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="692" static="1"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" get="inline" set="null" line="698" static="1"><f a="target:size:srcData:usage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<bufferSubData public="1" get="inline" set="null" line="712" static="1"><f a="target:dstByteOffset:size:srcData">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="725" static="1"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="730" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearBufferfi public="1" get="inline" set="null" line="735" static="1"><f a="buffer:drawbuffer:depth:stencil">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfi>
		<clearBufferfv public="1" get="inline" set="null" line="741" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferfv>
		<clearBufferiv public="1" get="inline" set="null" line="755" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferiv>
		<clearBufferuiv public="1" get="inline" set="null" line="769" static="1"><f a="buffer:drawbuffer:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="782" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepthf public="1" get="inline" set="null" line="795" static="1"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepthf>
		<clearStencil public="1" get="inline" set="null" line="801" static="1"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="806" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="811" static="1"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" get="inline" set="null" line="816" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="822" static="1"><f a="target:level:internalformat:width:height:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexImage3D public="1" get="inline" set="null" line="838" static="1"><f a="target:level:internalformat:width:height:depth:border:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="854" static="1"><f a="target:level:xoffset:yoffset:width:height:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="870" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:imageSize:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="886" static="1"><f a="readTarget:writeTarget:readOffset:writeOffset:size">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="892" static="1"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="897" static="1"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="902" static="1"><f a="target:level:xoffset:yoffset:zoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="907" static="1"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="912" static="1"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="917" static="1"><f a=""><x path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createQuery public="1" get="inline" set="null" line="922" static="1"><f a=""><t path="lime.graphics.opengl.GLQuery"/></f></createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="927" static="1"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="932" static="1"><f a=""><t path="lime.graphics.opengl.GLSampler"/></f></createSampler>
		<createShader public="1" get="inline" set="null" line="937" static="1"><f a="type">
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" get="inline" set="null" line="942" static="1"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="947" static="1"><f a=""><t path="lime.graphics.opengl.GLTransformFeedback"/></f></createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="952" static="1"><f a=""><t path="lime.graphics.opengl.GLVertexArrayObject"/></f></createVertexArray>
		<cullFace public="1" get="inline" set="null" line="957" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="962" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="967" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="972" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="977" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="982" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="987" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="992" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteSync public="1" get="inline" set="null" line="997" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Void"/>
</f></deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="1002" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="1007" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="1012" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="1017" static="1"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" get="inline" set="null" line="1022" static="1"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRangef public="1" get="inline" set="null" line="1035" static="1"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRangef>
		<detachShader public="1" get="inline" set="null" line="1041" static="1"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" get="inline" set="null" line="1046" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="1051" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="1056" static="1"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="1061" static="1"><f a="mode:first:count:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="1066" static="1"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></drawBuffers>
		<drawElements public="1" get="inline" set="null" line="1071" static="1"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="1076" static="1"><f a="mode:count:type:offset:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="1081" static="1"><f a="mode:start:end:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawRangeElements>
		<enable public="1" get="inline" set="null" line="1086" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="1091" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="1096" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="1101" static="1"><f a=""><x path="Void"/></f></endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="1106" static="1"><f a="condition:flags">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSync"/>
</f></fenceSync>
		<finish public="1" get="inline" set="null" line="1111" static="1"><f a=""><x path="Void"/></f></finish>
		<flush public="1" get="inline" set="null" line="1116" static="1"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="1121" static="1"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="1126" static="1"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="1131" static="1"><f a="target:attachment:texture:level:layer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="1136" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" get="inline" set="null" line="1141" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="1146" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1151" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getActiveUniformBlocki public="1" get="inline" set="null" line="1157" static="1"><f a="program:uniformBlockIndex:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getActiveUniformBlocki>
		<getActiveUniformBlockiv public="1" get="inline" set="null" line="1164" static="1"><f a="program:uniformBlockIndex:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformBlockiv>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="1170" static="1"><f a="program:uniformBlockIndex">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
</f></getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="1175" static="1"><f a="program:uniformBlockIndex:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="1180" static="1"><f a="program:uniformIndices:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<d/>
</f></getActiveUniforms>
		<getActiveUniformsiv public="1" get="inline" set="null" line="1186" static="1"><f a="program:uniformIndices:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getActiveUniformsiv>
		<getAttachedShaders public="1" get="inline" set="null" line="1192" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1197" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBoolean public="1" get="inline" set="null" line="1203" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" get="inline" set="null" line="1210" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBooleanv>
		<getBufferParameter public="1" get="inline" set="null" line="1216" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getBufferParameteri public="1" get="inline" set="null" line="1222" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferParameteri>
		<getBufferParameteri64v public="1" get="inline" set="null" line="1229" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteri64v>
		<getBufferParameteriv public="1" get="inline" set="null" line="1236" static="1"><f a="target:pname:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferParameteriv>
		<getBufferPointerv public="1" get="inline" set="null" line="1243" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getBufferPointerv>
		<getBufferSubData public="1" get="inline" set="null" line="1250" static="1"><f a="target:offset:size:data">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getBufferSubData>
		<getContextAttributes public="1" get="inline" set="null" line="1263" static="1"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" get="inline" set="null" line="1268" static="1"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" get="inline" set="null" line="1273" static="1"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFloat public="1" get="inline" set="null" line="1279" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" get="inline" set="null" line="1286" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFloatv>
		<getFragDataLocation public="1" get="inline" set="null" line="1292" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="1297" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getFramebufferAttachmentParameteri public="1" get="inline" set="null" line="1303" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFramebufferAttachmentParameteri>
		<getFramebufferAttachmentParameteriv public="1" get="inline" set="null" line="1310" static="1"><f a="target:attachment:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getFramebufferAttachmentParameteriv>
		<getIndexedParameter public="1" get="inline" set="null" line="1316" static="1"><f a="target:index">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getIndexedParameter>
		<getInteger public="1" get="inline" set="null" line="1322" static="1"><f a="pname">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getInteger64 public="1" get="inline" set="null" line="1329" static="1"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64>
		<getInteger64i public="1" get="inline" set="null" line="1336" static="1"><f a="pname">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInteger64i>
		<getInteger64i_v public="1" get="inline" set="null" line="1343" static="1"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64i_v>
		<getInteger64v public="1" get="inline" set="null" line="1350" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInteger64v>
		<getIntegeri_v public="1" get="inline" set="null" line="1357" static="1"><f a="pname:index:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegeri_v>
		<getIntegerv public="1" get="inline" set="null" line="1364" static="1"><f a="pname:params">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getIntegerv>
		<getInternalformati public="1" get="inline" set="null" line="1371" static="1"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInternalformati>
		<getInternalformativ public="1" get="inline" set="null" line="1378" static="1"><f a="target:internalformat:pname:bufSize:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getInternalformativ>
		<getInternalformatParameter public="1" get="inline" set="null" line="1384" static="1"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="1389" static="1"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgrami public="1" get="inline" set="null" line="1395" static="1"><f a="program:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getProgrami>
		<getProgramiv public="1" get="inline" set="null" line="1402" static="1"><f a="program:pname:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getProgramiv>
		<getProgramBinary public="1" get="inline" set="null" line="1409" static="1"><f a="program:binaryFormat">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></getProgramBinary>
		<getProgramInfoLog public="1" get="inline" set="null" line="1415" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="1420" static="1"><f a="program:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="1425" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
</f></getQuery>
		<getQueryi public="1" get="inline" set="null" line="1431" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryi>
		<getQueryiv public="1" get="inline" set="null" line="1438" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryiv>
		<getQueryObjectui public="1" get="inline" set="null" line="1445" static="1"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getQueryObjectui>
		<getQueryObjectuiv public="1" get="inline" set="null" line="1452" static="1"><f a="query:pname:params">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getQueryObjectuiv>
		<getQueryParameter public="1" get="inline" set="null" line="1458" static="1"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<d/>
</f></getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="1463" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getRenderbufferParameteri public="1" get="inline" set="null" line="1469" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getRenderbufferParameteri>
		<getRenderbufferParameteriv public="1" get="inline" set="null" line="1476" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getRenderbufferParameteriv>
		<getSamplerParameter public="1" get="inline" set="null" line="1482" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<d/>
</f></getSamplerParameter>
		<getSamplerParameterf public="1" get="inline" set="null" line="1488" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSamplerParameterf>
		<getSamplerParameterfv public="1" get="inline" set="null" line="1495" static="1"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameterfv>
		<getSamplerParameteri public="1" get="inline" set="null" line="1502" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSamplerParameteri>
		<getSamplerParameteriv public="1" get="inline" set="null" line="1509" static="1"><f a="sampler:pname:params">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSamplerParameteriv>
		<getShaderi public="1" get="inline" set="null" line="1516" static="1"><f a="shader:pname">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getShaderi>
		<getShaderiv public="1" get="inline" set="null" line="1523" static="1"><f a="shader:pname:params">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getShaderiv>
		<getShaderInfoLog public="1" get="inline" set="null" line="1529" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="1534" static="1"><f a="shader:pname">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="1539" static="1"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="1544" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getString public="1" get="inline" set="null" line="1550" static="1"><f a="name">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<getStringi public="1" get="inline" set="null" line="1557" static="1"><f a="name:index">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getStringi>
		<getSupportedExtensions public="1" get="inline" set="null" line="1563" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="1568" static="1"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
</f></getSyncParameter>
		<getSyncParameteri public="1" get="inline" set="null" line="1574" static="1"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSyncParameteri>
		<getSyncParameteriv public="1" get="inline" set="null" line="1581" static="1"><f a="sync:pname:params">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getSyncParameteriv>
		<getTexParameter public="1" get="inline" set="null" line="1587" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getTexParameterf public="1" get="inline" set="null" line="1593" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getTexParameterf>
		<getTexParameterfv public="1" get="inline" set="null" line="1600" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameterfv>
		<getTexParameteri public="1" get="inline" set="null" line="1607" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getTexParameteri>
		<getTexParameteriv public="1" get="inline" set="null" line="1614" static="1"><f a="target:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getTexParameteriv>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="1620" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="1625" static="1"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformf public="1" get="inline" set="null" line="1631" static="1"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
</f></getUniformf>
		<getUniformfv public="1" get="inline" set="null" line="1638" static="1"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformfv>
		<getUniformi public="1" get="inline" set="null" line="1645" static="1"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformi>
		<getUniformiv public="1" get="inline" set="null" line="1652" static="1"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformiv>
		<getUniformui public="1" get="inline" set="null" line="1659" static="1"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
</f></getUniformui>
		<getUniformuiv public="1" get="inline" set="null" line="1666" static="1"><f a="program:location:params">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getUniformuiv>
		<getUniformBlockIndex public="1" get="inline" set="null" line="1672" static="1"><f a="program:uniformBlockName">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="1677" static="1"><f a="program:uniformNames">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="1682" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="1687" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribf public="1" get="inline" set="null" line="1693" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getVertexAttribf>
		<getVertexAttribfv public="1" get="inline" set="null" line="1700" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribfv>
		<getVertexAttribi public="1" get="inline" set="null" line="1707" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribi>
		<getVertexAttribIi public="1" get="inline" set="null" line="1714" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIi>
		<getVertexAttribIiv public="1" get="inline" set="null" line="1721" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIiv>
		<getVertexAttribIui public="1" get="inline" set="null" line="1728" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribIui>
		<getVertexAttribIuiv public="1" get="inline" set="null" line="1735" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribIuiv>
		<getVertexAttribiv public="1" get="inline" set="null" line="1742" static="1"><f a="index:pname:params">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></getVertexAttribiv>
		<getVertexAttribPointerv public="1" get="inline" set="null" line="1756" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getVertexAttribPointerv>
		<hint public="1" get="inline" set="null" line="1762" static="1"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="1767" static="1"><f a="target:attachments">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="1772" static="1"><f a="target:attachments:x:y:width:height">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="1777" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" get="inline" set="null" line="1782" static="1"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" get="inline" set="null" line="1787" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="1792" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="1797" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isQuery public="1" get="inline" set="null" line="1802" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Bool"/>
</f></isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="1807" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="1812" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Bool"/>
</f></isSampler>
		<isShader public="1" get="inline" set="null" line="1817" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isSync public="1" get="inline" set="null" line="1822" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Bool"/>
</f></isSync>
		<isTexture public="1" get="inline" set="null" line="1827" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="1832" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Bool"/>
</f></isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="1837" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Bool"/>
</f></isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="1842" static="1"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" get="inline" set="null" line="1847" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<mapBufferRange public="1" get="inline" set="null" line="1853" static="1"><f a="target:offset:length:access">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></mapBufferRange>
		<pauseTransformFeedback public="1" get="inline" set="null" line="1859" static="1"><f a=""><x path="Void"/></f></pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="1864" static="1"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="1869" static="1"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<programBinary public="1" get="inline" set="null" line="1875" static="1"><f a="program:binaryFormat:binary:length">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programBinary>
		<programParameteri public="1" get="inline" set="null" line="1882" static="1"><f a="program:pname:value">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></programParameteri>
		<readBuffer public="1" get="inline" set="null" line="1888" static="1"><f a="src">
	<x path="Int"/>
	<x path="Void"/>
</f></readBuffer>
		<readPixels public="1" get="inline" set="null" line="1894" static="1"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.BytePointer"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" get="inline" set="null" line="1908" static="1"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" get="inline" set="null" line="1914" static="1"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="1919" static="1"><f a="target:samples:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="1924" static="1"><f a=""><x path="Void"/></f></resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="1929" static="1"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="1934" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="1939" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></samplerParameteri>
		<scissor public="1" get="inline" set="null" line="1944" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderBinary public="1" get="inline" set="null" line="1950" static="1"><f a="shaders:binaryformat:binary:length">
	<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></shaderBinary>
		<shaderSource public="1" get="inline" set="null" line="1956" static="1"><f a="shader:source">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="1961" static="1"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="1966" static="1"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="1971" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="1976" static="1"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="1981" static="1"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="1986" static="1"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="1992" static="1"><f a="target:level:internalformat:width:height:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage2D>
		<texImage3D public="1" get="inline" set="null" line="2008" static="1"><f a="target:level:internalformat:width:height:depth:border:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="2023" static="1"><f a="target:level:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2028" static="1"><f a="target:level:internalformat:width:height:depth">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2033" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2038" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="2044" static="1"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="2060" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2075" static="1"><f a="program:varyings:bufferMode">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2080" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="2086" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="2099" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="2105" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="2118" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="2124" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="2137" static="1"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="2143" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="2156" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="2162" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="2175" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="2181" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="2194" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="2200" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="2213" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="2219" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="2232" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="2238" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="2251" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="2257" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="2270" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="2276" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="2289" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="2295" static="1"><f a="location:count:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="2308" static="1"><f a="program:uniformBlockIndex:uniformBlockBinding">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformBlockBinding>
		<uniformMatrix2fv public="1" get="inline" set="null" line="2314" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" get="inline" set="null" line="2328" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" get="inline" set="null" line="2342" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="2356" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" get="inline" set="null" line="2370" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" get="inline" set="null" line="2384" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="2398" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" get="inline" set="null" line="2412" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" get="inline" set="null" line="2426" static="1"><f a="location:count:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></uniformMatrix4x3fv>
		<unmapBuffer public="1" get="inline" set="null" line="2440" static="1"><f a="target">
	<x path="Int"/>
	<x path="Bool"/>
</f></unmapBuffer>
		<useProgram public="1" get="inline" set="null" line="2446" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" get="inline" set="null" line="2451" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="2456" static="1"><f a="index:v0">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="2461" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="2475" static="1"><f a="index:v0:v1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="2480" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="2494" static="1"><f a="index:v0:v1:v2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="2499" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="2513" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="2518" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="2532" static="1"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="2537" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="2542" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="2556" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="2561" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="2575" static="1"><f a="index:size:type:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="2580" static="1"><f a="index:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="2585" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<waitSync public="1" get="inline" set="null" line="2590" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Void"/>
</f></waitSync>
		<__getObjectID get="inline" set="null" line="2595" static="1"><f a="object">
	<c path="lime.graphics.opengl.GLObject"/>
	<x path="Int"/>
</f></__getObjectID>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.graphics.opengl.GLObject" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<fromInt public="1" set="method" line="2617" static="1"><f a="type:id">
	<x path="lime.graphics.opengl.GLObjectType"/>
	<x path="Int"/>
	<c path="lime.graphics.opengl.GLObject"/>
</f></fromInt>
		<id>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</id>
		<ptr>
			<x path="lime.system.CFFIPointer"/>
			<meta><m n=":noCompletion"/></meta>
		</ptr>
		<refs>
			<c path="Array"><c path="lime.graphics.opengl.GLObject"/></c>
			<meta><m n=":noCompletion"/></meta>
		</refs>
		<new set="method" line="2612">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<abstract path="lime.graphics.opengl.GLObjectType" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1" final="1">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="2640" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="2641" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRAM>
	<SHADER public="1" get="inline" set="null" expr="cast 2" line="2642" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADER>
	<BUFFER public="1" get="inline" set="null" expr="cast 3" line="2643" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFER>
	<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="2644" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE>
	<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="2645" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="2646" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER>
	<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="2647" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ARRAY_OBJECT>
	<QUERY public="1" get="inline" set="null" expr="cast 8" line="2648" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUERY>
	<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="2649" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLER>
	<SYNC public="1" get="inline" set="null" expr="cast 10" line="2650" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYNC>
	<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="2651" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFORM_FEEDBACK>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1" final="1">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="2640" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="2641" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRAM>
		<SHADER public="1" get="inline" set="null" expr="cast 2" line="2642" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADER>
		<BUFFER public="1" get="inline" set="null" expr="cast 3" line="2643" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFER>
		<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="2644" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="2645" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="2646" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER>
		<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="2647" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ARRAY_OBJECT>
		<QUERY public="1" get="inline" set="null" expr="cast 8" line="2648" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUERY>
		<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="2649" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLER>
		<SYNC public="1" get="inline" set="null" expr="cast 10" line="2650" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYNC>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="2651" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFORM_FEEDBACK>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="lime.graphics.opengl.GLActiveInfo" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLActiveInfo.hx">
		<a>
			<type><x path="Int"/></type>
			<size><x path="Int"/></size>
			<name><c path="String"/></name>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLBuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLBuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLContextAttributes" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLContextAttributes.hx">
		<a>
			<stencil><x path="Bool"/></stencil>
			<preserveDrawingBuffer><x path="Bool"/></preserveDrawingBuffer>
			<premultipliedAlpha><x path="Bool"/></premultipliedAlpha>
			<depth><x path="Bool"/></depth>
			<antialias><x path="Bool"/></antialias>
			<alpha><x path="Bool"/></alpha>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLFramebuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLFramebuffer.hx"><d/></typedef>
	<abstract path="lime.graphics.opengl.GLProgram" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLProgram.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.graphics.opengl._GLProgram.GLProgram_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLProgram.hx" private="1" module="lime.graphics.opengl.GLProgram" final="1"><fromSources public="1" set="method" line="48" static="1"><f a="gl:vertexSource:fragmentSource">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLProgram"/>
</f></fromSources></class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLProgram.GLProgram_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLProgram.hx" private="1" module="lime.graphics.opengl.GLProgram" final="1"><fromSources public="1" set="method" line="48" static="1"><f a="gl:vertexSource:fragmentSource">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLProgram"/>
</f></fromSources></class>
	<typedef path="lime.graphics.opengl.GLQuery" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLQuery.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLRenderbuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLRenderbuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLSampler" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLSampler.hx"><d/></typedef>
	<abstract path="lime.graphics.opengl.GLShader" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLShader.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.graphics.opengl._GLShader.GLShader_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLShader.hx" private="1" module="lime.graphics.opengl.GLShader" final="1"><fromSources public="1" set="method" line="49" static="1"><f a="gl:source:type">
	<d/>
	<c path="String"/>
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></fromSources></class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLShader.GLShader_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLShader.hx" private="1" module="lime.graphics.opengl.GLShader" final="1"><fromSources public="1" set="method" line="49" static="1"><f a="gl:source:type">
	<d/>
	<c path="String"/>
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></fromSources></class>
	<typedef path="lime.graphics.opengl.GLShaderPrecisionFormat" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLShaderPrecisionFormat.hx">
		<a>
			<rangeMin><x path="Int"/></rangeMin>
			<rangeMax><x path="Int"/></rangeMax>
			<precision><x path="Int"/></precision>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLSync" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLSync.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTexture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLTexture.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTransformFeedback" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLTransformFeedback.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLUniformLocation" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLUniformLocation.hx"><x path="Int"/></typedef>
	<typedef path="lime.graphics.opengl.GLVertexArrayObject" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/GLVertexArrayObject.hx"><d/></typedef>
	<class path="lime.graphics.opengl.ext.AMD_compressed_3DC_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/AMD_compressed_3DC_texture.hx">
		<_3DC_X_AMD public="1" expr="0x87F9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x87F9</e></m></meta>
		</_3DC_X_AMD>
		<_3DC_XY_AMD public="1" expr="0x87FA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x87FA</e></m></meta>
		</_3DC_XY_AMD>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.AMD_compressed_ATC_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/AMD_compressed_ATC_texture.hx">
		<ATC_RGB_AMD public="1" expr="0x8C92">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C92</e></m></meta>
		</ATC_RGB_AMD>
		<ATC_RGBA_EXPLICIT_ALPHA_AMD public="1" expr="0x8C93">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C93</e></m></meta>
		</ATC_RGBA_EXPLICIT_ALPHA_AMD>
		<ATC_RGBA_INTERPOLATED_ALPHA_AMD public="1" expr="0x87EE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x87EE</e></m></meta>
		</ATC_RGBA_INTERPOLATED_ALPHA_AMD>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.AMD_performance_monitor" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/AMD_performance_monitor.hx">
		<COUNTER_TYPE_AMD public="1" expr="0x8BC0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC0</e></m></meta>
		</COUNTER_TYPE_AMD>
		<COUNTER_RANGE_AMD public="1" expr="0x8BC1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC1</e></m></meta>
		</COUNTER_RANGE_AMD>
		<UNSIGNED_INT64_AMD public="1" expr="0x8BC2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC2</e></m></meta>
		</UNSIGNED_INT64_AMD>
		<PERCENTAGE_AMD public="1" expr="0x8BC3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC3</e></m></meta>
		</PERCENTAGE_AMD>
		<PERFMON_RESULT_AVAILABLE_AMD public="1" expr="0x8BC4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC4</e></m></meta>
		</PERFMON_RESULT_AVAILABLE_AMD>
		<PERFMON_RESULT_SIZE_AMD public="1" expr="0x8BC5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC5</e></m></meta>
		</PERFMON_RESULT_SIZE_AMD>
		<PERFMON_RESULT_AMD public="1" expr="0x8BC6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BC6</e></m></meta>
		</PERFMON_RESULT_AMD>
		<new set="method" line="14">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.AMD_program_binary_Z400" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/AMD_program_binary_Z400.hx">
		<Z400_BINARY_AMD public="1" expr="0x8740">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8740</e></m></meta>
		</Z400_BINARY_AMD>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_framebuffer_blit" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_framebuffer_blit.hx">
		<READ_FRAMEBUFFER_ANGLE public="1" expr="0x8CA8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER_ANGLE>
		<DRAW_FRAMEBUFFER_ANGLE public="1" expr="0x8CA9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER_ANGLE>
		<DRAW_FRAMEBUFFER_BINDING_ANGLE public="1" expr="0x8CA6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING_ANGLE>
		<READ_FRAMEBUFFER_BINDING_ANGLE public="1" expr="0x8CAA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING_ANGLE>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_framebuffer_multisample" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_framebuffer_multisample.hx">
		<RENDERBUFFER_SAMPLES_ANGLE public="1" expr="0x8CAB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES_ANGLE>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE public="1" expr="0x8D56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE>
		<MAX_SAMPLES_ANGLE public="1" expr="0x8D57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES_ANGLE>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_instanced_arrays" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_instanced_arrays.hx">
		<VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE public="1" expr="0x88FE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FE</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE>
		<drawArraysInstancedANGLE public="1" set="method" line="14"><f a="mode:first:count:primcount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstancedANGLE>
		<drawElementsInstancedANGLE public="1" set="method" line="16"><f a="mode:count:type:offset:primcount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstancedANGLE>
		<vertexAttribDivisorANGLE public="1" set="method" line="18"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisorANGLE>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_pack_reverse_row_order" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_pack_reverse_row_order.hx">
		<PACK_REVERSE_ROW_ORDER_ANGLE public="1" expr="0x93A4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93A4</e></m></meta>
		</PACK_REVERSE_ROW_ORDER_ANGLE>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_texture_compression_dxt3" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_texture_compression_dxt3.hx">
		<COMPRESSED_RGBA_S3TC_DXT3_ANGLE public="1" expr="0x83F2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F2</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT3_ANGLE>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_texture_compression_dxt5" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_texture_compression_dxt5.hx">
		<COMPRESSED_RGBA_S3TC_DXT5_ANGLE public="1" expr="0x83F3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F3</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT5_ANGLE>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_texture_usage" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_texture_usage.hx">
		<TEXTURE_USAGE_ANGLE public="1" expr="0x93A2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93A2</e></m></meta>
		</TEXTURE_USAGE_ANGLE>
		<FRAMEBUFFER_ATTACHMENT_ANGLE public="1" expr="0x93A3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93A3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_ANGLE>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ANGLE_translated_shader_source" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ANGLE_translated_shader_source.hx">
		<TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE public="1" expr="0x93A0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93A0</e></m></meta>
		</TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_copy_texture_levels" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_copy_texture_levels.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_framebuffer_multisample" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_framebuffer_multisample.hx">
		<RENDERBUFFER_SAMPLES_APPLE public="1" expr="0x8CAB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES_APPLE>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE public="1" expr="0x8D56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE>
		<MAX_SAMPLES_APPLE public="1" expr="0x8D57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES_APPLE>
		<READ_FRAMEBUFFER_APPLE public="1" expr="0x8CA8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER_APPLE>
		<DRAW_FRAMEBUFFER_APPLE public="1" expr="0x8CA9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER_APPLE>
		<DRAW_FRAMEBUFFER_BINDING_APPLE public="1" expr="0x8CA6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING_APPLE>
		<READ_FRAMEBUFFER_BINDING_APPLE public="1" expr="0x8CAA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING_APPLE>
		<new set="method" line="14">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_rgb_422" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_rgb_422.hx">
		<RGB_422_APPLE public="1" expr="0x8A1F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A1F</e></m></meta>
		</RGB_422_APPLE>
		<UNSIGNED_SHORT_8_8_APPLE public="1" expr="0x85BA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85BA</e></m></meta>
		</UNSIGNED_SHORT_8_8_APPLE>
		<UNSIGNED_SHORT_8_8_REV_APPLE public="1" expr="0x85BB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85BB</e></m></meta>
		</UNSIGNED_SHORT_8_8_REV_APPLE>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_sync" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_sync.hx">
		<SYNC_OBJECT_APPLE public="1" expr="0x8A53">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A53</e></m></meta>
		</SYNC_OBJECT_APPLE>
		<MAX_SERVER_WAIT_TIMEOUT_APPLE public="1" expr="0x9111">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9111</e></m></meta>
		</MAX_SERVER_WAIT_TIMEOUT_APPLE>
		<OBJECT_TYPE_APPLE public="1" expr="0x9112">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9112</e></m></meta>
		</OBJECT_TYPE_APPLE>
		<SYNC_CONDITION_APPLE public="1" expr="0x9113">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9113</e></m></meta>
		</SYNC_CONDITION_APPLE>
		<SYNC_STATUS_APPLE public="1" expr="0x9114">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9114</e></m></meta>
		</SYNC_STATUS_APPLE>
		<SYNC_FLAGS_APPLE public="1" expr="0x9115">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9115</e></m></meta>
		</SYNC_FLAGS_APPLE>
		<SYNC_FENCE_APPLE public="1" expr="0x9116">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9116</e></m></meta>
		</SYNC_FENCE_APPLE>
		<SYNC_GPU_COMMANDS_COMPLETE_APPLE public="1" expr="0x9117">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9117</e></m></meta>
		</SYNC_GPU_COMMANDS_COMPLETE_APPLE>
		<UNSIGNALED_APPLE public="1" expr="0x9118">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9118</e></m></meta>
		</UNSIGNALED_APPLE>
		<SIGNALED_APPLE public="1" expr="0x9119">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9119</e></m></meta>
		</SIGNALED_APPLE>
		<ALREADY_SIGNALED_APPLE public="1" expr="0x911A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911A</e></m></meta>
		</ALREADY_SIGNALED_APPLE>
		<TIMEOUT_EXPIRED_APPLE public="1" expr="0x911B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911B</e></m></meta>
		</TIMEOUT_EXPIRED_APPLE>
		<CONDITION_SATISFIED_APPLE public="1" expr="0x911C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911C</e></m></meta>
		</CONDITION_SATISFIED_APPLE>
		<WAIT_FAILED_APPLE public="1" expr="0x911D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911D</e></m></meta>
		</WAIT_FAILED_APPLE>
		<SYNC_FLUSH_COMMANDS_BIT_APPLE public="1" expr="0x00000001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</SYNC_FLUSH_COMMANDS_BIT_APPLE>
		<TIMEOUT_IGNORED_APPLE public="1" expr="0xFFFFFFFF">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</TIMEOUT_IGNORED_APPLE>
		<new set="method" line="24">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_texture_format_BGRA8888" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_texture_format_BGRA8888.hx">
		<BGRA_EXT public="1" expr="0x80E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E1</e></m></meta>
		</BGRA_EXT>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.APPLE_texture_max_level" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/APPLE_texture_max_level.hx">
		<TEXTURE_MAX_LEVEL_APPLE public="1" expr="0x813D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813D</e></m></meta>
		</TEXTURE_MAX_LEVEL_APPLE>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ARM_mali_program_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ARM_mali_program_binary.hx">
		<MALI_PROGRAM_BINARY_ARM public="1" expr="0x8F61">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F61</e></m></meta>
		</MALI_PROGRAM_BINARY_ARM>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ARM_mali_shader_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ARM_mali_shader_binary.hx">
		<MALI_SHADER_BINARY_ARM public="1" expr="0x8F60">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F60</e></m></meta>
		</MALI_SHADER_BINARY_ARM>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.ARM_rgba8" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/ARM_rgba8.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.DMP_shader_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/DMP_shader_binary.hx">
		<SHADER_BINARY_DMP public="1" expr="0x9250">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9250</e></m></meta>
		</SHADER_BINARY_DMP>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_bgra" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_bgra.hx">
		<BGR_EXT public="1" expr="0x80E0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E0</e></m></meta>
		</BGR_EXT>
		<BGRA_EXT public="1" expr="0x80E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E1</e></m></meta>
		</BGRA_EXT>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_blend_minmax" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_blend_minmax.hx">
		<MIN_EXT public="1" expr="0x8007">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8007</e></m></meta>
		</MIN_EXT>
		<MAX_EXT public="1" expr="0x8008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8008</e></m></meta>
		</MAX_EXT>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_color_buffer_float" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_color_buffer_float.hx">
		<new set="method" line="6">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_color_buffer_half_float" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_color_buffer_half_float.hx">
		<RGBA16F_EXT public="1" expr="0x881A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F_EXT>
		<RGB16F_EXT public="1" expr="0x881B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F_EXT>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT public="1" expr="0x8211">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8211</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT>
		<UNSIGNED_NORMALIZED_EXT public="1" expr="0x8C17">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C17</e></m></meta>
		</UNSIGNED_NORMALIZED_EXT>
		<new set="method" line="16">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_debug_label" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_debug_label.hx">
		<PROGRAM_PIPELINE_OBJECT_EXT public="1" expr="0x8A4F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A4F</e></m></meta>
		</PROGRAM_PIPELINE_OBJECT_EXT>
		<PROGRAM_OBJECT_EXT public="1" expr="0x8B40">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B40</e></m></meta>
		</PROGRAM_OBJECT_EXT>
		<SHADER_OBJECT_EXT public="1" expr="0x8B48">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B48</e></m></meta>
		</SHADER_OBJECT_EXT>
		<BUFFER_OBJECT_EXT public="1" expr="0x9151">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9151</e></m></meta>
		</BUFFER_OBJECT_EXT>
		<QUERY_OBJECT_EXT public="1" expr="0x9153">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9153</e></m></meta>
		</QUERY_OBJECT_EXT>
		<VERTEX_ARRAY_OBJECT_EXT public="1" expr="0x9154">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9154</e></m></meta>
		</VERTEX_ARRAY_OBJECT_EXT>
		<new set="method" line="13">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_debug_marker" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_debug_marker.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_discard_framebuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_discard_framebuffer.hx">
		<COLOR_EXT public="1" expr="0x1800">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1800</e></m></meta>
		</COLOR_EXT>
		<DEPTH_EXT public="1" expr="0x1801">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1801</e></m></meta>
		</DEPTH_EXT>
		<STENCIL_EXT public="1" expr="0x1802">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1802</e></m></meta>
		</STENCIL_EXT>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_map_buffer_range" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_map_buffer_range.hx">
		<MAP_READ_BIT_EXT public="1" expr="0x0001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</MAP_READ_BIT_EXT>
		<MAP_WRITE_BIT_EXT public="1" expr="0x0002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</MAP_WRITE_BIT_EXT>
		<MAP_INVALIDATE_RANGE_BIT_EXT public="1" expr="0x0004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</MAP_INVALIDATE_RANGE_BIT_EXT>
		<MAP_INVALIDATE_BUFFER_BIT_EXT public="1" expr="0x0008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</MAP_INVALIDATE_BUFFER_BIT_EXT>
		<MAP_FLUSH_EXPLICIT_BIT_EXT public="1" expr="0x0010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0010</e></m></meta>
		</MAP_FLUSH_EXPLICIT_BIT_EXT>
		<MAP_UNSYNCHRONIZED_BIT_EXT public="1" expr="0x0020">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0020</e></m></meta>
		</MAP_UNSYNCHRONIZED_BIT_EXT>
		<new set="method" line="13">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_multi_draw_arrays" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_multi_draw_arrays.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_multisampled_render_to_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_multisampled_render_to_texture.hx">
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT public="1" expr="0x8D6C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6C</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT>
		<RENDERBUFFER_SAMPLES_EXT public="1" expr="0x8CAB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES_EXT>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT public="1" expr="0x8D56">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT>
		<MAX_SAMPLES_EXT public="1" expr="0x8D57">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES_EXT>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_multiview_draw_buffers" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_multiview_draw_buffers.hx">
		<COLOR_ATTACHMENT_EXT public="1" expr="0x90F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x90F0</e></m></meta>
		</COLOR_ATTACHMENT_EXT>
		<MULTIVIEW_EXT public="1" expr="0x90F1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x90F1</e></m></meta>
		</MULTIVIEW_EXT>
		<DRAW_BUFFER_EXT public="1" expr="0x0C01">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C01</e></m></meta>
		</DRAW_BUFFER_EXT>
		<READ_BUFFER_EXT public="1" expr="0x0C02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER_EXT>
		<MAX_MULTIVIEW_BUFFERS_EXT public="1" expr="0x90F2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x90F2</e></m></meta>
		</MAX_MULTIVIEW_BUFFERS_EXT>
		<new set="method" line="12">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_occlusion_query_boolean" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_occlusion_query_boolean.hx">
		<ANY_SAMPLES_PASSED_EXT public="1" expr="0x8C2F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C2F</e></m></meta>
		</ANY_SAMPLES_PASSED_EXT>
		<ANY_SAMPLES_PASSED_CONSERVATIVE_EXT public="1" expr="0x8D6A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6A</e></m></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE_EXT>
		<CURRENT_QUERY_EXT public="1" expr="0x8865">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8865</e></m></meta>
		</CURRENT_QUERY_EXT>
		<QUERY_RESULT_EXT public="1" expr="0x8866">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8866</e></m></meta>
		</QUERY_RESULT_EXT>
		<QUERY_RESULT_AVAILABLE_EXT public="1" expr="0x8867">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8867</e></m></meta>
		</QUERY_RESULT_AVAILABLE_EXT>
		<new set="method" line="12">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_packed_depth_stencil" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_packed_depth_stencil.hx">
		<DEPTH_STENCIL_EXT public="1" expr="0x84F9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL_EXT>
		<UNSIGNED_INT_24_8_EXT public="1" expr="0x84FA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8_EXT>
		<DEPTH24_STENCIL8_EXT public="1" expr="0x88F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8_EXT>
		<TEXTURE_STENCIL_SIZE_EXT public="1" expr="0x88F1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F1</e></m></meta>
		</TEXTURE_STENCIL_SIZE_EXT>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_read_format_bgra" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_read_format_bgra.hx">
		<BGRA_EXT public="1" expr="0x80E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E1</e></m></meta>
		</BGRA_EXT>
		<UNSIGNED_SHORT_4_4_4_4_REV_EXT public="1" expr="0x8365">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8365</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4_REV_EXT>
		<UNSIGNED_SHORT_1_5_5_5_REV_EXT public="1" expr="0x8366">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8366</e></m></meta>
		</UNSIGNED_SHORT_1_5_5_5_REV_EXT>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_robustness" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_robustness.hx">
		<GUILTY_CONTEXT_RESET_EXT public="1" expr="0x8253">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8253</e></m></meta>
		</GUILTY_CONTEXT_RESET_EXT>
		<INNOCENT_CONTEXT_RESET_EXT public="1" expr="0x8254">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8254</e></m></meta>
		</INNOCENT_CONTEXT_RESET_EXT>
		<UNKNOWN_CONTEXT_RESET_EXT public="1" expr="0x8255">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8255</e></m></meta>
		</UNKNOWN_CONTEXT_RESET_EXT>
		<CONTEXT_ROBUST_ACCESS_EXT public="1" expr="0x90F3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x90F3</e></m></meta>
		</CONTEXT_ROBUST_ACCESS_EXT>
		<RESET_NOTIFICATION_STRATEGY_EXT public="1" expr="0x8256">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8256</e></m></meta>
		</RESET_NOTIFICATION_STRATEGY_EXT>
		<LOSE_CONTEXT_ON_RESET_EXT public="1" expr="0x8252">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8252</e></m></meta>
		</LOSE_CONTEXT_ON_RESET_EXT>
		<NO_RESET_NOTIFICATION_EXT public="1" expr="0x8261">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8261</e></m></meta>
		</NO_RESET_NOTIFICATION_EXT>
		<new set="method" line="14">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_sRGB" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_sRGB.hx">
		<SRGB_EXT public="1" expr="0x8C40">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C40</e></m></meta>
		</SRGB_EXT>
		<SRGB_ALPHA_EXT public="1" expr="0x8C42">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C42</e></m></meta>
		</SRGB_ALPHA_EXT>
		<SRGB8_ALPHA8_EXT public="1" expr="0x8C43">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C43</e></m></meta>
		</SRGB8_ALPHA8_EXT>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT public="1" expr="0x8210">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8210</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT>
		<new set="method" line="12">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_separate_shader_objects" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_separate_shader_objects.hx">
		<VERTEX_SHADER_BIT_EXT public="1" expr="0x00000001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</VERTEX_SHADER_BIT_EXT>
		<FRAGMENT_SHADER_BIT_EXT public="1" expr="0x00000002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000002</e></m></meta>
		</FRAGMENT_SHADER_BIT_EXT>
		<ALL_SHADER_BITS_EXT public="1" expr="0xFFFFFFFF">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</ALL_SHADER_BITS_EXT>
		<PROGRAM_SEPARABLE_EXT public="1" expr="0x8258">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8258</e></m></meta>
		</PROGRAM_SEPARABLE_EXT>
		<ACTIVE_PROGRAM_EXT public="1" expr="0x8259">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8259</e></m></meta>
		</ACTIVE_PROGRAM_EXT>
		<PROGRAM_PIPELINE_BINDING_EXT public="1" expr="0x825A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x825A</e></m></meta>
		</PROGRAM_PIPELINE_BINDING_EXT>
		<new set="method" line="13">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_shader_framebuffer_fetch" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_shader_framebuffer_fetch.hx">
		<FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT public="1" expr="0x8A52">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A52</e></m></meta>
		</FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_shader_texture_lod" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_shader_texture_lod.hx">
		<new set="method" line="7">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_shadow_samplers" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_shadow_samplers.hx">
		<TEXTURE_COMPARE_MODE_EXT public="1" expr="0x884C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884C</e></m></meta>
		</TEXTURE_COMPARE_MODE_EXT>
		<TEXTURE_COMPARE_FUNC_EXT public="1" expr="0x884D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884D</e></m></meta>
		</TEXTURE_COMPARE_FUNC_EXT>
		<COMPARE_REF_TO_TEXTURE_EXT public="1" expr="0x884E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884E</e></m></meta>
		</COMPARE_REF_TO_TEXTURE_EXT>
		<SAMPLER_2D_SHADOW_EXT public="1" expr="0x8B62">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B62</e></m></meta>
		</SAMPLER_2D_SHADOW_EXT>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_compression_dxt1" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_compression_dxt1.hx">
		<COMPRESSED_RGB_S3TC_DXT1_EXT public="1" expr="0x83F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F0</e></m></meta>
		</COMPRESSED_RGB_S3TC_DXT1_EXT>
		<COMPRESSED_RGBA_S3TC_DXT1_EXT public="1" expr="0x83F1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F1</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT1_EXT>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_compression_s3tc" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_compression_s3tc.hx">
		<COMPRESSED_RGB_S3TC_DXT1_EXT public="1" expr="0x83F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F0</e></m></meta>
		</COMPRESSED_RGB_S3TC_DXT1_EXT>
		<COMPRESSED_RGBA_S3TC_DXT1_EXT public="1" expr="0x83F1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F1</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT1_EXT>
		<COMPRESSED_RGBA_S3TC_DXT3_EXT public="1" expr="0x83F2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F2</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT3_EXT>
		<COMPRESSED_RGBA_S3TC_DXT5_EXT public="1" expr="0x83F3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x83F3</e></m></meta>
		</COMPRESSED_RGBA_S3TC_DXT5_EXT>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_filter_anisotropic" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_filter_anisotropic.hx">
		<TEXTURE_MAX_ANISOTROPY_EXT public="1" expr="0x84FE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FE</e></m></meta>
		</TEXTURE_MAX_ANISOTROPY_EXT>
		<MAX_TEXTURE_MAX_ANISOTROPY_EXT public="1" expr="0x84FF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FF</e></m></meta>
		</MAX_TEXTURE_MAX_ANISOTROPY_EXT>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_format_BGRA8888" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_format_BGRA8888.hx">
		<BGRA_EXT public="1" expr="0x80E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E1</e></m></meta>
		</BGRA_EXT>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_rg" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_rg.hx">
		<RED_EXT public="1" expr="0x1903">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1903</e></m></meta>
		</RED_EXT>
		<RG_EXT public="1" expr="0x8227">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8227</e></m></meta>
		</RG_EXT>
		<R8_EXT public="1" expr="0x8229">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8_EXT>
		<RG8_EXT public="1" expr="0x822B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8_EXT>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_storage" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_storage.hx">
		<TEXTURE_IMMUTABLE_FORMAT_EXT public="1" expr="0x912F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x912F</e></m></meta>
		</TEXTURE_IMMUTABLE_FORMAT_EXT>
		<ALPHA8_EXT public="1" expr="0x803C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x803C</e></m></meta>
		</ALPHA8_EXT>
		<LUMINANCE8_EXT public="1" expr="0x8040">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8040</e></m></meta>
		</LUMINANCE8_EXT>
		<LUMINANCE8_ALPHA8_EXT public="1" expr="0x8045">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8045</e></m></meta>
		</LUMINANCE8_ALPHA8_EXT>
		<RGBA32F_EXT public="1" expr="0x8814">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8814</e></m></meta>
		</RGBA32F_EXT>
		<RGB32F_EXT public="1" expr="0x8815">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8815</e></m></meta>
		</RGB32F_EXT>
		<ALPHA32F_EXT public="1" expr="0x8816">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8816</e></m></meta>
		</ALPHA32F_EXT>
		<LUMINANCE32F_EXT public="1" expr="0x8818">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8818</e></m></meta>
		</LUMINANCE32F_EXT>
		<LUMINANCE_ALPHA32F_EXT public="1" expr="0x8819">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8819</e></m></meta>
		</LUMINANCE_ALPHA32F_EXT>
		<RGBA16F_EXT public="1" expr="0x881A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F_EXT>
		<RGB16F_EXT public="1" expr="0x881B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F_EXT>
		<ALPHA16F_EXT public="1" expr="0x881C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881C</e></m></meta>
		</ALPHA16F_EXT>
		<LUMINANCE16F_EXT public="1" expr="0x881E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881E</e></m></meta>
		</LUMINANCE16F_EXT>
		<LUMINANCE_ALPHA16F_EXT public="1" expr="0x881F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881F</e></m></meta>
		</LUMINANCE_ALPHA16F_EXT>
		<RGB10_A2_EXT public="1" expr="0x8059">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2_EXT>
		<RGB10_EXT public="1" expr="0x8052">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8052</e></m></meta>
		</RGB10_EXT>
		<BGRA8_EXT public="1" expr="0x93A1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93A1</e></m></meta>
		</BGRA8_EXT>
		<R8_EXT public="1" expr="0x8229">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8_EXT>
		<RG8_EXT public="1" expr="0x822B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8_EXT>
		<R32F_EXT public="1" expr="0x822E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822E</e></m></meta>
		</R32F_EXT>
		<RG32F_EXT public="1" expr="0x8230">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8230</e></m></meta>
		</RG32F_EXT>
		<R16F_EXT public="1" expr="0x822D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822D</e></m></meta>
		</R16F_EXT>
		<RG16F_EXT public="1" expr="0x822F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822F</e></m></meta>
		</RG16F_EXT>
		<new set="method" line="30">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_texture_type_2_10_10_10_REV" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_texture_type_2_10_10_10_REV.hx">
		<UNSIGNED_INT_2_10_10_10_REV_EXT public="1" expr="0x8368">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8368</e></m></meta>
		</UNSIGNED_INT_2_10_10_10_REV_EXT>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.EXT_unpack_subimage" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/EXT_unpack_subimage.hx">
		<UNPACK_ROW_LENGTH public="1" expr="0x0CF2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF2</e></m></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" expr="0x0CF3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF3</e></m></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" expr="0x0CF4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF4</e></m></meta>
		</UNPACK_SKIP_PIXELS>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.FJ_shader_binary_GCCSO" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/FJ_shader_binary_GCCSO.hx">
		<GCCSO_SHADER_BINARY_FJ public="1" expr="0x9260">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9260</e></m></meta>
		</GCCSO_SHADER_BINARY_FJ>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.IMG_multisampled_render_to_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/IMG_multisampled_render_to_texture.hx">
		<RENDERBUFFER_SAMPLES_IMG public="1" expr="0x9133">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9133</e></m></meta>
		</RENDERBUFFER_SAMPLES_IMG>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG public="1" expr="0x9134">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9134</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG>
		<MAX_SAMPLES_IMG public="1" expr="0x9135">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9135</e></m></meta>
		</MAX_SAMPLES_IMG>
		<TEXTURE_SAMPLES_IMG public="1" expr="0x9136">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9136</e></m></meta>
		</TEXTURE_SAMPLES_IMG>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.IMG_program_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/IMG_program_binary.hx">
		<SGX_PROGRAM_BINARY_IMG public="1" expr="0x9130">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9130</e></m></meta>
		</SGX_PROGRAM_BINARY_IMG>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.IMG_read_format" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/IMG_read_format.hx">
		<BGRA_IMG public="1" expr="0x80E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E1</e></m></meta>
		</BGRA_IMG>
		<UNSIGNED_SHORT_4_4_4_4_REV_IMG public="1" expr="0x8365">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8365</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4_REV_IMG>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.IMG_shader_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/IMG_shader_binary.hx">
		<SGX_BINARY_IMG public="1" expr="0x8C0A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C0A</e></m></meta>
		</SGX_BINARY_IMG>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.IMG_texture_compression_pvrtc" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/IMG_texture_compression_pvrtc.hx">
		<COMPRESSED_RGB_PVRTC_4BPPV1_IMG public="1" expr="0x8C00">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C00</e></m></meta>
		</COMPRESSED_RGB_PVRTC_4BPPV1_IMG>
		<COMPRESSED_RGB_PVRTC_2BPPV1_IMG public="1" expr="0x8C01">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C01</e></m></meta>
		</COMPRESSED_RGB_PVRTC_2BPPV1_IMG>
		<COMPRESSED_RGBA_PVRTC_4BPPV1_IMG public="1" expr="0x8C02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C02</e></m></meta>
		</COMPRESSED_RGBA_PVRTC_4BPPV1_IMG>
		<COMPRESSED_RGBA_PVRTC_2BPPV1_IMG public="1" expr="0x8C03">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C03</e></m></meta>
		</COMPRESSED_RGBA_PVRTC_2BPPV1_IMG>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.KHR_debug" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/KHR_debug.hx">
		<DEBUG_OUTPUT_SYNCHRONOUS public="1" expr="0x8242">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8242</e></m></meta>
		</DEBUG_OUTPUT_SYNCHRONOUS>
		<DEBUG_NEXT_LOGGED_MESSAGE_LENGTH public="1" expr="0x8243">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8243</e></m></meta>
		</DEBUG_NEXT_LOGGED_MESSAGE_LENGTH>
		<DEBUG_CALLBACK_FUNCTION public="1" expr="0x8244">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8244</e></m></meta>
		</DEBUG_CALLBACK_FUNCTION>
		<DEBUG_CALLBACK_USER_PARAM public="1" expr="0x8245">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8245</e></m></meta>
		</DEBUG_CALLBACK_USER_PARAM>
		<DEBUG_SOURCE_API public="1" expr="0x8246">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8246</e></m></meta>
		</DEBUG_SOURCE_API>
		<DEBUG_SOURCE_WINDOW_SYSTEM public="1" expr="0x8247">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8247</e></m></meta>
		</DEBUG_SOURCE_WINDOW_SYSTEM>
		<DEBUG_SOURCE_SHADER_COMPILER public="1" expr="0x8248">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8248</e></m></meta>
		</DEBUG_SOURCE_SHADER_COMPILER>
		<DEBUG_SOURCE_THIRD_PARTY public="1" expr="0x8249">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8249</e></m></meta>
		</DEBUG_SOURCE_THIRD_PARTY>
		<DEBUG_SOURCE_APPLICATION public="1" expr="0x824A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824A</e></m></meta>
		</DEBUG_SOURCE_APPLICATION>
		<DEBUG_SOURCE_OTHER public="1" expr="0x824B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824B</e></m></meta>
		</DEBUG_SOURCE_OTHER>
		<DEBUG_TYPE_ERROR public="1" expr="0x824C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824C</e></m></meta>
		</DEBUG_TYPE_ERROR>
		<DEBUG_TYPE_DEPRECATED_BEHAVIOR public="1" expr="0x824D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824D</e></m></meta>
		</DEBUG_TYPE_DEPRECATED_BEHAVIOR>
		<DEBUG_TYPE_UNDEFINED_BEHAVIOR public="1" expr="0x824E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824E</e></m></meta>
		</DEBUG_TYPE_UNDEFINED_BEHAVIOR>
		<DEBUG_TYPE_PORTABILITY public="1" expr="0x824F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x824F</e></m></meta>
		</DEBUG_TYPE_PORTABILITY>
		<DEBUG_TYPE_PERFORMANCE public="1" expr="0x8250">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8250</e></m></meta>
		</DEBUG_TYPE_PERFORMANCE>
		<DEBUG_TYPE_OTHER public="1" expr="0x8251">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8251</e></m></meta>
		</DEBUG_TYPE_OTHER>
		<DEBUG_TYPE_MARKER public="1" expr="0x8268">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8268</e></m></meta>
		</DEBUG_TYPE_MARKER>
		<DEBUG_TYPE_PUSH_GROUP public="1" expr="0x8269">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8269</e></m></meta>
		</DEBUG_TYPE_PUSH_GROUP>
		<DEBUG_TYPE_POP_GROUP public="1" expr="0x826A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x826A</e></m></meta>
		</DEBUG_TYPE_POP_GROUP>
		<DEBUG_SEVERITY_NOTIFICATION public="1" expr="0x826B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x826B</e></m></meta>
		</DEBUG_SEVERITY_NOTIFICATION>
		<MAX_DEBUG_GROUP_STACK_DEPTH public="1" expr="0x826C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x826C</e></m></meta>
		</MAX_DEBUG_GROUP_STACK_DEPTH>
		<DEBUG_GROUP_STACK_DEPTH public="1" expr="0x826D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x826D</e></m></meta>
		</DEBUG_GROUP_STACK_DEPTH>
		<BUFFER public="1" expr="0x82E0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E0</e></m></meta>
		</BUFFER>
		<SHADER public="1" expr="0x82E1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E1</e></m></meta>
		</SHADER>
		<PROGRAM public="1" expr="0x82E2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E2</e></m></meta>
		</PROGRAM>
		<QUERY public="1" expr="0x82E3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E3</e></m></meta>
		</QUERY>
		<SAMPLER public="1" expr="0x82E6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E6</e></m></meta>
		</SAMPLER>
		<MAX_LABEL_LENGTH public="1" expr="0x82E8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82E8</e></m></meta>
		</MAX_LABEL_LENGTH>
		<MAX_DEBUG_MESSAGE_LENGTH public="1" expr="0x9143">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9143</e></m></meta>
		</MAX_DEBUG_MESSAGE_LENGTH>
		<MAX_DEBUG_LOGGED_MESSAGES public="1" expr="0x9144">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9144</e></m></meta>
		</MAX_DEBUG_LOGGED_MESSAGES>
		<DEBUG_LOGGED_MESSAGES public="1" expr="0x9145">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9145</e></m></meta>
		</DEBUG_LOGGED_MESSAGES>
		<DEBUG_SEVERITY_HIGH public="1" expr="0x9146">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9146</e></m></meta>
		</DEBUG_SEVERITY_HIGH>
		<DEBUG_SEVERITY_MEDIUM public="1" expr="0x9147">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9147</e></m></meta>
		</DEBUG_SEVERITY_MEDIUM>
		<DEBUG_SEVERITY_LOW public="1" expr="0x9148">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9148</e></m></meta>
		</DEBUG_SEVERITY_LOW>
		<DEBUG_OUTPUT public="1" expr="0x92E0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x92E0</e></m></meta>
		</DEBUG_OUTPUT>
		<CONTEXT_FLAG_DEBUG_BIT public="1" expr="0x00000002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000002</e></m></meta>
		</CONTEXT_FLAG_DEBUG_BIT>
		<STACK_OVERFLOW public="1" expr="0x0503">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0503</e></m></meta>
		</STACK_OVERFLOW>
		<STACK_UNDERFLOW public="1" expr="0x0504">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0504</e></m></meta>
		</STACK_UNDERFLOW>
		<new set="method" line="45">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.KHR_texture_compression_astc_ldr" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/KHR_texture_compression_astc_ldr.hx">
		<COMPRESSED_RGBA_ASTC_4x4_KHR public="1" expr="0x93B0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B0</e></m></meta>
		</COMPRESSED_RGBA_ASTC_4x4_KHR>
		<COMPRESSED_RGBA_ASTC_5x4_KHR public="1" expr="0x93B1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B1</e></m></meta>
		</COMPRESSED_RGBA_ASTC_5x4_KHR>
		<COMPRESSED_RGBA_ASTC_5x5_KHR public="1" expr="0x93B2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B2</e></m></meta>
		</COMPRESSED_RGBA_ASTC_5x5_KHR>
		<COMPRESSED_RGBA_ASTC_6x5_KHR public="1" expr="0x93B3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B3</e></m></meta>
		</COMPRESSED_RGBA_ASTC_6x5_KHR>
		<COMPRESSED_RGBA_ASTC_6x6_KHR public="1" expr="0x93B4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B4</e></m></meta>
		</COMPRESSED_RGBA_ASTC_6x6_KHR>
		<COMPRESSED_RGBA_ASTC_8x5_KHR public="1" expr="0x93B5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B5</e></m></meta>
		</COMPRESSED_RGBA_ASTC_8x5_KHR>
		<COMPRESSED_RGBA_ASTC_8x6_KHR public="1" expr="0x93B6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B6</e></m></meta>
		</COMPRESSED_RGBA_ASTC_8x6_KHR>
		<COMPRESSED_RGBA_ASTC_8x8_KHR public="1" expr="0x93B7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B7</e></m></meta>
		</COMPRESSED_RGBA_ASTC_8x8_KHR>
		<COMPRESSED_RGBA_ASTC_10x5_KHR public="1" expr="0x93B8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B8</e></m></meta>
		</COMPRESSED_RGBA_ASTC_10x5_KHR>
		<COMPRESSED_RGBA_ASTC_10x6_KHR public="1" expr="0x93B9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93B9</e></m></meta>
		</COMPRESSED_RGBA_ASTC_10x6_KHR>
		<COMPRESSED_RGBA_ASTC_10x8_KHR public="1" expr="0x93BA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93BA</e></m></meta>
		</COMPRESSED_RGBA_ASTC_10x8_KHR>
		<COMPRESSED_RGBA_ASTC_10x10_KHR public="1" expr="0x93BB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93BB</e></m></meta>
		</COMPRESSED_RGBA_ASTC_10x10_KHR>
		<COMPRESSED_RGBA_ASTC_12x10_KHR public="1" expr="0x93BC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93BC</e></m></meta>
		</COMPRESSED_RGBA_ASTC_12x10_KHR>
		<COMPRESSED_RGBA_ASTC_12x12_KHR public="1" expr="0x93BD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93BD</e></m></meta>
		</COMPRESSED_RGBA_ASTC_12x12_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR public="1" expr="0x93D0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D0</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR public="1" expr="0x93D1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D1</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR public="1" expr="0x93D2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D2</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR public="1" expr="0x93D3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D3</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR public="1" expr="0x93D4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D4</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR public="1" expr="0x93D5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D5</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR public="1" expr="0x93D6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D6</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR public="1" expr="0x93D7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D7</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR public="1" expr="0x93D8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D8</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR public="1" expr="0x93D9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93D9</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR public="1" expr="0x93DA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93DA</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR public="1" expr="0x93DB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93DB</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR public="1" expr="0x93DC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93DC</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR>
		<COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR public="1" expr="0x93DD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x93DD</e></m></meta>
		</COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR>
		<new set="method" line="35">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NVX_gpu_memory_info" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NVX_gpu_memory_info.hx">
		<GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX public="1" expr="0x9047">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9047</e></m></meta>
		</GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX>
		<GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX public="1" expr="0x9048">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9048</e></m></meta>
		</GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX>
		<GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX public="1" expr="0x9049">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9049</e></m></meta>
		</GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX>
		<GPU_MEMORY_INFO_EVICTION_COUNT_NVX public="1" expr="0x904A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x904A</e></m></meta>
		</GPU_MEMORY_INFO_EVICTION_COUNT_NVX>
		<GPU_MEMORY_INFO_EVICTED_MEMORY_NVX public="1" expr="0x904B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x904B</e></m></meta>
		</GPU_MEMORY_INFO_EVICTED_MEMORY_NVX>
		<new set="method" line="12">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_coverage_sample" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_coverage_sample.hx">
		<COVERAGE_COMPONENT_NV public="1" expr="0x8ED0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED0</e></m></meta>
		</COVERAGE_COMPONENT_NV>
		<COVERAGE_COMPONENT4_NV public="1" expr="0x8ED1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED1</e></m></meta>
		</COVERAGE_COMPONENT4_NV>
		<COVERAGE_ATTACHMENT_NV public="1" expr="0x8ED2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED2</e></m></meta>
		</COVERAGE_ATTACHMENT_NV>
		<COVERAGE_BUFFERS_NV public="1" expr="0x8ED3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED3</e></m></meta>
		</COVERAGE_BUFFERS_NV>
		<COVERAGE_SAMPLES_NV public="1" expr="0x8ED4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED4</e></m></meta>
		</COVERAGE_SAMPLES_NV>
		<COVERAGE_ALL_FRAGMENTS_NV public="1" expr="0x8ED5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED5</e></m></meta>
		</COVERAGE_ALL_FRAGMENTS_NV>
		<COVERAGE_EDGE_FRAGMENTS_NV public="1" expr="0x8ED6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED6</e></m></meta>
		</COVERAGE_EDGE_FRAGMENTS_NV>
		<COVERAGE_AUTOMATIC_NV public="1" expr="0x8ED7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8ED7</e></m></meta>
		</COVERAGE_AUTOMATIC_NV>
		<COVERAGE_BUFFER_BIT_NV public="1" expr="0x8000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8000</e></m></meta>
		</COVERAGE_BUFFER_BIT_NV>
		<new set="method" line="16">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_depth_nonlinear" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_depth_nonlinear.hx">
		<DEPTH_COMPONENT16_NONLINEAR_NV public="1" expr="0x8E2C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E2C</e></m></meta>
		</DEPTH_COMPONENT16_NONLINEAR_NV>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_draw_buffers" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_draw_buffers.hx">
		<MAX_DRAW_BUFFERS_NV public="1" expr="0x8824">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8824</e></m></meta>
		</MAX_DRAW_BUFFERS_NV>
		<DRAW_BUFFER0_NV public="1" expr="0x8825">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8825</e></m></meta>
		</DRAW_BUFFER0_NV>
		<DRAW_BUFFER1_NV public="1" expr="0x8826">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8826</e></m></meta>
		</DRAW_BUFFER1_NV>
		<DRAW_BUFFER2_NV public="1" expr="0x8827">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8827</e></m></meta>
		</DRAW_BUFFER2_NV>
		<DRAW_BUFFER3_NV public="1" expr="0x8828">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8828</e></m></meta>
		</DRAW_BUFFER3_NV>
		<DRAW_BUFFER4_NV public="1" expr="0x8829">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8829</e></m></meta>
		</DRAW_BUFFER4_NV>
		<DRAW_BUFFER5_NV public="1" expr="0x882A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882A</e></m></meta>
		</DRAW_BUFFER5_NV>
		<DRAW_BUFFER6_NV public="1" expr="0x882B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882B</e></m></meta>
		</DRAW_BUFFER6_NV>
		<DRAW_BUFFER7_NV public="1" expr="0x882C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882C</e></m></meta>
		</DRAW_BUFFER7_NV>
		<DRAW_BUFFER8_NV public="1" expr="0x882D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882D</e></m></meta>
		</DRAW_BUFFER8_NV>
		<DRAW_BUFFER9_NV public="1" expr="0x882E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882E</e></m></meta>
		</DRAW_BUFFER9_NV>
		<DRAW_BUFFER10_NV public="1" expr="0x882F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882F</e></m></meta>
		</DRAW_BUFFER10_NV>
		<DRAW_BUFFER11_NV public="1" expr="0x8830">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8830</e></m></meta>
		</DRAW_BUFFER11_NV>
		<DRAW_BUFFER12_NV public="1" expr="0x8831">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8831</e></m></meta>
		</DRAW_BUFFER12_NV>
		<DRAW_BUFFER13_NV public="1" expr="0x8832">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8832</e></m></meta>
		</DRAW_BUFFER13_NV>
		<DRAW_BUFFER14_NV public="1" expr="0x8833">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8833</e></m></meta>
		</DRAW_BUFFER14_NV>
		<DRAW_BUFFER15_NV public="1" expr="0x8834">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8834</e></m></meta>
		</DRAW_BUFFER15_NV>
		<COLOR_ATTACHMENT0_NV public="1" expr="0x8CE0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0_NV>
		<COLOR_ATTACHMENT1_NV public="1" expr="0x8CE1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1_NV>
		<COLOR_ATTACHMENT2_NV public="1" expr="0x8CE2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2_NV>
		<COLOR_ATTACHMENT3_NV public="1" expr="0x8CE3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3_NV>
		<COLOR_ATTACHMENT4_NV public="1" expr="0x8CE4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4_NV>
		<COLOR_ATTACHMENT5_NV public="1" expr="0x8CE5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5_NV>
		<COLOR_ATTACHMENT6_NV public="1" expr="0x8CE6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6_NV>
		<COLOR_ATTACHMENT7_NV public="1" expr="0x8CE7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7_NV>
		<COLOR_ATTACHMENT8_NV public="1" expr="0x8CE8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8_NV>
		<COLOR_ATTACHMENT9_NV public="1" expr="0x8CE9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9_NV>
		<COLOR_ATTACHMENT10_NV public="1" expr="0x8CEA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10_NV>
		<COLOR_ATTACHMENT11_NV public="1" expr="0x8CEB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11_NV>
		<COLOR_ATTACHMENT12_NV public="1" expr="0x8CEC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12_NV>
		<COLOR_ATTACHMENT13_NV public="1" expr="0x8CED">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13_NV>
		<COLOR_ATTACHMENT14_NV public="1" expr="0x8CEE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14_NV>
		<COLOR_ATTACHMENT15_NV public="1" expr="0x8CEF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15_NV>
		<new set="method" line="40">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_fbo_color_attachments" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_fbo_color_attachments.hx">
		<MAX_COLOR_ATTACHMENTS_NV public="1" expr="0x8CDF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDF</e></m></meta>
		</MAX_COLOR_ATTACHMENTS_NV>
		<COLOR_ATTACHMENT0_NV public="1" expr="0x8CE0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0_NV>
		<COLOR_ATTACHMENT1_NV public="1" expr="0x8CE1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1_NV>
		<COLOR_ATTACHMENT2_NV public="1" expr="0x8CE2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2_NV>
		<COLOR_ATTACHMENT3_NV public="1" expr="0x8CE3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3_NV>
		<COLOR_ATTACHMENT4_NV public="1" expr="0x8CE4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4_NV>
		<COLOR_ATTACHMENT5_NV public="1" expr="0x8CE5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5_NV>
		<COLOR_ATTACHMENT6_NV public="1" expr="0x8CE6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6_NV>
		<COLOR_ATTACHMENT7_NV public="1" expr="0x8CE7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7_NV>
		<COLOR_ATTACHMENT8_NV public="1" expr="0x8CE8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8_NV>
		<COLOR_ATTACHMENT9_NV public="1" expr="0x8CE9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9_NV>
		<COLOR_ATTACHMENT10_NV public="1" expr="0x8CEA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10_NV>
		<COLOR_ATTACHMENT11_NV public="1" expr="0x8CEB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11_NV>
		<COLOR_ATTACHMENT12_NV public="1" expr="0x8CEC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12_NV>
		<COLOR_ATTACHMENT13_NV public="1" expr="0x8CED">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13_NV>
		<COLOR_ATTACHMENT14_NV public="1" expr="0x8CEE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14_NV>
		<COLOR_ATTACHMENT15_NV public="1" expr="0x8CEF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15_NV>
		<new set="method" line="24">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_fence" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_fence.hx">
		<ALL_COMPLETED_NV public="1" expr="0x84F2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F2</e></m></meta>
		</ALL_COMPLETED_NV>
		<FENCE_STATUS_NV public="1" expr="0x84F3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F3</e></m></meta>
		</FENCE_STATUS_NV>
		<FENCE_CONDITION_NV public="1" expr="0x84F4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F4</e></m></meta>
		</FENCE_CONDITION_NV>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_read_buffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_read_buffer.hx">
		<READ_BUFFER_NV public="1" expr="0x0C02">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER_NV>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_read_buffer_front" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_read_buffer_front.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_read_depth" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_read_depth.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_read_depth_stencil" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_read_depth_stencil.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_read_stencil" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_read_stencil.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_texture_compression_s3tc_update" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_texture_compression_s3tc_update.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.NV_texture_npot_2D_mipmap" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/NV_texture_npot_2D_mipmap.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_EGL_image" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_EGL_image.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_EGL_image_external" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_EGL_image_external.hx">
		<TEXTURE_EXTERNAL_OES public="1" expr="0x8D65">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D65</e></m></meta>
		</TEXTURE_EXTERNAL_OES>
		<SAMPLER_EXTERNAL_OES public="1" expr="0x8D66">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D66</e></m></meta>
		</SAMPLER_EXTERNAL_OES>
		<TEXTURE_BINDING_EXTERNAL_OES public="1" expr="0x8D67">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D67</e></m></meta>
		</TEXTURE_BINDING_EXTERNAL_OES>
		<REQUIRED_TEXTURE_IMAGE_UNITS_OES public="1" expr="0x8D68">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D68</e></m></meta>
		</REQUIRED_TEXTURE_IMAGE_UNITS_OES>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_compressed_ETC1_RGB8_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_compressed_ETC1_RGB8_texture.hx">
		<ETC1_RGB8_OES public="1" expr="0x8D64">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D64</e></m></meta>
		</ETC1_RGB8_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_compressed_paletted_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_compressed_paletted_texture.hx">
		<PALETTE4_RGB8_OES public="1" expr="0x8B90">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B90</e></m></meta>
		</PALETTE4_RGB8_OES>
		<PALETTE4_RGBA8_OES public="1" expr="0x8B91">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B91</e></m></meta>
		</PALETTE4_RGBA8_OES>
		<PALETTE4_R5_G6_B5_OES public="1" expr="0x8B92">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B92</e></m></meta>
		</PALETTE4_R5_G6_B5_OES>
		<PALETTE4_RGBA4_OES public="1" expr="0x8B93">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B93</e></m></meta>
		</PALETTE4_RGBA4_OES>
		<PALETTE4_RGB5_A1_OES public="1" expr="0x8B94">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B94</e></m></meta>
		</PALETTE4_RGB5_A1_OES>
		<PALETTE8_RGB8_OES public="1" expr="0x8B95">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B95</e></m></meta>
		</PALETTE8_RGB8_OES>
		<PALETTE8_RGBA8_OES public="1" expr="0x8B96">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B96</e></m></meta>
		</PALETTE8_RGBA8_OES>
		<PALETTE8_R5_G6_B5_OES public="1" expr="0x8B97">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B97</e></m></meta>
		</PALETTE8_R5_G6_B5_OES>
		<PALETTE8_RGBA4_OES public="1" expr="0x8B98">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B98</e></m></meta>
		</PALETTE8_RGBA4_OES>
		<PALETTE8_RGB5_A1_OES public="1" expr="0x8B99">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B99</e></m></meta>
		</PALETTE8_RGB5_A1_OES>
		<new set="method" line="17">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_depth24" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_depth24.hx">
		<DEPTH_COMPONENT24_OES public="1" expr="0x81A6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_depth32" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_depth32.hx">
		<DEPTH_COMPONENT32_OES public="1" expr="0x81A7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A7</e></m></meta>
		</DEPTH_COMPONENT32_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_depth_texture" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_depth_texture.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_element_index_uint" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_element_index_uint.hx">
		<UNSIGNED_INT public="1" expr="0x1405">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_get_program_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_get_program_binary.hx">
		<PROGRAM_BINARY_LENGTH_OES public="1" expr="0x8741">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8741</e></m></meta>
		</PROGRAM_BINARY_LENGTH_OES>
		<NUM_PROGRAM_BINARY_FORMATS_OES public="1" expr="0x87FE">
			<x path="Int"/>
			<meta><m n=":value"><e>0x87FE</e></m></meta>
		</NUM_PROGRAM_BINARY_FORMATS_OES>
		<PROGRAM_BINARY_FORMATS_OES public="1" expr="0x87FF">
			<x path="Int"/>
			<meta><m n=":value"><e>0x87FF</e></m></meta>
		</PROGRAM_BINARY_FORMATS_OES>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_mapbuffer" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_mapbuffer.hx">
		<WRITE_ONLY_OES public="1" expr="0x88B9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88B9</e></m></meta>
		</WRITE_ONLY_OES>
		<BUFFER_ACCESS_OES public="1" expr="0x88BB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88BB</e></m></meta>
		</BUFFER_ACCESS_OES>
		<BUFFER_MAPPED_OES public="1" expr="0x88BC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88BC</e></m></meta>
		</BUFFER_MAPPED_OES>
		<BUFFER_MAP_POINTER_OES public="1" expr="0x88BD">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88BD</e></m></meta>
		</BUFFER_MAP_POINTER_OES>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_packed_depth_stencil" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_packed_depth_stencil.hx">
		<DEPTH_STENCIL_OES public="1" expr="0x84F9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL_OES>
		<UNSIGNED_INT_24_8_OES public="1" expr="0x84FA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8_OES>
		<DEPTH24_STENCIL8_OES public="1" expr="0x88F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8_OES>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_required_internalformat" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_required_internalformat.hx">
		<ALPHA8_OES public="1" expr="0x803C">
			<x path="Int"/>
			<meta><m n=":value"><e>0x803C</e></m></meta>
		</ALPHA8_OES>
		<DEPTH_COMPONENT16_OES public="1" expr="0x81A5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16_OES>
		<DEPTH_COMPONENT24_OES public="1" expr="0x81A6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24_OES>
		<DEPTH24_STENCIL8_OES public="1" expr="0x88F0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8_OES>
		<DEPTH_COMPONENT32_OES public="1" expr="0x81A7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A7</e></m></meta>
		</DEPTH_COMPONENT32_OES>
		<LUMINANCE4_ALPHA4_OES public="1" expr="0x8043">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8043</e></m></meta>
		</LUMINANCE4_ALPHA4_OES>
		<LUMINANCE8_ALPHA8_OES public="1" expr="0x8045">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8045</e></m></meta>
		</LUMINANCE8_ALPHA8_OES>
		<LUMINANCE8_OES public="1" expr="0x8040">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8040</e></m></meta>
		</LUMINANCE8_OES>
		<RGBA4_OES public="1" expr="0x8056">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4_OES>
		<RGB5_A1_OES public="1" expr="0x8057">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1_OES>
		<RGB565_OES public="1" expr="0x8D62">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565_OES>
		<RGB8_OES public="1" expr="0x8051">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8_OES>
		<RGBA8_OES public="1" expr="0x8058">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8_OES>
		<RGB10_EXT public="1" expr="0x8052">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8052</e></m></meta>
		</RGB10_EXT>
		<RGB10_A2_EXT public="1" expr="0x8059">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2_EXT>
		<new set="method" line="22">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_rgb8_rgba8" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_rgb8_rgba8.hx">
		<RGB8_OES public="1" expr="0x8051">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8_OES>
		<RGBA8_OES public="1" expr="0x8058">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8_OES>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_standard_derivatives" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_standard_derivatives.hx">
		<FRAGMENT_SHADER_DERIVATIVE_HINT_OES public="1" expr="0x8B8B">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8B</e></m></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT_OES>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_stencil1" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_stencil1.hx">
		<STENCIL_INDEX1_OES public="1" expr="0x8D46">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D46</e></m></meta>
		</STENCIL_INDEX1_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_stencil4" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_stencil4.hx">
		<STENCIL_INDEX4_OES public="1" expr="0x8D47">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D47</e></m></meta>
		</STENCIL_INDEX4_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_surfaceless_context" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_surfaceless_context.hx">
		<FRAMEBUFFER_UNDEFINED_OES public="1" expr="0x8219">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8219</e></m></meta>
		</FRAMEBUFFER_UNDEFINED_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_3D" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_3D.hx">
		<TEXTURE_WRAP_R_OES public="1" expr="0x8072">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8072</e></m></meta>
		</TEXTURE_WRAP_R_OES>
		<TEXTURE_3D_OES public="1" expr="0x806F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806F</e></m></meta>
		</TEXTURE_3D_OES>
		<TEXTURE_BINDING_3D_OES public="1" expr="0x806A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806A</e></m></meta>
		</TEXTURE_BINDING_3D_OES>
		<MAX_3D_TEXTURE_SIZE_OES public="1" expr="0x8073">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8073</e></m></meta>
		</MAX_3D_TEXTURE_SIZE_OES>
		<SAMPLER_3D_OES public="1" expr="0x8B5F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5F</e></m></meta>
		</SAMPLER_3D_OES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES public="1" expr="0x8CD4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD4</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES>
		<new set="method" line="13">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_float" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_float.hx">
		<new set="method" line="6">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_float_linear" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_float_linear.hx">
		<new set="method" line="6">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_half_float" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_half_float.hx">
		<HALF_FLOAT_OES public="1" expr="0x8D61">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D61</e></m></meta>
		</HALF_FLOAT_OES>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_half_float_linear" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_half_float_linear.hx">
		<new set="method" line="6">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_texture_npot" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_texture_npot.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_vertex_array_object" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_vertex_array_object.hx">
		<VERTEX_ARRAY_BINDING_OES public="1" expr="0x85B5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85B5</e></m></meta>
		</VERTEX_ARRAY_BINDING_OES>
		<createVertexArrayOES public="1" set="method" line="11"><f a=""><d/></f></createVertexArrayOES>
		<deleteVertexArrayOES public="1" set="method" line="16"><f a="arrayObject">
	<d/>
	<x path="Void"/>
</f></deleteVertexArrayOES>
		<isVertexArrayOES public="1" set="method" line="18"><f a="arrayObject">
	<d/>
	<x path="Bool"/>
</f></isVertexArrayOES>
		<bindVertexArrayOES public="1" set="method" line="23"><f a="arrayObject">
	<d/>
	<x path="Void"/>
</f></bindVertexArrayOES>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_vertex_half_float" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_vertex_half_float.hx">
		<HALF_FLOAT_OES public="1" expr="0x8D61">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D61</e></m></meta>
		</HALF_FLOAT_OES>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.OES_vertex_type_10_10_10_2" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/OES_vertex_type_10_10_10_2.hx">
		<UNSIGNED_INT_10_10_10_2_OES public="1" expr="0x8DF6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF6</e></m></meta>
		</UNSIGNED_INT_10_10_10_2_OES>
		<INT_10_10_10_2_OES public="1" expr="0x8DF7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF7</e></m></meta>
		</INT_10_10_10_2_OES>
		<new set="method" line="9">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_alpha_test" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_alpha_test.hx">
		<ALPHA_TEST_QCOM public="1" expr="0x0BC0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BC0</e></m></meta>
		</ALPHA_TEST_QCOM>
		<ALPHA_TEST_FUNC_QCOM public="1" expr="0x0BC1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BC1</e></m></meta>
		</ALPHA_TEST_FUNC_QCOM>
		<ALPHA_TEST_REF_QCOM public="1" expr="0x0BC2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BC2</e></m></meta>
		</ALPHA_TEST_REF_QCOM>
		<new set="method" line="10">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_binning_control" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_binning_control.hx">
		<BINNING_CONTROL_HINT_QCOM public="1" expr="0x8FB0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FB0</e></m></meta>
		</BINNING_CONTROL_HINT_QCOM>
		<CPU_OPTIMIZED_QCOM public="1" expr="0x8FB1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FB1</e></m></meta>
		</CPU_OPTIMIZED_QCOM>
		<GPU_OPTIMIZED_QCOM public="1" expr="0x8FB2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FB2</e></m></meta>
		</GPU_OPTIMIZED_QCOM>
		<RENDER_DIRECT_TO_FRAMEBUFFER_QCOM public="1" expr="0x8FB3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FB3</e></m></meta>
		</RENDER_DIRECT_TO_FRAMEBUFFER_QCOM>
		<new set="method" line="11">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_driver_control" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_driver_control.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_extended_get" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_extended_get.hx">
		<TEXTURE_WIDTH_QCOM public="1" expr="0x8BD2">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD2</e></m></meta>
		</TEXTURE_WIDTH_QCOM>
		<TEXTURE_HEIGHT_QCOM public="1" expr="0x8BD3">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD3</e></m></meta>
		</TEXTURE_HEIGHT_QCOM>
		<TEXTURE_DEPTH_QCOM public="1" expr="0x8BD4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD4</e></m></meta>
		</TEXTURE_DEPTH_QCOM>
		<TEXTURE_INTERNAL_FORMAT_QCOM public="1" expr="0x8BD5">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD5</e></m></meta>
		</TEXTURE_INTERNAL_FORMAT_QCOM>
		<TEXTURE_FORMAT_QCOM public="1" expr="0x8BD6">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD6</e></m></meta>
		</TEXTURE_FORMAT_QCOM>
		<TEXTURE_TYPE_QCOM public="1" expr="0x8BD7">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD7</e></m></meta>
		</TEXTURE_TYPE_QCOM>
		<TEXTURE_IMAGE_VALID_QCOM public="1" expr="0x8BD8">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD8</e></m></meta>
		</TEXTURE_IMAGE_VALID_QCOM>
		<TEXTURE_NUM_LEVELS_QCOM public="1" expr="0x8BD9">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BD9</e></m></meta>
		</TEXTURE_NUM_LEVELS_QCOM>
		<TEXTURE_TARGET_QCOM public="1" expr="0x8BDA">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BDA</e></m></meta>
		</TEXTURE_TARGET_QCOM>
		<TEXTURE_OBJECT_VALID_QCOM public="1" expr="0x8BDB">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BDB</e></m></meta>
		</TEXTURE_OBJECT_VALID_QCOM>
		<STATE_RESTORE public="1" expr="0x8BDC">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8BDC</e></m></meta>
		</STATE_RESTORE>
		<new set="method" line="18">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_extended_get2" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_extended_get2.hx">
		<new set="method" line="5">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_perfmon_global_mode" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_perfmon_global_mode.hx">
		<PERFMON_GLOBAL_MODE_QCOM public="1" expr="0x8FA0">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FA0</e></m></meta>
		</PERFMON_GLOBAL_MODE_QCOM>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_tiled_rendering" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_tiled_rendering.hx">
		<COLOR_BUFFER_BIT0_QCOM public="1" expr="0x00000001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</COLOR_BUFFER_BIT0_QCOM>
		<COLOR_BUFFER_BIT1_QCOM public="1" expr="0x00000002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000002</e></m></meta>
		</COLOR_BUFFER_BIT1_QCOM>
		<COLOR_BUFFER_BIT2_QCOM public="1" expr="0x00000004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000004</e></m></meta>
		</COLOR_BUFFER_BIT2_QCOM>
		<COLOR_BUFFER_BIT3_QCOM public="1" expr="0x00000008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000008</e></m></meta>
		</COLOR_BUFFER_BIT3_QCOM>
		<COLOR_BUFFER_BIT4_QCOM public="1" expr="0x00000010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000010</e></m></meta>
		</COLOR_BUFFER_BIT4_QCOM>
		<COLOR_BUFFER_BIT5_QCOM public="1" expr="0x00000020">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000020</e></m></meta>
		</COLOR_BUFFER_BIT5_QCOM>
		<COLOR_BUFFER_BIT6_QCOM public="1" expr="0x00000040">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000040</e></m></meta>
		</COLOR_BUFFER_BIT6_QCOM>
		<COLOR_BUFFER_BIT7_QCOM public="1" expr="0x00000080">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000080</e></m></meta>
		</COLOR_BUFFER_BIT7_QCOM>
		<DEPTH_BUFFER_BIT0_QCOM public="1" expr="0x00000100">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT0_QCOM>
		<DEPTH_BUFFER_BIT1_QCOM public="1" expr="0x00000200">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000200</e></m></meta>
		</DEPTH_BUFFER_BIT1_QCOM>
		<DEPTH_BUFFER_BIT2_QCOM public="1" expr="0x00000400">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</DEPTH_BUFFER_BIT2_QCOM>
		<DEPTH_BUFFER_BIT3_QCOM public="1" expr="0x00000800">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000800</e></m></meta>
		</DEPTH_BUFFER_BIT3_QCOM>
		<DEPTH_BUFFER_BIT4_QCOM public="1" expr="0x00001000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00001000</e></m></meta>
		</DEPTH_BUFFER_BIT4_QCOM>
		<DEPTH_BUFFER_BIT5_QCOM public="1" expr="0x00002000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00002000</e></m></meta>
		</DEPTH_BUFFER_BIT5_QCOM>
		<DEPTH_BUFFER_BIT6_QCOM public="1" expr="0x00004000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</DEPTH_BUFFER_BIT6_QCOM>
		<DEPTH_BUFFER_BIT7_QCOM public="1" expr="0x00008000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00008000</e></m></meta>
		</DEPTH_BUFFER_BIT7_QCOM>
		<STENCIL_BUFFER_BIT0_QCOM public="1" expr="0x00010000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00010000</e></m></meta>
		</STENCIL_BUFFER_BIT0_QCOM>
		<STENCIL_BUFFER_BIT1_QCOM public="1" expr="0x00020000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00020000</e></m></meta>
		</STENCIL_BUFFER_BIT1_QCOM>
		<STENCIL_BUFFER_BIT2_QCOM public="1" expr="0x00040000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00040000</e></m></meta>
		</STENCIL_BUFFER_BIT2_QCOM>
		<STENCIL_BUFFER_BIT3_QCOM public="1" expr="0x00080000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00080000</e></m></meta>
		</STENCIL_BUFFER_BIT3_QCOM>
		<STENCIL_BUFFER_BIT4_QCOM public="1" expr="0x00100000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00100000</e></m></meta>
		</STENCIL_BUFFER_BIT4_QCOM>
		<STENCIL_BUFFER_BIT5_QCOM public="1" expr="0x00200000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00200000</e></m></meta>
		</STENCIL_BUFFER_BIT5_QCOM>
		<STENCIL_BUFFER_BIT6_QCOM public="1" expr="0x00400000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00400000</e></m></meta>
		</STENCIL_BUFFER_BIT6_QCOM>
		<STENCIL_BUFFER_BIT7_QCOM public="1" expr="0x00800000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00800000</e></m></meta>
		</STENCIL_BUFFER_BIT7_QCOM>
		<MULTISAMPLE_BUFFER_BIT0_QCOM public="1" expr="0x01000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x01000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT0_QCOM>
		<MULTISAMPLE_BUFFER_BIT1_QCOM public="1" expr="0x02000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x02000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT1_QCOM>
		<MULTISAMPLE_BUFFER_BIT2_QCOM public="1" expr="0x04000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x04000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT2_QCOM>
		<MULTISAMPLE_BUFFER_BIT3_QCOM public="1" expr="0x08000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x08000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT3_QCOM>
		<MULTISAMPLE_BUFFER_BIT4_QCOM public="1" expr="0x10000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x10000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT4_QCOM>
		<MULTISAMPLE_BUFFER_BIT5_QCOM public="1" expr="0x20000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT5_QCOM>
		<MULTISAMPLE_BUFFER_BIT6_QCOM public="1" expr="0x40000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x40000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT6_QCOM>
		<MULTISAMPLE_BUFFER_BIT7_QCOM public="1" expr="0x80000000">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80000000</e></m></meta>
		</MULTISAMPLE_BUFFER_BIT7_QCOM>
		<new set="method" line="39">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.QCOM_writeonly_rendering" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/QCOM_writeonly_rendering.hx">
		<WRITEONLY_RENDERING_QCOM public="1" expr="0x8823">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8823</e></m></meta>
		</WRITEONLY_RENDERING_QCOM>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<class path="lime.graphics.opengl.ext.VIV_shader_binary" params="" file="/projects/May2019/May2020/lime/src/lime/graphics/opengl/ext/VIV_shader_binary.hx">
		<SHADER_BINARY_VIV public="1" expr="0x8FC4">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8FC4</e></m></meta>
		</SHADER_BINARY_VIV>
		<new set="method" line="8">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":keep"/>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<abstract path="lime.math.ARGB" params="" file="/projects/May2019/May2020/lime/src/lime/math/ARGB.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.BGRA"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.RGBA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in an ARGB
	(alpha, red, green, blue) color format.

	```haxe
	var color:ARGB = 0xFF883300;
	trace (color.a); // 0xFF
	trace (color.r); // 0x88
	trace (color.g); // 0x33
	trace (color.b); // 0x00

	var convert:BGRA = color; // 0x003388FF
	```</haxe_doc>
		<impl><class path="lime.math._ARGB.ARGB_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/ARGB.hx" private="1" module="lime.math.ARGB" final="1">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="50" static="1">
		<f a="?argb" v="0">
			<x path="Int"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta>
			<m n=":value"><e>{ argb : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new ARGB instance
		@param	argb	(Optional) An ARGB color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="63" static="1">
		<f a="a:r:g:b">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.ARGB"/>
		</f>
		<haxe_doc>Creates a new ARGB instance from component values
		@param	a	An alpha component value
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@return	A new ARGB instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="73" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="93" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `ARGB` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:a:r:g:b">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `ARGB` color to new component values
		@param	a	The alpha component value to set
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="128" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="144" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `ARGB` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromBGRA get="inline" set="null" line="173" static="1">
		<f a="bgra">
			<x path="lime.math.BGRA"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<__fromRGBA get="inline" set="null" line="178" static="1">
		<f a="rgba">
			<x path="lime.math.RGBA"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="184" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="189" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="195" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="200" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="206" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="211" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="217" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="222" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
</class></impl>
	</abstract>
	<class path="lime.math._ARGB.ARGB_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/ARGB.hx" private="1" module="lime.math.ARGB" final="1">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="50" static="1">
			<f a="?argb" v="0">
				<x path="Int"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta>
				<m n=":value"><e>{ argb : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new ARGB instance
		@param	argb	(Optional) An ARGB color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="63" static="1">
			<f a="a:r:g:b">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.ARGB"/>
			</f>
			<haxe_doc>Creates a new ARGB instance from component values
		@param	a	An alpha component value
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@return	A new ARGB instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="73" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="93" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `ARGB` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:a:r:g:b">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `ARGB` color to new component values
		@param	a	The alpha component value to set
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="128" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="144" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `ARGB` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromBGRA get="inline" set="null" line="173" static="1">
			<f a="bgra">
				<x path="lime.math.BGRA"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<__fromRGBA get="inline" set="null" line="178" static="1">
			<f a="rgba">
				<x path="lime.math.RGBA"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="184" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="189" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="195" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="200" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="206" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="211" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="217" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="222" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
	</class>
	<abstract path="lime.math.BGRA" params="" file="/projects/May2019/May2020/lime/src/lime/math/BGRA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.ARGB"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.RGBA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in a BGRA
	(blue, green, red, alpha) color format.

	```haxe
	var color:BGRA = 0x003388FF;
	trace (color.b); // 0x00
	trace (color.g); // 0x33
	trace (color.r); // 0x88
	trace (color.a); // 0xFF

	var convert:ARGB = color; // 0xFF883300
	```</haxe_doc>
		<impl><class path="lime.math._BGRA.BGRA_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/BGRA.hx" private="1" module="lime.math.BGRA" final="1">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="50" static="1">
		<f a="?bgra" v="0">
			<x path="Int"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta>
			<m n=":value"><e>{ bgra : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new BGRA instance
		@param	bgra	(Optional) A BGRA color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="63" static="1">
		<f a="b:g:r:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.BGRA"/>
		</f>
		<haxe_doc>Creates a new BGRA instance from component values
		@param	b	A blue component value
		@param	g	A green component value
		@param	r	A red component value
		@param	a	An alpha component value
		@return	A new BGRA instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="73" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="93" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `BGRA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:b:g:r:a">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `BGRA` color to new component values
		@param	b	The blue component vlaue to set
		@param	g	The green component value to set
		@param	r	The red component value to set
		@param	a	The alpha component value to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="128" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="144" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `BGRA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="173" static="1">
		<f a="argb">
			<x path="lime.math.ARGB"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromRGBA get="inline" set="null" line="178" static="1">
		<f a="rgba">
			<x path="lime.math.RGBA"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="184" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="189" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="195" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="200" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="206" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="211" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="217" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="222" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
</class></impl>
	</abstract>
	<class path="lime.math._BGRA.BGRA_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/BGRA.hx" private="1" module="lime.math.BGRA" final="1">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="50" static="1">
			<f a="?bgra" v="0">
				<x path="Int"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta>
				<m n=":value"><e>{ bgra : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new BGRA instance
		@param	bgra	(Optional) A BGRA color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="63" static="1">
			<f a="b:g:r:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.BGRA"/>
			</f>
			<haxe_doc>Creates a new BGRA instance from component values
		@param	b	A blue component value
		@param	g	A green component value
		@param	r	A red component value
		@param	a	An alpha component value
		@return	A new BGRA instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="73" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="93" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `BGRA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:b:g:r:a">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `BGRA` color to new component values
		@param	b	The blue component vlaue to set
		@param	g	The green component value to set
		@param	r	The red component value to set
		@param	a	The alpha component value to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="128" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="144" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `BGRA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="173" static="1">
			<f a="argb">
				<x path="lime.math.ARGB"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromRGBA get="inline" set="null" line="178" static="1">
			<f a="rgba">
				<x path="lime.math.RGBA"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="184" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="189" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="195" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="200" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="206" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="211" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="217" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="222" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
	</class>
	<abstract path="lime.math.ColorMatrix" params="" file="/projects/May2019/May2020/lime/src/lime/math/ColorMatrix.hx">
		<from><icast><x path="lime.utils.Float32Array"/></icast></from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<haxe_doc>`ColorMatrix` is a 4x5 matrix containing color multiplication
	and offset values for tinting and other kinds of color
	manipulation. In addition to using the multiplier, offset and
	`color` properties, it can be edited directly as a `Float32Array`</haxe_doc>
		<impl><class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix" final="1">
	<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
	<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
	<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="20" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
	</__identity>
	<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
	<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current alpha multiplication value (default is 1.0)</haxe_doc>
	</alphaMultiplier>
	<alphaOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current alpha offset value (default is 0)</haxe_doc>
	</alphaOffset>
	<blueMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current blue multiplication value (default is 1.0)</haxe_doc>
	</blueMultiplier>
	<blueOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current blue offset value (default is 0)</haxe_doc>
	</blueOffset>
	<color public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets or sets a color offset for tinting.

		This will change the red, green and blue multipliers
		to zero, and affect the red, green and blue offset
		values.</haxe_doc>
	</color>
	<greenMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current green multiplication value (default is 1.0)</haxe_doc>
	</greenMultiplier>
	<greenOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current green offset value (default is 0)</haxe_doc>
	</greenOffset>
	<redMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current red multiplication value (default is 1.0)</haxe_doc>
	</redMultiplier>
	<redOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current red offset value (default is 0)</haxe_doc>
	</redOffset>
	<_new public="1" set="method" line="78" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new `ColorMatrix` instance
		@param	data	(Optional) Initial `Float32Array` data to use</haxe_doc>
	</_new>
	<clone public="1" set="method" line="94" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Creates a duplicate of the current `ColorMatrix` instance
		@return	A new `ColorMatrix` instance</haxe_doc>
	</clone>
	<concat public="1" set="method" line="103" static="1">
		<f a="this:second">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Adds the color multipliers from a second `ColorMatrix` to the current one
		@param	second	The `ColorMatrix` to `concat` to the current one</haxe_doc>
	</concat>
	<copyFrom public="1" set="method" line="115" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `ColorMatrix` values to the same as another one
		@param	other	The `ColorMatrix` to copy from</haxe_doc>
	</copyFrom>
	<identity public="1" set="method" line="123" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Resets to default values</haxe_doc>
	</identity>
	<getAlphaTable public="1" set="method" line="167" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		alpha values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `alphaMultipler` and `alphaOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.alphaOffset = 12;

		var alphaTable = colorMatrix.getAlphaTable ();
		trace (alphaTable[0]); // 12
		trace (alphaTable[1]); // 13
		```</haxe_doc>
	</getAlphaTable>
	<getBlueTable public="1" set="method" line="208" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		blue values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `blueMultiplier` and `blueOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.blueOffset = 16;

		var blueTable = colorMatrix.getBlueTable ();
		trace (blueTable[0]); // 16
		trace (blueTable[1]); // 17
		```</haxe_doc>
	</getBlueTable>
	<getGreenTable public="1" set="method" line="248" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		green values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `greenMultiplier` and `greenOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.greenOffset = 16;

		var greenTable = colorMatrix.getGreenTable ();
		trace (greenTable[0]); // 16
		trace (greenTable[1]); // 17
		```</haxe_doc>
	</getGreenTable>
	<getRedTable public="1" set="method" line="288" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		red values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `redMultiplier` and `redOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.redOffset = 16;

		var redTable = colorMatrix.getRedTable ();
		trace (redTable[0]); // 16
		trace (redTable[1]); // 17
		```</haxe_doc>
	</getRedTable>
	<__toFlashColorTransform set="method" line="308" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<d/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__toFlashColorTransform>
	<get_alphaMultiplier get="inline" set="null" line="318" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_alphaMultiplier>
	<set_alphaMultiplier get="inline" set="null" line="323" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_alphaMultiplier>
	<get_alphaOffset get="inline" set="null" line="328" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_alphaOffset>
	<set_alphaOffset get="inline" set="null" line="333" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_alphaOffset>
	<get_blueMultiplier get="inline" set="null" line="338" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_blueMultiplier>
	<set_blueMultiplier get="inline" set="null" line="343" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_blueMultiplier>
	<get_blueOffset get="inline" set="null" line="348" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_blueOffset>
	<set_blueOffset get="inline" set="null" line="353" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_blueOffset>
	<get_color set="method" line="358" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_color>
	<set_color set="method" line="363" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_color>
	<get_greenMultiplier get="inline" set="null" line="376" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_greenMultiplier>
	<set_greenMultiplier get="inline" set="null" line="381" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_greenMultiplier>
	<get_greenOffset get="inline" set="null" line="386" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_greenOffset>
	<set_greenOffset get="inline" set="null" line="391" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_greenOffset>
	<get_redMultiplier get="inline" set="null" line="396" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_redMultiplier>
	<set_redMultiplier get="inline" set="null" line="401" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_redMultiplier>
	<get_redOffset get="inline" set="null" line="406" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_redOffset>
	<set_redOffset get="inline" set="null" line="411" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_redOffset>
	<get public="1" set="method" line="416" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="421" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<meta><m n=":directlyUsed"/></meta>
</class></impl>
	</abstract>
	<class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix" final="1">
		<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
		<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
		<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="20" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
		</__identity>
		<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
		<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current alpha multiplication value (default is 1.0)</haxe_doc>
		</alphaMultiplier>
		<alphaOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current alpha offset value (default is 0)</haxe_doc>
		</alphaOffset>
		<blueMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current blue multiplication value (default is 1.0)</haxe_doc>
		</blueMultiplier>
		<blueOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current blue offset value (default is 0)</haxe_doc>
		</blueOffset>
		<color public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets or sets a color offset for tinting.

		This will change the red, green and blue multipliers
		to zero, and affect the red, green and blue offset
		values.</haxe_doc>
		</color>
		<greenMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current green multiplication value (default is 1.0)</haxe_doc>
		</greenMultiplier>
		<greenOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current green offset value (default is 0)</haxe_doc>
		</greenOffset>
		<redMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current red multiplication value (default is 1.0)</haxe_doc>
		</redMultiplier>
		<redOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current red offset value (default is 0)</haxe_doc>
		</redOffset>
		<_new public="1" set="method" line="78" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new `ColorMatrix` instance
		@param	data	(Optional) Initial `Float32Array` data to use</haxe_doc>
		</_new>
		<clone public="1" set="method" line="94" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Creates a duplicate of the current `ColorMatrix` instance
		@return	A new `ColorMatrix` instance</haxe_doc>
		</clone>
		<concat public="1" set="method" line="103" static="1">
			<f a="this:second">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Adds the color multipliers from a second `ColorMatrix` to the current one
		@param	second	The `ColorMatrix` to `concat` to the current one</haxe_doc>
		</concat>
		<copyFrom public="1" set="method" line="115" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `ColorMatrix` values to the same as another one
		@param	other	The `ColorMatrix` to copy from</haxe_doc>
		</copyFrom>
		<identity public="1" set="method" line="123" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Resets to default values</haxe_doc>
		</identity>
		<getAlphaTable public="1" set="method" line="167" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		alpha values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `alphaMultipler` and `alphaOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.alphaOffset = 12;

		var alphaTable = colorMatrix.getAlphaTable ();
		trace (alphaTable[0]); // 12
		trace (alphaTable[1]); // 13
		```</haxe_doc>
		</getAlphaTable>
		<getBlueTable public="1" set="method" line="208" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		blue values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `blueMultiplier` and `blueOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.blueOffset = 16;

		var blueTable = colorMatrix.getBlueTable ();
		trace (blueTable[0]); // 16
		trace (blueTable[1]); // 17
		```</haxe_doc>
		</getBlueTable>
		<getGreenTable public="1" set="method" line="248" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		green values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `greenMultiplier` and `greenOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.greenOffset = 16;

		var greenTable = colorMatrix.getGreenTable ();
		trace (greenTable[0]); // 16
		trace (greenTable[1]); // 17
		```</haxe_doc>
		</getGreenTable>
		<getRedTable public="1" set="method" line="288" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		red values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `redMultiplier` and `redOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.redOffset = 16;

		var redTable = colorMatrix.getRedTable ();
		trace (redTable[0]); // 16
		trace (redTable[1]); // 17
		```</haxe_doc>
		</getRedTable>
		<__toFlashColorTransform set="method" line="308" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<d/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__toFlashColorTransform>
		<get_alphaMultiplier get="inline" set="null" line="318" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_alphaMultiplier>
		<set_alphaMultiplier get="inline" set="null" line="323" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_alphaMultiplier>
		<get_alphaOffset get="inline" set="null" line="328" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_alphaOffset>
		<set_alphaOffset get="inline" set="null" line="333" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_alphaOffset>
		<get_blueMultiplier get="inline" set="null" line="338" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_blueMultiplier>
		<set_blueMultiplier get="inline" set="null" line="343" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_blueMultiplier>
		<get_blueOffset get="inline" set="null" line="348" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_blueOffset>
		<set_blueOffset get="inline" set="null" line="353" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_blueOffset>
		<get_color set="method" line="358" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_color>
		<set_color set="method" line="363" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_color>
		<get_greenMultiplier get="inline" set="null" line="376" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_greenMultiplier>
		<set_greenMultiplier get="inline" set="null" line="381" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_greenMultiplier>
		<get_greenOffset get="inline" set="null" line="386" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_greenOffset>
		<set_greenOffset get="inline" set="null" line="391" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_greenOffset>
		<get_redMultiplier get="inline" set="null" line="396" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_redMultiplier>
		<set_redMultiplier get="inline" set="null" line="401" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_redMultiplier>
		<get_redOffset get="inline" set="null" line="406" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_redOffset>
		<set_redOffset get="inline" set="null" line="411" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_redOffset>
		<get public="1" set="method" line="416" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="421" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.math.Matrix3" params="" file="/projects/May2019/May2020/lime/src/lime/math/Matrix3.hx">
		<__identity expr="new Matrix3()" line="56" static="1">
			<c path="lime.math.Matrix3"/>
			<meta><m n=":value"><e>new Matrix3()</e></m></meta>
		</__identity>
		<a public="1">
			<x path="Float"/>
			<haxe_doc>The matrix a component, used in scaling and skewing (default is 1)</haxe_doc>
		</a>
		<b public="1">
			<x path="Float"/>
			<haxe_doc>The matrix b component, used in rotation and skewing (default is 0)</haxe_doc>
		</b>
		<c public="1">
			<x path="Float"/>
			<haxe_doc>The matrix c component, used in rotation and skewing (default is 0)</haxe_doc>
		</c>
		<d public="1">
			<x path="Float"/>
			<haxe_doc>The matrix d component, used in scaling and skewing (default is 1)</haxe_doc>
		</d>
		<tx public="1">
			<x path="Float"/>
			<haxe_doc>The matrix tx component, used in translation (default is 0)</haxe_doc>
		</tx>
		<ty public="1">
			<x path="Float"/>
			<haxe_doc>The matrix ty component, used in translation (default is 0)</haxe_doc>
		</ty>
		<clone public="1" get="inline" set="null" line="81">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<haxe_doc>Creates a duplicate of the current `Matrix3`
		@return	A duplicate `Matrix3` instance</haxe_doc>
		</clone>
		<concat public="1" set="method" line="92">
			<f a="m">
				<c path="lime.math.Matrix3"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Concatenates the values of a second matrix to the current
		`Matrix3`, combining the effects of both. This is the same
		as matrix multiplication. The second matrix is not modified.
		@param	m	A second `Matrix3` to concatenate to the current instance</haxe_doc>
		</concat>
		<copyColumnFrom public="1" set="method" line="114">
			<f a="column:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the `x` and `y` components from a `Vector4` instance
		to the `a`/`c`, `b`/`d` or the `tx`/`ty` column of the current
		matrix
		@param	column	The column to copy into (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="143">
			<f a="column:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies a column of the current matrix into a `Vector4`
		instance. The `w` value will not be modified.
		@param	column	The column to copy from (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy to</haxe_doc>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="174">
			<f a="sourceMatrix3">
				<c path="lime.math.Matrix3"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the values of another `Matrix3` and
		applies it to the current instance
		@param	sourceMatrix3	The `Matrix3` to copy from</haxe_doc>
		</copyFrom>
		<copyRowFrom public="1" set="method" line="190">
			<f a="row:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the values of a `Vector4` instance into a row
		of the current matrix
		@param	row	The row to copy into (0 or 1)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyRowFrom>
		<copyRowTo public="1" set="method" line="216">
			<f a="row:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies a row of the current matrix into a `Vector4`
		instance. The `w` value will not be modified.
		@param	row	The row to copy into (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyRowTo>
		<createBox public="1" set="method" line="251">
			<f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>Applies a two-dimensional transformation to the current matrix.

		This is the same as calling `identity()`, `rotate()`, `scale()`
		then `translate()` with these values.
		@param	scaleX	An x scale transformation value
		@param	scaleY	A y scale transformation value
		@param	rotation (Optional) A rotation value (default is 0)
		@param	tx	(Optional) A translate x value (default is 0)
		@param	ty	(Optional) A translate y value (default is 0)</haxe_doc>
		</createBox>
		<createGradientBox public="1" set="method" line="284">
			<f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>Creates a matrix to use for a linear gradient fill
		@param	width	The width of the gradient fill
		@param	height	The height of the gradient fill
		@param	rotation	(Optional) A rotation for the gradient fill (default is 0)
		@param	tx	(Optional) An x offset for the gradient fill (default is 0)
		@param	ty	(Optional) A y offset for the gradient fill (default is 0)
		@return	A new `Matrix` instance</haxe_doc>
		</createGradientBox>
		<equals public="1" set="method" line="314">
			<f a="matrix3">
				<c path="lime.math.Matrix3"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Check if two matrices have the same values
		@return	Whether both matrices are equal</haxe_doc>
		</equals>
		<deltaTransformVector public="1" set="method" line="325">
			<f a="Vector2:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Vector2` instance by the current matrix,
		without considering the `tx` and `ty` values of the matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	A new `Vector2` instance representing the transformed values</haxe_doc>
		</deltaTransformVector>
		<identity public="1" set="method" line="336">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Resets the matrix to default identity values</haxe_doc>
		</identity>
		<invert public="1" set="method" line="350">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<haxe_doc>Inverts the values of the current matrix
		@return	The current matrix instance</haxe_doc>
		</invert>
		<rotate public="1" set="method" line="387">
			<f a="theta">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Applies rotation to the current matrix
		@param	theta	A rotation value in degrees</haxe_doc>
		</rotate>
		<scale public="1" set="method" line="424">
			<f a="sx:sy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scales the current matrix
		@param	sx	The x scale to apply
		@param	sy	The y scale to apply</haxe_doc>
		</scale>
		<setRotation get="inline" set="null" line="443">
			<f a="theta:?scale" v=":1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ scale : 1 }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</setRotation>
		<setTo public="1" get="inline" set="null" line="460">
			<f a="a:b:c:d:tx:ty">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the values of the current matrix
		@param	a	The new matrix a value
		@param	b	The new matrix b value
		@param	c	The new matrix c value
		@param	d	The new matrix d value
		@param	tx	The new matrix tx value
		@param	ty	The new matrix ty value</haxe_doc>
		</setTo>
		<to3DString public="1" get="inline" set="null" line="470">
			<f a="?roundPixels" v="false">
				<x path="Bool"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ roundPixels : false }</e></m>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
			</meta>
		</to3DString>
		<toString public="1" get="inline" set="null" line="504">
			<f a=""><c path="String"/></f>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</toString>
		<transformRect public="1" set="method" line="517">
			<f a="rect:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Rectangle` instance by the current matrix
		and returns `Rectangle` with the bounds of the transformed
		rectangle.
		@param	transform	A `Matrix3` instance to transform by
		@param	result	(Optional) A `Rectangle` instance to use for the result
		@return	A `Rectangle` represented the transformed bounds</haxe_doc>
		</transformRect>
		<transformVector public="1" set="method" line="559">
			<f a="pos:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Vector2` instance by the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	A new `Vector2` instance representing the transformed values</haxe_doc>
		</transformVector>
		<translate public="1" get="inline" set="null" line="572">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adjusts the `tx` and `ty` of the current matrix
		@param	dx	The x amount to translate
		@param	dy	The y amount to translate</haxe_doc>
		</translate>
		<new public="1" set="method" line="67">
			<f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, d : 1, c : 0, b : 0, a : 1 }</e></m></meta>
			<haxe_doc>Creates a new `Matrix` instance
		@param	a	(Optional) An initial a component value (default is 1)
		@param	b	(Optional) An initial b component value (default is 0)
		@param	c	(Optional) An initial c component value (default is 0)
		@param	d	(Optional) An initial d component value (default is 1)
		@param	tx	(Optional) An initial tx component value (default is 0)
		@param	ty	(Optional) An initial ty component value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>`Matrix3` is a 3x3 transformation matrix particularly useful for
	two-dimensional transformation. It can be used for rotation, scale
	and skewing of a two-dimensional object.

	Although a 3x3 matrix is represented, configurable values can be
	considered as a 3x2 matrix:

	```
	[ a, c, tx ]
	[ c, d, ty ]
	[ 0, 0,  1 ]
	```</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.math.Matrix4" params="" file="/projects/May2019/May2020/lime/src/lime/math/Matrix4.hx">
		<from>
			<icast><x path="lime.utils.Float32Array"/></icast>
			<icast field="fromMatrix3"><c path="lime.math.Matrix3"/></icast>
		</from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<haxe_doc>`Matrix4` is a 4x4 matrix, useful for 3D calculations</haxe_doc>
		<impl><class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4" final="1">
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="11" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
	</__identity>
	<determinant public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets the determinant of the matrix</haxe_doc>
	</determinant>
	<position public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Vector4"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets or sets the position value of this matrix</haxe_doc>
	</position>
	<_new public="1" set="method" line="27" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new matrix instance
		@param	data	(Optional) A `Float32Array` of 16 values to use for this matrix</haxe_doc>
	</_new>
	<append public="1" set="method" line="43" static="1">
		<f a="this:lhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Appends a second matrix by multiplying its values against the current one
		@param	lhs	A second matrix instance</haxe_doc>
	</append>
	<appendRotation public="1" set="method" line="105" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Appends rotation to the current matrix
		@param	degrees	A rotation value (in degrees)
		@param	axis	The coordinate position of the rotation axis
		@param	pivotPoint	(Optional) A pivot point to use in the rotation</haxe_doc>
	</appendRotation>
	<appendScale public="1" set="method" line="124" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Appends a scale value to the current matrix
		@param	xScale	The x scale to append
		@param	yScale	The y scale to append
		@param	zScale	The z scale to append</haxe_doc>
	</appendScale>
	<appendTranslation public="1" set="method" line="137" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Increases the position/translation of the current matrix
		@param	x	The x amount to offset the current position
		@param	y	The y amount to offset the current position
		@param	z	The z amount to offset the current position</haxe_doc>
	</appendTranslation>
	<clone public="1" set="method" line="148" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Creates a duplicate of the current `Matrix4`
		@return	A new `Matrix4` with the same values as the current matrix</haxe_doc>
	</clone>
	<copyColumnFrom public="1" set="method" line="158" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a column of data from a `Vector4` instance into the values of this matrix
		@param	column	The column to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
	</copyColumnFrom>
	<copyColumnTo public="1" set="method" line="196" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a column of data from the current matrix into a `Vector4` instance
		@param	column	The column to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
	</copyColumnTo>
	<copyFrom public="1" set="method" line="233" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies the values of another `Matrix4` into the current matrix
		@param	other	A `Matrix4` instance to copy from</haxe_doc>
	</copyFrom>
	<copyRowFrom public="1" set="method" line="243" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a row of data from a `Vector4` instance into the values of this matrix
		@param	row	The row to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
	</copyRowFrom>
	<copyRowTo public="1" set="method" line="281" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a row of data from the current matrix into a `Vector4` instance
		@param	column	The row to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
	</copyRowTo>
	<create2D public="1" set="method" line="323" static="1">
		<f a="this:a:b:c:d:?tx:?ty" v=":::::0:0">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ ty : 0, tx : 0 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Resets the current matrix using two-dimensional transform values
		@param	a	A two-dimensional matrix a value
		@param	b	A two-dimensional matrix b value
		@param	c	A two-dimensional matrix c value
		@param	d	A two-dimensional matrix d value
		@param	tx	(Optional) A two-dimensional matrix tx value (default is 0)
		@param	ty	(Optional) A two-dimensional matrix ty value (default is 0)</haxe_doc>
	</create2D>
	<createOrtho public="1" set="method" line="355" static="1">
		<f a="this:left:right:bottom:top:zNear:zFar">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Initializes this matrix with values for an orthographic projection, useful in rendering
		@param	left	The left (or x0) coordinate for the projection
		@param	right	The right (or x1) coordinate for the projection
		@param	bottom	The bottom (or y0) coordinate for the projection
		@param	top	The top (or y1) coordinate for the projection
		@param	zNear	The near depth-clipping plane position
		@param	zFar	The far depth-clipping plane position</haxe_doc>
	</createOrtho>
	<deltaTransformVector public="1" set="method" line="485" static="1">
		<f a="this:v:?result" v="::null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":value"><e>{ result : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
	</deltaTransformVector>
	<fromMatrix3 public="1" set="method" line="495" static="1">
		<f a="matrix3">
			<c path="lime.math.Matrix3"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromMatrix3>
	<identity public="1" set="method" line="505" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Resets the current matrix using default identity values</haxe_doc>
	</identity>
	<interpolate public="1" set="method" line="533" static="1">
		<f a="thisMat:toMat:percent:?result" v=":::null">
			<x path="lime.math.Matrix4"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":value"><e>{ result : null }</e></m></meta>
		<haxe_doc>Interpolates from one `Matrix4` instance to another, given a percentage between the two
		@param	thisMat	The first `Matrix4` object to start from
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percent	The percentage value to interpolate by
		@param	result	(Optional) A `Matrix4` instance to use when returning the result
		@return	A `Matrix4` with the resulting value</haxe_doc>
	</interpolate>
	<interpolateTo public="1" set="method" line="550" static="1">
		<f a="this:toMat:percent">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Interpolates the current matrix toward another matrix, resetting the values of the current matrix
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percetn	The percentage value to interpolate by</haxe_doc>
	</interpolateTo>
	<invert public="1" set="method" line="562" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Attempts to invert the current matrix, so long as the determinant is greater than zero
		@return	Whether the `invert` operation was successful</haxe_doc>
	</invert>
	<pointAt public="1" set="method" line="615" static="1">
		<f a="this:pos:?at:?up" v="::null:null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ up : null, at : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Sets the matrix values as a transformation orientated toward a certain vector position
		@param	pos	A target vector position in absolute coordinates
		@param	at	(Optional) A vector relative to this matrix which defines the current direction
		@param	up	(Optional) A vector relative to this matrix which defines the "up" direction</haxe_doc>
	</pointAt>
	<prepend public="1" set="method" line="682" static="1">
		<f a="this:rhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends a right-hand matrix to the current matrix
		@param	rhx	A right-hand `Matrix4` to append</haxe_doc>
	</prepend>
	<prependRotation public="1" set="method" line="744" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Prepends rotation to this matrix
		@param	degrees	The rotation amount in degrees
		@param	axis	The rotation axis
		@param	pivotPoint	(Optional) A pivot point for the rotation</haxe_doc>
	</prependRotation>
	<prependScale public="1" set="method" line="763" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends scale to this matrix
		@param	xScale	An x scale value
		@param	yScale	A y scale value
		@param	zScale	A z scale value</haxe_doc>
	</prependScale>
	<prependTranslation public="1" set="method" line="776" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends translation values to this matrix
		@param	x	An x translation value
		@param	y	A y translation value
		@param	z	A z translation value</haxe_doc>
	</prependTranslation>
	<transformVector public="1" set="method" line="870" static="1">
		<f a="this:v:?result" v="::null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":value"><e>{ result : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Transforms a `Vector4` instance using the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	The resulting `Vector4` instance</haxe_doc>
	</transformVector>
	<transformVectors public="1" set="method" line="886" static="1">
		<f a="this:ain:aout">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Transforms a series of [x, y, z] value pairs at once
		@param	ain	An input `Float32Array` to transform
		@param	aout	An output `Float32Array` to write to</haxe_doc>
	</transformVectors>
	<transpose public="1" set="method" line="908" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Transposes the current matrix</haxe_doc>
	</transpose>
	<__getAxisRotation set="method" line="918" static="1">
		<f a="this:x:y:z:degrees">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__getAxisRotation>
	<__swap get="inline" set="null" line="948" static="1">
		<f a="this:a:b">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__swap>
	<get_determinant set="method" line="956" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_determinant>
	<get_position set="method" line="966" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_position>
	<set_position set="method" line="971" static="1">
		<f a="this:val">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_position>
	<get public="1" set="method" line="979" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="984" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
</class></impl>
	</abstract>
	<class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4" final="1">
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="11" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
		</__identity>
		<determinant public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets the determinant of the matrix</haxe_doc>
		</determinant>
		<position public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Vector4"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets or sets the position value of this matrix</haxe_doc>
		</position>
		<_new public="1" set="method" line="27" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new matrix instance
		@param	data	(Optional) A `Float32Array` of 16 values to use for this matrix</haxe_doc>
		</_new>
		<append public="1" set="method" line="43" static="1">
			<f a="this:lhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Appends a second matrix by multiplying its values against the current one
		@param	lhs	A second matrix instance</haxe_doc>
		</append>
		<appendRotation public="1" set="method" line="105" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Appends rotation to the current matrix
		@param	degrees	A rotation value (in degrees)
		@param	axis	The coordinate position of the rotation axis
		@param	pivotPoint	(Optional) A pivot point to use in the rotation</haxe_doc>
		</appendRotation>
		<appendScale public="1" set="method" line="124" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Appends a scale value to the current matrix
		@param	xScale	The x scale to append
		@param	yScale	The y scale to append
		@param	zScale	The z scale to append</haxe_doc>
		</appendScale>
		<appendTranslation public="1" set="method" line="137" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Increases the position/translation of the current matrix
		@param	x	The x amount to offset the current position
		@param	y	The y amount to offset the current position
		@param	z	The z amount to offset the current position</haxe_doc>
		</appendTranslation>
		<clone public="1" set="method" line="148" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Creates a duplicate of the current `Matrix4`
		@return	A new `Matrix4` with the same values as the current matrix</haxe_doc>
		</clone>
		<copyColumnFrom public="1" set="method" line="158" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a column of data from a `Vector4` instance into the values of this matrix
		@param	column	The column to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="196" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a column of data from the current matrix into a `Vector4` instance
		@param	column	The column to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="233" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies the values of another `Matrix4` into the current matrix
		@param	other	A `Matrix4` instance to copy from</haxe_doc>
		</copyFrom>
		<copyRowFrom public="1" set="method" line="243" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a row of data from a `Vector4` instance into the values of this matrix
		@param	row	The row to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
		</copyRowFrom>
		<copyRowTo public="1" set="method" line="281" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a row of data from the current matrix into a `Vector4` instance
		@param	column	The row to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
		</copyRowTo>
		<create2D public="1" set="method" line="323" static="1">
			<f a="this:a:b:c:d:?tx:?ty" v=":::::0:0">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ ty : 0, tx : 0 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Resets the current matrix using two-dimensional transform values
		@param	a	A two-dimensional matrix a value
		@param	b	A two-dimensional matrix b value
		@param	c	A two-dimensional matrix c value
		@param	d	A two-dimensional matrix d value
		@param	tx	(Optional) A two-dimensional matrix tx value (default is 0)
		@param	ty	(Optional) A two-dimensional matrix ty value (default is 0)</haxe_doc>
		</create2D>
		<createOrtho public="1" set="method" line="355" static="1">
			<f a="this:left:right:bottom:top:zNear:zFar">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Initializes this matrix with values for an orthographic projection, useful in rendering
		@param	left	The left (or x0) coordinate for the projection
		@param	right	The right (or x1) coordinate for the projection
		@param	bottom	The bottom (or y0) coordinate for the projection
		@param	top	The top (or y1) coordinate for the projection
		@param	zNear	The near depth-clipping plane position
		@param	zFar	The far depth-clipping plane position</haxe_doc>
		</createOrtho>
		<deltaTransformVector public="1" set="method" line="485" static="1">
			<f a="this:v:?result" v="::null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":value"><e>{ result : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
		</deltaTransformVector>
		<fromMatrix3 public="1" set="method" line="495" static="1">
			<f a="matrix3">
				<c path="lime.math.Matrix3"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromMatrix3>
		<identity public="1" set="method" line="505" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Resets the current matrix using default identity values</haxe_doc>
		</identity>
		<interpolate public="1" set="method" line="533" static="1">
			<f a="thisMat:toMat:percent:?result" v=":::null">
				<x path="lime.math.Matrix4"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Interpolates from one `Matrix4` instance to another, given a percentage between the two
		@param	thisMat	The first `Matrix4` object to start from
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percent	The percentage value to interpolate by
		@param	result	(Optional) A `Matrix4` instance to use when returning the result
		@return	A `Matrix4` with the resulting value</haxe_doc>
		</interpolate>
		<interpolateTo public="1" set="method" line="550" static="1">
			<f a="this:toMat:percent">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Interpolates the current matrix toward another matrix, resetting the values of the current matrix
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percetn	The percentage value to interpolate by</haxe_doc>
		</interpolateTo>
		<invert public="1" set="method" line="562" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Attempts to invert the current matrix, so long as the determinant is greater than zero
		@return	Whether the `invert` operation was successful</haxe_doc>
		</invert>
		<pointAt public="1" set="method" line="615" static="1">
			<f a="this:pos:?at:?up" v="::null:null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ up : null, at : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Sets the matrix values as a transformation orientated toward a certain vector position
		@param	pos	A target vector position in absolute coordinates
		@param	at	(Optional) A vector relative to this matrix which defines the current direction
		@param	up	(Optional) A vector relative to this matrix which defines the "up" direction</haxe_doc>
		</pointAt>
		<prepend public="1" set="method" line="682" static="1">
			<f a="this:rhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends a right-hand matrix to the current matrix
		@param	rhx	A right-hand `Matrix4` to append</haxe_doc>
		</prepend>
		<prependRotation public="1" set="method" line="744" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Prepends rotation to this matrix
		@param	degrees	The rotation amount in degrees
		@param	axis	The rotation axis
		@param	pivotPoint	(Optional) A pivot point for the rotation</haxe_doc>
		</prependRotation>
		<prependScale public="1" set="method" line="763" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends scale to this matrix
		@param	xScale	An x scale value
		@param	yScale	A y scale value
		@param	zScale	A z scale value</haxe_doc>
		</prependScale>
		<prependTranslation public="1" set="method" line="776" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends translation values to this matrix
		@param	x	An x translation value
		@param	y	A y translation value
		@param	z	A z translation value</haxe_doc>
		</prependTranslation>
		<transformVector public="1" set="method" line="870" static="1">
			<f a="this:v:?result" v="::null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":value"><e>{ result : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Transforms a `Vector4` instance using the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	The resulting `Vector4` instance</haxe_doc>
		</transformVector>
		<transformVectors public="1" set="method" line="886" static="1">
			<f a="this:ain:aout">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Transforms a series of [x, y, z] value pairs at once
		@param	ain	An input `Float32Array` to transform
		@param	aout	An output `Float32Array` to write to</haxe_doc>
		</transformVectors>
		<transpose public="1" set="method" line="908" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Transposes the current matrix</haxe_doc>
		</transpose>
		<__getAxisRotation set="method" line="918" static="1">
			<f a="this:x:y:z:degrees">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__getAxisRotation>
		<__swap get="inline" set="null" line="948" static="1">
			<f a="this:a:b">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__swap>
		<get_determinant set="method" line="956" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_determinant>
		<get_position set="method" line="966" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_position>
		<set_position set="method" line="971" static="1">
			<f a="this:val">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_position>
		<get public="1" set="method" line="979" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="984" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
	</class>
	<abstract path="lime.math.RGBA" params="" file="/projects/May2019/May2020/lime/src/lime/math/RGBA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.ARGB"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.BGRA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in an RGBA
	(red, green, blue, alpha) color format.

	```haxe
	var color:RGBA = 0x883300FF;
	trace (color.r); // 0x88
	trace (color.g); // 0x33
	trace (color.b); // 0x00
	trace (color.a); // 0xFF

	var convert:ARGB = color; // 0xFF883300
	```</haxe_doc>
		<meta><m n=":allow"><e>lime.math</e></m></meta>
		<impl><class path="lime.math._RGBA.RGBA_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/RGBA.hx" private="1" module="lime.math.RGBA" final="1">
	<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
	<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="103" static="1">
		<f a="?rgba" v="0">
			<x path="Int"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta>
			<m n=":value"><e>{ rgba : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new RGBA instance
		@param	rgba	(Optional) An RGBA color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="116" static="1">
		<f a="r:g:b:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.RGBA"/>
		</f>
		<haxe_doc>Creates a new RGBA instance from component values
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@param	a	An alpha component value
		@return	A new RGBA instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="126" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="149" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `RGBA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="176" static="1">
		<f a="this:r:g:b:a">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `RGBA` color to new component values
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set
		@param	a	The alpha component value to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="184" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="200" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `RGBA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="229" static="1">
		<f a="argb">
			<x path="lime.math.ARGB"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromBGRA get="inline" set="null" line="234" static="1">
		<f a="bgra">
			<x path="lime.math.BGRA"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<get_a get="inline" set="null" line="240" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="245" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="251" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="256" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="262" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="267" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="273" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="278" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":allow"><e>lime.math</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.ArrayBufferView" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx">
		<type public="1" expr="TypedArrayType.None">
			<x path="lime.utils.TypedArrayType"/>
			<meta><m n=":value"><e>TypedArrayType.None</e></m></meta>
		</type>
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<byteOffset public="1"><x path="Int"/></byteOffset>
		<byteLength public="1"><x path="Int"/></byteLength>
		<length public="1"><x path="Int"/></length>
		<bytesPerElement set="null" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</bytesPerElement>
		<initTypedArray get="inline" set="null" line="45">
			<f a="view">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initTypedArray>
		<initBuffer get="inline" set="null" line="76">
			<f a="in_buffer:?in_byteOffset:?len" v=":0:null">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta>
				<m n=":value"><e>{ len : null, in_byteOffset : 0 }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</initBuffer>
		<initArray params="T" get="inline" set="null" line="112">
			<f a="array">
				<c path="Array"><c path="initArray.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initArray>
		<set public="1" params="T" get="inline" set="null" line="129">
			<f a="?view:?array:?offset" v="null:null:0">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="Array"><c path="set.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0, array : null, view : null }</e></m></meta>
		</set>
		<cloneBuffer get="inline" set="null" line="149">
			<f a="src:?srcByteOffset" v=":0">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ srcByteOffset : 0 }</e></m></meta>
		</cloneBuffer>
		<subarray params="T_subarray" get="inline" set="null" line="163">
			<f a="begin:?end" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="subarray.T_subarray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":generic"/>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</subarray>
		<bytesForType get="inline" set="null" line="208"><f a="type">
	<x path="lime.utils.TypedArrayType"/>
	<x path="Int"/>
</f></bytesForType>
		<toString get="inline" set="null" line="246"><f a=""><c path="String"/></f></toString>
		<toByteLength get="inline" set="null" line="268"><f a="elemCount">
	<x path="Int"/>
	<x path="Int"/>
</f></toByteLength>
		<copyFromArray set="method" line="278">
			<f a="array:?offset" v=":0">
				<c path="Array"><x path="Float"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</copyFromArray>
		<new get="inline" set="null" line="20">
			<f a="?elements:in_type" v="null:">
				<x path="Int"/>
				<x path="lime.utils.TypedArrayType"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ elements : null }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.utils.TAError" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<RangeError/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<class path="lime.math._RGBA.RGBA_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/math/RGBA.hx" private="1" module="lime.math.RGBA" final="1">
		<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
		<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="103" static="1">
			<f a="?rgba" v="0">
				<x path="Int"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta>
				<m n=":value"><e>{ rgba : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new RGBA instance
		@param	rgba	(Optional) An RGBA color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="116" static="1">
			<f a="r:g:b:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.RGBA"/>
			</f>
			<haxe_doc>Creates a new RGBA instance from component values
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@param	a	An alpha component value
		@return	A new RGBA instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="126" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="149" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `RGBA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="176" static="1">
			<f a="this:r:g:b:a">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `RGBA` color to new component values
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set
		@param	a	The alpha component value to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="184" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="200" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `RGBA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="229" static="1">
			<f a="argb">
				<x path="lime.math.ARGB"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromBGRA get="inline" set="null" line="234" static="1">
			<f a="bgra">
				<x path="lime.math.BGRA"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<get_a get="inline" set="null" line="240" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="245" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="251" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="256" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="262" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="267" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="273" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="278" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>lime.math</e></m>
		</meta>
	</class>
	<class path="lime.math.Rectangle" params="" file="/projects/May2019/May2020/lime/src/lime/math/Rectangle.hx">
		<bottom public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the bottom (y + height) value of the `Rectangle`</haxe_doc>
		</bottom>
		<bottomRight public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the bottom-right (x + width, y + height) as a `Vector2`</haxe_doc>
		</bottomRight>
		<height public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the height of the rectangle</haxe_doc>
		</height>
		<left public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the left (x) of the rectangle</haxe_doc>
		</left>
		<right public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the right (x + width) of the rectangle</haxe_doc>
		</right>
		<size public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the size (width, height) as a `Vector2`</haxe_doc>
		</size>
		<top public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the top (y) of the rectangle</haxe_doc>
		</top>
		<topLeft public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the top-left (x, y) as a `Vector2`</haxe_doc>
		</topLeft>
		<width public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the width of the rectangle</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the x of the rectangle</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the y of the rectangle</haxe_doc>
		</y>
		<clone public="1" set="method" line="94">
			<f a=""><c path="lime.math.Rectangle"/></f>
			<haxe_doc>Creates a clone of this `Rectangle`
		@return	A new `Rectangle` instance</haxe_doc>
		</clone>
		<contains public="1" set="method" line="105">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains the specified (x, y) point
		@param	x	The x coordinate to test
		@param	y	The y coordinate to test
		@return	Whether the point is contained in the rectangle</haxe_doc>
		</contains>
		<containsPoint public="1" set="method" line="110">
			<f a="point">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":deprecated"><e>"Use containsVector"</e></m>
			</meta>
		</containsPoint>
		<containsRect public="1" set="method" line="122">
			<f a="rect">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains another rectangle
		This will return `false` if the second rectangle only
		overlaps but is not fully contained within the current rectangle
		@param	rect	A second `Rectangle` instance to test
		@return	Whether the `rect` is contained within the current `Rectangle`</haxe_doc>
		</containsRect>
		<containsVector public="1" set="method" line="139">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains the specified vector
		@param	vector	The vector to test
		@return	Whether the vector is contained in the rectangle</haxe_doc>
		</containsVector>
		<copyFrom public="1" set="method" line="148">
			<f a="sourceRect">
				<c path="lime.math.Rectangle"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the x, y, width and height of another `Rectangle`
		@param	sourceRect	Another `Rectangle` instance</haxe_doc>
		</copyFrom>
		<equals public="1" set="method" line="162">
			<f a="toCompare">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether the current `Rectangle` and another
		instance have equal values
		@param	toCompare	Another `Rectangle` to compare with
		@return	Whether both rectangles are not `null` and have equal values</haxe_doc>
		</equals>
		<inflate public="1" set="method" line="173">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increases the size of the current rectangle by
		the given delta x and y values
		@param	dx	A delta x value to increase the size by
		@param	dy	A delta y value to increase the size by</haxe_doc>
		</inflate>
		<inflateVector public="1" set="method" line="186">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increases the size of the current rectangle by
		the given delta vector values
		@param	vector	A delta vector to increase the size by</haxe_doc>
		</inflateVector>
		<intersection public="1" set="method" line="200">
			<f a="toIntersect:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Returns a new rectangle with the area where the current
		`Rectangle` and another `Rectangle` instance overlap.
		If they do not overlap, the returned `Rectangle` will
		be empty
		@param	toIntersect	Another `Rectangle` instance to intersect with
		@param	result	(Optional) A `Rectangle` instance to use for the result
		@return	A `Rectangle` of the intersection area</haxe_doc>
		</intersection>
		<intersects public="1" set="method" line="234">
			<f a="toIntersect">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns if the current `Rectangle` overlaps with another instance
		@param	toIntersect	Another `Rectangle` to compare with
		@return	Whether the rectangles intersect</haxe_doc>
		</intersects>
		<isEmpty public="1" set="method" line="254">
			<f a=""><x path="Bool"/></f>
			<haxe_doc><![CDATA[Whether this rectangle is empty
		@return	`true` if the width or height is <= 0]]></haxe_doc>
		</isEmpty>
		<offset public="1" set="method" line="264">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Moves the rectangle by offset x and values
		@param	dx	A delta x value
		@param	dy	A delta y value</haxe_doc>
		</offset>
		<offsetVector public="1" set="method" line="274">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Moves the rectangle by the values of a `Vector2`
		@param	dx	A delta vector</haxe_doc>
		</offsetVector>
		<setEmpty public="1" set="method" line="283">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Makes this rectangle empty</haxe_doc>
		</setEmpty>
		<setTo public="1" set="method" line="295">
			<f a="xa:ya:widtha:heighta">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the values of this rectangle at once
		@param	xa	A new x value
		@param	ya	A new y value
		@param	widtha	A new width value
		@param	heighta	A new height value</haxe_doc>
		</setTo>
		<union public="1" set="method" line="310">
			<f a="toUnion:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Combines two rectangles together, returning the
		minimum `Rectangle` that contains both rectangles
		@param	toUnion	A second `Rectangle` to unify
		@param	result	(Optional) A `Rectangle` instance for the result
		@return	A `Rectangle` that contains the dimensions of both rectangles</haxe_doc>
		</union>
		<__toFlashRectangle set="method" line="335">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toFlashRectangle>
		<get_bottom set="method" line="345">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottom>
		<set_bottom set="method" line="350">
			<f a="b">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottom>
		<get_bottomRight set="method" line="356">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottomRight>
		<set_bottomRight set="method" line="361">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottomRight>
		<get_left set="method" line="368">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_left>
		<set_left set="method" line="373">
			<f a="l">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_left>
		<get_right set="method" line="380">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_right>
		<set_right set="method" line="385">
			<f a="r">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_right>
		<get_size set="method" line="391">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_size>
		<set_size set="method" line="396">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_size>
		<get_top set="method" line="403">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_top>
		<set_top set="method" line="408">
			<f a="t">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_top>
		<get_topLeft set="method" line="415">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_topLeft>
		<set_topLeft set="method" line="420">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_topLeft>
		<new public="1" set="method" line="82">
			<f a="?x:?y:?width:?height" v="0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 0, width : 0, y : 0, x : 0 }</e></m></meta>
			<haxe_doc>Create a new `Rectangle` instance
		@param	x	(Optional) Initial x value (default is 0)
		@param	y	(Optional) Initial y value (default is 0)
		@param	width	(Optional) Initial width value (default is 0)
		@param	height	(Optional) Initial height value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>The `Rectangle` class provides a simple object for storing
	and manipulating a logical rectangle for calculations</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector2" params="" file="/projects/May2019/May2020/lime/src/lime/math/Vector2.hx">
		<distance public="1" set="method" line="81" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the distance between two `Vector2` points
		@param	pt1	A `Vector2` instance
		@param	pt2	A second `Vector2` instance
		@return	The distance between each `Vector2`</haxe_doc>
		</distance>
		<interpolate public="1" set="method" line="106" static="1">
			<f a="pt1:pt2:f:?result" v=":::null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Interpolates between two points, given a specified percentage value
		@param	pt1	A `Vector2` instance
		@param	pt2	A second `Vector2` instance
		@param	f	A percentage value to interpolate
		@param	result	(Optional) A `Vector2` instance to use for the result
		@return	A `Vector2` instance holding the interpolated value</haxe_doc>
		</interpolate>
		<polar public="1" set="method" line="149" static="1">
			<f a="len:angle:?result" v="::null">
				<x path="Float"/>
				<x path="Float"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Converts a polar coordinate to into a cartesian `Vector2` instance
		@param	len	The length of the polar value
		@param	angle	The angle of the polar value
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance in cartesian coordinates</haxe_doc>
		</polar>
		<length public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Gets the length of this vector from (0, 0) to (x, y)</haxe_doc>
		</length>
		<lengthSquared public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Gets the square of the length of this vector, which
		avoids use of `Math.sqrt` for faster performance</haxe_doc>
		</lengthSquared>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>The x coodinate for this vector</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>The y coodinate for this vector</haxe_doc>
		</y>
		<add public="1" set="method" line="59">
			<f a="v:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Adds the current vector to a second `Vector2` instance
		and returns the result
		@param	v	A `Vector2` instance to add
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance that combines both vector values</haxe_doc>
		</add>
		<clone public="1" set="method" line="70">
			<f a=""><c path="lime.math.Vector2"/></f>
			<haxe_doc>Clones the current `Vector2`
		@return	A new `Vector2` instance with the same values as the current one</haxe_doc>
		</clone>
		<equals public="1" set="method" line="93">
			<f a="toCompare">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Whether this `Vector2` has the same values as another instance
		@param	toCompare	A `Vector2` instance to compare against
		@return	Whether the values of each vector are equal</haxe_doc>
		</equals>
		<normalize public="1" set="method" line="117">
			<f a="thickness">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Normalizes this vector between the current length and a set scale value
		@param	thickness	The scaling value. . For example, if the current vector is `(0, 5)` and you normalize it to 1, the normalized value will be `(0, 1)`</haxe_doc>
		</normalize>
		<offset public="1" set="method" line="136">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Offsets the current value of this vector
		@param	dx	An offset x value
		@param	dy	An offset y value</haxe_doc>
		</offset>
		<setTo public="1" get="inline" set="null" line="161">
			<f a="xa:ya">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets this `Vector2` to new values
		@param	xa	An `x` value
		@param	ya	A `y` value</haxe_doc>
		</setTo>
		<subtract public="1" set="method" line="173">
			<f a="v:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Subtracts the current vector from another `Vector2` instance
		@param	v	A `Vector2` instance to subtract from the current vector
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance containing the subtracted values</haxe_doc>
		</subtract>
		<__toFlashPoint set="method" line="180">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toFlashPoint>
		<get_length set="method" line="190">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<get_lengthSquared set="method" line="195">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lengthSquared>
		<new public="1" set="method" line="46">
			<f a="?x:?y" v="0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
			<haxe_doc>Creates a new `Vector` instance
		@param	x	(Optional) An initial `x` value (default is 0)
		@param	y	(Optional) An initial `y` value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>The `Vector2` class can be used for calculating math with
	basic (x, y) coordinates</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector4" params="" file="/projects/May2019/May2020/lime/src/lime/math/Vector4.hx">
		<X_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the x axis (1, 0, 0)</haxe_doc>
		</X_AXIS>
		<Y_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the y axis (0, 1, 0)</haxe_doc>
		</Y_AXIS>
		<Z_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the z axis (0, 0, 1)</haxe_doc>
		</Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="94" static="1">
			<f a="a:b">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the angle between two `Vector4` coordinates
		@param	a	A `Vector4` instance
		@param	b	A second `Vector4` instance
		@return	The calculated angle</haxe_doc>
		</angleBetween>
		<distance public="1" get="inline" set="null" line="155" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the distance between two vectors
		@param	pt1	A `Vector4` instance
		@param	pt2	A second `Vector4` instance
		@return	The distance between each vector</haxe_doc>
		</distance>
		<distanceSquared public="1" get="inline" set="null" line="171" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the squared distance between two vectors,
		(avoids the use of `Math.sqrt` for faster performance)
		@param	pt1	A `Vector4` instance
		@param	pt2	A second `Vector4` instance
		@return	The square of the distance between each vector</haxe_doc>
		</distanceSquared>
		<get_X_AXIS get="inline" set="null" line="324" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_X_AXIS>
		<get_Y_AXIS get="inline" set="null" line="329" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Y_AXIS>
		<get_Z_AXIS get="inline" set="null" line="334" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Z_AXIS>
		<length public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Get the length of this vector</haxe_doc>
		</length>
		<lengthSquared public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Get the squared length of this vector
		(avoiding the use of `Math.sqrt` for faster
		performance)</haxe_doc>
		</lengthSquared>
		<w public="1">
			<x path="Float"/>
			<haxe_doc>The w component value</haxe_doc>
		</w>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>The x component value</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>The y component value</haxe_doc>
		</y>
		<z public="1">
			<x path="Float"/>
			<haxe_doc>The z component value</haxe_doc>
		</z>
		<add public="1" get="inline" set="null" line="81">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Adds two `Vector4` instances together and returns the result
		@param	a	A `Vector4` instance to add to the current one
		@param	result	(Optional) A `Vector4` instance to store the result
		@return	A `Vector4` instance with the added value</haxe_doc>
		</add>
		<clone public="1" get="inline" set="null" line="108">
			<f a=""><c path="lime.math.Vector4"/></f>
			<haxe_doc>Creates a new `Vector4` instance with the same values as the current one
		@return	A new `Vector4` instance with the same values</haxe_doc>
		</clone>
		<copyFrom public="1" get="inline" set="null" line="117">
			<f a="sourceVector4">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the x, y and z component values of another `Vector4` instance
		@param	sourceVector4	A `Vector4` instance to copy from</haxe_doc>
		</copyFrom>
		<crossProduct public="1" get="inline" set="null" line="130">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Performs vector multiplication between this vector and another `Vector4` instance
		@param	a	A `Vector4` instance to multiply by
		@param	result	(Optional) A `Vector4` to use for the result
		@return	A `Vector4` instance with the result</haxe_doc>
		</crossProduct>
		<decrementBy public="1" get="inline" set="null" line="142">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Decrements the x, y and z component values by those in another `Vector4` instance
		@param	a	A `Vector4` instance to decrement the current vector by</haxe_doc>
		</decrementBy>
		<dotProduct public="1" get="inline" set="null" line="185">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the dot product of the current vector with another `Vector4` instance
		@param	a	A `Vector4` instance to use in the dot product
		@return	The calculated dot product value</haxe_doc>
		</dotProduct>
		<equals public="1" get="inline" set="null" line="198">
			<f a="toCompare:?allFour" v=":false">
				<c path="lime.math.Vector4"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
			<haxe_doc>Whether two `Vector4` instances have equal component values.

		Comparing the w component value is optional.
		@param	toCompare	A `Vector4` instance to compare against
		@param	allFour	(Optional) Whether to compare against the w component (default is false)
		@return	Whether both instances have equal values</haxe_doc>
		</equals>
		<incrementBy public="1" get="inline" set="null" line="207">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increments the x, y and z component values by those in a second `Vector4` instance
		@param	a	A `Vector4` instance to increment the current vector by</haxe_doc>
		</incrementBy>
		<nearEquals public="1" get="inline" set="null" line="222">
			<f a="toCompare:tolerance:?allFour" v="::false">
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
			<haxe_doc>Whether two `Vector4` instances have nearly equal component values.
		Comparison is performed within a given tolerance value.
		@param	toCompare	A `Vector4` instance to compare against
		@param	tolerance	A floating point value determining how near the values must be to be considered near equal
		@param	allFour	(Optional) Whether to compare against the w component (default is false)
		@return	Whether both instances have equal values, within the given tolerance</haxe_doc>
		</nearEquals>
		<negate public="1" get="inline" set="null" line="234">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Negates the x, y and z values of the current vector
		(multiplying each value by -1)</haxe_doc>
		</negate>
		<normalize public="1" get="inline" set="null" line="245">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Divides the x, y and z component values by the
		length of the vector</haxe_doc>
		</normalize>
		<project public="1" get="inline" set="null" line="263">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Divides the x, y and z component values by the
		w component value</haxe_doc>
		</project>
		<scaleBy public="1" get="inline" set="null" line="274">
			<f a="s">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scales the x, y and z component values by a scale value
		@param	s	The amount of scale to apply</haxe_doc>
		</scaleBy>
		<setTo public="1" get="inline" set="null" line="287">
			<f a="xa:ya:za">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the x, y and z component values
		@param	xa	An x value
		@param	ya	A y value
		@param	za	A z value</haxe_doc>
		</setTo>
		<subtract public="1" get="inline" set="null" line="301">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Subtracts the values of a second `Vector4` instance
		from the current one
		@param	a	A second `Vector4` instance to substract
		@param	result	(Optional) A `Vector4` instance to store the result
		@return	A `Vector4` instance containing the subtracted value</haxe_doc>
		</subtract>
		<toString public="1" get="inline" set="null" line="308">
			<f a=""><c path="String"/></f>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</toString>
		<get_length get="inline" set="null" line="314">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<get_lengthSquared get="inline" set="null" line="319">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lengthSquared>
		<new public="1" set="method" line="67">
			<f a="?x:?y:?z:?w" v="0.:0.:0.:0.">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ w : 0., z : 0., y : 0., x : 0. }</e></m></meta>
			<haxe_doc>Creates a new `Vector4` instance
		@param	x	(Optional) An initial x value (default is 0)
		@param	y	(Optional) An initial y value (default is 0)
		@param	z	(Optional) An initial z value (default is 0)
		@param	w	(Optional) An initial w value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>`Vector4` is a vector suitable for three-dimensional
	math, containing (x, y, z, w) components</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioBuffer" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioBuffer.hx">
		<fromBase64 public="1" set="method" line="69" static="1"><f a="base64String">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBase64>
		<fromBytes public="1" set="method" line="115" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="148" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromFile>
		<fromFiles public="1" set="method" line="199" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.media.AudioBuffer"/>
</f></fromFiles>
		<fromVorbisFile public="1" set="method" line="225" static="1"><f a="vorbisFile">
	<c path="lime.media.vorbis.VorbisFile"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromVorbisFile>
		<loadFromFile public="1" set="method" line="246" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFile>
		<loadFromFiles public="1" set="method" line="310" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFiles>
		<__getCodec set="method" line="342" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></__getCodec>
		<bitsPerSample public="1"><x path="Int"/></bitsPerSample>
		<channels public="1"><x path="Int"/></channels>
		<data public="1"><x path="lime.utils.UInt8Array"/></data>
		<sampleRate public="1"><x path="Int"/></sampleRate>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<__srcAudio>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcAudio>
		<__srcBuffer>
			<x path="lime.media.openal.ALBuffer"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBuffer>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcHowl>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcHowl>
		<__srcSound>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcSound>
		<__srcVorbisFile>
			<c path="lime.media.vorbis.VorbisFile"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcVorbisFile>
		<dispose public="1" set="method" line="62"><f a=""><x path="Void"/></f></dispose>
		<get_src set="method" line="367">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="384">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<new public="1" set="method" line="60"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.utils.Assets</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioContext" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioContext.hx">
		<custom public="1"><d/></custom>
		<openal public="1" set="null"><c path="lime.media.OpenALAudioContext"/></openal>
		<type public="1" set="null"><x path="lime.media.AudioContextType"/></type>
		<new public="1" set="method" line="24">
			<f a="?type" v="null">
				<x path="lime.media.AudioContextType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.media.FlashAudioContext</e></m>
			<m n=":access"><e>lime.media.HTML5AudioContext</e></m>
			<m n=":access"><e>lime.media.OpenALAudioContext</e></m>
			<m n=":access"><e>lime.media.WebAudioContext</e></m>
		</meta>
	</class>
	<abstract path="lime.media.AudioContextType" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioContextType.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.media._AudioContextType.AudioContextType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioContextType.hx" private="1" module="lime.media.AudioContextType" extern="1" final="1">
	<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="5" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "flash"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLASH>
	<HTML5 public="1" get="inline" set="null" expr="cast &quot;html5&quot;" line="6" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "html5"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTML5>
	<OPENAL public="1" get="inline" set="null" expr="cast &quot;openal&quot;" line="7" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "openal"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENAL>
	<WEB public="1" get="inline" set="null" expr="cast &quot;web&quot;" line="8" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "web"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEB>
	<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="9" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "custom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUSTOM>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.media._AudioContextType.AudioContextType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioContextType.hx" private="1" module="lime.media.AudioContextType" extern="1" final="1">
		<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="5" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "flash"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLASH>
		<HTML5 public="1" get="inline" set="null" expr="cast &quot;html5&quot;" line="6" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "html5"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTML5>
		<OPENAL public="1" get="inline" set="null" expr="cast &quot;openal&quot;" line="7" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "openal"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENAL>
		<WEB public="1" get="inline" set="null" expr="cast &quot;web&quot;" line="8" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "web"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEB>
		<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="9" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "custom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUSTOM>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.media.AudioManager" params="" file="/projects/May2019/May2020/lime/src/lime/media/AudioManager.hx">
		<context public="1" static="1"><c path="lime.media.AudioContext"/></context>
		<init public="1" set="method" line="22" static="1">
			<f a="?context" v="null">
				<c path="lime.media.AudioContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
		</init>
		<resume public="1" set="method" line="56" static="1"><f a=""><x path="Void"/></f></resume>
		<shutdown public="1" set="method" line="74" static="1"><f a=""><x path="Void"/></f></shutdown>
		<suspend public="1" set="method" line="99" static="1"><f a=""><x path="Void"/></f></suspend>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.media.OpenALAudioContext" params="" file="/projects/May2019/May2020/lime/src/lime/media/OpenALAudioContext.hx">
		<NONE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FALSE public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<SOURCE_RELATIVE public="1" expr="0x202">
			<x path="Int"/>
			<meta><m n=":value"><e>0x202</e></m></meta>
		</SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1" expr="0x1001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1001</e></m></meta>
		</CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1" expr="0x1002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</CONE_OUTER_ANGLE>
		<PITCH public="1" expr="0x1003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</PITCH>
		<POSITION public="1" expr="0x1004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</POSITION>
		<DIRECTION public="1" expr="0x1005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DIRECTION>
		<VELOCITY public="1" expr="0x1006">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</VELOCITY>
		<LOOPING public="1" expr="0x1007">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</LOOPING>
		<BUFFER public="1" expr="0x1009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</BUFFER>
		<GAIN public="1" expr="0x100A">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100A</e></m></meta>
		</GAIN>
		<MIN_GAIN public="1" expr="0x100D">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100D</e></m></meta>
		</MIN_GAIN>
		<MAX_GAIN public="1" expr="0x100E">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100E</e></m></meta>
		</MAX_GAIN>
		<ORIENTATION public="1" expr="0x100F">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100F</e></m></meta>
		</ORIENTATION>
		<SOURCE_STATE public="1" expr="0x1010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</SOURCE_STATE>
		<INITIAL public="1" expr="0x1011">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</INITIAL>
		<PLAYING public="1" expr="0x1012">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</PLAYING>
		<PAUSED public="1" expr="0x1013">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</PAUSED>
		<STOPPED public="1" expr="0x1014">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1014</e></m></meta>
		</STOPPED>
		<BUFFERS_QUEUED public="1" expr="0x1015">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1015</e></m></meta>
		</BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1" expr="0x1016">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1016</e></m></meta>
		</BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1" expr="0x1020">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1020</e></m></meta>
		</REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1" expr="0x1021">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1021</e></m></meta>
		</ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1" expr="0x1022">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1022</e></m></meta>
		</CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1" expr="0x1023">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1023</e></m></meta>
		</MAX_DISTANCE>
		<SEC_OFFSET public="1" expr="0x1024">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1024</e></m></meta>
		</SEC_OFFSET>
		<SAMPLE_OFFSET public="1" expr="0x1025">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1025</e></m></meta>
		</SAMPLE_OFFSET>
		<BYTE_OFFSET public="1" expr="0x1026">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1026</e></m></meta>
		</BYTE_OFFSET>
		<SOURCE_TYPE public="1" expr="0x1027">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1027</e></m></meta>
		</SOURCE_TYPE>
		<STATIC public="1" expr="0x1028">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1028</e></m></meta>
		</STATIC>
		<STREAMING public="1" expr="0x1029">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1029</e></m></meta>
		</STREAMING>
		<UNDETERMINED public="1" expr="0x1030">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1030</e></m></meta>
		</UNDETERMINED>
		<FORMAT_MONO8 public="1" expr="0x1100">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</FORMAT_MONO8>
		<FORMAT_MONO16 public="1" expr="0x1101">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FORMAT_MONO16>
		<FORMAT_STEREO8 public="1" expr="0x1102">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1" expr="0x1103">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1103</e></m></meta>
		</FORMAT_STEREO16>
		<FREQUENCY public="1" expr="0x2001">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2001</e></m></meta>
		</FREQUENCY>
		<BITS public="1" expr="0x2002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2002</e></m></meta>
		</BITS>
		<CHANNELS public="1" expr="0x2003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2003</e></m></meta>
		</CHANNELS>
		<SIZE public="1" expr="0x2004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2004</e></m></meta>
		</SIZE>
		<NO_ERROR public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_NAME public="1" expr="0xA001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_NAME>
		<INVALID_ENUM public="1" expr="0xA002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" expr="0xA003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" expr="0xA004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" expr="0xA005">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<VENDOR public="1" expr="0xB001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB001</e></m></meta>
		</VENDOR>
		<VERSION public="1" expr="0xB002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB002</e></m></meta>
		</VERSION>
		<RENDERER public="1" expr="0xB003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB003</e></m></meta>
		</RENDERER>
		<EXTENSIONS public="1" expr="0xB004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB004</e></m></meta>
		</EXTENSIONS>
		<DOPPLER_FACTOR public="1" expr="0xC000">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC000</e></m></meta>
		</DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1" expr="0xC003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC003</e></m></meta>
		</SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1" expr="0xC001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC001</e></m></meta>
		</DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1" expr="0xD000">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD000</e></m></meta>
		</DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1" expr="0xD001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD001</e></m></meta>
		</INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1" expr="0xD002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD002</e></m></meta>
		</INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1" expr="0xD003">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD003</e></m></meta>
		</LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1" expr="0xD004">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD004</e></m></meta>
		</LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1" expr="0xD005">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD005</e></m></meta>
		</EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1" expr="0xD006">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD006</e></m></meta>
		</EXPONENT_DISTANCE_CLAMPED>
		<REFRESH public="1" expr="0x1008">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1008</e></m></meta>
		</REFRESH>
		<SYNC public="1" expr="0x1009">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</SYNC>
		<MONO_SOURCES public="1" expr="0x1010">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</MONO_SOURCES>
		<STEREO_SOURCES public="1" expr="0x1011">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</STEREO_SOURCES>
		<INVALID_DEVICE public="1" expr="0xA001">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_DEVICE>
		<INVALID_CONTEXT public="1" expr="0xA002">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_CONTEXT>
		<ATTRIBUTES_SIZE public="1" expr="0x1002">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1" expr="0x1003">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1" expr="0x1004">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1" expr="0x1005">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DEVICE_SPECIFIER>
		<ENUMERATE_ALL_EXT public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1" expr="0x1012">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1" expr="0x1013">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</ALL_DEVICES_SPECIFIER>
		<bufferData public="1" set="method" line="96"><f a="buffer:format:data:size:freq">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="101"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="106"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="111"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="116"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="121"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="126"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<closeDevice public="1" set="method" line="131"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="136">
			<f a="device:?attrlist" v=":null">
				<x path="lime.media.openal.ALDevice"/>
				<c path="Array"><x path="Int"/></c>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta><m n=":value"><e>{ attrlist : null }</e></m></meta>
		</createContext>
		<createBuffer public="1" set="method" line="141"><f a=""><x path="lime.media.openal.ALBuffer"/></f></createBuffer>
		<createSource public="1" set="method" line="146"><f a=""><x path="lime.media.openal.ALSource"/></f></createSource>
		<deleteBuffer public="1" set="method" line="151"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="156"><f a="buffers">
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="161"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="166"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></deleteSources>
		<destroyContext public="1" set="method" line="171"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<disable public="1" set="method" line="177"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="182"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="187"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="192"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<enable public="1" set="method" line="197"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="202">
			<f a=""><x path="lime.media.openal.ALSource"/></f>
			<meta><m n=":deprecated"/></meta>
		</genSource>
		<genSources public="1" set="method" line="207"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="212">
			<f a=""><x path="lime.media.openal.ALBuffer"/></f>
			<meta><m n=":deprecated"/></meta>
		</genBuffer>
		<genBuffers public="1" set="method" line="217"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="222"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="227">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Bool"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBooleanv>
		<getBuffer3f public="1" set="method" line="232"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="237"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="242"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="247">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferfv>
		<getBufferi public="1" set="method" line="252"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="257">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferiv>
		<getContextsDevice public="1" set="method" line="262"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="lime.media.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="268"><f a=""><x path="lime.media.openal.ALContext"/></f></getCurrentContext>
		<getDouble public="1" set="method" line="273"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="278">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getDoublev>
		<getEnumValue public="1" set="method" line="283"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="288">
			<f a="?device" v="null">
				<x path="lime.media.openal.ALDevice"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ device : null }</e></m></meta>
		</getError>
		<getErrorString public="1" set="method" line="300">
			<f a="?device" v="null">
				<x path="lime.media.openal.ALDevice"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ device : null }</e></m></meta>
		</getErrorString>
		<getFloat public="1" set="method" line="312"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="317">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getFloatv>
		<getInteger public="1" set="method" line="322"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="327">
			<f a="param:?count:?device" v=":1:null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.media.openal.ALDevice"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ device : null, count : 1 }</e></m></meta>
		</getIntegerv>
		<getListener3f public="1" set="method" line="339"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="344"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="349"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="354">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListenerfv>
		<getListeneri public="1" set="method" line="359"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="364">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListeneriv>
		<getProcAddress public="1" set="method" line="369"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="374"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="379"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="384"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="389">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourcefv>
		<getSourcei public="1" set="method" line="394"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="399">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourceiv>
		<getString public="1" set="method" line="404">
			<f a="param:?device" v=":null">
				<x path="Int"/>
				<x path="lime.media.openal.ALDevice"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ device : null }</e></m></meta>
		</getString>
		<isBuffer public="1" set="method" line="416"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="421"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="426"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isSource public="1" set="method" line="431"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="436"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="441"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="446"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="451"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="456"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="461"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<makeContextCurrent public="1" set="method" line="466"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="471">
			<f a="?deviceName" v="null">
				<c path="String"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta><m n=":value"><e>{ deviceName : null }</e></m></meta>
		</openDevice>
		<pauseDevice public="1" set="method" line="476"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></pauseDevice>
		<processContext public="1" set="method" line="481"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<resumeDevice public="1" set="method" line="486"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></resumeDevice>
		<source3f public="1" set="method" line="491"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="496"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="501"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="506"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="511"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></sourcei>
		<sourceiv public="1" set="method" line="516"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="521"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="526"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="531"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="536"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="541"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="546"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="551"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="556"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="561"><f a="source:buffer">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="566"><f a="source:nb:buffers">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="571"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="576"><f a="source:nb">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="581"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
		<suspendContext public="1" set="method" line="586"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
		<new set="method" line="94">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.openal.AL" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/AL.hx">
		<NONE public="1" get="inline" set="null" expr="0" line="15" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FALSE public="1" get="inline" set="null" expr="0" line="16" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" get="inline" set="null" expr="1" line="17" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<SOURCE_RELATIVE public="1" get="inline" set="null" expr="0x202" line="18" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x202</e></m></meta>
		</SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1" get="inline" set="null" expr="0x1001" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1001</e></m></meta>
		</CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1" get="inline" set="null" expr="0x1002" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</CONE_OUTER_ANGLE>
		<PITCH public="1" get="inline" set="null" expr="0x1003" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</PITCH>
		<POSITION public="1" get="inline" set="null" expr="0x1004" line="22" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</POSITION>
		<DIRECTION public="1" get="inline" set="null" expr="0x1005" line="23" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DIRECTION>
		<VELOCITY public="1" get="inline" set="null" expr="0x1006" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</VELOCITY>
		<LOOPING public="1" get="inline" set="null" expr="0x1007" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</LOOPING>
		<BUFFER public="1" get="inline" set="null" expr="0x1009" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</BUFFER>
		<GAIN public="1" get="inline" set="null" expr="0x100A" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100A</e></m></meta>
		</GAIN>
		<MIN_GAIN public="1" get="inline" set="null" expr="0x100D" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100D</e></m></meta>
		</MIN_GAIN>
		<MAX_GAIN public="1" get="inline" set="null" expr="0x100E" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100E</e></m></meta>
		</MAX_GAIN>
		<ORIENTATION public="1" get="inline" set="null" expr="0x100F" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x100F</e></m></meta>
		</ORIENTATION>
		<SOURCE_STATE public="1" get="inline" set="null" expr="0x1010" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</SOURCE_STATE>
		<INITIAL public="1" get="inline" set="null" expr="0x1011" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</INITIAL>
		<PLAYING public="1" get="inline" set="null" expr="0x1012" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</PLAYING>
		<PAUSED public="1" get="inline" set="null" expr="0x1013" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</PAUSED>
		<STOPPED public="1" get="inline" set="null" expr="0x1014" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1014</e></m></meta>
		</STOPPED>
		<BUFFERS_QUEUED public="1" get="inline" set="null" expr="0x1015" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1015</e></m></meta>
		</BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1" get="inline" set="null" expr="0x1016" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1016</e></m></meta>
		</BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1" get="inline" set="null" expr="0x1020" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1020</e></m></meta>
		</REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1" get="inline" set="null" expr="0x1021" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1021</e></m></meta>
		</ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1" get="inline" set="null" expr="0x1022" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1022</e></m></meta>
		</CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1" get="inline" set="null" expr="0x1023" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1023</e></m></meta>
		</MAX_DISTANCE>
		<SEC_OFFSET public="1" get="inline" set="null" expr="0x1024" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1024</e></m></meta>
		</SEC_OFFSET>
		<SAMPLE_OFFSET public="1" get="inline" set="null" expr="0x1025" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1025</e></m></meta>
		</SAMPLE_OFFSET>
		<BYTE_OFFSET public="1" get="inline" set="null" expr="0x1026" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1026</e></m></meta>
		</BYTE_OFFSET>
		<SOURCE_TYPE public="1" get="inline" set="null" expr="0x1027" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1027</e></m></meta>
		</SOURCE_TYPE>
		<STATIC public="1" get="inline" set="null" expr="0x1028" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1028</e></m></meta>
		</STATIC>
		<STREAMING public="1" get="inline" set="null" expr="0x1029" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1029</e></m></meta>
		</STREAMING>
		<UNDETERMINED public="1" get="inline" set="null" expr="0x1030" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1030</e></m></meta>
		</UNDETERMINED>
		<FORMAT_MONO8 public="1" get="inline" set="null" expr="0x1100" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</FORMAT_MONO8>
		<FORMAT_MONO16 public="1" get="inline" set="null" expr="0x1101" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FORMAT_MONO16>
		<FORMAT_STEREO8 public="1" get="inline" set="null" expr="0x1102" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1" get="inline" set="null" expr="0x1103" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1103</e></m></meta>
		</FORMAT_STEREO16>
		<FREQUENCY public="1" get="inline" set="null" expr="0x2001" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2001</e></m></meta>
		</FREQUENCY>
		<BITS public="1" get="inline" set="null" expr="0x2002" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2002</e></m></meta>
		</BITS>
		<CHANNELS public="1" get="inline" set="null" expr="0x2003" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2003</e></m></meta>
		</CHANNELS>
		<SIZE public="1" get="inline" set="null" expr="0x2004" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2004</e></m></meta>
		</SIZE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_NAME public="1" get="inline" set="null" expr="0xA001" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_NAME>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0xA002" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0xA003" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="0xA004" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0xA005" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<VENDOR public="1" get="inline" set="null" expr="0xB001" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB001</e></m></meta>
		</VENDOR>
		<VERSION public="1" get="inline" set="null" expr="0xB002" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB002</e></m></meta>
		</VERSION>
		<RENDERER public="1" get="inline" set="null" expr="0xB003" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB003</e></m></meta>
		</RENDERER>
		<EXTENSIONS public="1" get="inline" set="null" expr="0xB004" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xB004</e></m></meta>
		</EXTENSIONS>
		<DOPPLER_FACTOR public="1" get="inline" set="null" expr="0xC000" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC000</e></m></meta>
		</DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1" get="inline" set="null" expr="0xC003" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC003</e></m></meta>
		</SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1" get="inline" set="null" expr="0xC001" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xC001</e></m></meta>
		</DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1" get="inline" set="null" expr="0xD000" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD000</e></m></meta>
		</DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1" get="inline" set="null" expr="0xD001" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD001</e></m></meta>
		</INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD002" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD002</e></m></meta>
		</INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1" get="inline" set="null" expr="0xD003" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD003</e></m></meta>
		</LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD004" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD004</e></m></meta>
		</LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1" get="inline" set="null" expr="0xD005" line="75" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD005</e></m></meta>
		</EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1" get="inline" set="null" expr="0xD006" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD006</e></m></meta>
		</EXPONENT_DISTANCE_CLAMPED>
		<METERS_PER_UNIT public="1" get="inline" set="null" expr="0x20004" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20004</e></m></meta>
		</METERS_PER_UNIT>
		<DIRECT_FILTER public="1" get="inline" set="null" expr="0x20005" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20005</e></m></meta>
		</DIRECT_FILTER>
		<AUXILIARY_SEND_FILTER public="1" get="inline" set="null" expr="0x20006" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20006</e></m></meta>
		</AUXILIARY_SEND_FILTER>
		<AIR_ABSORPTION_FACTOR public="1" get="inline" set="null" expr="0x20007" line="82" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20007</e></m></meta>
		</AIR_ABSORPTION_FACTOR>
		<ROOM_ROLLOFF_FACTOR public="1" get="inline" set="null" expr="0x20008" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20008</e></m></meta>
		</ROOM_ROLLOFF_FACTOR>
		<CONE_OUTER_GAINHF public="1" get="inline" set="null" expr="0x20009" line="84" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x20009</e></m></meta>
		</CONE_OUTER_GAINHF>
		<DIRECT_FILTER_GAINHF_AUTO public="1" get="inline" set="null" expr="0x2000A" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2000A</e></m></meta>
		</DIRECT_FILTER_GAINHF_AUTO>
		<AUXILIARY_SEND_FILTER_GAIN_AUTO public="1" get="inline" set="null" expr="0x2000B" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2000B</e></m></meta>
		</AUXILIARY_SEND_FILTER_GAIN_AUTO>
		<AUXILIARY_SEND_FILTER_GAINHF_AUTO public="1" get="inline" set="null" expr="0x2000C" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2000C</e></m></meta>
		</AUXILIARY_SEND_FILTER_GAINHF_AUTO>
		<REVERB_DENSITY public="1" get="inline" set="null" expr="0x0001" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</REVERB_DENSITY>
		<REVERB_DIFFUSION public="1" get="inline" set="null" expr="0x0002" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</REVERB_DIFFUSION>
		<REVERB_GAIN public="1" get="inline" set="null" expr="0x0003" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</REVERB_GAIN>
		<REVERB_GAINHF public="1" get="inline" set="null" expr="0x0004" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</REVERB_GAINHF>
		<REVERB_DECAY_TIME public="1" get="inline" set="null" expr="0x0005" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</REVERB_DECAY_TIME>
		<REVERB_DECAY_HFRATIO public="1" get="inline" set="null" expr="0x0006" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</REVERB_DECAY_HFRATIO>
		<REVERB_REFLECTIONS_GAIN public="1" get="inline" set="null" expr="0x0007" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0007</e></m></meta>
		</REVERB_REFLECTIONS_GAIN>
		<REVERB_REFLECTIONS_DELAY public="1" get="inline" set="null" expr="0x0008" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</REVERB_REFLECTIONS_DELAY>
		<REVERB_LATE_REVERB_GAIN public="1" get="inline" set="null" expr="0x0009" line="98" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0009</e></m></meta>
		</REVERB_LATE_REVERB_GAIN>
		<REVERB_LATE_REVERB_DELAY public="1" get="inline" set="null" expr="0x000A" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000A</e></m></meta>
		</REVERB_LATE_REVERB_DELAY>
		<REVERB_AIR_ABSORPTION_GAINHF public="1" get="inline" set="null" expr="0x000B" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000B</e></m></meta>
		</REVERB_AIR_ABSORPTION_GAINHF>
		<REVERB_ROOM_ROLLOFF_FACTOR public="1" get="inline" set="null" expr="0x000C" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000C</e></m></meta>
		</REVERB_ROOM_ROLLOFF_FACTOR>
		<REVERB_DECAY_HFLIMIT public="1" get="inline" set="null" expr="0x000D" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000D</e></m></meta>
		</REVERB_DECAY_HFLIMIT>
		<EAXREVERB_DENSITY public="1" get="inline" set="null" expr="0x0001" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</EAXREVERB_DENSITY>
		<EAXREVERB_DIFFUSION public="1" get="inline" set="null" expr="0x0002" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</EAXREVERB_DIFFUSION>
		<EAXREVERB_GAIN public="1" get="inline" set="null" expr="0x0003" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</EAXREVERB_GAIN>
		<EAXREVERB_GAINHF public="1" get="inline" set="null" expr="0x0004" line="107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</EAXREVERB_GAINHF>
		<EAXREVERB_GAINLF public="1" get="inline" set="null" expr="0x0005" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</EAXREVERB_GAINLF>
		<EAXREVERB_DECAY_TIME public="1" get="inline" set="null" expr="0x0006" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</EAXREVERB_DECAY_TIME>
		<EAXREVERB_DECAY_HFRATIO public="1" get="inline" set="null" expr="0x0007" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0007</e></m></meta>
		</EAXREVERB_DECAY_HFRATIO>
		<EAXREVERB_DECAY_LFRATIO public="1" get="inline" set="null" expr="0x0008" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</EAXREVERB_DECAY_LFRATIO>
		<EAXREVERB_REFLECTIONS_GAIN public="1" get="inline" set="null" expr="0x0009" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0009</e></m></meta>
		</EAXREVERB_REFLECTIONS_GAIN>
		<EAXREVERB_REFLECTIONS_DELAY public="1" get="inline" set="null" expr="0x000A" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000A</e></m></meta>
		</EAXREVERB_REFLECTIONS_DELAY>
		<EAXREVERB_REFLECTIONS_PAN public="1" get="inline" set="null" expr="0x000B" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000B</e></m></meta>
		</EAXREVERB_REFLECTIONS_PAN>
		<EAXREVERB_LATE_REVERB_GAIN public="1" get="inline" set="null" expr="0x000C" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000C</e></m></meta>
		</EAXREVERB_LATE_REVERB_GAIN>
		<EAXREVERB_LATE_REVERB_DELAY public="1" get="inline" set="null" expr="0x000D" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000D</e></m></meta>
		</EAXREVERB_LATE_REVERB_DELAY>
		<EAXREVERB_LATE_REVERB_PAN public="1" get="inline" set="null" expr="0x000E" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000E</e></m></meta>
		</EAXREVERB_LATE_REVERB_PAN>
		<EAXREVERB_ECHO_TIME public="1" get="inline" set="null" expr="0x000F" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000F</e></m></meta>
		</EAXREVERB_ECHO_TIME>
		<EAXREVERB_ECHO_DEPTH public="1" get="inline" set="null" expr="0x0010" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0010</e></m></meta>
		</EAXREVERB_ECHO_DEPTH>
		<EAXREVERB_MODULATION_TIME public="1" get="inline" set="null" expr="0x0011" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0011</e></m></meta>
		</EAXREVERB_MODULATION_TIME>
		<EAXREVERB_MODULATION_DEPTH public="1" get="inline" set="null" expr="0x0012" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0012</e></m></meta>
		</EAXREVERB_MODULATION_DEPTH>
		<EAXREVERB_AIR_ABSORPTION_GAINHF public="1" get="inline" set="null" expr="0x0013" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0013</e></m></meta>
		</EAXREVERB_AIR_ABSORPTION_GAINHF>
		<EAXREVERB_HFREFERENCE public="1" get="inline" set="null" expr="0x0014" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0014</e></m></meta>
		</EAXREVERB_HFREFERENCE>
		<EAXREVERB_LFREFERENCE public="1" get="inline" set="null" expr="0x0015" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0015</e></m></meta>
		</EAXREVERB_LFREFERENCE>
		<EAXREVERB_ROOM_ROLLOFF_FACTOR public="1" get="inline" set="null" expr="0x0016" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0016</e></m></meta>
		</EAXREVERB_ROOM_ROLLOFF_FACTOR>
		<EAXREVERB_DECAY_HFLIMIT public="1" get="inline" set="null" expr="0x0017" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0017</e></m></meta>
		</EAXREVERB_DECAY_HFLIMIT>
		<CHORUS_WAVEFORM public="1" get="inline" set="null" expr="0x0001" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</CHORUS_WAVEFORM>
		<CHORUS_PHASE public="1" get="inline" set="null" expr="0x0002" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</CHORUS_PHASE>
		<CHORUS_RATE public="1" get="inline" set="null" expr="0x0003" line="130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</CHORUS_RATE>
		<CHORUS_DEPTH public="1" get="inline" set="null" expr="0x0004" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</CHORUS_DEPTH>
		<CHORUS_FEEDBACK public="1" get="inline" set="null" expr="0x0005" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</CHORUS_FEEDBACK>
		<CHORUS_DELAY public="1" get="inline" set="null" expr="0x0006" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</CHORUS_DELAY>
		<DISTORTION_EDGE public="1" get="inline" set="null" expr="0x0001" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</DISTORTION_EDGE>
		<DISTORTION_GAIN public="1" get="inline" set="null" expr="0x0002" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</DISTORTION_GAIN>
		<DISTORTION_LOWPASS_CUTOFF public="1" get="inline" set="null" expr="0x0003" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</DISTORTION_LOWPASS_CUTOFF>
		<DISTORTION_EQCENTER public="1" get="inline" set="null" expr="0x0004" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</DISTORTION_EQCENTER>
		<DISTORTION_EQBANDWIDTH public="1" get="inline" set="null" expr="0x0005" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</DISTORTION_EQBANDWIDTH>
		<ECHO_DELAY public="1" get="inline" set="null" expr="0x0001" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</ECHO_DELAY>
		<ECHO_LRDELAY public="1" get="inline" set="null" expr="0x0002" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</ECHO_LRDELAY>
		<ECHO_DAMPING public="1" get="inline" set="null" expr="0x0003" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</ECHO_DAMPING>
		<ECHO_FEEDBACK public="1" get="inline" set="null" expr="0x0004" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</ECHO_FEEDBACK>
		<ECHO_SPREAD public="1" get="inline" set="null" expr="0x0005" line="145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</ECHO_SPREAD>
		<FLANGER_WAVEFORM public="1" get="inline" set="null" expr="0x0001" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</FLANGER_WAVEFORM>
		<FLANGER_PHASE public="1" get="inline" set="null" expr="0x0002" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</FLANGER_PHASE>
		<FLANGER_RATE public="1" get="inline" set="null" expr="0x0003" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</FLANGER_RATE>
		<FLANGER_DEPTH public="1" get="inline" set="null" expr="0x0004" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</FLANGER_DEPTH>
		<FLANGER_FEEDBACK public="1" get="inline" set="null" expr="0x0005" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</FLANGER_FEEDBACK>
		<FLANGER_DELAY public="1" get="inline" set="null" expr="0x0006" line="152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</FLANGER_DELAY>
		<FREQUENCY_SHIFTER_FREQUENCY public="1" get="inline" set="null" expr="0x0001" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</FREQUENCY_SHIFTER_FREQUENCY>
		<FREQUENCY_SHIFTER_LEFT_DIRECTION public="1" get="inline" set="null" expr="0x0002" line="155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</FREQUENCY_SHIFTER_LEFT_DIRECTION>
		<FREQUENCY_SHIFTER_RIGHT_DIRECTION public="1" get="inline" set="null" expr="0x0003" line="156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</FREQUENCY_SHIFTER_RIGHT_DIRECTION>
		<VOCAL_MORPHER_PHONEMEA public="1" get="inline" set="null" expr="0x0001" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</VOCAL_MORPHER_PHONEMEA>
		<VOCAL_MORPHER_PHONEMEA_COARSE_TUNING public="1" get="inline" set="null" expr="0x0002" line="159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</VOCAL_MORPHER_PHONEMEA_COARSE_TUNING>
		<VOCAL_MORPHER_PHONEMEB public="1" get="inline" set="null" expr="0x0003" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</VOCAL_MORPHER_PHONEMEB>
		<VOCAL_MORPHER_PHONEMEB_COARSE_TUNING public="1" get="inline" set="null" expr="0x0004" line="161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</VOCAL_MORPHER_PHONEMEB_COARSE_TUNING>
		<VOCAL_MORPHER_WAVEFORM public="1" get="inline" set="null" expr="0x0005" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</VOCAL_MORPHER_WAVEFORM>
		<VOCAL_MORPHER_RATE public="1" get="inline" set="null" expr="0x0006" line="163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</VOCAL_MORPHER_RATE>
		<PITCH_SHIFTER_COARSE_TUNE public="1" get="inline" set="null" expr="0x0001" line="165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</PITCH_SHIFTER_COARSE_TUNE>
		<PITCH_SHIFTER_FINE_TUNE public="1" get="inline" set="null" expr="0x0002" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</PITCH_SHIFTER_FINE_TUNE>
		<RING_MODULATOR_FREQUENCY public="1" get="inline" set="null" expr="0x0001" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</RING_MODULATOR_FREQUENCY>
		<RING_MODULATOR_HIGHPASS_CUTOFF public="1" get="inline" set="null" expr="0x0002" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</RING_MODULATOR_HIGHPASS_CUTOFF>
		<RING_MODULATOR_WAVEFORM public="1" get="inline" set="null" expr="0x0003" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</RING_MODULATOR_WAVEFORM>
		<AUTOWAH_ATTACK_TIME public="1" get="inline" set="null" expr="0x0001" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</AUTOWAH_ATTACK_TIME>
		<AUTOWAH_RELEASE_TIME public="1" get="inline" set="null" expr="0x0002" line="173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</AUTOWAH_RELEASE_TIME>
		<AUTOWAH_RESONANCE public="1" get="inline" set="null" expr="0x0003" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</AUTOWAH_RESONANCE>
		<AUTOWAH_PEAK_GAIN public="1" get="inline" set="null" expr="0x0004" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</AUTOWAH_PEAK_GAIN>
		<COMPRESSOR_ONOFF public="1" get="inline" set="null" expr="0x0001" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</COMPRESSOR_ONOFF>
		<EQUALIZER_LOW_GAIN public="1" get="inline" set="null" expr="0x0001" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</EQUALIZER_LOW_GAIN>
		<EQUALIZER_LOW_CUTOFF public="1" get="inline" set="null" expr="0x0002" line="180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</EQUALIZER_LOW_CUTOFF>
		<EQUALIZER_MID1_GAIN public="1" get="inline" set="null" expr="0x0003" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</EQUALIZER_MID1_GAIN>
		<EQUALIZER_MID1_CENTER public="1" get="inline" set="null" expr="0x0004" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</EQUALIZER_MID1_CENTER>
		<EQUALIZER_MID1_WIDTH public="1" get="inline" set="null" expr="0x0005" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</EQUALIZER_MID1_WIDTH>
		<EQUALIZER_MID2_GAIN public="1" get="inline" set="null" expr="0x0006" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</EQUALIZER_MID2_GAIN>
		<EQUALIZER_MID2_CENTER public="1" get="inline" set="null" expr="0x0007" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0007</e></m></meta>
		</EQUALIZER_MID2_CENTER>
		<EQUALIZER_MID2_WIDTH public="1" get="inline" set="null" expr="0x0008" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</EQUALIZER_MID2_WIDTH>
		<EQUALIZER_HIGH_GAIN public="1" get="inline" set="null" expr="0x0009" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0009</e></m></meta>
		</EQUALIZER_HIGH_GAIN>
		<EQUALIZER_HIGH_CUTOFF public="1" get="inline" set="null" expr="0x000A" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000A</e></m></meta>
		</EQUALIZER_HIGH_CUTOFF>
		<EFFECT_FIRST_PARAMETER public="1" get="inline" set="null" expr="0x0000" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</EFFECT_FIRST_PARAMETER>
		<EFFECT_LAST_PARAMETER public="1" get="inline" set="null" expr="0x8000" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8000</e></m></meta>
		</EFFECT_LAST_PARAMETER>
		<EFFECT_TYPE public="1" get="inline" set="null" expr="0x8001" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</EFFECT_TYPE>
		<EFFECT_NULL public="1" get="inline" set="null" expr="0x0000" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</EFFECT_NULL>
		<EFFECT_EAXREVERB public="1" get="inline" set="null" expr="0x8000" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8000</e></m></meta>
		</EFFECT_EAXREVERB>
		<EFFECT_REVERB public="1" get="inline" set="null" expr="0x0001" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</EFFECT_REVERB>
		<EFFECT_CHORUS public="1" get="inline" set="null" expr="0x0002" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</EFFECT_CHORUS>
		<EFFECT_DISTORTION public="1" get="inline" set="null" expr="0x0003" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</EFFECT_DISTORTION>
		<EFFECT_ECHO public="1" get="inline" set="null" expr="0x0004" line="199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</EFFECT_ECHO>
		<EFFECT_FLANGER public="1" get="inline" set="null" expr="0x0005" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</EFFECT_FLANGER>
		<EFFECT_FREQUENCY_SHIFTER public="1" get="inline" set="null" expr="0x0006" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</EFFECT_FREQUENCY_SHIFTER>
		<EFFECT_VOCAL_MORPHER public="1" get="inline" set="null" expr="0x0007" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0007</e></m></meta>
		</EFFECT_VOCAL_MORPHER>
		<EFFECT_PITCH_SHIFTER public="1" get="inline" set="null" expr="0x0008" line="203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0008</e></m></meta>
		</EFFECT_PITCH_SHIFTER>
		<EFFECT_RING_MODULATOR public="1" get="inline" set="null" expr="0x0009" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0009</e></m></meta>
		</EFFECT_RING_MODULATOR>
		<FFECT_AUTOWAH public="1" get="inline" set="null" expr="0x000A" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000A</e></m></meta>
		</FFECT_AUTOWAH>
		<EFFECT_COMPRESSOR public="1" get="inline" set="null" expr="0x000B" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000B</e></m></meta>
		</EFFECT_COMPRESSOR>
		<EFFECT_EQUALIZER public="1" get="inline" set="null" expr="0x000C" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x000C</e></m></meta>
		</EFFECT_EQUALIZER>
		<EFFECTSLOT_EFFECT public="1" get="inline" set="null" expr="0x0001" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</EFFECTSLOT_EFFECT>
		<EFFECTSLOT_GAIN public="1" get="inline" set="null" expr="0x0002" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</EFFECTSLOT_GAIN>
		<EFFECTSLOT_AUXILIARY_SEND_AUTO public="1" get="inline" set="null" expr="0x0003" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</EFFECTSLOT_AUXILIARY_SEND_AUTO>
		<LOWPASS_GAIN public="1" get="inline" set="null" expr="0x0001" line="216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LOWPASS_GAIN>
		<LOWPASS_GAINHF public="1" get="inline" set="null" expr="0x0002" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LOWPASS_GAINHF>
		<HIGHPASS_GAIN public="1" get="inline" set="null" expr="0x0001" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</HIGHPASS_GAIN>
		<HIGHPASS_GAINLF public="1" get="inline" set="null" expr="0x0002" line="220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</HIGHPASS_GAINLF>
		<BANDPASS_GAIN public="1" get="inline" set="null" expr="0x0001" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</BANDPASS_GAIN>
		<BANDPASS_GAINLF public="1" get="inline" set="null" expr="0x0002" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</BANDPASS_GAINLF>
		<BANDPASS_GAINHF public="1" get="inline" set="null" expr="0x0003" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</BANDPASS_GAINHF>
		<FILTER_FIRST_PARAMETER public="1" get="inline" set="null" expr="0x0000" line="226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</FILTER_FIRST_PARAMETER>
		<FILTER_LAST_PARAMETER public="1" get="inline" set="null" expr="0x8000" line="227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8000</e></m></meta>
		</FILTER_LAST_PARAMETER>
		<FILTER_TYPE public="1" get="inline" set="null" expr="0x8001" line="228" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</FILTER_TYPE>
		<FILTER_NULL public="1" get="inline" set="null" expr="0x0000" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</FILTER_NULL>
		<FILTER_LOWPASS public="1" get="inline" set="null" expr="0x0001" line="231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</FILTER_LOWPASS>
		<FILTER_HIGHPASS public="1" get="inline" set="null" expr="0x0002" line="232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</FILTER_HIGHPASS>
		<FILTER_BANDPASS public="1" get="inline" set="null" expr="0x0003" line="233" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</FILTER_BANDPASS>
		<removeDirectFilter public="1" set="method" line="235" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></removeDirectFilter>
		<removeSend public="1" set="method" line="242" static="1"><f a="source:index">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Void"/>
</f></removeSend>
		<auxf public="1" set="method" line="249" static="1"><f a="aux:param:value">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></auxf>
		<auxfv public="1" set="method" line="256" static="1"><f a="aux:param:values">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></auxfv>
		<auxi public="1" set="method" line="269" static="1"><f a="aux:param:value">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></auxi>
		<auxiv public="1" set="method" line="276" static="1"><f a="aux:param:values">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></auxiv>
		<bufferData public="1" set="method" line="289" static="1"><f a="buffer:format:data:size:freq">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="lime.utils.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="296" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="303" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="310" static="1"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="317" static="1"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="330" static="1"><f a="buffer:param:value">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="337" static="1"><f a="buffer:param:values">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<createAux public="1" set="method" line="350" static="1"><f a=""><x path="lime.media.openal.ALAuxiliaryEffectSlot"/></f></createAux>
		<createBuffer public="1" set="method" line="359" static="1"><f a=""><x path="lime.media.openal.ALBuffer"/></f></createBuffer>
		<createEffect public="1" set="method" line="368" static="1"><f a=""><x path="lime.media.openal.ALEffect"/></f></createEffect>
		<createFilter public="1" set="method" line="377" static="1"><f a=""><x path="lime.media.openal.ALFilter"/></f></createFilter>
		<createSource public="1" set="method" line="386" static="1"><f a=""><x path="lime.media.openal.ALSource"/></f></createSource>
		<deleteBuffer public="1" set="method" line="395" static="1"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="402" static="1"><f a="buffers">
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="415" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="422" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></deleteSources>
		<disable public="1" set="method" line="435" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="442" static="1"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="449" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="456" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<effectf public="1" set="method" line="463" static="1"><f a="effect:param:value">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></effectf>
		<effectfv public="1" set="method" line="470" static="1"><f a="effect:param:values">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></effectfv>
		<effecti public="1" set="method" line="483" static="1"><f a="effect:param:value">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></effecti>
		<effectiv public="1" set="method" line="490" static="1"><f a="effect:param:values">
	<x path="lime.system.CFFIPointer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></effectiv>
		<enable public="1" set="method" line="503" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="510" static="1">
			<f a=""><x path="lime.media.openal.ALSource"/></f>
			<meta><m n=":deprecated"><e>"genSource has been renamed to 'createSource' for consistency with OpenGL"</e></m></meta>
		</genSource>
		<genSources public="1" set="method" line="519" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="537" static="1">
			<f a=""><x path="lime.media.openal.ALBuffer"/></f>
			<meta><m n=":deprecated"><e>"genBuffer has been renamed to 'createBuffer' for consistency with OpenGL"</e></m></meta>
		</genBuffer>
		<genBuffers public="1" set="method" line="546" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="564" static="1"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="573" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Bool"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBooleanv>
		<getBuffer3f public="1" set="method" line="591" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="609" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="627" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="636" static="1">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferfv>
		<getBufferi public="1" set="method" line="654" static="1"><f a="buffer:param">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="663" static="1">
			<f a="buffer:param:?count" v="::1">
				<x path="lime.media.openal.ALBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getBufferiv>
		<getDouble public="1" set="method" line="681" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="690" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getDoublev>
		<getEnumValue public="1" set="method" line="708" static="1"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="717" static="1"><f a=""><x path="Int"/></f></getError>
		<getErrorString public="1" set="method" line="726" static="1"><f a=""><c path="String"/></f></getErrorString>
		<getFilteri public="1" set="method" line="739" static="1"><f a="filter:param">
	<x path="lime.media.openal.ALFilter"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFilteri>
		<getFloat public="1" set="method" line="748" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="757" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getFloatv>
		<getInteger public="1" set="method" line="775" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="784" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getIntegerv>
		<getListener3f public="1" set="method" line="802" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="820" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="838" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="847" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListenerfv>
		<getListeneri public="1" set="method" line="865" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="874" static="1">
			<f a="param:?count" v=":1">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getListeneriv>
		<getParameter public="1" set="method" line="892" static="1">
			<f a="param">
				<x path="Int"/>
				<d/>
			</f>
			<meta>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
			</meta>
		</getParameter>
		<getProcAddress public="1" set="method" line="898" static="1"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="907" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="925" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="934" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="952" static="1">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourcefv>
		<getSourcei public="1" set="method" line="970" static="1"><f a="source:param">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="979" static="1">
			<f a="source:param:?count" v="::1">
				<x path="lime.media.openal.ALSource"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":value"><e>{ count : 1 }</e></m></meta>
		</getSourceiv>
		<getString public="1" set="method" line="997" static="1"><f a="param">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<isBuffer public="1" set="method" line="1010" static="1"><f a="buffer">
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="1019" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="1028" static="1"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isAux public="1" set="method" line="1037" static="1"><f a="aux">
	<x path="lime.media.openal.ALAuxiliaryEffectSlot"/>
	<x path="Bool"/>
</f></isAux>
		<isEffect public="1" set="method" line="1046" static="1"><f a="effect">
	<x path="lime.media.openal.ALEffect"/>
	<x path="Bool"/>
</f></isEffect>
		<isFilter public="1" set="method" line="1055" static="1"><f a="filter">
	<x path="lime.media.openal.ALFilter"/>
	<x path="Bool"/>
</f></isFilter>
		<isSource public="1" set="method" line="1064" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="1073" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="1080" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="1087" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="1094" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="1107" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="1114" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<source3f public="1" set="method" line="1127" static="1"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="1134" static="1"><f a="source:param:value1:value2:value3">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="1141" static="1"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="1148" static="1"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="1161" static="1"><f a="source:param:value">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></sourcei>
		<filteri public="1" set="method" line="1168" static="1"><f a="filter:param:value">
	<x path="lime.media.openal.ALFilter"/>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></filteri>
		<filterf public="1" set="method" line="1175" static="1"><f a="filter:param:value">
	<x path="lime.media.openal.ALFilter"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></filterf>
		<sourceiv public="1" set="method" line="1182" static="1"><f a="source:param:values">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="1195" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="1202" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="1215" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="1222" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="1235" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="1242" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="1255" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="1262" static="1"><f a="sources">
	<c path="Array"><x path="lime.media.openal.ALSource"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="1275" static="1"><f a="source:buffer">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="1288" static="1"><f a="source:nb:buffers">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="1301" static="1"><f a="source">
	<x path="lime.media.openal.ALSource"/>
	<x path="lime.media.openal.ALBuffer"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="1311" static="1"><f a="source:nb">
	<x path="lime.media.openal.ALSource"/>
	<x path="Int"/>
	<c path="Array"><x path="lime.media.openal.ALBuffer"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="1329" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALAuxiliaryEffectSlot" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALAuxiliaryEffectSlot.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALAuxiliaryEffectSlot.ALAuxiliaryEffectSlot_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALAuxiliaryEffectSlot.hx" private="1" module="lime.media.openal.ALAuxiliaryEffectSlot" final="1">
	<_new get="inline" set="null" line="9" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALAuxiliaryEffectSlot"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALAuxiliaryEffectSlot.ALAuxiliaryEffectSlot_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALAuxiliaryEffectSlot.hx" private="1" module="lime.media.openal.ALAuxiliaryEffectSlot" final="1">
		<_new get="inline" set="null" line="9" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALAuxiliaryEffectSlot"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
	</class>
	<abstract path="lime.media.openal.ALBuffer" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALBuffer.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALBuffer.ALBuffer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALBuffer.hx" private="1" module="lime.media.openal.ALBuffer" final="1">
	<_new get="inline" set="null" line="9" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALBuffer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALBuffer.ALBuffer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALBuffer.hx" private="1" module="lime.media.openal.ALBuffer" final="1">
		<_new get="inline" set="null" line="9" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALBuffer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
	</class>
	<class path="lime.media.openal.ALC" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALC.hx">
		<FALSE public="1" get="inline" set="null" expr="0" line="14" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</FALSE>
		<TRUE public="1" get="inline" set="null" expr="1" line="15" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TRUE>
		<FREQUENCY public="1" get="inline" set="null" expr="0x1007" line="16" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1007</e></m></meta>
		</FREQUENCY>
		<REFRESH public="1" get="inline" set="null" expr="0x1008" line="17" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1008</e></m></meta>
		</REFRESH>
		<SYNC public="1" get="inline" set="null" expr="0x1009" line="18" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1009</e></m></meta>
		</SYNC>
		<MONO_SOURCES public="1" get="inline" set="null" expr="0x1010" line="19" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1010</e></m></meta>
		</MONO_SOURCES>
		<STEREO_SOURCES public="1" get="inline" set="null" expr="0x1011" line="20" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1011</e></m></meta>
		</STEREO_SOURCES>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="21" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_DEVICE public="1" get="inline" set="null" expr="0xA001" line="22" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA001</e></m></meta>
		</INVALID_DEVICE>
		<INVALID_CONTEXT public="1" get="inline" set="null" expr="0xA002" line="23" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA002</e></m></meta>
		</INVALID_CONTEXT>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0xA003" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA003</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0xA004" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA004</e></m></meta>
		</INVALID_VALUE>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0xA005" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xA005</e></m></meta>
		</OUT_OF_MEMORY>
		<ATTRIBUTES_SIZE public="1" get="inline" set="null" expr="0x1002" line="27" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1002</e></m></meta>
		</ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1" get="inline" set="null" expr="0x1003" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1003</e></m></meta>
		</ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1" get="inline" set="null" expr="0x1004" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1004</e></m></meta>
		</DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1" get="inline" set="null" expr="0x1005" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1005</e></m></meta>
		</DEVICE_SPECIFIER>
		<EXTENSIONS public="1" get="inline" set="null" expr="0x1006" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1006</e></m></meta>
		</EXTENSIONS>
		<ENUMERATE_ALL_EXT public="1" get="inline" set="null" expr="1" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" expr="0x1012" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1012</e></m></meta>
		</DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" expr="0x1013" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1013</e></m></meta>
		</ALL_DEVICES_SPECIFIER>
		<closeDevice public="1" set="method" line="36" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="45" static="1">
			<f a="device:?attrlist" v=":null">
				<x path="lime.media.openal.ALDevice"/>
				<c path="Array"><x path="Int"/></c>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta><m n=":value"><e>{ attrlist : null }</e></m></meta>
		</createContext>
		<destroyContext public="1" set="method" line="69" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<getContextsDevice public="1" set="method" line="76" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="lime.media.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="89" static="1"><f a=""><x path="lime.media.openal.ALContext"/></f></getCurrentContext>
		<getError public="1" set="method" line="103" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
</f></getError>
		<getErrorString public="1" set="method" line="112" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<c path="String"/>
</f></getErrorString>
		<getIntegerv public="1" set="method" line="125" static="1"><f a="device:param:size">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getString public="1" set="method" line="143" static="1"><f a="device:param">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<makeContextCurrent public="1" set="method" line="156" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="165" static="1">
			<f a="?deviceName" v="null">
				<c path="String"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta><m n=":value"><e>{ deviceName : null }</e></m></meta>
		</openDevice>
		<pauseDevice public="1" set="method" line="179" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></pauseDevice>
		<processContext public="1" set="method" line="186" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<resumeDevice public="1" set="method" line="193" static="1"><f a="device">
	<x path="lime.media.openal.ALDevice"/>
	<x path="Void"/>
</f></resumeDevice>
		<suspendContext public="1" set="method" line="200" static="1"><f a="context">
	<x path="lime.media.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALContext" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALContext.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
		</meta>
		<impl><class path="lime.media.openal._ALContext.ALContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALContext.hx" private="1" module="lime.media.openal.ALContext" final="1">
	<_new get="inline" set="null" line="10" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALContext"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta>
		<m n=":allow"><e>lime.media.openal.ALC</e></m>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALContext.ALContext_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALContext.hx" private="1" module="lime.media.openal.ALContext" final="1">
		<_new get="inline" set="null" line="10" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALContext"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALDevice" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALDevice.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
		</meta>
		<impl><class path="lime.media.openal._ALDevice.ALDevice_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALDevice.hx" private="1" module="lime.media.openal.ALDevice" final="1">
	<_new get="inline" set="null" line="10" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALDevice"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta>
		<m n=":allow"><e>lime.media.openal.ALC</e></m>
		<m n=":allow"><e>lime.media.openal.AL</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALDevice.ALDevice_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALDevice.hx" private="1" module="lime.media.openal.ALDevice" final="1">
		<_new get="inline" set="null" line="10" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALDevice"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta>
			<m n=":allow"><e>lime.media.openal.ALC</e></m>
			<m n=":allow"><e>lime.media.openal.AL</e></m>
		</meta>
	</class>
	<abstract path="lime.media.openal.ALEffect" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALEffect.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALEffect.ALEffect_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALEffect.hx" private="1" module="lime.media.openal.ALEffect" final="1">
	<_new get="inline" set="null" line="9" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALEffect"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALEffect.ALEffect_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALEffect.hx" private="1" module="lime.media.openal.ALEffect" final="1">
		<_new get="inline" set="null" line="9" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALEffect"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
	</class>
	<abstract path="lime.media.openal.ALFilter" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALFilter.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALFilter.ALFilter_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALFilter.hx" private="1" module="lime.media.openal.ALFilter" final="1">
	<_new get="inline" set="null" line="9" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALFilter"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALFilter.ALFilter_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALFilter.hx" private="1" module="lime.media.openal.ALFilter" final="1">
		<_new get="inline" set="null" line="9" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALFilter"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
	</class>
	<abstract path="lime.media.openal.ALSource" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALSource.hx">
		<from><icast><x path="lime.system.CFFIPointer"/></icast></from>
		<this><x path="lime.system.CFFIPointer"/></this>
		<to><icast><x path="lime.system.CFFIPointer"/></icast></to>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
		<impl><class path="lime.media.openal._ALSource.ALSource_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALSource.hx" private="1" module="lime.media.openal.ALSource" final="1">
	<_new get="inline" set="null" line="9" static="1">
		<f a="handle">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.media.openal.ALSource"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.media.openal._ALSource.ALSource_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/media/openal/ALSource.hx" private="1" module="lime.media.openal.ALSource" final="1">
		<_new get="inline" set="null" line="9" static="1">
			<f a="handle">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.media.openal.ALSource"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":allow"><e>lime.media.openal.AL</e></m></meta>
	</class>
	<class path="lime.media.vorbis.VorbisComment" params="" file="/projects/May2019/May2020/lime/src/lime/media/vorbis/VorbisComment.hx">
		<userComments public="1"><c path="Array"><c path="String"/></c></userComments>
		<vendor public="1"><c path="String"/></vendor>
		<new public="1" set="method" line="9"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.media.vorbis.VorbisFile" params="" file="/projects/May2019/May2020/lime/src/lime/media/vorbis/VorbisFile.hx">
		<fromBytes public="1" set="method" line="74" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.media.vorbis.VorbisFile"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="88" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.media.vorbis.VorbisFile"/>
</f></fromFile>
		<bitstream public="1" set="null"><x path="Int"/></bitstream>
		<handle>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</handle>
		<bitrate public="1" set="method" line="23">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</bitrate>
		<bitrateInstant public="1" set="method" line="32"><f a=""><x path="Int"/></f></bitrateInstant>
		<clear public="1" set="method" line="41"><f a=""><x path="Void"/></f></clear>
		<comment public="1" set="method" line="48">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<c path="lime.media.vorbis.VorbisComment"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</comment>
		<crosslap public="1" set="method" line="65"><f a="other">
	<c path="lime.media.vorbis.VorbisFile"/>
	<x path="Int"/>
</f></crosslap>
		<info public="1" set="method" line="102">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<c path="lime.media.vorbis.VorbisInfo"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</info>
		<pcmSeek public="1" set="method" line="123"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeek>
		<pcmSeekLap public="1" set="method" line="132"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekLap>
		<pcmSeekPage public="1" set="method" line="141"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekPage>
		<pcmSeekPageLap public="1" set="method" line="150"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></pcmSeekPageLap>
		<pcmTell public="1" set="method" line="159"><f a=""><x path="haxe.Int64"/></f></pcmTell>
		<pcmTotal public="1" set="method" line="173">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</pcmTotal>
		<rawSeek public="1" set="method" line="187"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></rawSeek>
		<rawSeekLap public="1" set="method" line="196"><f a="pos">
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></rawSeekLap>
		<rawTell public="1" set="method" line="205"><f a=""><x path="haxe.Int64"/></f></rawTell>
		<rawTotal public="1" set="method" line="219">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="haxe.Int64"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</rawTotal>
		<read public="1" set="method" line="233">
			<f a="buffer:position:?length:?bigEndianPacking:?wordSize:?signed" v="::4096:false:2:true">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ signed : true, wordSize : 2, bigEndianPacking : false, length : 4096 }</e></m></meta>
		</read>
		<readFloat public="1" set="method" line="246"><f a="pcmChannels:samples">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
</f></readFloat>
		<seekable public="1" set="method" line="258"><f a=""><x path="Bool"/></f></seekable>
		<serialNumber public="1" set="method" line="267">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</serialNumber>
		<streams public="1" set="method" line="276"><f a=""><x path="Int"/></f></streams>
		<timeSeek public="1" set="method" line="285"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeek>
		<timeSeekLap public="1" set="method" line="294"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekLap>
		<timeSeekPage public="1" set="method" line="303"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekPage>
		<timeSeekPageLap public="1" set="method" line="312"><f a="s">
	<x path="Float"/>
	<x path="Int"/>
</f></timeSeekPageLap>
		<timeTell public="1" set="method" line="321"><f a=""><x path="Float"/></f></timeTell>
		<timeTotal public="1" set="method" line="330">
			<f a="?bitstream" v="-1">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ bitstream : -1 }</e></m></meta>
		</timeTotal>
		<new set="method" line="18">
			<f a="handle">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
	</class>
	<class path="lime.media.vorbis.VorbisInfo" params="" file="/projects/May2019/May2020/lime/src/lime/media/vorbis/VorbisInfo.hx">
		<bitrateLower public="1"><x path="Int"/></bitrateLower>
		<bitrateNominal public="1"><x path="Int"/></bitrateNominal>
		<bitrateUpper public="1"><x path="Int"/></bitrateUpper>
		<channels public="1"><x path="Int"/></channels>
		<rate public="1"><x path="Int"/></rate>
		<version public="1"><x path="Int"/></version>
		<new public="1" set="method" line="14"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.net.HTTPRequest" params="T" file="/projects/May2019/May2020/lime/src/lime/net/HTTPRequest.hx">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><c path="haxe.io.Bytes"/></data>
		<enableResponseHeaders public="1"><x path="Bool"/></enableResponseHeaders>
		<followRedirects public="1"><x path="Bool"/></followRedirects>
		<formData public="1"><t path="Map">
	<c path="String"/>
	<d/>
</t></formData>
		<headers public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></headers>
		<method public="1"><x path="lime.net.HTTPRequestMethod"/></method>
		<responseData public="1"><c path="lime.net.HTTPRequest.T"/></responseData>
		<responseHeaders public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></responseHeaders>
		<responseStatus public="1"><x path="Int"/></responseStatus>
		<timeout public="1"><x path="Int"/></timeout>
		<uri public="1"><c path="String"/></uri>
		<userAgent public="1"><c path="String"/></userAgent>
		<withCredentials public="1"><x path="Bool"/></withCredentials>
		<cancel public="1" set="method" line="67"><f a=""><x path="Void"/></f></cancel>
		<load public="1" set="method" line="74">
			<f a="?uri" v="null">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.net.HTTPRequest.T"/></c>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</load>
		<new public="1" set="method" line="48">
			<f a="?uri" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.net.HTTPRequestHeader" params="" file="/projects/May2019/May2020/lime/src/lime/net/HTTPRequestHeader.hx">
		<name public="1"><c path="String"/></name>
		<value public="1"><c path="String"/></value>
		<new public="1" set="method" line="12">
			<f a="name:?value" v=":&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : "" }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.net.HTTPRequestMethod" params="" file="/projects/May2019/May2020/lime/src/lime/net/HTTPRequestMethod.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1" final="1">
	<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="5" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "DELETE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="6" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "GET"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GET>
	<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="7" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "HEAD"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEAD>
	<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="8" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "OPTIONS"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPTIONS>
	<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="9" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "POST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="10" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "PUT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1" final="1">
		<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="5" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "DELETE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="6" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "GET"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GET>
		<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="7" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "HEAD"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEAD>
		<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="8" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "OPTIONS"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPTIONS>
		<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="9" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "POST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="10" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "PUT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.system.CFFI" params="" file="/projects/May2019/May2020/lime/src/lime/system/CFFI.hx">
		<__moduleNames expr="null" line="15" static="1">
			<t path="Map">
				<c path="String"/>
				<c path="String"/>
			</t>
			<meta>
				<m n=":value"><e>null</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__moduleNames>
		<available public="1" static="1"><x path="Bool"/></available>
		<enabled public="1" static="1"><x path="Bool"/></enabled>
		<load public="1" set="method" line="50" static="1">
			<f a="library:method:?args:?lazy" v="::0:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ lazy : false, args : 0 }</e></m></meta>
			<haxe_doc>* Tries to load a native CFFI primitive on compatible platforms
	 * @param	library	The name of the native library (such as "lime")
	 * @param	method	The exported primitive method name
	 * @param	args	The number of arguments
	 * @param	lazy	Whether to load the symbol immediately, or to allow lazy loading
	 * @return	The loaded method</haxe_doc>
		</load>
		<loadPrime public="1" set="method" static="1"><f a="library:method:signature:lazy">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
</f></loadPrime>
		<__findHaxelib set="method" line="202" static="1"><f a="library">
	<c path="String"/>
	<c path="String"/>
</f></__findHaxelib>
		<__loaderTrace set="method" line="240" static="1"><f a="message">
	<c path="String"/>
	<x path="Void"/>
</f></__loaderTrace>
		<__sysName set="method" line="315" static="1"><f a=""><c path="String"/></f></__sysName>
		<__tryLoad set="method" line="329" static="1"><f a="name:library:func:args">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<d/>
</f></__tryLoad>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.system.CFFIPointer" params="" file="/projects/May2019/May2020/lime/src/lime/system/CFFIPointer.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
		<impl><class path="lime.system._CFFIPointer.CFFIPointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/system/CFFIPointer.hx" private="1" module="lime.system.CFFIPointer" final="1">
	<_new public="1" get="inline" set="null" line="9" static="1">
		<f a="handle">
			<d/>
			<x path="lime.system.CFFIPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get public="1" set="method" line="14" static="1">
		<f a="this">
			<d/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get>
	<equals get="inline" set="null" line="26" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<equalsPointer get="inline" set="null" line="31" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equalsPointer>
	<greaterThan get="inline" set="null" line="36" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThan>
	<greaterThanPointer get="inline" set="null" line="41" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThanPointer>
	<greaterThanOrEqual get="inline" set="null" line="46" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqual>
	<greaterThanOrEqualPointer get="inline" set="null" line="51" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqualPointer>
	<lessThan get="inline" set="null" line="56" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThan>
	<lessThanPointer get="inline" set="null" line="61" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThanPointer>
	<lessThanOrEqual get="inline" set="null" line="66" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqual>
	<lessThanOrEqualPointer get="inline" set="null" line="71" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqualPointer>
	<notEquals get="inline" set="null" line="76" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEquals>
	<notEqualsPointer get="inline" set="null" line="81" static="1">
		<f a="a:b">
			<x path="lime.system.CFFIPointer"/>
			<x path="lime.system.CFFIPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEqualsPointer>
	<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
</class></impl>
	</abstract>
	<class path="lime.system._CFFIPointer.CFFIPointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/system/CFFIPointer.hx" private="1" module="lime.system.CFFIPointer" final="1">
		<_new public="1" get="inline" set="null" line="9" static="1">
			<f a="handle">
				<d/>
				<x path="lime.system.CFFIPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get public="1" set="method" line="14" static="1">
			<f a="this">
				<d/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get>
		<equals get="inline" set="null" line="26" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<equalsPointer get="inline" set="null" line="31" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equalsPointer>
		<greaterThan get="inline" set="null" line="36" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThan>
		<greaterThanPointer get="inline" set="null" line="41" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThanPointer>
		<greaterThanOrEqual get="inline" set="null" line="46" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqual>
		<greaterThanOrEqualPointer get="inline" set="null" line="51" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqualPointer>
		<lessThan get="inline" set="null" line="56" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThan>
		<lessThanPointer get="inline" set="null" line="61" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThanPointer>
		<lessThanOrEqual get="inline" set="null" line="66" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqual>
		<lessThanOrEqualPointer get="inline" set="null" line="71" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqualPointer>
		<notEquals get="inline" set="null" line="76" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEquals>
		<notEqualsPointer get="inline" set="null" line="81" static="1">
			<f a="a:b">
				<x path="lime.system.CFFIPointer"/>
				<x path="lime.system.CFFIPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEqualsPointer>
		<meta><m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m></meta>
	</class>
	<class path="lime.system.Clipboard" params="" file="/projects/May2019/May2020/lime/src/lime/system/Clipboard.hx">
		<onUpdate public="1" expr="new Event&lt;Void&gt;()" line="20" static="1">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onUpdate>
		<text public="1" get="accessor" set="accessor" static="1"><c path="String"/></text>
		<_text static="1"><c path="String"/></_text>
		<__update set="method" line="24" static="1"><f a=""><x path="Void"/></f></__update>
		<get_text set="method" line="53" static="1"><f a=""><c path="String"/></f></get_text>
		<set_text set="method" line="64" static="1"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></set_text>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.system.Display" params="" file="/projects/May2019/May2020/lime/src/lime/system/Display.hx">
		<bounds public="1" set="null">
			<c path="lime.math.Rectangle"/>
			<haxe_doc>* The desktop area represented by this display, with the upper-leftmost display at 0,0</haxe_doc>
		</bounds>
		<currentMode public="1" set="null">
			<c path="lime.system.DisplayMode"/>
			<haxe_doc>* The current display mode</haxe_doc>
		</currentMode>
		<id public="1" set="null"><x path="Int"/></id>
		<dpi public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Pixel density of the display</haxe_doc>
		</dpi>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The name of the device, such as "Samsung SyncMaster P2350", "iPhone 6", "Oculus Rift DK2", etc.</haxe_doc>
		</name>
		<supportedModes public="1" set="null">
			<c path="Array"><c path="lime.system.DisplayMode"/></c>
			<haxe_doc>* All of the display modes supported by this device</haxe_doc>
		</supportedModes>
		<new set="method" line="38">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.system.DisplayMode" params="" file="/projects/May2019/May2020/lime/src/lime/system/DisplayMode.hx">
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* vertical resolution</haxe_doc>
		</height>
		<pixelFormat public="1" set="null">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>* pixel format</haxe_doc>
		</pixelFormat>
		<refreshRate public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* refresh rate in Hz</haxe_doc>
		</refreshRate>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* horizontal resolution</haxe_doc>
		</width>
		<new set="method" line="31">
			<f a="width:height:refreshRate:pixelFormat">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.Endian" params="" file="/projects/May2019/May2020/lime/src/lime/system/Endian.hx">
		<LITTLE_ENDIAN/>
		<BIG_ENDIAN/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.system.Sensor" params="" file="/projects/May2019/May2020/lime/src/lime/system/Sensor.hx">
		<sensorByID expr="new Map&lt;Int,Sensor&gt;()" line="11" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.system.Sensor"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Sensor>()]]></e></m></meta>
		</sensorByID>
		<sensors expr="new Array&lt;Sensor&gt;()" line="12" static="1">
			<c path="Array"><c path="lime.system.Sensor"/></c>
			<meta><m n=":value"><e><![CDATA[new Array<Sensor>()]]></e></m></meta>
		</sensors>
		<getSensors public="1" set="method" line="24" static="1">
			<f a="?type" v="null">
				<e path="lime.system.SensorType"/>
				<c path="Array"><c path="lime.system.Sensor"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</getSensors>
		<registerSensor set="method" line="46" static="1"><f a="type:id">
	<e path="lime.system.SensorType"/>
	<x path="Int"/>
	<c path="lime.system.Sensor"/>
</f></registerSensor>
		<id public="1"><x path="Int"/></id>
		<onUpdate public="1" expr="new Event&lt;Float -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Float_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Float>()]]></e></m></meta>
		</onUpdate>
		<type public="1"><e path="lime.system.SensorType"/></type>
		<new set="method" line="18">
			<f a="type:id">
				<e path="lime.system.SensorType"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.SensorType" params="" file="/projects/May2019/May2020/lime/src/lime/system/SensorType.hx">
		<ACCELEROMETER/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.system.System" params="" file="/projects/May2019/May2020/lime/src/lime/system/System.hx">
		<allowScreenTimeout public="1" get="accessor" set="accessor" static="1"><x path="Bool"/></allowScreenTimeout>
		<applicationDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationDirectory>
		<applicationStorageDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationStorageDirectory>
		<desktopDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></desktopDirectory>
		<deviceModel public="1" get="accessor" set="null" static="1"><c path="String"/></deviceModel>
		<deviceVendor public="1" get="accessor" set="null" static="1"><c path="String"/></deviceVendor>
		<disableCFFI public="1" static="1"><x path="Bool"/></disableCFFI>
		<documentsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></documentsDirectory>
		<endianness public="1" get="accessor" set="null" static="1"><e path="lime.system.Endian"/></endianness>
		<fontsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></fontsDirectory>
		<numDisplays public="1" get="accessor" set="null" static="1"><x path="Int"/></numDisplays>
		<platformLabel public="1" get="accessor" set="null" static="1"><c path="String"/></platformLabel>
		<platformName public="1" get="accessor" set="null" static="1"><c path="String"/></platformName>
		<platformVersion public="1" get="accessor" set="null" static="1"><c path="String"/></platformVersion>
		<userDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></userDirectory>
		<__applicationDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__applicationDirectory>
		<__applicationEntryPoint static="1">
			<t path="Map">
				<c path="String"/>
				<x path="haxe.Function"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</__applicationEntryPoint>
		<__applicationStorageDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__applicationStorageDirectory>
		<__desktopDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__desktopDirectory>
		<__deviceModel static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__deviceModel>
		<__deviceVendor static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__deviceVendor>
		<__directories expr="new Map&lt;SystemDirectory,String&gt;()" line="68" static="1">
			<x path="haxe.ds.Map">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<SystemDirectory,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__directories>
		<__documentsDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__documentsDirectory>
		<__endianness static="1">
			<e path="lime.system.Endian"/>
			<meta><m n=":noCompletion"/></meta>
		</__endianness>
		<__fontsDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontsDirectory>
		<__platformLabel static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformLabel>
		<__platformName static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformName>
		<__platformVersion static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformVersion>
		<__userDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__userDirectory>
		<exit public="1" set="method" line="142" static="1"><f a="code">
	<x path="Int"/>
	<x path="Void"/>
</f></exit>
		<getDisplay public="1" set="method" line="164" static="1"><f a="id">
	<x path="Int"/>
	<c path="lime.system.Display"/>
</f></getDisplay>
		<getTimer public="1" set="method" line="262" static="1"><f a=""><x path="Int"/></f></getTimer>
		<load public="1" get="inline" set="null" line="282" static="1">
			<f a="library:method:?args:?lazy" v="::0:false">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
				<d/>
			</f>
			<meta><m n=":value"><e>{ lazy : false, args : 0 }</e></m></meta>
		</load>
		<openFile public="1" set="method" line="292" static="1"><f a="path">
	<c path="String"/>
	<x path="Void"/>
</f></openFile>
		<openURL public="1" set="method" line="315" static="1">
			<f a="url:?target" v=":&quot;_blank&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ target : "_blank" }</e></m></meta>
		</openURL>
		<__copyMissingFields set="method" line="334" static="1">
			<f a="target:source">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__copyMissingFields>
		<__getDirectory set="method" line="347" static="1">
			<f a="type">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getDirectory>
		<__parseArguments set="method" line="425" static="1"><f a="attributes">
	<t path="lime.ui.WindowAttributes"/>
	<x path="Void"/>
</f></__parseArguments>
		<__parseBool get="inline" set="null" line="524" static="1">
			<f a="value">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__parseBool>
		<__registerEntryPoint set="method" line="529" static="1">
			<f a="projectName:entryPoint">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerEntryPoint>
		<__runProcess set="method" line="539" static="1">
			<f a="command:?args" v=":null">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ args : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__runProcess>
		<get_allowScreenTimeout set="method" line="557" static="1"><f a=""><x path="Bool"/></f></get_allowScreenTimeout>
		<set_allowScreenTimeout set="method" line="566" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_allowScreenTimeout>
		<get_applicationDirectory set="method" line="575" static="1"><f a=""><c path="String"/></f></get_applicationDirectory>
		<get_applicationStorageDirectory set="method" line="585" static="1"><f a=""><c path="String"/></f></get_applicationStorageDirectory>
		<get_deviceModel set="method" line="595" static="1"><f a=""><c path="String"/></f></get_deviceModel>
		<get_deviceVendor set="method" line="630" static="1"><f a=""><c path="String"/></f></get_deviceVendor>
		<get_desktopDirectory set="method" line="656" static="1"><f a=""><c path="String"/></f></get_desktopDirectory>
		<get_documentsDirectory set="method" line="666" static="1"><f a=""><c path="String"/></f></get_documentsDirectory>
		<get_endianness set="method" line="676" static="1"><f a=""><e path="lime.system.Endian"/></f></get_endianness>
		<get_fontsDirectory set="method" line="697" static="1"><f a=""><c path="String"/></f></get_fontsDirectory>
		<get_numDisplays set="method" line="707" static="1"><f a=""><x path="Int"/></f></get_numDisplays>
		<get_platformLabel set="method" line="716" static="1"><f a=""><c path="String"/></f></get_platformLabel>
		<get_platformName set="method" line="740" static="1"><f a=""><c path="String"/></f></get_platformName>
		<get_platformVersion set="method" line="778" static="1"><f a=""><c path="String"/></f></get_platformVersion>
		<get_userDirectory set="method" line="806" static="1"><f a=""><c path="String"/></f></get_userDirectory>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.system.Display</e></m>
			<m n=":access"><e>lime.system.DisplayMode</e></m>
		</meta>
	</class>
	<abstract path="lime.system._System.SystemDirectory" params="" file="/projects/May2019/May2020/lime/src/lime/system/System.hx" private="1" module="lime.system.System">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.system._System.SystemDirectory_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/system/System.hx" private="1" module="lime.system.System" extern="1" final="1">
	<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="819" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="820" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION_STORAGE>
	<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="821" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESKTOP>
	<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="822" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOCUMENTS>
	<FONTS public="1" get="inline" set="null" expr="cast 4" line="823" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONTS>
	<USER public="1" get="inline" set="null" expr="cast 5" line="824" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.system._System.SystemDirectory_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/system/System.hx" private="1" module="lime.system.System" extern="1" final="1">
		<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="819" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="820" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION_STORAGE>
		<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="821" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESKTOP>
		<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="822" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOCUMENTS>
		<FONTS public="1" get="inline" set="null" expr="cast 4" line="823" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONTS>
		<USER public="1" get="inline" set="null" expr="cast 5" line="824" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.system.ThreadPool" params="" file="/projects/May2019/May2020/lime/src/lime/system/ThreadPool.hx">
		<currentThreads public="1" set="null"><x path="Int"/></currentThreads>
		<doWork public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</doWork>
		<maxThreads public="1"><x path="Int"/></maxThreads>
		<minThreads public="1"><x path="Int"/></minThreads>
		<onComplete public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onComplete>
		<onError public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onError>
		<onProgress public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onProgress>
		<onRun public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onRun>
		<__synchronous>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__synchronous>
		<__workCompleted>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__workCompleted>
		<__workIncoming expr="new Deque&lt;ThreadPoolMessage&gt;()">
			<c path="sys.thread.Deque"><c path="lime.system._ThreadPool.ThreadPoolMessage"/></c>
			<meta>
				<m n=":value"><e><![CDATA[new Deque<ThreadPoolMessage>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__workIncoming>
		<__workQueued>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__workQueued>
		<__workResult expr="new Deque&lt;ThreadPoolMessage&gt;()">
			<c path="sys.thread.Deque"><c path="lime.system._ThreadPool.ThreadPoolMessage"/></c>
			<meta>
				<m n=":value"><e><![CDATA[new Deque<ThreadPoolMessage>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__workResult>
		<queue public="1" set="method" line="68">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<sendComplete public="1" set="method" line="99">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendComplete>
		<sendError public="1" set="method" line="112">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendError>
		<sendProgress public="1" set="method" line="125">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendProgress>
		<runWork set="method" line="138">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ state : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</runWork>
		<__doWork set="method" line="154">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__doWork>
		<__update set="method" line="171">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__update>
		<new public="1" set="method" line="41">
			<f a="?minThreads:?maxThreads" v="0:1">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ maxThreads : 1, minThreads : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system._ThreadPool.ThreadPoolMessageType" params="" file="/projects/May2019/May2020/lime/src/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<COMPLETE/>
		<ERROR/>
		<EXIT/>
		<PROGRESS/>
		<WORK/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.system._ThreadPool.ThreadPoolMessage" params="" file="/projects/May2019/May2020/lime/src/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<state public="1"><d/></state>
		<type public="1"><e path="lime.system._ThreadPool.ThreadPoolMessageType"/></type>
		<new public="1" set="method" line="239"><f a="type:state">
	<e path="lime.system._ThreadPool.ThreadPoolMessageType"/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime.text.Font" params="" file="/projects/May2019/May2020/lime/src/lime/text/Font.hx">
		<fromBytes public="1" set="method" line="120" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.text.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="134" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="148" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="153" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromFile>
		<loadFromName public="1" set="method" line="169" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromName>
		<ascender public="1"><x path="Int"/></ascender>
		<descender public="1"><x path="Int"/></descender>
		<height public="1"><x path="Int"/></height>
		<name public="1" set="null"><c path="String"/></name>
		<numGlyphs public="1"><x path="Int"/></numGlyphs>
		<src public="1"><d/></src>
		<underlinePosition public="1"><x path="Int"/></underlinePosition>
		<underlineThickness public="1"><x path="Int"/></underlineThickness>
		<unitsPerEM public="1"><x path="Int"/></unitsPerEM>
		<__fontID>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontID>
		<__fontPath>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontPath>
		<__fontPathWithoutDirectory>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontPathWithoutDirectory>
		<__init>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__init>
		<decompose public="1" set="method" line="102"><f a=""><t path="lime.text.NativeFontData"/></f></decompose>
		<getGlyph public="1" set="method" line="179"><f a="character">
	<c path="String"/>
	<x path="lime.text.Glyph"/>
</f></getGlyph>
		<getGlyphs public="1" set="method" line="188">
			<f a="?characters" v="&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`&apos;\&quot;/\\&amp;*()[]{}&lt;&gt;|:;_-+=?,. &quot;">
				<c path="String"/>
				<c path="Array"><x path="lime.text.Glyph"/></c>
			</f>
			<meta><m n=":value"><e><![CDATA[{ characters : "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. " }]]></e></m></meta>
		</getGlyphs>
		<getGlyphMetrics public="1" set="method" line="198"><f a="glyph">
	<x path="lime.text.Glyph"/>
	<c path="lime.text.GlyphMetrics"/>
</f></getGlyphMetrics>
		<renderGlyph public="1" set="method" line="215"><f a="glyph:fontSize">
	<x path="lime.text.Glyph"/>
	<x path="Int"/>
	<c path="lime.graphics.Image"/>
</f></renderGlyph>
		<renderGlyphs public="1" set="method" line="254"><f a="glyphs:fontSize">
	<c path="Array"><x path="lime.text.Glyph"/></c>
	<x path="Int"/>
	<t path="Map">
		<x path="lime.text.Glyph"/>
		<c path="lime.graphics.Image"/>
	</t>
</f></renderGlyphs>
		<__copyFrom set="method" line="417">
			<f a="other">
				<c path="lime.text.Font"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__copyFrom>
		<__fromBytes set="method" line="442">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromBytes>
		<__fromFile set="method" line="455">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromFile>
		<__initializeSource set="method" line="468">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__initializeSource>
		<__loadFromName set="method" line="495">
			<f a="name">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.text.Font"/></c>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__loadFromName>
		<__setSize set="method" line="590">
			<f a="size">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setSize>
		<new public="1" set="method" line="53">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ name : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.text.Glyph</e></m>
		</meta>
	</class>
	<typedef path="lime.text.NativeFontData" params="" file="/projects/May2019/May2020/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<style_name><c path="String"/></style_name>
	<num_glyphs><x path="Int"/></num_glyphs>
	<kerning><c path="Array"><t path="lime.text.NativeKerningData"/></c></kerning>
	<is_italic><x path="Bool"/></is_italic>
	<is_fixed_width><x path="Bool"/></is_fixed_width>
	<is_bold><x path="Bool"/></is_bold>
	<height><x path="Int"/></height>
	<has_kerning><x path="Bool"/></has_kerning>
	<has_glyph_names><x path="Bool"/></has_glyph_names>
	<glyphs><c path="Array"><t path="lime.text.NativeGlyphData"/></c></glyphs>
	<family_name><c path="String"/></family_name>
	<em_size><x path="Int"/></em_size>
	<descend><x path="Int"/></descend>
	<ascend><x path="Int"/></ascend>
</a></typedef>
	<typedef path="lime.text.NativeGlyphData" params="" file="/projects/May2019/May2020/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<points><c path="Array"><x path="Int"/></c></points>
	<min_y><x path="Int"/></min_y>
	<min_x><x path="Int"/></min_x>
	<max_y><x path="Int"/></max_y>
	<max_x><x path="Int"/></max_x>
	<char_code><x path="Int"/></char_code>
	<advance><x path="Int"/></advance>
</a></typedef>
	<typedef path="lime.text.NativeKerningData" params="" file="/projects/May2019/May2020/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<y><x path="Int"/></y>
	<x><x path="Int"/></x>
	<right_glyph><x path="Int"/></right_glyph>
	<left_glyph><x path="Int"/></left_glyph>
</a></typedef>
	<abstract path="lime.text.Glyph" params="" file="/projects/May2019/May2020/lime/src/lime/text/Glyph.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.text._Glyph.Glyph_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/text/Glyph.hx" private="1" module="lime.text.Glyph" final="1"><_new public="1" set="method" line="5" static="1">
	<f a="i">
		<x path="Int"/>
		<x path="lime.text.Glyph"/>
	</f>
	<meta>
		<m n=":impl"/>
		<m n=":noCompletion"/>
	</meta>
</_new></class></impl>
	</abstract>
	<class path="lime.text._Glyph.Glyph_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/text/Glyph.hx" private="1" module="lime.text.Glyph" final="1"><_new public="1" set="method" line="5" static="1">
	<f a="i">
		<x path="Int"/>
		<x path="lime.text.Glyph"/>
	</f>
	<meta>
		<m n=":impl"/>
		<m n=":noCompletion"/>
	</meta>
</_new></class>
	<class path="lime.text.GlyphMetrics" params="" file="/projects/May2019/May2020/lime/src/lime/text/GlyphMetrics.hx">
		<advance public="1"><c path="lime.math.Vector2"/></advance>
		<height public="1"><x path="Int"/></height>
		<horizontalBearing public="1"><c path="lime.math.Vector2"/></horizontalBearing>
		<verticalBearing public="1"><c path="lime.math.Vector2"/></verticalBearing>
		<new public="1" set="method" line="16"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.ui.Gamepad" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Gamepad.hx">
		<devices public="1" expr="new Map&lt;Int,Gamepad&gt;()" line="14" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Gamepad"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Gamepad>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Gamepad&gt;()" line="15" static="1">
			<c path="lime.app._Event_lime_ui_Gamepad_Void"><f a="">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Gamepad>()]]></e></m></meta>
		</onConnect>
		<addMappings public="1" set="method" line="32" static="1"><f a="mappings">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></addMappings>
		<__connect set="method" line="45" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="55" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<onAxisMove public="1" expr="new Event&lt;GamepadAxis -&gt; Float&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void"><f a=":">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadAxis -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadButton_Void"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadButton_Void"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<get_guid get="inline" set="null" line="64">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="80">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<new public="1" set="method" line="26"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.GamepadAxis" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadAxis.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis" final="1">
	<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_X>
	<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_Y>
	<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_X>
	<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_Y>
	<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_LEFT>
	<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_RIGHT>
	<toString public="1" get="inline" set="null" line="12" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis" final="1">
		<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_X>
		<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_Y>
		<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_X>
		<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_Y>
		<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_LEFT>
		<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_RIGHT>
		<toString public="1" get="inline" set="null" line="12" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.ui.GamepadButton" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadButton.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton" final="1">
	<A public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<X public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<BACK public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACK>
	<GUIDE public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GUIDE>
	<START public="1" get="inline" set="null" expr="cast 6" line="11" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</START>
	<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="12" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_STICK>
	<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="13" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_STICK>
	<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="14" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHOULDER>
	<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="15" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHOULDER>
	<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="16" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_UP>
	<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="17" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_DOWN>
	<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="18" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_LEFT>
	<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="19" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_RIGHT>
	<toString public="1" get="inline" set="null" line="21" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton" final="1">
		<A public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<X public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<BACK public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACK>
		<GUIDE public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GUIDE>
		<START public="1" get="inline" set="null" expr="cast 6" line="11" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</START>
		<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="12" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_STICK>
		<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="13" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_STICK>
		<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="14" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHOULDER>
		<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="15" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHOULDER>
		<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="16" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_UP>
		<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="17" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_DOWN>
		<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="18" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_LEFT>
		<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="19" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_RIGHT>
		<toString public="1" get="inline" set="null" line="21" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.ui.Joystick" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Joystick.hx">
		<devices public="1" expr="new Map&lt;Int,Joystick&gt;()" line="13" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Joystick"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Joystick>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Joystick&gt;()" line="14" static="1">
			<c path="lime.app._Event_lime_ui_Joystick_Void"><f a="">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Joystick>()]]></e></m></meta>
		</onConnect>
		<__connect set="method" line="37" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="47" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<numAxes public="1" get="accessor" set="null"><x path="Int"/></numAxes>
		<numButtons public="1" get="accessor" set="null"><x path="Int"/></numButtons>
		<numHats public="1" get="accessor" set="null"><x path="Int"/></numHats>
		<numTrackballs public="1" get="accessor" set="null"><x path="Int"/></numTrackballs>
		<onAxisMove public="1" expr="new Event&lt;Int -&gt; Float&gt;()">
			<c path="lime.app._Event_Int_Float_Void"><f a=":">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<onHatMove public="1" expr="new Event&lt;Int -&gt; JoystickHatPosition&gt;()">
			<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"><f a=":">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> JoystickHatPosition>()]]></e></m></meta>
		</onHatMove>
		<onTrackballMove public="1" expr="new Event&lt;Int -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Int_Float_Float_Void"><f a="::">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float -> Float>()]]></e></m></meta>
		</onTrackballMove>
		<get_guid get="inline" set="null" line="64">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="80">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<get_numAxes get="inline" set="null" line="96">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numAxes>
		<get_numButtons get="inline" set="null" line="108">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numButtons>
		<get_numHats get="inline" set="null" line="120">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numHats>
		<get_numTrackballs get="inline" set="null" line="129">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numTrackballs>
		<new public="1" set="method" line="31"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.JoystickHatPosition" params="" file="/projects/May2019/May2020/lime/src/lime/ui/JoystickHatPosition.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition" final="1">
	<CENTER public="1" get="inline" set="null" expr="0x00" line="5" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x00</e></m></meta>
	</CENTER>
	<DOWN public="1" get="inline" set="null" expr="0x04" line="6" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x04</e></m></meta>
	</DOWN>
	<LEFT public="1" get="inline" set="null" expr="0x08" line="7" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x08</e></m></meta>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" expr="0x02" line="8" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x02</e></m></meta>
	</RIGHT>
	<UP public="1" get="inline" set="null" expr="0x01" line="9" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x01</e></m></meta>
	</UP>
	<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="10" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
	</DOWN_LEFT>
	<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="11" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
	</DOWN_RIGHT>
	<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="12" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
	</UP_LEFT>
	<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="13" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
	</UP_RIGHT>
	<center public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</center>
	<down public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</down>
	<left public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</left>
	<right public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</right>
	<up public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</up>
	<_new public="1" set="method" line="21" static="1">
		<f a="value">
			<x path="Int"/>
			<x path="lime.ui.JoystickHatPosition"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get_center set="method" line="26" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_center>
	<set_center get="inline" set="null" line="31" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_center>
	<get_down set="method" line="41" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_down>
	<set_down get="inline" set="null" line="46" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_down>
	<get_left set="method" line="60" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_left>
	<set_left get="inline" set="null" line="65" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_left>
	<get_right set="method" line="79" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_right>
	<set_right get="inline" set="null" line="84" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_right>
	<get_up set="method" line="98" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_up>
	<set_up get="inline" set="null" line="103" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_up>
</class></impl>
	</abstract>
	<class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition" final="1">
		<CENTER public="1" get="inline" set="null" expr="0x00" line="5" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x00</e></m></meta>
		</CENTER>
		<DOWN public="1" get="inline" set="null" expr="0x04" line="6" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x04</e></m></meta>
		</DOWN>
		<LEFT public="1" get="inline" set="null" expr="0x08" line="7" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x08</e></m></meta>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="0x02" line="8" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x02</e></m></meta>
		</RIGHT>
		<UP public="1" get="inline" set="null" expr="0x01" line="9" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x01</e></m></meta>
		</UP>
		<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="10" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
		</DOWN_LEFT>
		<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="11" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
		</DOWN_RIGHT>
		<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="12" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
		</UP_LEFT>
		<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="13" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
		</UP_RIGHT>
		<center public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</center>
		<down public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</down>
		<left public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</left>
		<right public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</right>
		<up public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</up>
		<_new public="1" set="method" line="21" static="1">
			<f a="value">
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get_center set="method" line="26" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_center>
		<set_center get="inline" set="null" line="31" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_center>
		<get_down set="method" line="41" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_down>
		<set_down get="inline" set="null" line="46" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_down>
		<get_left set="method" line="60" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_left>
		<set_left get="inline" set="null" line="65" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_left>
		<get_right set="method" line="79" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_right>
		<set_right get="inline" set="null" line="84" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_right>
		<get_up set="method" line="98" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_up>
		<set_up get="inline" set="null" line="103" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_up>
	</class>
	<abstract path="lime.ui.KeyCode" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromScanCode"><x path="lime.ui.ScanCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode" final="1">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="8" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x00</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="9" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x08</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 0x09" line="10" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x09</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="11" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x0D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="12" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x1B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="13" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="14" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLAMATION>
	<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="15" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<HASH public="1" get="inline" set="null" expr="cast 0x23" line="16" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HASH>
	<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="17" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOLLAR>
	<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="18" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERCENT>
	<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="19" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AMPERSAND>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="20" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="21" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_PARENTHESIS>
	<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="22" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_PARENTHESIS>
	<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="23" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ASTERISK>
	<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="24" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PLUS>
	<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="25" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="26" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="27" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="28" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="29" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="30" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="31" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="32" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="33" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="34" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="35" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="36" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="37" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="38" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="39" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLON>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="40" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="41" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="42" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="43" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="44" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUESTION>
	<AT public="1" get="inline" set="null" expr="cast 0x40" line="45" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AT>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="46" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="47" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="48" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="49" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CARET>
	<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="50" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDERSCORE>
	<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="51" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 0x61" line="52" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 0x62" line="53" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 0x63" line="54" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 0x64" line="55" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 0x65" line="56" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 0x66" line="57" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 0x67" line="58" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 0x68" line="59" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 0x69" line="60" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 0x6A" line="61" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 0x6B" line="62" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 0x6C" line="63" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 0x6D" line="64" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 0x6E" line="65" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 0x6F" line="66" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 0x70" line="67" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 0x71" line="68" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 0x72" line="69" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 0x73" line="70" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 0x74" line="71" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 0x75" line="72" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 0x76" line="73" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 0x77" line="74" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 0x78" line="75" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 0x79" line="76" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 0x7A" line="77" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="78" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="79" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000039</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="80" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="81" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="82" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="83" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="84" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="85" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="86" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000040</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="87" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000041</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="88" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000042</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="89" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000043</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="90" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000044</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="91" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000045</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="92" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000046</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="93" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000047</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="94" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000048</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="95" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000049</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="96" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="97" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="98" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="99" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="100" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="101" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000050</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="102" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000051</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="103" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000052</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="104" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000053</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="105" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000054</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="106" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000055</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="107" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000056</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="108" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000057</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="109" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000058</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="110" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000059</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="111" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="112" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="113" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="114" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="115" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="116" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="117" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000060</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="118" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000061</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="119" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000062</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="120" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000063</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="121" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000065</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="122" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000066</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="123" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000067</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="124" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000068</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="125" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000069</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="126" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="127" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="128" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="129" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="130" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="131" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="132" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000070</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="133" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000071</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="134" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000072</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="135" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000073</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="136" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000074</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="137" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000075</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="138" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000076</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="139" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000077</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="140" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000078</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="141" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000079</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="142" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="143" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="144" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="145" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="146" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="147" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="148" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000080</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="149" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000081</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="150" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000085</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="152" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000099</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="153" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="154" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="155" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="156" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="157" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="158" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="159" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="160" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="161" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="162" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="163" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="164" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="165" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="166" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="167" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="168" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="169" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="170" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="171" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="172" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="173" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="174" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="175" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="176" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="177" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="178" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="179" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="180" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="181" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="182" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="183" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="184" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="185" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="186" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="187" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="188" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="189" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="190" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="191" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="192" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="193" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="194" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="195" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="196" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="197" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="198" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="199" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="200" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="201" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="202" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="203" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="204" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="205" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="206" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="207" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="208" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="209" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="210" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="211" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="212" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="213" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="214" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="215" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="216" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="217" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="218" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="219" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="220" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="221" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="222" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="223" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="224" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="225" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="226" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="227" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="228" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="229" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="230" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="231" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="232" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="233" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="234" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="235" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="236" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="237" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="238" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="239" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="240" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="241" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="242" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="243" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000011A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromScanCode public="1" set="method" line="245" static="1">
		<f a="scanCode">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromScanCode>
	<toScanCode set="method" line="255" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
	<gt get="inline" set="null" line="265" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="270" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="275" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="280" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="285" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="Int"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":enum"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode" final="1">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="8" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x00</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="9" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x08</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 0x09" line="10" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x09</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="11" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x0D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="12" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x1B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="13" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="14" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLAMATION>
		<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="15" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<HASH public="1" get="inline" set="null" expr="cast 0x23" line="16" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HASH>
		<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="17" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOLLAR>
		<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="18" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERCENT>
		<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="19" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AMPERSAND>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="20" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="21" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_PARENTHESIS>
		<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="22" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_PARENTHESIS>
		<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="23" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ASTERISK>
		<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="24" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PLUS>
		<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="25" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="26" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="27" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="28" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="29" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="30" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="31" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="32" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="33" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="34" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="35" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="36" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="37" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="38" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="39" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLON>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="40" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="41" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="42" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="43" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="44" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUESTION>
		<AT public="1" get="inline" set="null" expr="cast 0x40" line="45" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AT>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="46" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="47" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="48" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="49" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CARET>
		<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="50" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDERSCORE>
		<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="51" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 0x61" line="52" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 0x62" line="53" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 0x63" line="54" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 0x64" line="55" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 0x65" line="56" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 0x66" line="57" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 0x67" line="58" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 0x68" line="59" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 0x69" line="60" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 0x6A" line="61" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 0x6B" line="62" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 0x6C" line="63" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 0x6D" line="64" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 0x6E" line="65" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 0x6F" line="66" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 0x70" line="67" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 0x71" line="68" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 0x72" line="69" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 0x73" line="70" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 0x74" line="71" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 0x75" line="72" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 0x76" line="73" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 0x77" line="74" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 0x78" line="75" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 0x79" line="76" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 0x7A" line="77" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="78" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="79" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000039</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="80" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="81" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="82" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="83" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="84" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="85" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="86" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000040</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="87" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000041</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="88" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000042</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="89" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000043</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="90" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000044</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="91" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000045</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="92" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000046</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="93" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000047</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="94" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000048</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="95" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000049</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="96" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="97" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="98" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="99" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="100" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="101" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000050</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="102" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000051</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="103" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000052</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="104" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000053</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="105" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000054</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="106" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000055</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="107" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000056</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="108" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000057</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="109" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000058</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="110" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000059</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="111" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="112" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="113" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="114" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="115" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="116" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="117" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000060</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="118" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000061</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="119" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000062</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="120" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000063</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="121" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000065</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="122" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000066</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="123" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000067</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="124" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000068</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="125" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000069</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="126" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="127" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="128" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="129" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="130" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="131" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="132" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000070</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="133" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000071</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="134" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000072</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="135" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000073</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="136" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000074</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="137" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000075</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="138" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000076</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="139" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000077</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="140" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000078</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="141" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000079</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="142" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="143" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="144" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="145" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="146" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="147" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="148" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000080</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="149" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000081</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="150" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000085</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="152" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000099</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="153" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="154" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="155" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="156" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="157" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="158" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="159" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="160" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="161" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="162" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="163" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="164" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="165" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="166" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="167" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="168" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="169" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="170" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="171" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="172" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="173" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="174" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="175" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="176" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="177" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="178" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="179" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="180" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="181" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="182" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="183" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="184" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="185" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="186" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="187" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="188" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="189" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="190" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="191" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="192" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="193" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="194" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="195" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="196" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="197" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="198" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="199" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="200" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="201" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="202" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="203" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="204" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="205" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="206" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="207" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="208" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="209" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="210" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="211" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="212" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="213" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="214" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="215" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="216" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="217" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="218" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="219" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="220" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="221" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="222" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="223" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="224" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="225" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="226" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="227" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="228" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="229" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="230" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="231" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="232" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="233" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="234" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="235" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="236" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="237" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="238" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="239" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="240" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="241" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="242" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="243" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000011A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromScanCode public="1" set="method" line="245" static="1">
			<f a="scanCode">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromScanCode>
		<toScanCode set="method" line="255" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
		<gt get="inline" set="null" line="265" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="270" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="275" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="280" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="285" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="Int"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":enum"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.KeyModifier" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyModifier.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier" final="1">
	<NONE public="1" get="inline" set="null" expr="0x0000" line="5" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0000</e></m></meta>
	</NONE>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="6" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0001</e></m></meta>
	</LEFT_SHIFT>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="7" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0002</e></m></meta>
	</RIGHT_SHIFT>
	<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="8" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0040</e></m></meta>
	</LEFT_CTRL>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="9" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0080</e></m></meta>
	</RIGHT_CTRL>
	<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="10" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0100</e></m></meta>
	</LEFT_ALT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="11" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0200</e></m></meta>
	</RIGHT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="12" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0400</e></m></meta>
	</LEFT_META>
	<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="13" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0800</e></m></meta>
	</RIGHT_META>
	<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="14" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x1000</e></m></meta>
	</NUM_LOCK>
	<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="15" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x2000</e></m></meta>
	</CAPS_LOCK>
	<MODE public="1" get="inline" set="null" expr="0x4000" line="16" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x4000</e></m></meta>
	</MODE>
	<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="17" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
	</CTRL>
	<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="18" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
	</SHIFT>
	<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="19" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
	</ALT>
	<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="20" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
	</META>
	<altKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</altKey>
	<capsLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</capsLock>
	<ctrlKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</ctrlKey>
	<metaKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</metaKey>
	<numLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</numLock>
	<shiftKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</shiftKey>
	<get_altKey set="method" line="29" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_altKey>
	<set_altKey get="inline" set="null" line="34" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_altKey>
	<get_capsLock set="method" line="48" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_capsLock>
	<set_capsLock get="inline" set="null" line="53" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_capsLock>
	<get_ctrlKey set="method" line="67" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ctrlKey>
	<set_ctrlKey get="inline" set="null" line="72" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_ctrlKey>
	<get_metaKey set="method" line="86" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_metaKey>
	<set_metaKey get="inline" set="null" line="91" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_metaKey>
	<get_numLock set="method" line="105" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_numLock>
	<set_numLock get="inline" set="null" line="110" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_numLock>
	<get_shiftKey set="method" line="124" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_shiftKey>
	<set_shiftKey get="inline" set="null" line="129" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_shiftKey>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier" final="1">
		<NONE public="1" get="inline" set="null" expr="0x0000" line="5" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</NONE>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="6" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LEFT_SHIFT>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="7" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</RIGHT_SHIFT>
		<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="8" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0040</e></m></meta>
		</LEFT_CTRL>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="9" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0080</e></m></meta>
		</RIGHT_CTRL>
		<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="10" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0100</e></m></meta>
		</LEFT_ALT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="11" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</RIGHT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="12" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0400</e></m></meta>
		</LEFT_META>
		<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="13" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0800</e></m></meta>
		</RIGHT_META>
		<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="14" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x1000</e></m></meta>
		</NUM_LOCK>
		<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="15" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x2000</e></m></meta>
		</CAPS_LOCK>
		<MODE public="1" get="inline" set="null" expr="0x4000" line="16" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x4000</e></m></meta>
		</MODE>
		<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="17" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
		</CTRL>
		<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="18" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
		</SHIFT>
		<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="19" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
		</ALT>
		<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="20" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
		</META>
		<altKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</altKey>
		<capsLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</capsLock>
		<ctrlKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</ctrlKey>
		<metaKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</metaKey>
		<numLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</numLock>
		<shiftKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</shiftKey>
		<get_altKey set="method" line="29" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_altKey>
		<set_altKey get="inline" set="null" line="34" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_altKey>
		<get_capsLock set="method" line="48" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_capsLock>
		<set_capsLock get="inline" set="null" line="53" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_capsLock>
		<get_ctrlKey set="method" line="67" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ctrlKey>
		<set_ctrlKey get="inline" set="null" line="72" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_ctrlKey>
		<get_metaKey set="method" line="86" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_metaKey>
		<set_metaKey get="inline" set="null" line="91" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_metaKey>
		<get_numLock set="method" line="105" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_numLock>
		<set_numLock get="inline" set="null" line="110" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_numLock>
		<get_shiftKey set="method" line="124" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_shiftKey>
		<set_shiftKey get="inline" set="null" line="129" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_shiftKey>
	</class>
	<abstract path="lime.ui.MouseButton" params="" file="/projects/May2019/May2020/lime/src/lime/ui/MouseButton.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._MouseButton.MouseButton_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/MouseButton.hx" private="1" module="lime.ui.MouseButton" extern="1" final="1">
	<LEFT public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<MIDDLE public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIDDLE>
	<RIGHT public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._MouseButton.MouseButton_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/MouseButton.hx" private="1" module="lime.ui.MouseButton" extern="1" final="1">
		<LEFT public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<MIDDLE public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIDDLE>
		<RIGHT public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<meta><m n=":enum"/></meta>
	</class>
	<enum path="lime.ui.MouseCursor" params="" file="/projects/May2019/May2020/lime/src/lime/ui/MouseCursor.hx">
		<ARROW/>
		<CROSSHAIR/>
		<DEFAULT/>
		<MOVE/>
		<POINTER/>
		<RESIZE_NESW/>
		<RESIZE_NS/>
		<RESIZE_NWSE/>
		<RESIZE_WE/>
		<TEXT/>
		<WAIT/>
		<WAIT_ARROW/>
		<CUSTOM/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<enum path="lime.ui.MouseWheelMode" params="" file="/projects/May2019/May2020/lime/src/lime/ui/MouseWheelMode.hx">
		<PIXELS/>
		<LINES/>
		<PAGES/>
		<UNKNOWN/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.ui.ScanCode" params="" file="/projects/May2019/May2020/lime/src/lime/ui/ScanCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromKeyCode"><x path="lime.ui.KeyCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode" final="1">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="9" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="10" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 43" line="11" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 40" line="12" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="13" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 41</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 44" line="14" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 44</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="21" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 52</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<COMMA public="1" get="inline" set="null" expr="cast 54" line="26" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 54</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 45" line="27" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 55" line="28" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 55</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 56" line="29" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 56</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="30" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="31" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="32" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="33" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="34" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="35" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="36" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="37" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="38" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="39" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="41" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 51</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<EQUALS public="1" get="inline" set="null" expr="cast 46" line="43" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 46</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="47" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="48" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 49</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="49" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<GRAVE public="1" get="inline" set="null" expr="cast 53" line="52" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 53</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 4" line="53" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 5" line="54" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 6" line="55" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 7" line="56" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 8" line="57" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 9" line="58" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 10" line="59" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 11" line="60" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 12" line="61" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 13" line="62" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 14" line="63" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 15" line="64" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 16" line="65" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 17" line="66" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 18" line="67" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 19" line="68" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 20" line="69" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 21" line="70" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 22" line="71" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 23" line="72" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 24" line="73" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 25" line="74" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 26" line="75" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 27" line="76" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 28" line="77" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 29" line="78" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 76" line="79" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="80" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 57</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 58" line="81" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 58</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 59" line="82" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 59</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 60" line="83" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 61" line="84" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 62" line="85" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 63" line="86" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 64" line="87" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 65" line="88" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 66" line="89" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 67" line="90" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 68" line="91" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 69" line="92" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="93" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="94" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 72" line="95" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 73" line="96" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 74" line="97" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="98" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 77" line="99" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="100" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 79" line="101" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 80" line="102" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 80</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 81" line="103" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 81</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 82" line="104" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 82</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="105" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 83</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="106" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 84</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="107" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 85</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="108" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 86</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="109" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 87</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="110" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 88</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="111" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 89</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="112" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 90</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="113" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 91</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="114" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 92</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="115" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 93</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="116" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 94</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="117" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 95</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="118" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 96</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="119" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 97</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="120" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 98</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="121" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 99</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="122" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 102" line="123" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="124" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 104" line="125" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 105" line="126" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 106" line="127" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 107" line="128" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 108" line="129" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 109" line="130" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 110" line="131" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 111" line="132" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 112" line="133" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 113" line="134" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 114" line="135" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 115" line="136" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="137" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 117" line="138" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 118" line="139" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 119" line="140" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 120" line="141" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 120</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 121" line="142" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 121</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 122" line="143" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 122</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 123" line="144" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 123</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 124" line="145" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 124</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 125" line="146" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 125</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 126" line="147" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 126</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 127" line="148" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 127</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="149" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 128</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="150" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 129</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="151" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 133</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="153" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 153</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="154" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 154</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 155" line="155" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 155</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 156" line="156" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 156</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 157" line="157" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 157</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="158" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 158</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="159" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 159</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 160" line="160" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 160</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 161" line="161" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 161</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="162" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 162</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 163" line="163" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 163</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 164" line="164" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 164</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="165" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 176</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="166" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 177</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="167" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 178</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="168" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 179</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="169" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 180</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="170" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 181</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="171" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 182</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="172" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 183</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="173" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 184</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="174" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 185</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="175" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 186</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="176" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 187</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="177" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 188</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="178" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 189</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="179" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 190</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="180" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 191</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="181" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 192</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="182" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 193</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="183" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 194</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="184" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 195</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="185" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 196</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="186" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 197</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="187" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 198</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="188" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 199</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="189" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 200</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="190" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 201</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="191" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 202</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="192" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 203</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="193" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 204</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="194" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 205</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="195" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 206</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="196" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 207</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="197" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 208</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="198" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 209</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="199" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 210</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="200" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 211</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="201" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 212</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="202" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 213</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="203" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 214</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="204" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 215</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="205" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 216</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="206" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 217</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="207" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 218</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="208" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 219</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="209" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 220</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="210" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 221</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="211" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 224</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="212" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 225</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="213" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 226</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="214" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 227</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="215" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 228</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="216" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 229</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="217" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 230</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="218" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 231</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 257" line="219" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 257</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="220" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 258</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="221" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 259</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="222" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 260</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="223" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 261</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="224" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 262</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="225" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 263</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 264" line="226" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 264</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 265" line="227" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 265</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="228" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 266</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="229" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 267</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="230" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 268</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="231" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 269</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="232" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 270</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="233" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 271</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="234" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 272</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="235" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 273</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="236" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 274</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="237" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 275</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="238" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 276</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="239" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 277</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="240" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 278</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="241" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 279</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="242" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 280</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 281" line="243" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 281</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 282" line="244" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 282</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromKeyCode public="1" set="method" line="246" static="1">
		<f a="keyCode">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromKeyCode>
	<toKeyCode set="method" line="251" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
	<gt get="inline" set="null" line="256" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="261" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="266" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="271" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="276" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="Int"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":enum"/>
		<m n=":access"><e>lime.ui.KeyCode</e></m>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode" final="1">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="9" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="10" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 43" line="11" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 40" line="12" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="13" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 41</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 44" line="14" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 44</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="21" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 52</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<COMMA public="1" get="inline" set="null" expr="cast 54" line="26" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 54</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 45" line="27" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 55" line="28" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 55</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 56" line="29" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 56</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="30" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="31" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="32" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="33" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="34" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="35" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="36" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="37" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="38" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="39" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="41" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 51</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<EQUALS public="1" get="inline" set="null" expr="cast 46" line="43" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 46</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="47" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="48" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 49</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="49" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<GRAVE public="1" get="inline" set="null" expr="cast 53" line="52" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 53</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 4" line="53" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 5" line="54" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 6" line="55" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 7" line="56" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 8" line="57" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 9" line="58" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 10" line="59" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 11" line="60" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 12" line="61" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 13" line="62" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 14" line="63" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 15" line="64" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 16" line="65" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 17" line="66" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 18" line="67" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 19" line="68" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 20" line="69" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 21" line="70" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 22" line="71" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 23" line="72" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 24" line="73" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 25" line="74" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 26" line="75" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 27" line="76" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 28" line="77" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 29" line="78" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 76" line="79" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="80" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 57</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 58" line="81" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 58</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 59" line="82" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 59</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 60" line="83" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 61" line="84" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 62" line="85" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 63" line="86" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 64" line="87" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 65" line="88" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 66" line="89" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 67" line="90" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 68" line="91" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 69" line="92" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="93" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="94" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 72" line="95" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 73" line="96" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 74" line="97" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="98" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 77" line="99" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="100" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 79" line="101" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 80" line="102" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 80</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 81" line="103" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 81</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 82" line="104" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 82</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="105" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 83</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="106" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 84</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="107" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 85</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="108" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 86</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="109" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 87</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="110" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 88</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="111" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 89</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="112" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 90</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="113" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 91</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="114" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 92</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="115" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 93</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="116" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 94</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="117" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 95</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="118" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 96</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="119" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 97</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="120" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 98</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="121" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 99</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="122" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 102" line="123" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="124" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 104" line="125" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 105" line="126" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 106" line="127" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 107" line="128" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 108" line="129" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 109" line="130" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 110" line="131" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 111" line="132" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 112" line="133" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 113" line="134" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 114" line="135" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 115" line="136" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="137" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 117" line="138" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 118" line="139" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 119" line="140" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 120" line="141" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 120</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 121" line="142" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 121</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 122" line="143" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 122</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 123" line="144" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 123</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 124" line="145" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 124</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 125" line="146" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 125</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 126" line="147" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 126</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 127" line="148" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 127</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="149" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 128</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="150" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 129</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="151" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 133</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="153" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 153</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="154" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 154</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 155" line="155" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 155</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 156" line="156" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 156</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 157" line="157" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 157</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="158" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 158</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="159" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 159</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 160" line="160" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 160</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 161" line="161" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 161</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="162" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 162</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 163" line="163" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 163</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 164" line="164" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 164</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="165" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 176</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="166" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 177</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="167" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 178</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="168" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 179</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="169" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 180</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="170" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 181</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="171" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 182</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="172" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 183</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="173" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 184</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="174" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 185</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="175" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 186</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="176" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 187</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="177" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 188</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="178" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 189</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="179" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 190</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="180" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 191</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="181" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 192</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="182" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 193</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="183" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 194</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="184" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 195</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="185" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 196</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="186" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 197</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="187" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 198</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="188" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 199</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="189" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 200</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="190" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 201</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="191" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 202</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="192" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 203</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="193" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 204</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="194" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 205</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="195" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 206</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="196" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 207</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="197" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 208</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="198" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 209</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="199" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 210</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="200" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 211</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="201" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 212</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="202" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 213</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="203" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 214</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="204" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 215</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="205" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 216</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="206" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 217</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="207" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 218</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="208" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 219</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="209" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 220</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="210" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 221</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="211" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 224</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="212" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 225</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="213" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 226</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="214" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 227</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="215" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 228</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="216" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 229</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="217" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 230</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="218" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 231</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 257" line="219" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 257</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="220" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 258</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="221" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 259</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="222" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 260</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="223" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 261</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="224" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 262</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="225" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 263</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 264" line="226" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 264</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 265" line="227" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 265</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="228" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 266</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="229" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 267</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="230" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 268</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="231" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 269</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="232" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 270</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="233" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 271</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="234" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 272</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="235" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 273</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="236" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 274</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="237" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 275</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="238" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 276</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="239" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 277</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="240" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 278</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="241" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 279</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="242" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 280</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 281" line="243" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 281</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 282" line="244" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 282</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromKeyCode public="1" set="method" line="246" static="1">
			<f a="keyCode">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromKeyCode>
		<toKeyCode set="method" line="251" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
		<gt get="inline" set="null" line="256" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="261" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="266" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="271" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="276" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="Int"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":enum"/>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.ui.Touch" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Touch.hx">
		<onCancel public="1" expr="new Event&lt;Touch&gt;()" line="11" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onCancel>
		<onEnd public="1" expr="new Event&lt;Touch&gt;()" line="12" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onEnd>
		<onMove public="1" expr="new Event&lt;Touch&gt;()" line="13" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onMove>
		<onStart public="1" expr="new Event&lt;Touch&gt;()" line="14" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onStart>
		<device public="1"><x path="Int"/></device>
		<dx public="1"><x path="Float"/></dx>
		<dy public="1"><x path="Float"/></dy>
		<id public="1"><x path="Int"/></id>
		<pressure public="1"><x path="Float"/></pressure>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method" line="24"><f a="x:y:id:dx:dy:pressure:device">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui.Stage" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx" module="lime.ui.Window"><d/></typedef>
	<class path="lime.ui.Window" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx">
		<application public="1" set="null"><c path="lime.app.Application"/></application>
		<borderless public="1" get="accessor" set="accessor"><x path="Bool"/></borderless>
		<context public="1" set="null"><c path="lime.graphics.RenderContext"/></context>
		<cursor public="1" get="accessor" set="accessor"><e path="lime.ui.MouseCursor"/></cursor>
		<display public="1" get="accessor" set="null"><c path="lime.system.Display"/></display>
		<displayMode public="1" get="accessor" set="accessor"><c path="lime.system.DisplayMode"/></displayMode>
		<frameRate public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>* The current frame rate (measured in frames-per-second) of the window.
	 *
	 * On some platforms, a frame rate of 60 or greater may imply vsync, which will
	 * perform more quickly on displays with a higher refresh rate</haxe_doc>
		</frameRate>
		<fullscreen public="1" get="accessor" set="accessor"><x path="Bool"/></fullscreen>
		<height public="1" get="accessor" set="accessor"><x path="Int"/></height>
		<hidden public="1" get="accessor" set="null"><x path="Bool"/></hidden>
		<id public="1" set="null"><x path="Int"/></id>
		<maximized public="1" get="accessor" set="accessor"><x path="Bool"/></maximized>
		<minimized public="1" get="accessor" set="accessor"><x path="Bool"/></minimized>
		<mouseLock public="1" get="accessor" set="accessor"><x path="Bool"/></mouseLock>
		<onActivate public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onActivate>
		<onClose public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onClose>
		<onDeactivate public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDeactivate>
		<onDropFile public="1" set="null" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onDropFile>
		<onEnter public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onEnter>
		<onExpose public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onExpose>
		<onFocusIn public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusIn>
		<onFocusOut public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusOut>
		<onFullscreen public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFullscreen>
		<onKeyDown public="1" set="null" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyDown>
		<onKeyUp public="1" set="null" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyUp>
		<onLeave public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onLeave>
		<onMaximize public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onMaximize>
		<onMinimize public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onMinimize>
		<onMouseDown public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; MouseButton&gt;()">
			<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> MouseButton>()]]></e></m></meta>
		</onMouseDown>
		<onMouseMove public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; Int&gt;()">
			<c path="lime.app._Event_Float_Float_Int_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Int>()]]></e></m></meta>
		</onMouseUp>
		<onMouseWheel public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; MouseWheelMode&gt;()">
			<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> MouseWheelMode>()]]></e></m></meta>
		</onMouseWheel>
		<onMove public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMove>
		<onRender public="1" set="null" expr="new Event&lt;RenderContext&gt;()">
			<c path="lime.app._Event_lime_graphics_RenderContext_Void"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<RenderContext>()]]></e></m></meta>
		</onRender>
		<onRenderContextLost public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="null" expr="new Event&lt;RenderContext&gt;()">
			<c path="lime.app._Event_lime_graphics_RenderContext_Void"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<RenderContext>()]]></e></m></meta>
		</onRenderContextRestored>
		<onResize public="1" set="null" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onResize>
		<onRestore public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRestore>
		<onTextEdit public="1" set="null" expr="new Event&lt;String -&gt; Int -&gt; Int&gt;()">
			<c path="lime.app._Event_String_Int_Int_Void"><f a="::">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String -> Int -> Int>()]]></e></m></meta>
		</onTextEdit>
		<onTextInput public="1" set="null" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onTextInput>
		<parameters public="1"><d/></parameters>
		<resizable public="1" get="accessor" set="accessor"><x path="Bool"/></resizable>
		<scale public="1" get="accessor" set="null"><x path="Float"/></scale>
		<textInputEnabled public="1" get="accessor" set="accessor"><x path="Bool"/></textInputEnabled>
		<title public="1" get="accessor" set="accessor"><c path="String"/></title>
		<width public="1" get="accessor" set="accessor"><x path="Int"/></width>
		<x public="1" get="accessor" set="accessor"><x path="Int"/></x>
		<y public="1" get="accessor" set="accessor"><x path="Int"/></y>
		<__attributes>
			<t path="lime.ui.WindowAttributes"/>
			<meta><m n=":noCompletion"/></meta>
		</__attributes>
		<__backend>
			<t path="lime.ui._Window.WindowBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</__backend>
		<__borderless>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__borderless>
		<__fullscreen>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__fullscreen>
		<__height>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__height>
		<__hidden>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__hidden>
		<__maximized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__maximized>
		<__minimized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__minimized>
		<__resizable>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__resizable>
		<__scale>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__scale>
		<__title>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__title>
		<__width>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__width>
		<__x>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__x>
		<__y>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__y>
		<alert public="1" set="method" line="360">
			<f a="?message:?title" v="null:null">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ title : null, message : null }</e></m></meta>
		</alert>
		<close public="1" set="method" line="365"><f a=""><x path="Void"/></f></close>
		<focus public="1" set="method" line="370"><f a=""><x path="Void"/></f></focus>
		<move public="1" set="method" line="375"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<readPixels public="1" set="method" line="383">
			<f a="?rect" v="null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</readPixels>
		<resize public="1" set="method" line="388"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setIcon public="1" set="method" line="396"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<toString public="1" set="method" line="406"><f a=""><c path="String"/></f></toString>
		<warpMouse public="1" set="method" line="411"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></warpMouse>
		<get_cursor set="method" line="417">
			<f a=""><e path="lime.ui.MouseCursor"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_cursor>
		<set_cursor set="method" line="422">
			<f a="value">
				<e path="lime.ui.MouseCursor"/>
				<e path="lime.ui.MouseCursor"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_cursor>
		<get_display set="method" line="427">
			<f a=""><c path="lime.system.Display"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_display>
		<get_displayMode set="method" line="432">
			<f a=""><c path="lime.system.DisplayMode"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_displayMode>
		<set_displayMode set="method" line="437">
			<f a="value">
				<c path="lime.system.DisplayMode"/>
				<c path="lime.system.DisplayMode"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_displayMode>
		<get_borderless get="inline" set="null" line="442">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_borderless>
		<set_borderless set="method" line="447">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_borderless>
		<get_frameRate get="inline" set="null" line="452">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_frameRate>
		<set_frameRate get="inline" set="null" line="457">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_frameRate>
		<get_fullscreen get="inline" set="null" line="462">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fullscreen>
		<set_fullscreen set="method" line="467">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fullscreen>
		<get_height get="inline" set="null" line="472">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="477">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_hidden get="inline" set="null" line="483">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_hidden>
		<get_maximized get="inline" set="null" line="488">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_maximized>
		<set_maximized get="inline" set="null" line="493">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_maximized>
		<get_minimized get="inline" set="null" line="499">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_minimized>
		<set_minimized set="method" line="504">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_minimized>
		<get_mouseLock set="method" line="510">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseLock>
		<set_mouseLock set="method" line="515">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_mouseLock>
		<get_resizable get="inline" set="null" line="521">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_resizable>
		<set_resizable set="method" line="526">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_resizable>
		<get_scale get="inline" set="null" line="532">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scale>
		<get_textInputEnabled get="inline" set="null" line="537">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_textInputEnabled>
		<set_textInputEnabled get="inline" set="null" line="542">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_textInputEnabled>
		<get_title get="inline" set="null" line="547">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_title>
		<set_title set="method" line="552">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_title>
		<get_width get="inline" set="null" line="557">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_width>
		<set_width set="method" line="562">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_width>
		<get_x get="inline" set="null" line="568">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_x>
		<set_x set="method" line="573">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_x>
		<get_y get="inline" set="null" line="579">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_y>
		<set_y set="method" line="584">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_y>
		<new set="method" line="137">
			<f a="application:attributes">
				<c path="lime.app.Application"/>
				<t path="lime.ui.WindowAttributes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui._Window.WindowBackend" params="" file="/projects/May2019/May2020/lime/src/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<c path="lime._internal.backend.native.NativeWindow"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<typedef path="lime.ui.WindowAttributes" params="" file="/projects/May2019/May2020/lime/src/lime/ui/WindowAttributes.hx"><a>
	<y>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</y>
	<x>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</x>
	<width>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</width>
	<title>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</title>
	<resizable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</resizable>
	<parameters>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</parameters>
	<minimized>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</minimized>
	<maximized>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</maximized>
	<hidden>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</hidden>
	<height>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</height>
	<fullscreen>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</fullscreen>
	<frameRate>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</frameRate>
	<element>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</element>
	<context>
		<x path="Null"><t path="lime.graphics.RenderContextAttributes"/></x>
		<meta><m n=":optional"/></meta>
	</context>
	<borderless>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</borderless>
	<alwaysOnTop>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</alwaysOnTop>
	<allowHighDPI>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</allowHighDPI>
</a></typedef>
	<abstract path="lime.utils.ArrayBuffer" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBuffer.hx">
		<from>
			<icast><d/></icast>
			<icast><c path="haxe.io.Bytes"/></icast>
		</from>
		<this><c path="haxe.io.Bytes"/></this>
		<to>
			<icast><d/></icast>
			<icast><c path="haxe.io.Bytes"/></icast>
		</to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer" final="1">
	<byteLength public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</byteLength>
	<get_byteLength get="inline" set="null" line="15" static="1">
		<f a="this">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_byteLength>
	<_new public="1" get="inline" set="null" line="20" static="1">
		<f a="byteLength">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<isView public="1" get="inline" set="null" line="25" static="1"><f a="arg">
	<d/>
	<x path="Bool"/>
</f></isView>
	<slice public="1" get="inline" set="null" line="30" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</slice>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer" final="1">
		<byteLength public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</byteLength>
		<get_byteLength get="inline" set="null" line="15" static="1">
			<f a="this">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_byteLength>
		<_new public="1" get="inline" set="null" line="20" static="1">
			<f a="byteLength">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<isView public="1" get="inline" set="null" line="25" static="1"><f a="arg">
	<d/>
	<x path="Bool"/>
</f></isView>
		<slice public="1" get="inline" set="null" line="30" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</slice>
	</class>
	<abstract path="lime.utils.TypedArrayType" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1" final="1">
	<None public="1" get="inline" set="null" expr="cast 0" line="406" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</None>
	<Int8 public="1" get="inline" set="null" expr="cast 1" line="407" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int8>
	<Int16 public="1" get="inline" set="null" expr="cast 2" line="408" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int16>
	<Int32 public="1" get="inline" set="null" expr="cast 3" line="409" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int32>
	<Uint8 public="1" get="inline" set="null" expr="cast 4" line="410" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8>
	<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="411" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8Clamped>
	<Uint16 public="1" get="inline" set="null" expr="cast 6" line="412" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint16>
	<Uint32 public="1" get="inline" set="null" expr="cast 7" line="413" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint32>
	<Float32 public="1" get="inline" set="null" expr="cast 8" line="414" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float32>
	<Float64 public="1" get="inline" set="null" expr="cast 9" line="415" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float64>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1" final="1">
		<None public="1" get="inline" set="null" expr="cast 0" line="406" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</None>
		<Int8 public="1" get="inline" set="null" expr="cast 1" line="407" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int8>
		<Int16 public="1" get="inline" set="null" expr="cast 2" line="408" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int16>
		<Int32 public="1" get="inline" set="null" expr="cast 3" line="409" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int32>
		<Uint8 public="1" get="inline" set="null" expr="cast 4" line="410" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8>
		<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="411" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8Clamped>
		<Uint16 public="1" get="inline" set="null" expr="cast 6" line="412" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint16>
		<Uint32 public="1" get="inline" set="null" expr="cast 7" line="413" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint32>
		<Float32 public="1" get="inline" set="null" expr="cast 8" line="414" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float32>
		<Float64 public="1" get="inline" set="null" expr="cast 9" line="415" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float64>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.utils.ArrayBufferIO" params="" file="/projects/May2019/May2020/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<getInt8 public="1" get="inline" set="null" line="424" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getInt8>
		<setInt8 public="1" get="inline" set="null" line="438" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setInt8>
		<getUint8 public="1" get="inline" set="null" line="454" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getUint8>
		<setUint8Clamped public="1" get="inline" set="null" line="467" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint8Clamped>
		<setUint8 public="1" get="inline" set="null" line="476" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setUint8>
		<getInt16 public="1" set="method" line="491" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getInt16>
		<getInt16_BE public="1" set="method" line="505" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getInt16_BE>
		<setInt16 public="1" set="method" line="519" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setInt16>
		<setInt16_BE public="1" set="method" line="534" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setInt16_BE>
		<getUint16 public="1" get="inline" set="null" line="551" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getUint16>
		<getUint16_BE public="1" get="inline" set="null" line="567" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getUint16_BE>
		<setUint16 public="1" get="inline" set="null" line="583" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setUint16>
		<setUint16_BE public="1" get="inline" set="null" line="596" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setUint16_BE>
		<getInt32 public="1" get="inline" set="null" line="611" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getInt32>
		<getInt32_BE public="1" get="inline" set="null" line="624" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getInt32_BE>
		<setInt32 public="1" get="inline" set="null" line="637" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setInt32>
		<setInt32_BE public="1" get="inline" set="null" line="654" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setInt32_BE>
		<getUint32 public="1" get="inline" set="null" line="671" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getUint32>
		<getUint32_BE public="1" get="inline" set="null" line="684" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getUint32_BE>
		<setUint32 public="1" get="inline" set="null" line="697" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setUint32>
		<setUint32_BE public="1" get="inline" set="null" line="710" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setUint32_BE>
		<getFloat32 public="1" get="inline" set="null" line="724" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getFloat32>
		<getFloat32_BE public="1" get="inline" set="null" line="737" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getFloat32_BE>
		<setFloat32 public="1" get="inline" set="null" line="750" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setFloat32>
		<setFloat32_BE public="1" get="inline" set="null" line="766" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setFloat32_BE>
		<getFloat64 public="1" get="inline" set="null" line="782" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getFloat64>
		<getFloat64_BE public="1" get="inline" set="null" line="795" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</getFloat64_BE>
		<setFloat64 public="1" get="inline" set="null" line="808" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setFloat64>
		<setFloat64_BE public="1" get="inline" set="null" line="824" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":extern"/>
			</meta>
		</setFloat64_BE>
		<_clamp get="inline" set="null" line="841" static="1">
			<f a="_in">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</_clamp>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.utils.AssetBundle" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetBundle.hx">
		<fromBytes public="1" set="method" line="29" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.utils.AssetBundle"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="35" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.utils.AssetBundle"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="45" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetBundle"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="50" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetBundle"/></c>
</f></loadFromFile>
		<__extractBundle set="method" line="55" static="1">
			<f a="input">
				<c path="haxe.io.Input"/>
				<c path="lime.utils.AssetBundle"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__extractBundle>
		<data public="1"><t path="Map">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</t></data>
		<paths public="1"><c path="Array"><c path="String"/></c></paths>
		<new public="1" set="method" line="22"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.AssetCache" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetCache.hx">
		<audio public="1"><t path="Map">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</t></audio>
		<enabled public="1" expr="true">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</enabled>
		<image public="1"><t path="Map">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</t></image>
		<font public="1"><t path="Map">
	<c path="String"/>
	<d/>
</t></font>
		<version public="1"><x path="Int"/></version>
		<exists public="1" set="method" line="37"><f a="id:?type">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
</f></exists>
		<set public="1" set="method" line="57"><f a="id:type:asset">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<d/>
	<x path="Void"/>
</f></set>
		<clear public="1" set="method" line="79">
			<f a="?prefix" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ prefix : null }</e></m></meta>
		</clear>
		<new public="1" set="method" line="22"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.AssetLibrary" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetLibrary.hx">
		<fromBytes public="1" set="method" line="89" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="94" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<fromBundle public="1" set="method" line="99" static="1"><f a="bundle">
	<c path="lime.utils.AssetBundle"/>
	<c path="lime.utils.AssetLibrary"/>
</f></fromBundle>
		<fromManifest public="1" set="method" line="140" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.utils.AssetLibrary"/>
</f></fromManifest>
		<loadFromBytes public="1" set="method" line="528" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="536" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<loadFromManifest public="1" set="method" line="544" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadFromManifest>
		<onChange public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<assetsLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</assetsLoaded>
		<assetsTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</assetsTotal>
		<bytesLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoaded>
		<bytesLoadedCache>
			<t path="Map">
				<c path="String"/>
				<x path="Int"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoadedCache>
		<bytesTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesTotal>
		<cachedAudioBuffers expr="new Map&lt;String,AudioBuffer&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,AudioBuffer>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedAudioBuffers>
		<cachedBytes expr="new Map&lt;String,Bytes&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Bytes>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedBytes>
		<cachedFonts expr="new Map&lt;String,Font&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.text.Font"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Font>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedFonts>
		<cachedImages expr="new Map&lt;String,Image&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Image>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedImages>
		<cachedText expr="new Map&lt;String,String&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedText>
		<classTypes expr="new Map&lt;String,Class&lt;Dynamic&gt;&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Class"><d/></x>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Class<Dynamic>>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</classTypes>
		<loaded>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</loaded>
		<pathGroups expr="new Map&lt;String,Array&lt;String&gt;&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Array<String>>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</pathGroups>
		<paths expr="new Map&lt;String,String&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</paths>
		<preload expr="new Map&lt;String,Bool&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Bool>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</preload>
		<promise>
			<c path="lime.app.Promise_lime_utils_AssetLibrary"/>
			<meta><m n=":noCompletion"/></meta>
		</promise>
		<sizes expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</sizes>
		<types expr="new Map&lt;String,AssetType&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,AssetType>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</types>
		<exists public="1" set="method" line="52"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<getAsset public="1" set="method" line="170"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<d/>
</f></getAsset>
		<getAudioBuffer public="1" set="method" line="185"><f a="id">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="207"><f a="id">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></getBytes>
		<getFont public="1" set="method" line="246"><f a="id">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></getFont>
		<getImage public="1" set="method" line="270"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getPath public="1" set="method" line="290"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getPath>
		<getText public="1" set="method" line="306"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="327"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<list public="1" set="method" line="355"><f a="type">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<loadAsset public="1" set="method" line="371"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<load public="1" set="method" line="386"><f a=""><c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c></f></load>
		<loadAudioBuffer public="1" set="method" line="459"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="482"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="502"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFont>
		<loadImage public="1" set="method" line="558"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadImage>
		<loadText public="1" set="method" line="583"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<unload public="1" set="method" line="611"><f a=""><x path="Void"/></f></unload>
		<__assetLoaded set="method" line="613">
			<f a="id">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__assetLoaded>
		<__cacheBreak set="method" line="655">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__cacheBreak>
		<__fromBundle set="method" line="660">
			<f a="bundle:?manifest" v=":null">
				<c path="lime.utils.AssetBundle"/>
				<c path="lime.utils.AssetManifest"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ manifest : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromBundle>
		<__fromManifest set="method" line="707">
			<f a="manifest">
				<c path="lime.utils.AssetManifest"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromManifest>
		<__resolvePath set="method" line="774">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__resolvePath>
		<loadAudioBuffer_onComplete set="method" line="834">
			<f a="id:audioBuffer">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadAudioBuffer_onComplete>
		<loadAudioBuffer_onError set="method" line="860">
			<f a="id:message">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadAudioBuffer_onError>
		<loadBytes_onComplete set="method" line="878">
			<f a="id:bytes">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadBytes_onComplete>
		<loadFont_onComplete set="method" line="884">
			<f a="id:font">
				<c path="String"/>
				<c path="lime.text.Font"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadFont_onComplete>
		<loadImage_onComplete set="method" line="890">
			<f a="id:image">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadImage_onComplete>
		<loadText_onComplete set="method" line="896">
			<f a="id:text">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadText_onComplete>
		<load_onError set="method" line="902">
			<f a="id:message">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</load_onError>
		<load_onProgress set="method" line="914">
			<f a="id:bytesLoaded:bytesTotal">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</load_onProgress>
		<new public="1" set="method" line="46"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime.text.Font</e></m>
			<m n=":access"><e>lime.utils.Assets</e></m>
		</meta>
	</class>
	<class path="lime.utils.AssetManifest" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetManifest.hx">
		<fromBytes public="1" set="method" line="32" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="44" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<loadFromBytes public="1" set="method" line="54" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="59" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<parse public="1" set="method" line="72" static="1">
			<f a="data:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</parse>
		<__resolvePath set="method" line="148" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></__resolvePath>
		<__resolveRootPath set="method" line="188" static="1"><f a="rootPath:path">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></__resolveRootPath>
		<assets public="1"><c path="Array"><d/></c></assets>
		<libraryArgs public="1"><c path="Array"><c path="String"/></c></libraryArgs>
		<libraryType public="1"><c path="String"/></libraryType>
		<name public="1"><c path="String"/></name>
		<rootPath public="1"><c path="String"/></rootPath>
		<version public="1"><x path="Int"/></version>
		<serialize public="1" set="method" line="131"><f a=""><c path="String"/></f></serialize>
		<new public="1" set="method" line="25"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.AssetType" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetType.hx">
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1" final="1">
	<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="5" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "BINARY"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="6" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "FONT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="7" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "IMAGE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="8" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MANIFEST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MANIFEST>
	<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="9" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MUSIC"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="10" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "SOUND"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="11" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEMPLATE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="12" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEXT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1" final="1">
		<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="5" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "BINARY"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="6" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "FONT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="7" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "IMAGE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="8" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MANIFEST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MANIFEST>
		<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="9" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MUSIC"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="10" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "SOUND"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="11" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEMPLATE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="12" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEXT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.utils.Assets" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Assets.hx">
		<cache public="1" expr="new AssetCache()" line="39" static="1">
			<c path="lime.utils.AssetCache"/>
			<meta><m n=":value"><e>new AssetCache()</e></m></meta>
		</cache>
		<onChange public="1" expr="new Event&lt;Void&gt;()" line="40" static="1">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<bundlePaths expr="new Map&lt;String,String&gt;()" line="42" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</bundlePaths>
		<libraries set="null" expr="new Map&lt;String,AssetLibrary&gt;()" line="43" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,AssetLibrary>()]]></e></m></meta>
		</libraries>
		<libraryPaths expr="new Map&lt;String,String&gt;()" line="44" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</libraryPaths>
		<exists public="1" set="method" line="46" static="1">
			<f a="id:?type" v=":null">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</exists>
		<getAsset public="1" set="method" line="71" static="1">
			<f a="id:type:useCache">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<d/>
			</f>
			<haxe_doc>* Gets an instance of a cached or embedded asset
	 * @usage		var sound = Assets.getAsset("sound.wav", SOUND);
	 * @param	id		The ID or asset path for the asset
	 * @return		An Asset object, or null.</haxe_doc>
		</getAsset>
		<getAudioBuffer public="1" set="method" line="156" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getAudioBuffer ("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getAudioBuffer>
		<getBytes public="1" set="method" line="167" static="1">
			<f a="id">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new Bytes object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="178" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.text.Font"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getImage public="1" set="method" line="190" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getImage>
		<getLibrary public="1" set="method" line="195" static="1"><f a="name">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
</f></getLibrary>
		<getPath public="1" set="method" line="211" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets the file path (if available) for an asset
	 * @usage		var path = Assets.getPath("image.jpg");
	 * @param	id		The ID or asset path for the asset
	 * @return		The path to the asset (or null)</haxe_doc>
		</getPath>
		<getText public="1" set="method" line="242" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<hasLibrary public="1" set="method" line="247" static="1"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasLibrary>
		<isLocal public="1" set="method" line="257" static="1">
			<f a="id:?type:?useCache" v=":null:true">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true, type : null }</e></m></meta>
		</isLocal>
		<isValidAudio set="method" line="272" static="1"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></isValidAudio>
		<isValidImage set="method" line="279" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
</f></isValidImage>
		<list public="1" set="method" line="286" static="1">
			<f a="?type" v="null">
				<x path="lime.utils.AssetType"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</list>
		<loadAsset public="1" set="method" line="303" static="1"><f a="id:type:useCache">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<loadAudioBuffer public="1" set="method" line="375" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadAudioBuffer>
		<loadBytes public="1" set="method" line="380" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="385" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.text.Font"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadFont>
		<loadImage public="1" set="method" line="390" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadImage>
		<loadLibrary public="1" set="method" line="395" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadLibrary>
		<loadText public="1" set="method" line="488" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<registerLibrary public="1" set="method" line="493" static="1"><f a="name:library">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></registerLibrary>
		<unloadLibrary public="1" set="method" line="515" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<__cacheBreak set="method" line="536" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__cacheBreak>
		<__libraryNotFound set="method" line="555" static="1">
			<f a="name">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__libraryNotFound>
		<library_onChange set="method" line="573" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</library_onChange>
		<haxe_doc><![CDATA[* <p>The Assets class provides a cross-platform interface to access
 * embedded images, fonts, sounds and other resource files.</p>
 *
 * <p>The contents are populated automatically when an application
 * is compiled using the Lime command-line tools, based on the
 * contents of the project file.</p>
 *
 * <p>For most platforms, the assets are included in the same directory
 * or package as the application, and the paths are handled
 * automatically. For web content, the assets are preloaded before
 * the start of the rest of the application.</p>]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
		</meta>
	</class>
	<class path="lime.utils._Assets.LibrarySymbol" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Assets.hx" private="1" module="lime.utils.Assets">
		<library public="1" set="null"><c path="lime.utils.AssetLibrary"/></library>
		<libraryName public="1" set="null"><c path="String"/></libraryName>
		<symbolName public="1" set="null"><c path="String"/></symbolName>
		<isLocal public="1" get="inline" set="null" line="598"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<exists public="1" get="inline" set="null" line="601"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<new public="1" get="inline" set="null" line="590"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.BytePointer" params="" file="/projects/May2019/May2020/lime/src/lime/utils/BytePointer.hx">
		<from>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><c path="lime.utils.BytePointerData"/></this>
		<to>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="toUInt8Array"><x path="lime.utils.UInt8Array"/></icast>
			<icast field="toUInt8ClampedArray"><x path="lime.utils.UInt8ClampedArray"/></icast>
			<icast field="toInt8Array"><x path="lime.utils.Int8Array"/></icast>
			<icast field="toUInt16Array"><x path="lime.utils.UInt16Array"/></icast>
			<icast field="toInt16Array"><x path="lime.utils.Int16Array"/></icast>
			<icast field="toUInt32Array"><x path="lime.utils.UInt32Array"/></icast>
			<icast field="toInt32Array"><x path="lime.utils.Int32Array"/></icast>
			<icast field="toFloat32Array"><x path="lime.utils.Float32Array"/></icast>
			<icast field="toFloat64Array"><x path="lime.utils.Float64Array"/></icast>
		</to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer" final="1">
	<_new public="1" get="inline" set="null" line="12" static="1">
		<f a="?bytes:?offset" v="null:0">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<set public="1" set="method" line="17" static="1">
		<f a="this:?bytes:?bufferView:?buffer:?offset">
			<c path="lime.utils.BytePointerData"/>
			<c path="haxe.io.Bytes"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<__arrayGet get="inline" set="null" line="45" static="1">
		<f a="this:index">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arrayGet>
	<__arraySet get="inline" set="null" line="50" static="1">
		<f a="this:index:value">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arraySet>
	<fromArrayBufferView public="1" set="method" line="56" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="67" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="78" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="83" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromFile public="1" set="method" line="90" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
	<fromLimeBytes public="1" set="method" line="95" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<toUInt8Array public="1" set="method" line="100" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8Array>
	<toUInt8ClampedArray public="1" set="method" line="109" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8ClampedArray>
	<toInt8Array public="1" set="method" line="120" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt8Array>
	<toUInt16Array public="1" set="method" line="131" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt16Array>
	<toInt16Array public="1" set="method" line="142" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt16Array>
	<toUInt32Array public="1" set="method" line="153" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt32Array>
	<toInt32Array public="1" set="method" line="164" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt32Array>
	<toFloat32Array public="1" set="method" line="175" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat32Array>
	<toFloat64Array public="1" set="method" line="186" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat64Array>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>lime.utils.BytePointerData</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer" final="1">
		<_new public="1" get="inline" set="null" line="12" static="1">
			<f a="?bytes:?offset" v="null:0">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<set public="1" set="method" line="17" static="1">
			<f a="this:?bytes:?bufferView:?buffer:?offset">
				<c path="lime.utils.BytePointerData"/>
				<c path="haxe.io.Bytes"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<__arrayGet get="inline" set="null" line="45" static="1">
			<f a="this:index">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arrayGet>
		<__arraySet get="inline" set="null" line="50" static="1">
			<f a="this:index:value">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arraySet>
		<fromArrayBufferView public="1" set="method" line="56" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="67" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="78" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="83" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromFile public="1" set="method" line="90" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
		<fromLimeBytes public="1" set="method" line="95" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<toUInt8Array public="1" set="method" line="100" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8Array>
		<toUInt8ClampedArray public="1" set="method" line="109" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8ClampedArray>
		<toInt8Array public="1" set="method" line="120" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt8Array>
		<toUInt16Array public="1" set="method" line="131" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt16Array>
		<toInt16Array public="1" set="method" line="142" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt16Array>
		<toUInt32Array public="1" set="method" line="153" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt32Array>
		<toInt32Array public="1" set="method" line="164" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt32Array>
		<toFloat32Array public="1" set="method" line="175" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat32Array>
		<toFloat64Array public="1" set="method" line="186" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat64Array>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<abstract path="lime.utils.Bytes" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Bytes.hx">
		<from><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></from>
		<this><t path="haxe.io._Bytes.HaxeBytes"/></this>
		<to><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes" final="1">
	<_new public="1" set="method" line="18" static="1">
		<f a="length:bytesData">
			<x path="Int"/>
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<alloc public="1" set="method" line="29" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
	<compress public="1" set="method" line="37" static="1">
		<f a="this:algorithm">
			<t path="haxe.io._Bytes.HaxeBytes"/>
			<e path="lime.utils.CompressionAlgorithm"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compress>
	<decompress public="1" set="method" line="58" static="1">
		<f a="this:algorithm">
			<t path="haxe.io._Bytes.HaxeBytes"/>
			<e path="lime.utils.CompressionAlgorithm"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</decompress>
	<fastGet public="1" get="inline" set="null" line="79" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
	<fromBytes public="1" set="method" line="84" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
	<fromFile public="1" set="method" line="91" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
	<loadFromBytes public="1" set="method" line="106" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
	<loadFromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
	<ofData public="1" set="method" line="117" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
	<ofString public="1" set="method" line="123" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
	<__fromNativePointer public="1" set="method" line="130" static="1"><f a="data:length">
	<d/>
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></__fromNativePointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes" final="1">
		<_new public="1" set="method" line="18" static="1">
			<f a="length:bytesData">
				<x path="Int"/>
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<alloc public="1" set="method" line="29" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
		<compress public="1" set="method" line="37" static="1">
			<f a="this:algorithm">
				<t path="haxe.io._Bytes.HaxeBytes"/>
				<e path="lime.utils.CompressionAlgorithm"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compress>
		<decompress public="1" set="method" line="58" static="1">
			<f a="this:algorithm">
				<t path="haxe.io._Bytes.HaxeBytes"/>
				<e path="lime.utils.CompressionAlgorithm"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</decompress>
		<fastGet public="1" get="inline" set="null" line="79" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
		<fromBytes public="1" set="method" line="84" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="91" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="106" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
		<ofData public="1" set="method" line="117" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
		<ofString public="1" set="method" line="123" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
		<__fromNativePointer public="1" set="method" line="130" static="1"><f a="data:length">
	<d/>
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></__fromNativePointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<enum path="lime.utils.CompressionAlgorithm" params="" file="/projects/May2019/May2020/lime/src/lime/utils/CompressionAlgorithm.hx">
		<DEFLATE/>
		<GZIP/>
		<LZMA/>
		<ZLIB/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.utils.DataPointer" params="" file="/projects/May2019/May2020/lime/src/lime/utils/DataPointer.hx">
		<from>
			<icast field="fromFloat"><x path="Float"/></icast>
			<icast field="fromBytesPointer"><x path="lime.utils.BytePointer"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><t path="lime.utils._DataPointer.DataPointerType"/></this>
		<to><icast><t path="lime.utils._DataPointer.DataPointerType"/></icast></to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
		<impl><class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer" final="1">
	<_new set="method" line="20" static="1">
		<f a="data">
			<d/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<fromFloat set="method" line="36" static="1">
		<f a="value">
			<x path="Float"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromFloat>
	<fromBytesPointer public="1" set="method" line="61" static="1">
		<f a="pointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesPointer>
	<fromArrayBufferView public="1" set="method" line="75" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="89" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="99" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="113" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromLimeBytes public="1" set="method" line="123" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<fromFile public="1" set="method" line="140" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
	<__withOffset set="method" line="149" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
	<equals get="inline" set="null" line="160" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<equalsPointer get="inline" set="null" line="165" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equalsPointer>
	<greaterThan get="inline" set="null" line="170" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThan>
	<greaterThanOrEqual get="inline" set="null" line="182" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqual>
	<lessThan get="inline" set="null" line="194" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThan>
	<lessThanOrEqual get="inline" set="null" line="206" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqual>
	<notEquals get="inline" set="null" line="218" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEquals>
	<notEqualsPointer get="inline" set="null" line="223" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEqualsPointer>
	<plus get="inline" set="null" line="228" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plus>
	<plusPointer get="inline" set="null" line="233" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plusPointer>
	<minus get="inline" set="null" line="238" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minus>
	<minusPointer get="inline" set="null" line="243" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minusPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":access"><e>haxe.io.Bytes</e></m>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer" final="1">
		<_new set="method" line="20" static="1">
			<f a="data">
				<d/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<fromFloat set="method" line="36" static="1">
			<f a="value">
				<x path="Float"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromFloat>
		<fromBytesPointer public="1" set="method" line="61" static="1">
			<f a="pointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesPointer>
		<fromArrayBufferView public="1" set="method" line="75" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="89" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="99" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="113" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromLimeBytes public="1" set="method" line="123" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<fromFile public="1" set="method" line="140" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
		<__withOffset set="method" line="149" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
		<equals get="inline" set="null" line="160" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<equalsPointer get="inline" set="null" line="165" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equalsPointer>
		<greaterThan get="inline" set="null" line="170" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThan>
		<greaterThanOrEqual get="inline" set="null" line="182" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqual>
		<lessThan get="inline" set="null" line="194" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThan>
		<lessThanOrEqual get="inline" set="null" line="206" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqual>
		<notEquals get="inline" set="null" line="218" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEquals>
		<notEqualsPointer get="inline" set="null" line="223" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEqualsPointer>
		<plus get="inline" set="null" line="228" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plus>
		<plusPointer get="inline" set="null" line="233" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plusPointer>
		<minus get="inline" set="null" line="238" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minus>
		<minusPointer get="inline" set="null" line="243" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minusPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<typedef path="lime.utils._DataPointer.DataPointerType" params="" file="/projects/May2019/May2020/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer"><x path="Float"/></typedef>
	<abstract path="lime.utils.Float32Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="92" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<hello public="1" static="1"><x path="Int"/></hello>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="98" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="130" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="134" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="139" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="145" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="148" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":extern"/>
		</meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="153" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="160" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
</class></impl>
	</abstract>
	<class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<hello public="1" static="1"><x path="Int"/></hello>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="98" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="130" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="134" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="139" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="145" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="148" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":extern"/>
			</meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="153" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="160" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
	</class>
	<abstract path="lime.utils.Float64Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float64Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="90" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>8</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="95" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="127" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="131" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="95" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="127" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="131" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<abstract path="lime.utils.Int16Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="90" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="95" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="127" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="131" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="95" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="127" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="131" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<abstract path="lime.utils.Int32Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="90" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="95" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="127" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="131" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="95" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="127" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="131" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<abstract path="lime.utils.Int8Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="88" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="93" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="125" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="129" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="93" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="125" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="129" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<class path="lime.utils.Log" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Log.hx">
		<level public="1" static="1"><x path="lime.utils.LogLevel"/></level>
		<throwErrors public="1" expr="true" line="12" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</throwErrors>
		<debug public="1" set="method" line="14" static="1"><f a="message:?info">
	<d/>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<x path="Void"/>
</f></debug>
		<error public="1" set="method" line="26" static="1"><f a="message:?info">
	<d/>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<x path="Void"/>
</f></error>
		<info public="1" set="method" line="47" static="1"><f a="message:?info">
	<d/>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<x path="Void"/>
</f></info>
		<print public="1" get="inline" set="null" line="59" static="1"><f a="message">
	<d/>
	<x path="Void"/>
</f></print>
		<println public="1" get="inline" set="null" line="72" static="1"><f a="message">
	<d/>
	<x path="Void"/>
</f></println>
		<verbose public="1" set="method" line="85" static="1"><f a="message:?info">
	<d/>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<x path="Void"/>
</f></verbose>
		<warn public="1" set="method" line="93" static="1"><f a="message:?info">
	<d/>
	<x path="Null"><t path="haxe.PosInfos"/></x>
	<x path="Void"/>
</f></warn>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.LogLevel" params="" file="/projects/May2019/May2020/lime/src/lime/utils/LogLevel.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._LogLevel.LogLevel_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/LogLevel.hx" private="1" module="lime.utils.LogLevel" final="1">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<ERROR public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ERROR>
	<WARN public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WARN>
	<INFO public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFO>
	<DEBUG public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUG>
	<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERBOSE>
	<gt get="inline" set="null" line="12" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="17" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="22" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="27" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._LogLevel.LogLevel_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/LogLevel.hx" private="1" module="lime.utils.LogLevel" final="1">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="5" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<ERROR public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ERROR>
		<WARN public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WARN>
		<INFO public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFO>
		<DEBUG public="1" get="inline" set="null" expr="cast 4" line="9" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUG>
		<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="10" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERBOSE>
		<gt get="inline" set="null" line="12" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="17" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="22" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="27" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.utils.Preloader" params="" file="/projects/May2019/May2020/lime/src/lime/utils/Preloader.hx">
		<complete public="1" set="null"><x path="Bool"/></complete>
		<onComplete public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onComplete>
		<onProgress public="1" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onProgress>
		<bytesLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoaded>
		<bytesLoadedCache expr="new Map&lt;AssetLibrary,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="lime.utils.AssetLibrary"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<AssetLibrary,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesLoadedCache>
		<bytesLoadedCache2 expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesLoadedCache2>
		<bytesTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesTotal>
		<bytesTotalCache expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesTotalCache>
		<initLibraryNames>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</initLibraryNames>
		<libraries>
			<c path="Array"><c path="lime.utils.AssetLibrary"/></c>
			<meta><m n=":noCompletion"/></meta>
		</libraries>
		<libraryNames>
			<c path="Array"><c path="String"/></c>
			<meta><m n=":noCompletion"/></meta>
		</libraryNames>
		<loadedLibraries>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</loadedLibraries>
		<loadedStage>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</loadedStage>
		<preloadComplete>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</preloadComplete>
		<preloadStarted>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</preloadStarted>
		<simulateProgress>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</simulateProgress>
		<addLibrary public="1" set="method" line="107"><f a="library">
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></addLibrary>
		<addLibraryName public="1" set="method" line="112"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></addLibraryName>
		<load public="1" set="method" line="120"><f a=""><x path="Void"/></f></load>
		<loadedAssetLibrary set="method" line="184">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ name : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</loadedAssetLibrary>
		<start set="method" line="205">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</start>
		<update set="method" line="221">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</update>
		<updateProgress set="method" line="223">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</updateProgress>
		<new public="1" set="method" line="51"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.UInt16Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="90" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="95" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="127" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="131" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="95" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="127" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="131" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<abstract path="lime.utils.UInt32Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="90" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="95" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="127" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="131" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="142" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="147" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="154" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="160" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="95" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="127" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="131" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="142" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="147" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="154" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="160" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<abstract path="lime.utils.UInt8Array" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="88" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="93" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="125" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="129" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="134" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="140" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="143" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="148" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="155" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="93" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="125" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="129" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="134" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="140" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="143" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="148" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="155" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
	</class>
	<abstract path="lime.utils.UInt8ClampedArray" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8ClampedArray.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta>
			<m n=":forward"/>
			<m n=":arrayAccess"/>
		</meta>
		<impl><class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="100" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="105" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="137" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="141" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="146" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="152" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="157" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="164" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="170" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/projects/May2019/May2020/lime/src/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="105" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="137" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="141" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="146" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="152" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="157" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="164" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="170" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
	</class>
	<typedef path="sys.FileStat" params="" file="/usr/local/lib/haxe/std/sys/FileStat.hx">
		<a>
			<uid>
				<x path="Int"/>
				<haxe_doc>The user id for the file owner.</haxe_doc>
			</uid>
			<size>
				<x path="Int"/>
				<haxe_doc>The size of the file, in bytes.</haxe_doc>
			</size>
			<rdev>
				<x path="Int"/>
				<haxe_doc>The device type on which stat resides (special files only).</haxe_doc>
			</rdev>
			<nlink>
				<x path="Int"/>
				<haxe_doc>The number of hard links to stat.</haxe_doc>
			</nlink>
			<mtime>
				<c path="Date"/>
				<haxe_doc>The last modification time for the file.</haxe_doc>
			</mtime>
			<mode>
				<x path="Int"/>
				<haxe_doc>The permission bits of stat. The meaning of the bits is platform dependent.</haxe_doc>
			</mode>
			<ino>
				<x path="Int"/>
				<haxe_doc>The inode number for stat.</haxe_doc>
			</ino>
			<gid>
				<x path="Int"/>
				<haxe_doc>The user group id for the file owner.</haxe_doc>
			</gid>
			<dev>
				<x path="Int"/>
				<haxe_doc>The device on which stat resides.</haxe_doc>
			</dev>
			<ctime>
				<c path="Date"/>
				<haxe_doc>The creation time for the file (not all file systems support this).</haxe_doc>
			</ctime>
			<atime>
				<c path="Date"/>
				<haxe_doc>The last access time for the file (when enabled by the file system).</haxe_doc>
			</atime>
		</a>
		<haxe_doc>File information, as given by `sys.FileSystem.stat`.</haxe_doc>
	</typedef>
	<class path="sys.io.File" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/io/File.hx">
		<read public="1" set="method" line="50" static="1">
			<f a="path:?binary" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="sys.io.FileInput"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ binary : true }</e></m>
			</meta>
			<haxe_doc>Returns an `FileInput` handle to the file specified by `path`.

		If `binary` is true, the file is opened in binary mode. Otherwise it is
		opened in non-binary mode.

		If the file does not exist or can not be read, an exception is thrown.

		Operations on the returned `FileInput` handle read on the opened file.

		File handles should be closed via `FileInput.close` once the operation
		is complete.

		If `path` is null, the result is unspecified.</haxe_doc>
		</read>
		<haxe_doc>API for reading and writing files.

	See `sys.FileSystem` for the complementary file system API.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="sys.io.FileInput" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/io/FileInput.hx">
		<extends path="haxe.io.Input"/>
		<__f><d/></__f>
		<readByte public="1" set="method" line="36" override="1">
			<f a=""><x path="Int"/></f>
			<meta><m n=":has_untyped"/></meta>
		</readByte>
		<readBytes public="1" set="method" line="47" override="1">
			<f a="s:p:l">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</readBytes>
		<new set="method" line="32"><f a="f">
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Use `sys.io.File.read` to create a `FileInput`.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="sys.io._Process.Stdin" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/io/Process.hx" private="1" module="sys.io.Process">
		<extends path="haxe.io.Output"/>
		<p><d/></p>
		<buf><c path="haxe.io.Bytes"/></buf>
		<new public="1" set="method" line="31"><f a="p">
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="sys.io._Process.Stdout" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/io/Process.hx" private="1" module="sys.io.Process">
		<extends path="haxe.io.Input"/>
		<p><d/></p>
		<out><x path="Bool"/></out>
		<buf><c path="haxe.io.Bytes"/></buf>
		<readByte public="1" set="method" line="67" override="1"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method" line="73" override="1"><f a="str:pos:len">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></readBytes>
		<new public="1" set="method" line="61"><f a="p:out">
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="sys.io.Process" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/io/Process.hx">
		<p><d/></p>
		<stdout public="1" set="null">
			<c path="haxe.io.Input"/>
			<haxe_doc>Standard output. The output stream where a process writes its output data.</haxe_doc>
		</stdout>
		<stderr public="1" set="null">
			<c path="haxe.io.Input"/>
			<haxe_doc>Standard error. The output stream to output error messages or diagnostics.</haxe_doc>
		</stderr>
		<stdin public="1" set="null">
			<c path="haxe.io.Output"/>
			<haxe_doc>Standard input. The stream data going into a process.</haxe_doc>
		</stdin>
		<close public="1" set="method" line="113">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Close the process handle and release the associated resources.
		All `Process` fields should not be used after `close()` is called.</haxe_doc>
		</close>
		<new public="1" set="method" line="94">
			<f a="cmd:?args:?detached">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Construct a `Process` object, which run the given command immediately.

		Command arguments can be passed in two ways: 1. using `args`, 2. appending to `cmd` and leaving `args` as `null`.

		 1. When using `args` to pass command arguments, each argument will be automatically quoted, and shell meta-characters will be escaped if needed.
		`cmd` should be an executable name that can be located in the `PATH` environment variable, or a path to an executable.

		 2. When `args` is not given or is `null`, command arguments can be appended to `cmd`. No automatic quoting/escaping will be performed. `cmd` should be formatted exactly as it would be when typed at the command line.
		It can run executables, as well as shell commands that are not executables (e.g. on Windows: `dir`, `cd`, `echo` etc).

		`detached` allows the created process to be standalone. You cannot communicate with it but you can look at its exit code. Not supported on php.

		`close()` should be called when the `Process` is no longer used.</haxe_doc>
		</new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="sys.thread.Deque" params="T" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Deque.hx">
		<q><d/></q>
		<add public="1" set="method" line="33">
			<f a="i">
				<c path="sys.thread.Deque.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Adds an element at the end of `this` Deque.</haxe_doc>
		</add>
		<pop public="1" set="method" line="41">
			<f a="block">
				<x path="Bool"/>
				<x path="Null"><c path="sys.thread.Deque.T"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Tries to retrieve an element from the front of `this` Deque.

		If an element is available, it is removed from the queue and returned.

		If no element is available and `block` is `false`, `null` is returned.

		Otherwise, execution blocks until an element is available and returns it.</haxe_doc>
		</pop>
		<new public="1" set="method" line="29">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Create a new Deque instance which is initially empty.</haxe_doc>
		</new>
		<haxe_doc>A Deque is a double-ended queue with a `pop` method that can block until
	an element is available. It is commonly used to synchronize threads.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="sys.thread._Thread.ThreadHandle" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Thread.hx" private="1" module="sys.thread.Thread">
		<this><x path="sys.thread._Thread.ThreadHandle"/></this>
		<meta>
			<m n=":callable"/>
			<m n=":coreType"/>
		</meta>
	</abstract>
	<abstract path="sys.thread.Thread" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Thread.hx">
		<this><x path="sys.thread._Thread.ThreadHandle"/></this>
		<impl><class path="sys.thread._Thread.Thread_Impl_" params="" file="/usr/local/lib/haxe/std/cpp/_std/sys/thread/Thread.hx" private="1" module="sys.thread.Thread" final="1"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<abstract path="typedarray.ArrayBuffer" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBuffer.hx">
		<from>
			<icast><c path="haxe.io.Bytes"/></icast>
			<icast field="ofData"><t path="haxe.io.BytesData"/></icast>
		</from>
		<this><c path="haxe.io.Bytes"/></this>
		<to><icast><c path="haxe.io.Bytes"/></icast></to>
		<meta><m n=":nullSafety"/></meta>
		<impl><class path="typedarray._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBuffer.hx" private="1" module="typedarray.ArrayBuffer" final="1">
	<byteLength public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</byteLength>
	<_new public="1" get="inline" set="null" line="15" static="1">
		<f a="length">
			<x path="Int"/>
			<x path="typedarray.ArrayBuffer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<slice public="1" set="method" line="23" static="1">
		<f a="this:start:?end">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.ArrayBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from start, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning.</haxe_doc>
	</slice>
	<toCPointer public="1" get="inline" set="null" line="43" static="1">
		<f a="this">
			<c path="haxe.io.Bytes"/>
			<t path="cpp.Star"><x path="cpp.UInt8"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toCPointer>
	<imax get="inline" set="null" line="48" static="1">
		<f a="this:a:b">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</imax>
	<imin get="inline" set="null" line="49" static="1">
		<f a="this:a:b">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</imin>
	<get_byteLength get="inline" set="null" line="51" static="1">
		<f a="this">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_byteLength>
	<isView public="1" get="inline" set="null" line="55" static="1"><f a="value">
	<d/>
	<x path="Bool"/>
</f></isView>
	<ofData public="1" get="inline" set="null" line="64" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="typedarray.ArrayBuffer"/>
		</f>
		<meta><m n=":from"/></meta>
	</ofData>
</class></impl>
	</abstract>
	<class path="typedarray._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBuffer.hx" private="1" module="typedarray.ArrayBuffer" final="1">
		<byteLength public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</byteLength>
		<_new public="1" get="inline" set="null" line="15" static="1">
			<f a="length">
				<x path="Int"/>
				<x path="typedarray.ArrayBuffer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<slice public="1" set="method" line="23" static="1">
			<f a="this:start:?end">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.ArrayBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from start, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning.</haxe_doc>
		</slice>
		<toCPointer public="1" get="inline" set="null" line="43" static="1">
			<f a="this">
				<c path="haxe.io.Bytes"/>
				<t path="cpp.Star"><x path="cpp.UInt8"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toCPointer>
		<imax get="inline" set="null" line="48" static="1">
			<f a="this:a:b">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</imax>
		<imin get="inline" set="null" line="49" static="1">
			<f a="this:a:b">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</imin>
		<get_byteLength get="inline" set="null" line="51" static="1">
			<f a="this">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_byteLength>
		<isView public="1" get="inline" set="null" line="55" static="1"><f a="value">
	<d/>
	<x path="Bool"/>
</f></isView>
		<ofData public="1" get="inline" set="null" line="64" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="typedarray.ArrayBuffer"/>
			</f>
			<meta><m n=":from"/></meta>
		</ofData>
	</class>
	<class path="typedarray.ArrayBufferView" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBufferView.hx" interface="1">
		<buffer public="1" set="null"><x path="typedarray.ArrayBuffer"/></buffer>
		<byteOffset public="1" set="null"><x path="Int"/></byteOffset>
		<byteLength public="1" set="null"><x path="Int"/></byteLength>
		<toCPointer public="1" set="method"><f a=""><t path="cpp.Star"><x path="cpp.UInt8"/></t></f></toCPointer>
	</class>
	<typedef path="typedarray.ArrayLike" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBufferView.hx" module="typedarray.ArrayBufferView">
		<a>
			<length set="null"><x path="Int"/></length>
			<iterator set="method"><f a=""><t path="Iterator"><c path="typedarray.ArrayLike.T"/></t></f></iterator>
		</a>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<class path="typedarray.ArrayBufferViewBase" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBufferView.hx" module="typedarray.ArrayBufferView">
		<implements path="typedarray.ArrayBufferView"/>
		<buffer final="1" public="1"><x path="typedarray.ArrayBuffer"/></buffer>
		<byteOffset final="1" public="1"><x path="Int"/></byteOffset>
		<byteLength final="1" public="1"><x path="Int"/></byteLength>
		<BYTES_PER_ELEMENT_ final="1" public="1"><x path="Int"/></BYTES_PER_ELEMENT_>
		<length public="1" set="null"><x path="Int"/></length>
		<nativeBytes get="accessor" set="null"><t path="haxe.io.BytesData"/></nativeBytes>
		<toCPointer public="1" get="inline" set="null" line="93"><f a=""><t path="cpp.Star"><x path="cpp.UInt8"/></t></f></toCPointer>
		<get_nativeBytes get="inline" set="null" line="98"><f a=""><t path="haxe.io.BytesData"/></f></get_nativeBytes>
		<new set="method" line="45">
			<f a="BYTES_PER_ELEMENT:?length:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Call as either
		- (length: Int)
		- (arrayBufferView: ArrayBufferView)
		- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<class path="typedarray.ArrayBufferViewImplIterator" params="T" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/ArrayBufferView.hx" module="typedarray.ArrayBufferView">
		<a><a>
	<length set="null"><x path="Int"/></length>
	<_set set="method"><f a="i:v">
	<x path="Int"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
</f></_set>
	<_get set="method"><f a="i">
	<x path="Int"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
</f></_get>
</a></a>
		<i expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</i>
		<hasNext public="1" get="inline" set="null" line="119"><f a=""><x path="Bool"/></f></hasNext>
		<next public="1" get="inline" set="null" line="123"><f a=""><c path="typedarray.ArrayBufferViewImplIterator.T"/></f></next>
		<new public="1" get="inline" set="null" line="115"><f a="array">
	<a>
		<length set="null"><x path="Int"/></length>
		<_set set="method"><f a="i:v">
	<x path="Int"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
</f></_set>
		<_get set="method"><f a="i">
	<x path="Int"/>
	<c path="typedarray.ArrayBufferViewImplIterator.T"/>
</f></_get>
	</a>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</class>
	<abstract path="typedarray.BufferSource" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/BufferSource.hx">
		<from>
			<icast><e path="typedarray._BufferSource.BufferSourceType"/></icast>
			<icast field="fromBuffer"><x path="typedarray.ArrayBuffer"/></icast>
			<icast field="fromBufferView"><c path="typedarray.ArrayBufferView"/></icast>
		</from>
		<this><e path="typedarray._BufferSource.BufferSourceType"/></this>
		<haxe_doc>"The BufferSource typedef is used to represent objects that are either themselves an ArrayBuffer or which provide a view on to an ArrayBuffer."

	https://heycam.github.io/webidl/#BufferSource</haxe_doc>
		<impl><class path="typedarray._BufferSource.BufferSource_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/BufferSource.hx" private="1" module="typedarray.BufferSource" final="1">
	<byteLength public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</byteLength>
	<get_byteLength get="inline" set="null" line="13" static="1">
		<f a="this">
			<e path="typedarray._BufferSource.BufferSourceType"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_byteLength>
	<toCPointer public="1" get="inline" set="null" line="22" static="1">
		<f a="this">
			<e path="typedarray._BufferSource.BufferSourceType"/>
			<t path="cpp.Star"><x path="cpp.UInt8"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</toCPointer>
	<fromBuffer public="1" get="inline" set="null" line="30" static="1">
		<f a="buffer">
			<x path="typedarray.ArrayBuffer"/>
			<x path="typedarray.BufferSource"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromBuffer>
	<fromBufferView public="1" get="inline" set="null" line="34" static="1">
		<f a="bufferView">
			<c path="typedarray.ArrayBufferView"/>
			<x path="typedarray.BufferSource"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromBufferView>
</class></impl>
	</abstract>
	<class path="typedarray._BufferSource.BufferSource_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/BufferSource.hx" private="1" module="typedarray.BufferSource" final="1">
		<byteLength public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</byteLength>
		<get_byteLength get="inline" set="null" line="13" static="1">
			<f a="this">
				<e path="typedarray._BufferSource.BufferSourceType"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_byteLength>
		<toCPointer public="1" get="inline" set="null" line="22" static="1">
			<f a="this">
				<e path="typedarray._BufferSource.BufferSourceType"/>
				<t path="cpp.Star"><x path="cpp.UInt8"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</toCPointer>
		<fromBuffer public="1" get="inline" set="null" line="30" static="1">
			<f a="buffer">
				<x path="typedarray.ArrayBuffer"/>
				<x path="typedarray.BufferSource"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromBuffer>
		<fromBufferView public="1" get="inline" set="null" line="34" static="1">
			<f a="bufferView">
				<c path="typedarray.ArrayBufferView"/>
				<x path="typedarray.BufferSource"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromBufferView>
	</class>
	<enum path="typedarray._BufferSource.BufferSourceType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/BufferSource.hx" private="1" module="typedarray.BufferSource">
		<Buffer a="buffer"><x path="typedarray.ArrayBuffer"/></Buffer>
		<BufferView a="bufferView"><c path="typedarray.ArrayBufferView"/></BufferView>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<typedef path="typedarray._Float32Array.ArrayType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float32Array.hx" private="1" module="typedarray.Float32Array"><x path="cpp.Float32"/></typedef>
	<abstract path="typedarray.Float32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float32Array.hx">
		<from><icast><c path="typedarray.Float32ArrayImpl"/></icast></from>
		<this><c path="typedarray.Float32ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Float32ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m>
		</meta>
		<impl><class path="typedarray._Float32Array.Float32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float32Array.hx" private="1" module="typedarray.Float32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Float32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Float32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Float32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Float32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float32Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float32Array"/>
				<t path="typedarray._Float32Array.ArrayType"/>
			</f>
			<x path="typedarray.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Float32ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Float32ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Float32ArrayImpl"/>
			<t path="typedarray._Float32Array.ArrayType"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Float32ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Float32ArrayImpl"/>
			<t path="typedarray._Float32Array.ArrayType"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Float32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float32Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float32Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Float32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float32Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float32Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Float32ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Float32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Float32Array.ArrayType"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Float32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Float32Array.ArrayType"/>
			<t path="typedarray._Float32Array.ArrayType"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
	<f a=":">
		<t path="typedarray._Float32Array.ArrayType"/>
		<x path="Int"/>
		<t path="typedarray._Float32Array.ArrayType"/>
	</f>
	<x path="typedarray.Float32Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Float32ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Float32Array.ArrayType"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="typedarray._Float32Array.Float32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float32Array.hx" private="1" module="typedarray.Float32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Float32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Float32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Float32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Float32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float32Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float32Array"/>
					<t path="typedarray._Float32Array.ArrayType"/>
				</f>
				<x path="typedarray.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Float32ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Float32ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Float32ArrayImpl"/>
				<t path="typedarray._Float32Array.ArrayType"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Float32ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Float32ArrayImpl"/>
				<t path="typedarray._Float32Array.ArrayType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Float32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float32Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float32Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Float32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float32Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float32Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Float32ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Float32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Float32Array.ArrayType"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Float32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Float32Array.ArrayType"/>
				<t path="typedarray._Float32Array.ArrayType"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Float32Array.ArrayType"/></t>
	<f a=":">
		<t path="typedarray._Float32Array.ArrayType"/>
		<x path="Int"/>
		<t path="typedarray._Float32Array.ArrayType"/>
	</f>
	<x path="typedarray.Float32Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Float32ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Float32Array.ArrayType"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m>
		</meta>
	</class>
	<class path="typedarray.Float32ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float32Array.hx" module="typedarray.Float32Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" get="inline" set="null" line="55">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Float32Array.ArrayType"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="72">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Float32Array.ArrayType"/>
				<t path="typedarray._Float32Array.ArrayType"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="89"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Float32Array_ArrayType"/></f></iterator>
		<new public="1" get="inline" set="null" line="38"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Float64Array.ArrayType" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float64Array.hx" private="1" module="typedarray.Float64Array"><x path="cpp.Float64"/></typedef>
	<abstract path="typedarray.Float64Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float64Array.hx">
		<from><icast><c path="typedarray.Float64ArrayImpl"/></icast></from>
		<this><c path="typedarray.Float64ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Float64ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m>
		</meta>
		<impl><class path="typedarray._Float64Array.Float64Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float64Array.hx" private="1" module="typedarray.Float64Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Float64ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Float64ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Float64Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Float64ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float64Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float64Array"/>
				<t path="typedarray._Float64Array.ArrayType"/>
			</f>
			<x path="typedarray.Float64Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Float64ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Float64ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Float64ArrayImpl"/>
			<t path="typedarray._Float64Array.ArrayType"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Float64ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Float64Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Float64ArrayImpl"/>
			<t path="typedarray._Float64Array.ArrayType"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Float64ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float64Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float64Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Float64ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Float64Array.ArrayType"/>
				<x path="Int"/>
				<x path="typedarray.Float64Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Float64ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Float64ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Float64Array.ArrayType"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Float64ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Float64Array.ArrayType"/>
			<t path="typedarray._Float64Array.ArrayType"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
	<f a=":">
		<t path="typedarray._Float64Array.ArrayType"/>
		<x path="Int"/>
		<t path="typedarray._Float64Array.ArrayType"/>
	</f>
	<x path="typedarray.Float64Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Float64ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Float64Array.ArrayType"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m></meta>
</class></impl>
	</abstract>
	<class path="typedarray._Float64Array.Float64Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float64Array.hx" private="1" module="typedarray.Float64Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Float64ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Float64ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Float64Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Float64ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float64Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float64Array"/>
					<t path="typedarray._Float64Array.ArrayType"/>
				</f>
				<x path="typedarray.Float64Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Float64ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Float64ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Float64ArrayImpl"/>
				<t path="typedarray._Float64Array.ArrayType"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Float64ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Float64Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Float64ArrayImpl"/>
				<t path="typedarray._Float64Array.ArrayType"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Float64ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float64Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float64Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Float64ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Float64Array.ArrayType"/>
					<x path="Int"/>
					<x path="typedarray.Float64Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Float64ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Float64ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Float64Array.ArrayType"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Float64ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Float64Array.ArrayType"/>
				<t path="typedarray._Float64Array.ArrayType"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Float64Array.ArrayType"/></t>
	<f a=":">
		<t path="typedarray._Float64Array.ArrayType"/>
		<x path="Int"/>
		<t path="typedarray._Float64Array.ArrayType"/>
	</f>
	<x path="typedarray.Float64Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Float64ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Float64Array.ArrayType"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(ArrayType)</e></m></meta>
	</class>
	<class path="typedarray.Float64ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Float64Array.hx" module="typedarray.Float64Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" get="inline" set="null" line="55">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Float64Array.ArrayType"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="72">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Float64Array.ArrayType"/>
				<t path="typedarray._Float64Array.ArrayType"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="89"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Float64Array_ArrayType"/></f></iterator>
		<new public="1" get="inline" set="null" line="38"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Int16Array.Int16" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int16Array.hx" private="1" module="typedarray.Int16Array"><x path="cpp.Int16"/></typedef>
	<abstract path="typedarray.Int16Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int16Array.hx">
		<from><icast><c path="typedarray.Int16ArrayImpl"/></icast></from>
		<this><c path="typedarray.Int16ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Int16ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int16)</e></m>
		</meta>
		<impl><class path="typedarray._Int16Array.Int16Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int16Array.hx" private="1" module="typedarray.Int16Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int16ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Int16ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Int16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int16Array.Int16"/>
				<x path="Int"/>
				<x path="typedarray.Int16Array"/>
				<t path="typedarray._Int16Array.Int16"/>
			</f>
			<x path="typedarray.Int16Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Int16ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Int16ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Int16ArrayImpl"/>
			<t path="typedarray._Int16Array.Int16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Int16ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int16Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Int16ArrayImpl"/>
			<t path="typedarray._Int16Array.Int16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Int16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int16Array.Int16"/>
				<x path="Int"/>
				<x path="typedarray.Int16Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Int16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int16Array.Int16"/>
				<x path="Int"/>
				<x path="typedarray.Int16Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Int16ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Int16ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int16Array.Int16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Int16ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int16Array.Int16"/>
			<t path="typedarray._Int16Array.Int16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
	<f a=":">
		<t path="typedarray._Int16Array.Int16"/>
		<x path="Int"/>
		<t path="typedarray._Int16Array.Int16"/>
	</f>
	<x path="typedarray.Int16Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Int16ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Int16Array.Int16"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int16)</e></m></meta>
</class></impl>
	</abstract>
	<class path="typedarray._Int16Array.Int16Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int16Array.hx" private="1" module="typedarray.Int16Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int16ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Int16ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Int16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int16Array.Int16"/>
					<x path="Int"/>
					<x path="typedarray.Int16Array"/>
					<t path="typedarray._Int16Array.Int16"/>
				</f>
				<x path="typedarray.Int16Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Int16ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Int16ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Int16ArrayImpl"/>
				<t path="typedarray._Int16Array.Int16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Int16ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int16Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Int16ArrayImpl"/>
				<t path="typedarray._Int16Array.Int16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Int16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int16Array.Int16"/>
					<x path="Int"/>
					<x path="typedarray.Int16Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Int16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int16Array.Int16"/>
					<x path="Int"/>
					<x path="typedarray.Int16Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Int16ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Int16ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int16Array.Int16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Int16ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int16Array.Int16"/>
				<t path="typedarray._Int16Array.Int16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int16Array.Int16"/></t>
	<f a=":">
		<t path="typedarray._Int16Array.Int16"/>
		<x path="Int"/>
		<t path="typedarray._Int16Array.Int16"/>
	</f>
	<x path="typedarray.Int16Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Int16ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Int16Array.Int16"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int16)</e></m></meta>
	</class>
	<class path="typedarray.Int16ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int16Array.hx" module="typedarray.Int16Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Int16Array.Int16"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Int16Array.Int16"/>
				<t path="typedarray._Int16Array.Int16"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Int16Array_Int16"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Int32Array.Int32" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int32Array.hx" private="1" module="typedarray.Int32Array"><x path="cpp.Int32"/></typedef>
	<abstract path="typedarray.Int32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int32Array.hx">
		<from><icast><c path="typedarray.Int32ArrayImpl"/></icast></from>
		<this><c path="typedarray.Int32ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Int32ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int32)</e></m>
		</meta>
		<impl><class path="typedarray._Int32Array.Int32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int32Array.hx" private="1" module="typedarray.Int32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Int32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Int32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int32Array.Int32"/>
				<x path="Int"/>
				<x path="typedarray.Int32Array"/>
				<t path="typedarray._Int32Array.Int32"/>
			</f>
			<x path="typedarray.Int32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Int32ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Int32ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Int32ArrayImpl"/>
			<t path="typedarray._Int32Array.Int32"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Int32ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Int32ArrayImpl"/>
			<t path="typedarray._Int32Array.Int32"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Int32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int32Array.Int32"/>
				<x path="Int"/>
				<x path="typedarray.Int32Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Int32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int32Array.Int32"/>
				<x path="Int"/>
				<x path="typedarray.Int32Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Int32ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Int32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int32Array.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Int32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int32Array.Int32"/>
			<t path="typedarray._Int32Array.Int32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
	<f a=":">
		<t path="typedarray._Int32Array.Int32"/>
		<x path="Int"/>
		<t path="typedarray._Int32Array.Int32"/>
	</f>
	<x path="typedarray.Int32Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Int32ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Int32Array.Int32"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int32)</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="typedarray._Int32Array.Int32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int32Array.hx" private="1" module="typedarray.Int32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Int32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Int32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int32Array.Int32"/>
					<x path="Int"/>
					<x path="typedarray.Int32Array"/>
					<t path="typedarray._Int32Array.Int32"/>
				</f>
				<x path="typedarray.Int32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Int32ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Int32ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Int32ArrayImpl"/>
				<t path="typedarray._Int32Array.Int32"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Int32ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Int32ArrayImpl"/>
				<t path="typedarray._Int32Array.Int32"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Int32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int32Array.Int32"/>
					<x path="Int"/>
					<x path="typedarray.Int32Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Int32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int32Array.Int32"/>
					<x path="Int"/>
					<x path="typedarray.Int32Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Int32ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Int32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int32Array.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Int32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int32Array.Int32"/>
				<t path="typedarray._Int32Array.Int32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int32Array.Int32"/></t>
	<f a=":">
		<t path="typedarray._Int32Array.Int32"/>
		<x path="Int"/>
		<t path="typedarray._Int32Array.Int32"/>
	</f>
	<x path="typedarray.Int32Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Int32ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Int32Array.Int32"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int32)</e></m>
		</meta>
	</class>
	<class path="typedarray.Int32ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int32Array.hx" module="typedarray.Int32Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Int32Array.Int32"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Int32Array.Int32"/>
				<t path="typedarray._Int32Array.Int32"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Int32Array_Int32"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Int8Array.Int8" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int8Array.hx" private="1" module="typedarray.Int8Array"><x path="cpp.Int8"/></typedef>
	<abstract path="typedarray.Int8Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int8Array.hx">
		<from><icast><c path="typedarray.Int8ArrayImpl"/></icast></from>
		<this><c path="typedarray.Int8ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Int8ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int8)</e></m>
		</meta>
		<impl><class path="typedarray._Int8Array.Int8Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int8Array.hx" private="1" module="typedarray.Int8Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int8ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Int8ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Int8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int8Array.Int8"/>
				<x path="Int"/>
				<x path="typedarray.Int8Array"/>
				<t path="typedarray._Int8Array.Int8"/>
			</f>
			<x path="typedarray.Int8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Int8ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Int8ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Int8ArrayImpl"/>
			<t path="typedarray._Int8Array.Int8"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Int8ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Int8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Int8ArrayImpl"/>
			<t path="typedarray._Int8Array.Int8"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Int8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int8Array.Int8"/>
				<x path="Int"/>
				<x path="typedarray.Int8Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Int8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Int8Array.Int8"/>
				<x path="Int"/>
				<x path="typedarray.Int8Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Int8ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Int8ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int8Array.Int8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Int8ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Int8Array.Int8"/>
			<t path="typedarray._Int8Array.Int8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
	<f a=":">
		<t path="typedarray._Int8Array.Int8"/>
		<x path="Int"/>
		<t path="typedarray._Int8Array.Int8"/>
	</f>
	<x path="typedarray.Int8Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Int8ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Int8Array.Int8"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int8)</e></m></meta>
</class></impl>
	</abstract>
	<class path="typedarray._Int8Array.Int8Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int8Array.hx" private="1" module="typedarray.Int8Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Int8ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Int8ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Int8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int8Array.Int8"/>
					<x path="Int"/>
					<x path="typedarray.Int8Array"/>
					<t path="typedarray._Int8Array.Int8"/>
				</f>
				<x path="typedarray.Int8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Int8ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Int8ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Int8ArrayImpl"/>
				<t path="typedarray._Int8Array.Int8"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Int8ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Int8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Int8ArrayImpl"/>
				<t path="typedarray._Int8Array.Int8"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Int8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int8Array.Int8"/>
					<x path="Int"/>
					<x path="typedarray.Int8Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Int8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Int8Array.Int8"/>
					<x path="Int"/>
					<x path="typedarray.Int8Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Int8ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Int8ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int8Array.Int8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Int8ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Int8Array.Int8"/>
				<t path="typedarray._Int8Array.Int8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Int8Array.Int8"/></t>
	<f a=":">
		<t path="typedarray._Int8Array.Int8"/>
		<x path="Int"/>
		<t path="typedarray._Int8Array.Int8"/>
	</f>
	<x path="typedarray.Int8Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Int8ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Int8Array.Int8"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(Int8)</e></m></meta>
	</class>
	<class path="typedarray.Int8ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Int8Array.hx" module="typedarray.Int8Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Int8Array.Int8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Int8Array.Int8"/>
				<t path="typedarray._Int8Array.Int8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Int8Array_Int8"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Uint16Array.UInt16" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint16Array.hx" private="1" module="typedarray.Uint16Array"><x path="cpp.UInt16"/></typedef>
	<abstract path="typedarray.Uint16Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint16Array.hx">
		<from><icast><c path="typedarray.Uint16ArrayImpl"/></icast></from>
		<this><c path="typedarray.Uint16ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Uint16ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt16)</e></m>
		</meta>
		<impl><class path="typedarray._Uint16Array.Uint16Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint16Array.hx" private="1" module="typedarray.Uint16Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint16ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Uint16ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint16Array.UInt16"/>
				<x path="Int"/>
				<x path="typedarray.Uint16Array"/>
				<t path="typedarray._Uint16Array.UInt16"/>
			</f>
			<x path="typedarray.Uint16Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Uint16ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Uint16ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Uint16ArrayImpl"/>
			<t path="typedarray._Uint16Array.UInt16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Uint16ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint16Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Uint16ArrayImpl"/>
			<t path="typedarray._Uint16Array.UInt16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint16Array.UInt16"/>
				<x path="Int"/>
				<x path="typedarray.Uint16Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint16ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint16Array.UInt16"/>
				<x path="Int"/>
				<x path="typedarray.Uint16Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Uint16ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Uint16ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint16Array.UInt16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Uint16ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint16Array.UInt16"/>
			<t path="typedarray._Uint16Array.UInt16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
	<f a=":">
		<t path="typedarray._Uint16Array.UInt16"/>
		<x path="Int"/>
		<t path="typedarray._Uint16Array.UInt16"/>
	</f>
	<x path="typedarray.Uint16Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Uint16ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Uint16Array.UInt16"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt16)</e></m></meta>
</class></impl>
	</abstract>
	<class path="typedarray._Uint16Array.Uint16Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint16Array.hx" private="1" module="typedarray.Uint16Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint16ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Uint16ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint16Array.UInt16"/>
					<x path="Int"/>
					<x path="typedarray.Uint16Array"/>
					<t path="typedarray._Uint16Array.UInt16"/>
				</f>
				<x path="typedarray.Uint16Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Uint16ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Uint16ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Uint16ArrayImpl"/>
				<t path="typedarray._Uint16Array.UInt16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Uint16ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint16Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Uint16ArrayImpl"/>
				<t path="typedarray._Uint16Array.UInt16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint16Array.UInt16"/>
					<x path="Int"/>
					<x path="typedarray.Uint16Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint16ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint16Array.UInt16"/>
					<x path="Int"/>
					<x path="typedarray.Uint16Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Uint16ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Uint16ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint16Array.UInt16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Uint16ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint16Array.UInt16"/>
				<t path="typedarray._Uint16Array.UInt16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint16Array.UInt16"/></t>
	<f a=":">
		<t path="typedarray._Uint16Array.UInt16"/>
		<x path="Int"/>
		<t path="typedarray._Uint16Array.UInt16"/>
	</f>
	<x path="typedarray.Uint16Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Uint16ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Uint16Array.UInt16"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt16)</e></m></meta>
	</class>
	<class path="typedarray.Uint16ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint16Array.hx" module="typedarray.Uint16Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Uint16Array.UInt16"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Uint16Array.UInt16"/>
				<t path="typedarray._Uint16Array.UInt16"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Uint16Array_UInt16"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Uint32Array.UInt32" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint32Array.hx" private="1" module="typedarray.Uint32Array"><x path="cpp.UInt32"/></typedef>
	<abstract path="typedarray.Uint32Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint32Array.hx">
		<from><icast><c path="typedarray.Uint32ArrayImpl"/></icast></from>
		<this><c path="typedarray.Uint32ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Uint32ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt32)</e></m>
		</meta>
		<impl><class path="typedarray._Uint32Array.Uint32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint32Array.hx" private="1" module="typedarray.Uint32Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Uint32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint32Array.UInt32"/>
				<x path="Int"/>
				<x path="typedarray.Uint32Array"/>
				<t path="typedarray._Uint32Array.UInt32"/>
			</f>
			<x path="typedarray.Uint32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Uint32ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Uint32ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Uint32ArrayImpl"/>
			<t path="typedarray._Uint32Array.UInt32"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Uint32ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Uint32ArrayImpl"/>
			<t path="typedarray._Uint32Array.UInt32"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint32Array.UInt32"/>
				<x path="Int"/>
				<x path="typedarray.Uint32Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint32ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint32Array.UInt32"/>
				<x path="Int"/>
				<x path="typedarray.Uint32Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Uint32ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Uint32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint32Array.UInt32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Uint32ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint32Array.UInt32"/>
			<t path="typedarray._Uint32Array.UInt32"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
	<f a=":">
		<t path="typedarray._Uint32Array.UInt32"/>
		<x path="Int"/>
		<t path="typedarray._Uint32Array.UInt32"/>
	</f>
	<x path="typedarray.Uint32Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Uint32ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Uint32Array.UInt32"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt32)</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="typedarray._Uint32Array.Uint32Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint32Array.hx" private="1" module="typedarray.Uint32Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint32ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Uint32ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint32Array.UInt32"/>
					<x path="Int"/>
					<x path="typedarray.Uint32Array"/>
					<t path="typedarray._Uint32Array.UInt32"/>
				</f>
				<x path="typedarray.Uint32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Uint32ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Uint32ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Uint32ArrayImpl"/>
				<t path="typedarray._Uint32Array.UInt32"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Uint32ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Uint32ArrayImpl"/>
				<t path="typedarray._Uint32Array.UInt32"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint32Array.UInt32"/>
					<x path="Int"/>
					<x path="typedarray.Uint32Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint32ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint32Array.UInt32"/>
					<x path="Int"/>
					<x path="typedarray.Uint32Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Uint32ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Uint32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint32Array.UInt32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Uint32ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint32Array.UInt32"/>
				<t path="typedarray._Uint32Array.UInt32"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint32Array.UInt32"/></t>
	<f a=":">
		<t path="typedarray._Uint32Array.UInt32"/>
		<x path="Int"/>
		<t path="typedarray._Uint32Array.UInt32"/>
	</f>
	<x path="typedarray.Uint32Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Uint32ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Uint32Array.UInt32"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt32)</e></m>
		</meta>
	</class>
	<class path="typedarray.Uint32ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint32Array.hx" module="typedarray.Uint32Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Uint32Array.UInt32"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Uint32Array.UInt32"/>
				<t path="typedarray._Uint32Array.UInt32"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Uint32Array_UInt32"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Uint8Array.UInt8" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8Array.hx" private="1" module="typedarray.Uint8Array"><x path="cpp.UInt8"/></typedef>
	<abstract path="typedarray.Uint8Array" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8Array.hx">
		<from><icast><c path="typedarray.Uint8ArrayImpl"/></icast></from>
		<this><c path="typedarray.Uint8ArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Uint8ArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m>
		</meta>
		<impl><class path="typedarray._Uint8Array.Uint8Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8Array.hx" private="1" module="typedarray.Uint8Array" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint8ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Uint8ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8Array.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8Array"/>
				<t path="typedarray._Uint8Array.UInt8"/>
			</f>
			<x path="typedarray.Uint8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Uint8ArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Uint8ArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Uint8ArrayImpl"/>
			<t path="typedarray._Uint8Array.UInt8"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Uint8ArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Uint8ArrayImpl"/>
			<t path="typedarray._Uint8Array.UInt8"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8Array.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8Array"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8Array.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8Array"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Uint8ArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Uint8ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint8Array.UInt8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Uint8ArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint8Array.UInt8"/>
			<t path="typedarray._Uint8Array.UInt8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
	<f a=":">
		<t path="typedarray._Uint8Array.UInt8"/>
		<x path="Int"/>
		<t path="typedarray._Uint8Array.UInt8"/>
	</f>
	<x path="typedarray.Uint8Array"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Uint8ArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Uint8Array.UInt8"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="typedarray._Uint8Array.Uint8Array_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8Array.hx" private="1" module="typedarray.Uint8Array" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint8ArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Uint8ArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8Array.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8Array"/>
					<t path="typedarray._Uint8Array.UInt8"/>
				</f>
				<x path="typedarray.Uint8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Uint8ArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Uint8ArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Uint8ArrayImpl"/>
				<t path="typedarray._Uint8Array.UInt8"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Uint8ArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Uint8ArrayImpl"/>
				<t path="typedarray._Uint8Array.UInt8"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8Array.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8Array"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8Array.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8Array"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Uint8ArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Uint8ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint8Array.UInt8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Uint8ArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint8Array.UInt8"/>
				<t path="typedarray._Uint8Array.UInt8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint8Array.UInt8"/></t>
	<f a=":">
		<t path="typedarray._Uint8Array.UInt8"/>
		<x path="Int"/>
		<t path="typedarray._Uint8Array.UInt8"/>
	</f>
	<x path="typedarray.Uint8Array"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Uint8ArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Uint8Array.UInt8"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m>
		</meta>
	</class>
	<class path="typedarray.Uint8ArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8Array.hx" module="typedarray.Uint8Array">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Uint8Array.UInt8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Uint8Array.UInt8"/>
				<t path="typedarray._Uint8Array.UInt8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="90"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Uint8Array_UInt8"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
	<typedef path="typedarray._Uint8ClampedArray.UInt8" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8ClampedArray.hx" private="1" module="typedarray.Uint8ClampedArray"><x path="cpp.UInt8"/></typedef>
	<abstract path="typedarray.Uint8ClampedArray" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8ClampedArray.hx">
		<from><icast><c path="typedarray.Uint8ClampedArrayImpl"/></icast></from>
		<this><c path="typedarray.Uint8ClampedArrayImpl"/></this>
		<to>
			<icast><t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t></icast>
			<icast><c path="typedarray.ArrayBufferView"/></icast>
			<icast><c path="typedarray.Uint8ClampedArrayImpl"/></icast>
		</to>
		<meta>
			<m n=":nullSafety"/>
			<m n=":forward"/>
			<m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m>
		</meta>
		<impl><class path="typedarray._Uint8ClampedArray.Uint8ClampedArray_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8ClampedArray.hx" private="1" module="typedarray.Uint8ClampedArray" final="1">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint8ClampedArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>Uint8ClampedArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
	</BYTES_PER_ELEMENT>
	<_new public="1" set="method" line="46" static="1">
		<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
			<x path="Int"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
			<x path="typedarray.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint8ClampedArray"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
	</_new>
	<map public="1" get="inline" set="null" line="67" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8ClampedArray"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
			</f>
			<x path="typedarray.Uint8ClampedArray"/>
		</f>
		<meta><m n=":impl"/></meta>
	</map>
	<set public="1" get="inline" set="null" line="93" static="1">
		<f a="this:copyFromArray:?offset" v="::0">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</set>
	<join public="1" get="inline" set="null" line="100" static="1">
		<f a="this:?separator" v=":&quot;&quot;">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":value"><e>{ separator : "" }</e></m>
			<m n=":impl"/>
		</meta>
	</join>
	<indexOf public="1" get="inline" set="null" line="104" static="1">
		<f a="this:searchElement:?fromIndex" v="::0">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<t path="typedarray._Uint8ClampedArray.UInt8"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ fromIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</indexOf>
	<subarray public="1" get="inline" set="null" line="116" static="1">
		<f a="this:start:?end">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="typedarray.Uint8ClampedArray"/>
		</f>
		<meta><m n=":impl"/></meta>
	</subarray>
	<fill public="1" get="inline" set="null" line="123" static="1">
		<f a="this:value:?start:?end" v="::0:">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<t path="typedarray._Uint8ClampedArray.UInt8"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ start : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</fill>
	<forEach public="1" get="inline" set="null" line="132" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8ClampedArray"/>
				<x path="Void"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forEach>
	<every public="1" get="inline" set="null" line="139" static="1">
		<f a="this:callback">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<f a="::">
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<x path="Int"/>
				<x path="typedarray.Uint8ClampedArray"/>
				<x path="Bool"/>
			</f>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</every>
	<toString set="method" line="151" static="1">
		<f a="this">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<arrayGet get="inline" set="null" line="156" static="1">
		<f a="this:i">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint8ClampedArray.UInt8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arrayGet>
	<arraySet get="inline" set="null" line="161" static="1">
		<f a="this:i:v">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<x path="Int"/>
			<t path="typedarray._Uint8ClampedArray.UInt8"/>
			<t path="typedarray._Uint8ClampedArray.UInt8"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</arraySet>
	<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
	<f a=":">
		<t path="typedarray._Uint8ClampedArray.UInt8"/>
		<x path="Int"/>
		<t path="typedarray._Uint8ClampedArray.UInt8"/>
	</f>
	<x path="typedarray.Uint8ClampedArray"/>
</f></from>
	<toCPointer public="1" get="inline" set="null" line="182" static="1">
		<f a="this">
			<c path="typedarray.Uint8ClampedArrayImpl"/>
			<t path="cpp.Star"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
		</meta>
	</toCPointer>
	<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m></meta>
</class></impl>
	</abstract>
	<class path="typedarray._Uint8ClampedArray.Uint8ClampedArray_Impl_" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8ClampedArray.hx" private="1" module="typedarray.Uint8ClampedArray" final="1">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="Uint8ClampedArrayImpl.BYTES_PER_ELEMENT" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>Uint8ClampedArrayImpl.BYTES_PER_ELEMENT</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new public="1" set="method" line="46" static="1">
			<f a="?length:?copyFromArray:?buffer:?byteOffset:?byteLength">
				<x path="Int"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
				<x path="typedarray.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint8ClampedArray"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc><![CDATA[Call as either
				- (length: Int)
				- (copyFromArray: ArrayLike<$ArrayTypeT>)
				- (buffer: ArrayBuffer, byteOffset: Int, byteLength: Int)]]></haxe_doc>
		</_new>
		<map public="1" get="inline" set="null" line="67" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8ClampedArray.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8ClampedArray"/>
					<t path="typedarray._Uint8ClampedArray.UInt8"/>
				</f>
				<x path="typedarray.Uint8ClampedArray"/>
			</f>
			<meta><m n=":impl"/></meta>
		</map>
		<set public="1" get="inline" set="null" line="93" static="1">
			<f a="this:copyFromArray:?offset" v="::0">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</set>
		<join public="1" get="inline" set="null" line="100" static="1">
			<f a="this:?separator" v=":&quot;&quot;">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ separator : "" }</e></m>
				<m n=":impl"/>
			</meta>
		</join>
		<indexOf public="1" get="inline" set="null" line="104" static="1">
			<f a="this:searchElement:?fromIndex" v="::0">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ fromIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</indexOf>
		<subarray public="1" get="inline" set="null" line="116" static="1">
			<f a="this:start:?end">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="typedarray.Uint8ClampedArray"/>
			</f>
			<meta><m n=":impl"/></meta>
		</subarray>
		<fill public="1" get="inline" set="null" line="123" static="1">
			<f a="this:value:?start:?end" v="::0:">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ start : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</fill>
		<forEach public="1" get="inline" set="null" line="132" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8ClampedArray.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8ClampedArray"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forEach>
		<every public="1" get="inline" set="null" line="139" static="1">
			<f a="this:callback">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<f a="::">
					<t path="typedarray._Uint8ClampedArray.UInt8"/>
					<x path="Int"/>
					<x path="typedarray.Uint8ClampedArray"/>
					<x path="Bool"/>
				</f>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</every>
		<toString set="method" line="151" static="1">
			<f a="this">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<arrayGet get="inline" set="null" line="156" static="1">
			<f a="this:i">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arrayGet>
		<arraySet get="inline" set="null" line="161" static="1">
			<f a="this:i:v">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<x path="Int"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</arraySet>
		<from public="1" get="inline" set="null" line="166" static="1"><f a="source:?mapFn">
	<t path="typedarray.ArrayLike"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
	<f a=":">
		<t path="typedarray._Uint8ClampedArray.UInt8"/>
		<x path="Int"/>
		<t path="typedarray._Uint8ClampedArray.UInt8"/>
	</f>
	<x path="typedarray.Uint8ClampedArray"/>
</f></from>
		<toCPointer public="1" get="inline" set="null" line="182" static="1">
			<f a="this">
				<c path="typedarray.Uint8ClampedArrayImpl"/>
				<t path="cpp.Star"><t path="typedarray._Uint8ClampedArray.UInt8"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":access"><e>typedarray.ArrayBufferViewBase</e></m>
			</meta>
		</toCPointer>
		<meta><m n=":build"><e>typedarray.macro.BuildArrayBufferView.build(UInt8)</e></m></meta>
	</class>
	<class path="typedarray.Uint8ClampedArrayImpl" params="" file="/usr/local/lib/haxeLibrary/gluon/git/typedarray/Uint8ClampedArray.hx" module="typedarray.Uint8ClampedArray">
		<extends path="typedarray.ArrayBufferViewBase"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_get public="1" set="method" line="56">
			<f a="i">
				<x path="Int"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_get>
		<_set public="1" get="inline" set="null" line="73">
			<f a="i:v">
				<x path="Int"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
				<t path="typedarray._Uint8ClampedArray.UInt8"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</_set>
		<iterator public="1" get="inline" set="null" line="93"><f a=""><c path="typedarray.ArrayBufferViewImplIterator_typedarray__Uint8ClampedArray_UInt8"/></f></iterator>
		<new public="1" get="inline" set="null" line="39"><f a="?length:?buffer:?byteOffset:?byteLength">
	<x path="Int"/>
	<x path="typedarray.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":nullSafety"/>
		</meta>
	</class>
</haxe>